window.packerplugin = {
    'textures': ['texture-2', 'texture-3', 'texture-4', 'texture-0', 'texture-1', 'big-png-0']
  }, window.packerplugin.json = {}, window.packerplugin.json['texture-2'] = "{\"frames\": {\"media/graphics/backgrounds/clouds.png\": {\"frame\": {\"y\": 2, \"x\": 2, \"w\": 1344, \"h\": 1226}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 1226, \"w\": 1344}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 1344, \"h\": 1226}}}, \"meta\": {\"scale\": 1, \"format\": \"RGBA8888\", \"app\": \"http://github.com/odrick/free-tex-packer-cli\", \"version\": \"0.3.0\", \"image\": \"texture-2.png\", \"size\": {\"h\": 1230, \"w\": 1348}}}", window.packerplugin.json['texture-3'] = "{\"frames\": {\"media/graphics/sprites/bg-finish.png\": {\"frame\": {\"y\": 2, \"x\": 2, \"w\": 1100, \"h\": 1096}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 1096, \"w\": 1100}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 1100, \"h\": 1096}}}, \"meta\": {\"scale\": 1, \"format\": \"RGBA8888\", \"app\": \"http://github.com/odrick/free-tex-packer-cli\", \"version\": \"0.3.0\", \"image\": \"texture-3.png\", \"size\": {\"h\": 1100, \"w\": 1104}}}", window.packerplugin.json['texture-4'] = "{\"frames\": {\"media/graphics/sprites/bg-popup.png\": {\"frame\": {\"y\": 2, \"x\": 2, \"w\": 1060, \"h\": 1029}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 1029, \"w\": 1060}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 1060, \"h\": 1029}}}, \"meta\": {\"scale\": 1, \"format\": \"RGBA8888\", \"app\": \"http://github.com/odrick/free-tex-packer-cli\", \"version\": \"0.3.0\", \"image\": \"texture-4.png\", \"size\": {\"h\": 1033, \"w\": 1064}}}", window.packerplugin.json['texture-0'] = "{\"frames\": {\"media/graphics/game/dailyrewards/bg-popup.png\": {\"frame\": {\"y\": 1077, \"x\": 1021, \"w\": 934, \"h\": 522}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 522, \"w\": 934}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 934, \"h\": 522}}, \"media/graphics/misc/exit-fullscreen-transparent.png\": {\"frame\": {\"y\": 1913, \"x\": 904, \"w\": 78, \"h\": 78}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 78, \"w\": 78}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 78, \"h\": 78}}, \"media/graphics/game/dailyrewards/button-reward.png\": {\"frame\": {\"y\": 1913, \"x\": 733, \"w\": 85, \"h\": 85}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 85, \"w\": 85}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 85, \"h\": 85}}, \"media/graphics/sprites/panel-reset.png\": {\"frame\": {\"y\": 486, \"x\": 1021, \"w\": 980, \"h\": 587}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 587, \"w\": 980}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 980, \"h\": 587}}, \"media/graphics/game/dailyrewards/reward-box.png\": {\"frame\": {\"y\": 1712, \"x\": 459, \"w\": 153, \"h\": 265}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 265, \"w\": 153}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 153, \"h\": 265}}, \"media/graphics/game/dailyrewards/button-continue.png\": {\"frame\": {\"y\": 1981, \"x\": 302, \"w\": 240, \"h\": 60}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 60, \"w\": 240}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 240, \"h\": 60}}, \"media/graphics/game/dailyrewards/button-reward-collect.png\": {\"frame\": {\"y\": 1981, \"x\": 608, \"w\": 121, \"h\": 44}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 44, \"w\": 121}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 121, \"h\": 44}}, \"media/graphics/splash/marketjs/logo.png\": {\"frame\": {\"y\": 1712, \"x\": 2, \"w\": 296, \"h\": 331}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 331, \"w\": 296}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 296, \"h\": 331}}, \"media/graphics/game/dailyrewards/icon-collected.png\": {\"frame\": {\"y\": 1913, \"x\": 986, \"w\": 97, \"h\": 77}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 77, \"w\": 97}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 97, \"h\": 77}}, \"media/graphics/splash/marketjs/letter-m.png\": {\"frame\": {\"y\": 1603, \"x\": 1329, \"w\": 165, \"h\": 168}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 168, \"w\": 165}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 165, \"h\": 168}}, \"media/graphics/sprites/ingame.png\": {\"frame\": {\"y\": 2, \"x\": 2, \"w\": 1015, \"h\": 1706}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 1706, \"w\": 1015}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 1015, \"h\": 1706}}, \"media/graphics/game/dailyrewards/coin.png\": {\"frame\": {\"y\": 1913, \"x\": 1087, \"w\": 102, \"h\": 67}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 67, \"w\": 102}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 102, \"h\": 67}}, \"media/graphics/game/dailyrewards/button-close.png\": {\"frame\": {\"y\": 1981, \"x\": 546, \"w\": 58, \"h\": 57}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 57, \"w\": 58}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 58, \"h\": 57}}, \"media/graphics/game/dailyrewards/reward-box-2.png\": {\"frame\": {\"y\": 1712, \"x\": 302, \"w\": 153, \"h\": 265}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 265, \"w\": 153}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 153, \"h\": 265}}, \"media/graphics/sprites/title.png\": {\"frame\": {\"y\": 2, \"x\": 1021, \"w\": 993, \"h\": 480}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 480, \"w\": 993}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 993, \"h\": 480}}, \"media/graphics/misc/enter-fullscreen-transparent.png\": {\"frame\": {\"y\": 1913, \"x\": 822, \"w\": 78, \"h\": 78}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 78, \"w\": 78}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 78, \"h\": 78}}, \"media/graphics/splash/marketjs/branding-text.png\": {\"frame\": {\"y\": 1712, \"x\": 616, \"w\": 709, \"h\": 197}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 197, \"w\": 709}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 709, \"h\": 197}}, \"media/graphics/game/dailyrewards/notif.png\": {\"frame\": {\"y\": 486, \"x\": 2005, \"w\": 36, \"h\": 38}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 38, \"w\": 36}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 36, \"h\": 38}}}, \"meta\": {\"scale\": 1, \"format\": \"RGBA8888\", \"app\": \"http://github.com/odrick/free-tex-packer-cli\", \"version\": \"0.3.0\", \"image\": \"texture-0.png\", \"size\": {\"h\": 2045, \"w\": 2043}}}", window.packerplugin.json['texture-1'] = "{\"frames\": {\"media/graphics/tiles/tiles.png\": {\"frame\": {\"y\": 2, \"x\": 1144, \"w\": 468, \"h\": 1120}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 1120, \"w\": 468}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 468, \"h\": 1120}}, \"media/graphics/sprites/bg-reward.png\": {\"frame\": {\"y\": 2, \"x\": 2, \"w\": 1138, \"h\": 1448}, \"rotated\": false, \"trimmed\": false, \"pivot\": {\"y\": 0.5, \"x\": 0.5}, \"sourceSize\": {\"h\": 1448, \"w\": 1138}, \"spriteSourceSize\": {\"y\": 0, \"x\": 0, \"w\": 1138, \"h\": 1448}}}, \"meta\": {\"scale\": 1, \"format\": \"RGBA8888\", \"app\": \"http://github.com/odrick/free-tex-packer-cli\", \"version\": \"0.3.0\", \"image\": \"texture-1.png\", \"size\": {\"h\": 1452, \"w\": 1614}}}", window.packerplugin.json['big-png-0'] = "{\"frames\": {\"media/graphics/backgrounds/bg.png\": {\"frame\": {\"y\": 0, \"x\": 0, \"w\": 4040, \"h\": 4068}}}}";
  var _STRINGS = {
      'Ad': {
        'Mobile': {
          'Preroll': {
            'ReadyIn': "The game is ready in ",
            'Loading': "Your game is loading...",
            'Close': 'Close'
          },
          'Header': {
            'ReadyIn': "The game is ready in ",
            'Loading': "Your game is loading...",
            'Close': 'Close'
          },
          'End': {
            'ReadyIn': "Advertisement ends in ",
            'Loading': "Please wait ...",
            'Close': 'Close'
          }
        }
      },
      'Splash': {
        'Loading': "Loading ...",
        'LoadImages': "Preparing Assets...",
        'DrawImages': "Preparing Area...",
        'LogoLine1': "Some text here",
        'LogoLine2': "powered by MarketJS",
        'LogoLine3': 'none',
        'TapToStart': "TAP TO START"
      },
      'Game': {
        'upgradeLabel': ['Quantity', 'Income', 'Offline'],
        'rewardTitle': ["New Supply Hub", "Offline Earnings"],
        'settings': 'SETTINGS',
        'bgm': 'Music',
        'sfx': 'Sound',
        'confirmReset': "Do you really want to reset your progress?",
        'perMin': "per min",
        'areaNames': [''],
        'free': 'Free',
        'congratulation': 'Congratulations!',
        'areaUnlock': "You have cleared this Area. Explore the next Area now:",
        'allCompleted': "You have completed the game!",
        'claim': 'Claim',
        'watch': 'Watch',
        'yes': 'Yes',
        'no': 'No',
        'boostDesc': ["Speed x%1", "Income x%1"]
      },
      'DailyRewards': {
        'DailyRewards': "DAILY REWARDS",
        'DailyRewardBottomText': "Return daily to earn rewards!",
        'Day': "Day ",
        'Collect': 'Collect',
        'RewardCollected': "REWARD COLLECTED",
        'Continue': 'CONTINUE',
        'comingSoon': "Coming Soon"
      },
      'Ads': {
        'Free': 'Free',
        'Ads': 'Ads'
      }
    },
    _SPRITESHEET = {
      'ingame': {
        'frames': [{
          'frame': {
            'y': 0x3ab,
            'x': 0x358,
            'w': 0x7c,
            'h': 0x64
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/audio-check',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x64,
            'w': 0x7c
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x7c,
            'h': 0x64
          }
        }, {
          'frame': {
            'y': 0x58a,
            'x': 0x1e3,
            'w': 0x68,
            'h': 0x68
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/audio-checkbox',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x68,
            'w': 0x68
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x68,
            'h': 0x68
          }
        }, {
          'frame': {
            'y': 0x64a,
            'x': 0x1,
            'w': 0xe0,
            'h': 0x50
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/btn-buyable',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x50,
            'w': 0xe0
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0xe0,
            'h': 0x50
          }
        }, {
          'frame': {
            'y': 0x56f,
            'x': 0x288,
            'w': 0x57,
            'h': 0x56
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/btn-close',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x56,
            'w': 0x57
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x57,
            'h': 0x56
          }
        }, {
          'frame': {
            'y': 0x1e1,
            'x': 0x38f,
            'w': 0x67,
            'h': 0x67
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/btn-dark',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x67,
            'w': 0x67
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x67,
            'h': 0x67
          }
        }, {
          'frame': {
            'y': 0x145,
            'x': 0x2e0,
            'w': 0xb2,
            'h': 0x9a
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/btn-home',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x9a,
            'w': 0xb2
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0xb2,
            'h': 0x9a
          }
        }, {
          'frame': {
            'y': 0x31b,
            'x': 0x2f2,
            'w': 0x9c,
            'h': 0x86
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/btn-moregames',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x86,
            'w': 0x9c
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x9c,
            'h': 0x86
          }
        }, {
          'frame': {
            'y': 0x2b3,
            'x': 0x38f,
            'w': 0x63,
            'h': 0x56
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/btn-next-area',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x56,
            'w': 0x63
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x63,
            'h': 0x56
          }
        }, {
          'frame': {
            'y': 0x19d,
            'x': 0x394,
            'w': 0x33,
            'h': 0x3e
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/btn-next',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x3e,
            'w': 0x33
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x33,
            'h': 0x3e
          }
        }, {
          'frame': {
            'y': 0x8d,
            'x': 0x1ef,
            'w': 0x191,
            'h': 0xb6
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/btn-no',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xb6,
            'w': 0x191
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x191,
            'h': 0xb6
          }
        }, {
          'frame': {
            'y': 0x51b,
            'x': 0x11a,
            'w': 0xe0,
            'h': 0x50
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/btn-not-buyable',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x50,
            'w': 0xe0
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0xe0,
            'h': 0x50
          }
        }, {
          'frame': {
            'y': 0x495,
            'x': 0x1,
            'w': 0x117,
            'h': 0xf0
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/btn-play',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xf0,
            'w': 0x117
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x117,
            'h': 0xf0
          }
        }, {
          'frame': {
            'y': 0x65b,
            'x': 0x316,
            'w': 0x33,
            'h': 0x3e
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/btn-prev',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x3e,
            'w': 0x33
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x33,
            'h': 0x3e
          }
        }, {
          'frame': {
            'y': 0x24a,
            'x': 0x38f,
            'w': 0x67,
            'h': 0x67
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/btn-red',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x67,
            'w': 0x67
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x67,
            'h': 0x67
          }
        }, {
          'frame': {
            'y': 0x446,
            'x': 0x11a,
            'w': 0xf5,
            'h': 0xd3
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/btn-resume',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xd3,
            'w': 0xf5
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0xf5,
            'h': 0xd3
          }
        }, {
          'frame': {
            'y': 0x56d,
            'x': 0x12f,
            'w': 0xb2,
            'h': 0x9a
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/btn-retry',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x9a,
            'w': 0xb2
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0xb2,
            'h': 0x9a
          }
        }, {
          'frame': {
            'y': 0x350,
            'x': 0x390,
            'w': 0x59,
            'h': 0x59
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/btn-settings-game',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x59,
            'w': 0x59
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x59,
            'h': 0x59
          }
        }, {
          'frame': {
            'y': 0x3a3,
            'x': 0x2ba,
            'w': 0x9c,
            'h': 0x86
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/btn-settings',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x86,
            'w': 0x9c
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x9c,
            'h': 0x86
          }
        }, {
          'frame': {
            'y': 0x145,
            'x': 0x14d,
            'w': 0x191,
            'h': 0xb6
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/btn-yes',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xb6,
            'w': 0x191
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x191,
            'h': 0xb6
          }
        }, {
          'frame': {
            'y': 0x1e1,
            'x': 0x2f2,
            'w': 0x9b,
            'h': 0x9b
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/btn-zoom-in',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x9b,
            'w': 0x9b
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x9b,
            'h': 0x9b
          }
        }, {
          'frame': {
            'y': 0x27e,
            'x': 0x2f2,
            'w': 0x9b,
            'h': 0x9b
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/btn-zoom-out',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x9b,
            'w': 0x9b
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x9b,
            'h': 0x9b
          }
        }, {
          'frame': {
            'y': 0x64a,
            'x': 0xe3,
            'w': 0x47,
            'h': 0x47
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/multiplier-icon',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x47,
            'w': 0x47
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x47,
            'h': 0x47
          }
        }, {
          'frame': {
            'y': 0x606,
            'x': 0x294,
            'w': 0x47,
            'h': 0x47
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/speed-icon',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x47,
            'w': 0x47
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x47,
            'h': 0x47
          }
        }, {
          'frame': {
            'y': 0x587,
            'x': 0x1,
            'w': 0x12c,
            'h': 0xc1
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/upgrade-0',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xc1,
            'w': 0x12c
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x12c,
            'h': 0xc1
          }
        }, {
          'frame': {
            'y': 0x1fd,
            'x': 0x14d,
            'w': 0x12c,
            'h': 0xc1
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/upgrade-1',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xc1,
            'w': 0x12c
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x12c,
            'h': 0xc1
          }
        }, {
          'frame': {
            'y': 0x2c0,
            'x': 0x13e,
            'w': 0x12c,
            'h': 0xc1
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/upgrade-2',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xc1,
            'w': 0x12c
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x12c,
            'h': 0xc1
          }
        }, {
          'frame': {
            'y': 0x383,
            'x': 0x115,
            'w': 0x12c,
            'h': 0xc1
          },
          'rotated': !0x1,
          'filename': 'ingame/buttons/upgrade-off',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xc1,
            'w': 0x12c
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x12c,
            'h': 0xc1
          }
        }, {
          'frame': {
            'y': 0x56d,
            'x': 0x1e3,
            'w': 0x27,
            'h': 0x1b
          },
          'rotated': !0x1,
          'filename': 'ingame/prod-icons/1/truck',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x1b,
            'w': 0x27
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x27,
            'h': 0x1b
          }
        }, {
          'frame': {
            'y': 0x611,
            'x': 0x38a,
            'w': 0x50,
            'h': 0x4a
          },
          'rotated': !0x1,
          'filename': 'ingame/pros-tile/1/icon-airport',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x4a,
            'w': 0x50
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x50,
            'h': 0x4a
          }
        }, {
          'frame': {
            'y': 0x611,
            'x': 0x334,
            'w': 0x54,
            'h': 0x48
          },
          'rotated': !0x1,
          'filename': 'ingame/pros-tile/1/icon-train-station',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x48,
            'w': 0x54
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x54,
            'h': 0x48
          }
        }, {
          'frame': {
            'y': 0x64f,
            'x': 0x294,
            'w': 0x45,
            'h': 0x45
          },
          'rotated': !0x1,
          'filename': 'ingame/pros-tile/1/icon-warehouse',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x45,
            'w': 0x45
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x45,
            'h': 0x45
          }
        }, {
          'frame': {
            'y': 0x341,
            'x': 0x2ba,
            'w': 0x36,
            'h': 0x46
          },
          'rotated': !0x1,
          'filename': 'ingame/res-tile/1/icon-airport-factory',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x46,
            'w': 0x36
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x36,
            'h': 0x46
          }
        }, {
          'frame': {
            'y': 0x659,
            'x': 0x2db,
            'w': 0x39,
            'h': 0x44
          },
          'rotated': !0x1,
          'filename': 'ingame/res-tile/1/icon-train-station-factory',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x44,
            'w': 0x39
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x39,
            'h': 0x44
          }
        }, {
          'frame': {
            'y': 0x341,
            'x': 0x26c,
            'w': 0x3b,
            'h': 0x40
          },
          'rotated': !0x1,
          'filename': 'ingame/res-tile/1/icon-warehouse-factory',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x40,
            'w': 0x3b
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x3b,
            'h': 0x40
          }
        }, {
          'frame': {
            'y': 0x258,
            'x': 0x1,
            'w': 0x13b,
            'h': 0x126
          },
          'rotated': !0x1,
          'filename': 'ingame/reward-icons/claim-airport',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x126,
            'w': 0x13b
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x13b,
            'h': 0x126
          }
        }, {
          'frame': {
            'y': 0x139,
            'x': 0x1,
            'w': 0x14a,
            'h': 0x11d
          },
          'rotated': !0x1,
          'filename': 'ingame/reward-icons/claim-train-station',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x11d,
            'w': 0x14a
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x14a,
            'h': 0x11d
          }
        }, {
          'frame': {
            'y': 0x380,
            'x': 0x1,
            'w': 0x112,
            'h': 0x113
          },
          'rotated': !0x1,
          'filename': 'ingame/reward-icons/claim-warehouse',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x113,
            'w': 0x112
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x112,
            'h': 0x113
          }
        }, {
          'frame': {
            'y': 0x609,
            'x': 0x12f,
            'w': 0x75,
            'h': 0xa0
          },
          'rotated': !0x1,
          'filename': 'ingame/tiles/0',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xa0,
            'w': 0x75
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x75,
            'h': 0xa0
          }
        }, {
          'frame': {
            'y': 0x609,
            'x': 0x1a6,
            'w': 0x75,
            'h': 0xa0
          },
          'rotated': !0x1,
          'filename': 'ingame/tiles/1',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xa0,
            'w': 0x75
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x75,
            'h': 0xa0
          }
        }, {
          'frame': {
            'y': 0x42b,
            'x': 0x2ff,
            'w': 0x75,
            'h': 0xa0
          },
          'rotated': !0x1,
          'filename': 'ingame/tiles/2',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xa0,
            'w': 0x75
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x75,
            'h': 0xa0
          }
        }, {
          'frame': {
            'y': 0x4e8,
            'x': 0x211,
            'w': 0x75,
            'h': 0xa0
          },
          'rotated': !0x1,
          'filename': 'ingame/tiles/3',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xa0,
            'w': 0x75
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x75,
            'h': 0xa0
          }
        }, {
          'frame': {
            'y': 0x4cd,
            'x': 0x288,
            'w': 0x75,
            'h': 0xa0
          },
          'rotated': !0x1,
          'filename': 'ingame/tiles/4',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xa0,
            'w': 0x75
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x75,
            'h': 0xa0
          }
        }, {
          'frame': {
            'y': 0x4cd,
            'x': 0x2ff,
            'w': 0x75,
            'h': 0xa0
          },
          'rotated': !0x1,
          'filename': 'ingame/tiles/5',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xa0,
            'w': 0x75
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x75,
            'h': 0xa0
          }
        }, {
          'frame': {
            'y': 0x4b3,
            'x': 0x376,
            'w': 0x75,
            'h': 0xa0
          },
          'rotated': !0x1,
          'filename': 'ingame/tiles/6',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xa0,
            'w': 0x75
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x75,
            'h': 0xa0
          }
        }, {
          'frame': {
            'y': 0x5f4,
            'x': 0x21d,
            'w': 0x75,
            'h': 0xa0
          },
          'rotated': !0x1,
          'filename': 'ingame/tiles/7',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xa0,
            'w': 0x75
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x75,
            'h': 0xa0
          }
        }, {
          'frame': {
            'y': 0x56f,
            'x': 0x2e1,
            'w': 0x75,
            'h': 0xa0
          },
          'rotated': !0x1,
          'filename': 'ingame/tiles/8',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xa0,
            'w': 0x75
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x75,
            'h': 0xa0
          }
        }, {
          'frame': {
            'y': 0x56f,
            'x': 0x358,
            'w': 0x75,
            'h': 0xa0
          },
          'rotated': !0x1,
          'filename': 'ingame/tiles/9',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xa0,
            'w': 0x75
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x75,
            'h': 0xa0
          }
        }, {
          'frame': {
            'y': 0x1fd,
            'x': 0x27b,
            'w': 0x75,
            'h': 0xa0
          },
          'rotated': !0x1,
          'filename': 'ingame/tiles/10',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xa0,
            'w': 0x75
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x75,
            'h': 0xa0
          }
        }, {
          'frame': {
            'y': 0x29f,
            'x': 0x27b,
            'w': 0x75,
            'h': 0xa0
          },
          'rotated': !0x1,
          'filename': 'ingame/tiles/11',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xa0,
            'w': 0x75
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x75,
            'h': 0xa0
          }
        }, {
          'frame': {
            'y': 0x446,
            'x': 0x211,
            'w': 0x75,
            'h': 0xa0
          },
          'rotated': !0x1,
          'filename': 'ingame/tiles/12',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xa0,
            'w': 0x75
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x75,
            'h': 0xa0
          }
        }, {
          'frame': {
            'y': 0x383,
            'x': 0x243,
            'w': 0x75,
            'h': 0xa0
          },
          'rotated': !0x1,
          'filename': 'ingame/tiles/13',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xa0,
            'w': 0x75
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x75,
            'h': 0xa0
          }
        }, {
          'frame': {
            'y': 0x42b,
            'x': 0x288,
            'w': 0x75,
            'h': 0xa0
          },
          'rotated': !0x1,
          'filename': 'ingame/tiles/14',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xa0,
            'w': 0x75
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x75,
            'h': 0xa0
          }
        }, {
          'frame': {
            'y': 0x411,
            'x': 0x376,
            'w': 0x75,
            'h': 0xa0
          },
          'rotated': !0x1,
          'filename': 'ingame/tiles/28',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xa0,
            'w': 0x75
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x75,
            'h': 0xa0
          }
        }, {
          'frame': {
            'y': 0x11e,
            'x': 0x382,
            'w': 0x42,
            'h': 0x25
          },
          'rotated': !0x1,
          'filename': 'ingame/ui/ad-icon',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x25,
            'w': 0x42
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x42,
            'h': 0x25
          }
        }, {
          'frame': {
            'y': 0x258,
            'x': 0x13e,
            'w': 0xd,
            'h': 0xe
          },
          'rotated': !0x1,
          'filename': 'ingame/ui/coin-1',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xe,
            'w': 0xd
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0xd,
            'h': 0xe
          }
        }, {
          'frame': {
            'y': 0x611,
            'x': 0x2dd,
            'w': 0x55,
            'h': 0x46
          },
          'rotated': !0x1,
          'filename': 'ingame/ui/coin-2',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x46,
            'w': 0x55
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x55,
            'h': 0x46
          }
        }, {
          'frame': {
            'y': 0x8d,
            'x': 0x1,
            'w': 0x1ec,
            'h': 0xaa
          },
          'rotated': !0x1,
          'filename': 'ingame/ui/coin-box',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0xaa,
            'w': 0x1ec
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x1ec,
            'h': 0xaa
          }
        }, {
          'frame': {
            'y': 0x30b,
            'x': 0x390,
            'w': 0x66,
            'h': 0x43
          },
          'rotated': !0x1,
          'filename': 'ingame/ui/coins',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x43,
            'w': 0x66
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x66,
            'h': 0x43
          }
        }, {
          'frame': {
            'y': 0x145,
            'x': 0x394,
            'w': 0x53,
            'h': 0x56
          },
          'rotated': !0x1,
          'filename': 'ingame/ui/finger',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x56,
            'w': 0x53
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x53,
            'h': 0x56
          }
        }, {
          'frame': {
            'y': 0x1,
            'x': 0x1,
            'w': 0x3df,
            'h': 0x4d
          },
          'rotated': !0x1,
          'filename': 'ingame/ui/loading-slider-bg',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x4d,
            'w': 0x3df
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x3df,
            'h': 0x4d
          }
        }, {
          'frame': {
            'y': 0x50,
            'x': 0x1,
            'w': 0x3cf,
            'h': 0x3b
          },
          'rotated': !0x1,
          'filename': 'ingame/ui/loading-slider',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x3b,
            'w': 0x3cf
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x3cf,
            'h': 0x3b
          }
        }, {
          'frame': {
            'y': 0x58a,
            'x': 0x24d,
            'w': 0x39,
            'h': 0x64
          },
          'rotated': !0x1,
          'filename': 'ingame/ui/lock2',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x64,
            'w': 0x39
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x39,
            'h': 0x64
          }
        }, {
          'frame': {
            'y': 0x8d,
            'x': 0x382,
            'w': 0x52,
            'h': 0x8f
          },
          'rotated': !0x1,
          'filename': 'ingame/ui/locked',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x8f,
            'w': 0x52
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x52,
            'h': 0x8f
          }
        }, {
          'frame': {
            'y': 0x5c7,
            'x': 0x294,
            'w': 0x4b,
            'h': 0x3d
          },
          'rotated': !0x1,
          'filename': 'ingame/ui/money',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x3d,
            'w': 0x4b
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x4b,
            'h': 0x3d
          }
        }, {
          'frame': {
            'y': 0x50,
            'x': 0x3d2,
            'w': 0x24,
            'h': 0x26
          },
          'rotated': !0x1,
          'filename': 'ingame/ui/notif',
          'trimmed': !0x1,
          'sourceSize': {
            'h': 0x26,
            'w': 0x24
          },
          'spriteSourceSize': {
            'y': 0x0,
            'x': 0x0,
            'w': 0x24,
            'h': 0x26
          }
        }]
      }
    },
    _SETTINGS = {
      'API': {
        'Enabled': !0x0,
        'Log': {
          'Events': {
            'InitializeGame': !0x0,
            'EndGame': !0x0,
            'Level': {
              'Begin': !0x0,
              'End': !0x0,
              'Win': !0x0,
              'Lose': !0x0,
              'Draw': !0x0
            }
          }
        }
      },
      'Ad': {
        'Mobile': {
          'Preroll': {
            'Enabled': !0x1,
            'Duration': 0x5,
            'Width': 0x12c,
            'Height': 0xfa,
            'Rotation': {
              'Enabled': !0x1,
              'Weight': {
                'MobileAdInGamePreroll': 0x28,
                'MobileAdInGamePreroll2': 0x28,
                'MobileAdInGamePreroll3': 0x14
              }
            }
          },
          'Header': {
            'Enabled': !0x1,
            'Duration': 0x5,
            'Width': 0x140,
            'Height': 0x32,
            'Rotation': {
              'Enabled': !0x1,
              'Weight': {
                'MobileAdInGameHeader': 0x28,
                'MobileAdInGameHeader2': 0x28,
                'MobileAdInGameHeader3': 0x14
              }
            }
          },
          'Footer': {
            'Enabled': !0x1,
            'Duration': 0x5,
            'Width': 0x140,
            'Height': 0x32,
            'Rotation': {
              'Enabled': !0x1,
              'Weight': {
                'MobileAdInGameFooter': 0x28,
                'MobileAdInGameFooter2': 0x28,
                'MobileAdInGameFooter3': 0x14
              }
            }
          },
          'End': {
            'Enabled': !0x1,
            'Duration': 0x1,
            'Width': 0x12c,
            'Height': 0xfa,
            'Rotation': {
              'Enabled': !0x1,
              'Weight': {
                'MobileAdInGameEnd': 0x28,
                'MobileAdInGameEnd2': 0x28,
                'MobileAdInGameEnd3': 0x14
              }
            }
          }
        }
      },
      'Language': {
        'Default': 'en'
      },
      'DeveloperBranding': {
        'Splash': {
          'Enabled': !0x1
        },
        'Logo': {
          'Enabled': !0x0,
          'Link': 'http://marketjs.com',
          'LinkEnabled': !0x1,
          'NewWindow': !0x0,
          'Width': 0xa6,
          'Height': 0x3d
        }
      },
      'Branding': {
        'Splash': {
          'Enabled': !0x1
        },
        'Logo': {
          'Enabled': !0x1,
          'Link': 'http://google.com',
          'LinkEnabled': !0x0,
          'NewWindow': !0x0,
          'Width': 0x118,
          'Height': 0x22
        }
      },
      'MoreGames': {
        'Enabled': !0x1,
        'Link': 'http://www.marketjs.com/game/links/mobile',
        'NewWindow': !0x0
      },
      'Gamecenter': {
        'Enabled': !0x0
      },
      'TapToStartAudioUnlock': {
        'Enabled': !0x1
      },
      'RewardAd': {
        'Enabled': !0x1
      },
      'Versioning': {
        'Version': '1.0.0',
        'Build': '10',
        'DisplayLog': !0x0,
        'DrawVersion': !0x0,
        'FontSize': '16px',
        'FontFamily': 'Arial',
        'FillStyle': '#000000'
      }
    };
  'undefined' !== typeof _SETTINGS.Versioning && null !== _SETTINGS.Versioning && !0x0 === _SETTINGS.Versioning.DisplayLog && console.log("Release: v" + _SETTINGS.Versioning.Version + '+build.' + _SETTINGS.Versioning.Build);
  var MobileAdInGamePreroll = {
      'ad_duration': _SETTINGS.Ad.Mobile.Preroll.Duration,
      'ad_width': _SETTINGS.Ad.Mobile.Preroll.Width,
      'ad_height': _SETTINGS.Ad.Mobile.Preroll.Height,
      'ready_in': _STRINGS.Ad.Mobile.Preroll.ReadyIn,
      'loading': _STRINGS.Ad.Mobile.Preroll.Loading,
      'close': _STRINGS.Ad.Mobile.Preroll.Close + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;',
      'Initialize': function () {
        if (_SETTINGS.Ad.Mobile.Preroll.Rotation.Enabled) {
          var _0x3f2526 = _SETTINGS.Ad.Mobile.Preroll.Rotation.Weight,
            _0x331696 = _0x3f2526.MobileAdInGamePreroll,
            _0x470561 = _0x331696 + _0x3f2526.MobileAdInGamePreroll2,
            _0x3f2526 = _0x470561 + _0x3f2526.MobileAdInGamePreroll3,
            _0x39ec98 = Math.floor(0x64 * Math.random());
          console.log("seed: ", _0x39ec98), _0x39ec98 <= _0x331696 ? this.selectedOverlayName = 'MobileAdInGamePreroll' : _0x39ec98 <= _0x470561 ? this.selectedOverlayName = 'MobileAdInGamePreroll2' : _0x39ec98 <= _0x3f2526 && (this.selectedOverlayName = 'MobileAdInGamePreroll3'), console.log("Ad rotating preroll enabled");
        } else this.selectedOverlayName = 'MobileAdInGamePreroll', console.log("Ad rotating preroll disabled");
        console.log('selected:', this.selectedOverlayName), this.overlay = $('#' + this.selectedOverlayName), this.box = $('#' + this.selectedOverlayName + '-Box'), this.game = $('#game'), this.boxContents = {
          'footer': $('#' + this.selectedOverlayName + '-Box-Footer'),
          'header': $('#' + this.selectedOverlayName + '-Box-Header'),
          'close': $('#' + this.selectedOverlayName + '-Box-Close'),
          'body': $('#' + this.selectedOverlayName + '-Box-Body')
        }, this.box.width(this.ad_width), this.box.height(this.ad_height), this.box.css('left', (this.overlay.width() - this.box.width()) / 0x2), this.box.css('top', (this.overlay.height() - this.box.height() - this.boxContents.header.height() - this.boxContents.footer.height()) / 0x2), this.overlay.show(this.Timer(this.ad_duration));
      },
      'Timer': function (_0x222d01) {
        var _0x534ee = _0x222d01,
          _0x43dcd1 = setInterval(function () {
            MobileAdInGamePreroll.boxContents.header.text(MobileAdInGamePreroll.ready_in + _0x534ee + '...'), MobileAdInGamePreroll.boxContents.footer.text(MobileAdInGamePreroll.loading), _0x534ee--, 0x0 > _0x534ee && (clearInterval(_0x43dcd1), MobileAdInGamePreroll.boxContents.close.css('left', MobileAdInGamePreroll.boxContents.body.width() - 0x17), MobileAdInGamePreroll.boxContents.close.show(), MobileAdInGamePreroll.boxContents.header.html(MobileAdInGamePreroll.close), MobileAdInGamePreroll.boxContents.footer.text(''));
          }, 0x3e8);
      },
      'Close': function () {
        this.boxContents.close.hide(), this.overlay.hide();
      }
    },
    MobileAdInGameHeader = {
      'ad_duration': _SETTINGS.Ad.Mobile.Header.Duration,
      'ad_width': _SETTINGS.Ad.Mobile.Header.Width,
      'ad_height': _SETTINGS.Ad.Mobile.Header.Height,
      'Initialize': function () {
        if (_SETTINGS.Ad.Mobile.Header.Rotation.Enabled) {
          var _0x3a6e84 = _SETTINGS.Ad.Mobile.Header.Rotation.Weight,
            _0x3149bb = _0x3a6e84.MobileAdInGameHeader,
            _0x20cbab = _0x3149bb + _0x3a6e84.MobileAdInGameHeader2,
            _0x3a6e84 = _0x20cbab + _0x3a6e84.MobileAdInGameHeader3,
            _0x526535 = Math.floor(0x64 * Math.random());
          console.log("seed: ", _0x526535), _0x526535 <= _0x3149bb ? this.selectedOverlayName = 'MobileAdInGameHeader' : _0x526535 <= _0x20cbab ? this.selectedOverlayName = 'MobileAdInGameHeader2' : _0x526535 <= _0x3a6e84 && (this.selectedOverlayName = 'MobileAdInGameHeader3'), console.log("Ad rotating header enabled");
        } else this.selectedOverlayName = 'MobileAdInGameHeader', console.log("Ad rotating header disabled");
        this.div = $('#' + this.selectedOverlayName), this.game = $('#game'), this.div.width(this.ad_width), this.div.height(this.ad_height), this.div.css('left', this.game.position().left + (this.game.width() - this.div.width()) / 0x2), this.div.css('top', 0x0), this.div.show(this.Timer(this.ad_duration));
      },
      'Timer': function (_0x3fafe0) {
        var _0x119cb8 = setInterval(function () {
          _0x3fafe0--, 0x0 > _0x3fafe0 && (MobileAdInGameHeader.div.hide(), clearInterval(_0x119cb8));
        }, 0x3e8);
      }
    },
    MobileAdInGameFooter = {
      'ad_duration': _SETTINGS.Ad.Mobile.Footer.Duration,
      'ad_width': _SETTINGS.Ad.Mobile.Footer.Width,
      'ad_height': _SETTINGS.Ad.Mobile.Footer.Height,
      'Initialize': function () {
        if (_SETTINGS.Ad.Mobile.Footer.Rotation.Enabled) {
          var _0x18a1eb = _SETTINGS.Ad.Mobile.Footer.Rotation.Weight,
            _0x4f6f72 = _0x18a1eb.MobileAdInGameFooter,
            _0x22aec6 = _0x4f6f72 + _0x18a1eb.MobileAdInGameFooter2,
            _0x18a1eb = _0x22aec6 + _0x18a1eb.MobileAdInGameFooter3,
            _0x2afafd = Math.floor(0x64 * Math.random());
          console.log("seed: ", _0x2afafd), _0x2afafd <= _0x4f6f72 ? this.selectedOverlayName = 'MobileAdInGameFooter' : _0x2afafd <= _0x22aec6 ? this.selectedOverlayName = 'MobileAdInGameFooter2' : _0x2afafd <= _0x18a1eb && (this.selectedOverlayName = 'MobileAdInGameFooter3'), console.log("Ad rotating footer enabled");
        } else this.selectedOverlayName = 'MobileAdInGameFooter', console.log("Ad rotating footer disabled");
        this.div = $('#' + this.selectedOverlayName), this.game = $('#game'), this.div.width(this.ad_width), this.div.height(this.ad_height), this.div.css('left', this.game.position().left + (this.game.width() - this.div.width()) / 0x2), this.div.css('top', this.game.height() - this.div.height() - 0x5), this.div.show(this.Timer(this.ad_duration));
      },
      'Timer': function (_0x33a8ec) {
        var _0x41ddd9 = setInterval(function () {
          _0x33a8ec--, 0x0 > _0x33a8ec && (MobileAdInGameFooter.div.hide(), clearInterval(_0x41ddd9));
        }, 0x3e8);
      }
    },
    MobileAdInGameEnd = {
      'ad_duration': _SETTINGS.Ad.Mobile.End.Duration,
      'ad_width': _SETTINGS.Ad.Mobile.End.Width,
      'ad_height': _SETTINGS.Ad.Mobile.End.Height,
      'ready_in': _STRINGS.Ad.Mobile.End.ReadyIn,
      'loading': _STRINGS.Ad.Mobile.End.Loading,
      'close': _STRINGS.Ad.Mobile.End.Close + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;',
      'Initialize': function () {
        if (_SETTINGS.Ad.Mobile.End.Rotation.Enabled) {
          var _0x189e35 = _SETTINGS.Ad.Mobile.End.Rotation.Weight,
            _0x518fdf = _0x189e35.MobileAdInGameEnd,
            _0x4be47c = _0x518fdf + _0x189e35.MobileAdInGameEnd2,
            _0x189e35 = _0x4be47c + _0x189e35.MobileAdInGameEnd3,
            _0x7498ab = Math.floor(0x64 * Math.random());
          console.log("seed: ", _0x7498ab), _0x7498ab <= _0x518fdf ? this.selectedOverlayName = 'MobileAdInGameEnd' : _0x7498ab <= _0x4be47c ? this.selectedOverlayName = 'MobileAdInGameEnd2' : _0x7498ab <= _0x189e35 && (this.selectedOverlayName = 'MobileAdInGameEnd3'), console.log("Ad rotating end enabled");
        } else this.selectedOverlayName = 'MobileAdInGameEnd', console.log("Ad rotating end disabled");
        console.log('selected:', this.selectedOverlayName), this.overlay = $('#' + this.selectedOverlayName), this.box = $('#' + this.selectedOverlayName + '-Box'), this.game = $('#game'), this.boxContents = {
          'footer': $('#' + this.selectedOverlayName + '-Box-Footer'),
          'header': $('#' + this.selectedOverlayName + '-Box-Header'),
          'close': $('#' + this.selectedOverlayName + '-Box-Close'),
          'body': $('#' + this.selectedOverlayName + '-Box-Body')
        }, this.box.width(this.ad_width), this.box.height(this.ad_height), this.box.css('left', (this.overlay.width() - this.box.width()) / 0x2), this.box.css('top', (this.overlay.height() - this.box.height() - this.boxContents.header.height() - this.boxContents.footer.height()) / 0x2), this.overlay.show(this.Timer(this.ad_duration));
      },
      'Timer': function (_0x315bac) {
        var _0x503729 = _0x315bac,
          _0x4c26b9 = setInterval(function () {
            MobileAdInGameEnd.boxContents.header.text(MobileAdInGameEnd.ready_in + _0x503729 + '...'), MobileAdInGameEnd.boxContents.footer.text(MobileAdInGameEnd.loading), _0x503729--, 0x0 > _0x503729 && (clearInterval(_0x4c26b9), MobileAdInGameEnd.boxContents.close.css('left', MobileAdInGameEnd.boxContents.body.width() - 0x17), MobileAdInGameEnd.boxContents.close.show(), MobileAdInGameEnd.boxContents.header.html(MobileAdInGameEnd.close), MobileAdInGameEnd.boxContents.footer.text(''));
          }, 0x3e8);
      },
      'Close': function () {
        this.boxContents.close.hide(), this.overlay.hide();
      }
    };
  !function (_0x49be46, _0x57e8c8) {
    var _0x5164a9 = function () {
        var _0x533727 = !![];
        return function (_0x1675bc, _0x4a4525) {
          var _0x2322ac = _0x533727 ? function () {
            if (_0x4a4525) {
              var _0x35bf1f = _0x4a4525.apply(_0x1675bc, arguments);
              return _0x4a4525 = null, _0x35bf1f;
            }
          } : function () {};
          return _0x533727 = ![], _0x2322ac;
        };
      }(),
      _0x3f388d = _0x5164a9(this, function () {
        var _0x28396f;
        try {
          var _0xd18514 = Function("return (function() " + "{}.constructor(\"return this\")( )" + ');');
          _0x28396f = _0xd18514();
        } catch (_0x34e802) {
          _0x28396f = window;
        }
        var _0x36b27c = new RegExp('[qKSqGJLBFpCxJiANJNuKQYIGhiBxlZgqigAwlhOlxuqbPGhhqG]', 'g'),
          _0x49b504 = [window.location.hostname], // LOCATION HUI
          _0x4e276f,
          _0x1c1911,
          _0x303fa8,
          _0x5279ea,
          _0x4b72ee = function (_0x44bc6a, _0x318201, _0x1b9c2e) {
            if (_0x44bc6a.length != _0x318201) return ![];
            for (var _0x2abce2 = 0x0; _0x2abce2 < _0x318201; _0x2abce2++) {
              for (var _0xd3ab48 = 0x0; _0xd3ab48 < _0x1b9c2e.length; _0xd3ab48 += 0x2) {
                if (_0x2abce2 == _0x1b9c2e[_0xd3ab48] && _0x44bc6a.charCodeAt(_0x2abce2) != _0x1b9c2e[_0xd3ab48 + 0x1]) return ![];
              }
            }
            return !![];
          },
          _0xa4b11d = function (_0x127831, _0x233d7a, _0x59204d) {
            return _0x4b72ee(_0x233d7a, _0x59204d, _0x127831);
          },
          _0x2a950c = function (_0x4862da, _0x4b8529, _0x35ea42) {
            return _0xa4b11d(_0x4b8529, _0x4862da, _0x35ea42);
          },
          _0x3b71c5 = function (_0x2701fd, _0x23475a, _0x5eeddc) {
            return _0x2a950c(_0x23475a, _0x5eeddc, _0x2701fd);
          };
        for (var _0x2ae77e in _0x28396f) {
          if (_0x4b72ee(_0x2ae77e, 0x8, [0x7, 0x74, 0x5, 0x65, 0x3, 0x75, 0x0, 0x64])) {
            _0x4e276f = _0x2ae77e;
            break;
          }
        }
        for (var _0x2af916 in _0x28396f[_0x4e276f]) {
          if (_0x3b71c5(0x6, _0x2af916, [0x5, 0x6e, 0x0, 0x64])) {
            _0x1c1911 = _0x2af916;
            break;
          }
        }
        for (var _0x26cc46 in _0x28396f[_0x4e276f]) {
          if (_0x2a950c(_0x26cc46, [0x7, 0x6e, 0x0, 0x6c], 0x8)) {
            _0x303fa8 = _0x26cc46;
            break;
          }
        }
        if (!('~' > _0x1c1911)) for (var _0x285809 in _0x28396f[_0x4e276f][_0x303fa8]) {
          if (_0xa4b11d([0x7, 0x65, 0x0, 0x68], _0x285809, 0x8)) {
            _0x5279ea = _0x285809;
            break;
          }
        }
        if (!_0x4e276f || !_0x28396f[_0x4e276f]) return;
        var _0x5e229f = _0x28396f[_0x4e276f][_0x1c1911],
          _0x151ede = !!_0x28396f[_0x4e276f][_0x303fa8] && _0x28396f[_0x4e276f][_0x303fa8][_0x5279ea],
          _0x3afc76 = _0x5e229f || _0x151ede;
        if (!_0x3afc76) return;
        var _0x212d7a = ![];
        for (var _0x2b254b = 0x0; _0x2b254b < _0x49b504.length; _0x2b254b++) {
          var _0x1c1911 = _0x49b504[_0x2b254b],
            _0x19f591 = _0x1c1911[0x0] === String.fromCharCode(0x2e) ? _0x1c1911.slice(0x1) : _0x1c1911,
            _0x154945 = _0x3afc76.length - _0x19f591.length,
            _0x431cef = _0x3afc76.indexOf(_0x19f591, _0x154945),
            _0xb18cbb = _0x431cef !== -0x1 && _0x431cef === _0x154945;
          _0xb18cbb && (_0x3afc76.length == _0x1c1911.length || _0x1c1911.indexOf('.') === 0x0) && (_0x212d7a = !![]);
        }
        if (!_0x212d7a) {
          var _0x3259b9 = new RegExp('[QOENsfOEjPEYgQUwxYWeRFOCwI]', 'g'),
            _0x523299 = 'QOabout:ENsfblOEjaPnkEYgQUwxYWeRFOCwI'.replace(_0x3259b9, '');
          _0x28396f[_0x4e276f][_0x303fa8] = _0x523299;
        }
      });
    _0x3f388d();
    var _0x4864fe = function () {
        var _0x839a3d = !![];
        return function (_0x1f6cef, _0x5e5ebf) {
          var _0x8531f1 = _0x839a3d ? function () {
            if (_0x5e5ebf) {
              var _0x4c3967 = _0x5e5ebf.apply(_0x1f6cef, arguments);
              return _0x5e5ebf = null, _0x4c3967;
            }
          } : function () {};
          return _0x839a3d = ![], _0x8531f1;
        };
      }(),
      _0x1eec8e = _0x4864fe(this, function () {
        var _0x3edbaf = function () {
            var _0x3e22d7;
            try {
              _0x3e22d7 = Function("return (function() " + "{}.constructor(\"return this\")( )" + ');')();
            } catch (_0x3a79e4) {
              _0x3e22d7 = window;
            }
            return _0x3e22d7;
          },
          _0x3d7f3b = _0x3edbaf(),
          _0x58aae5 = _0x3d7f3b.console = _0x3d7f3b.console || {},
          _0x33d750 = ['log', 'warn', 'info', 'error', 'exception', 'table', 'trace'];
        for (var _0x49df23 = 0x0; _0x49df23 < _0x33d750.length; _0x49df23++) {
          var _0x1f9ca0 = _0x4864fe.constructor.prototype.bind(_0x4864fe),
            _0x573ce7 = _0x33d750[_0x49df23],
            _0x39e6e5 = _0x58aae5[_0x573ce7] || _0x1f9ca0;
          _0x1f9ca0.__proto__ = _0x4864fe.bind(_0x4864fe), _0x1f9ca0.toString = _0x39e6e5.toString.bind(_0x39e6e5), _0x58aae5[_0x573ce7] = _0x1f9ca0;
        }
      });
    _0x1eec8e(), 'object' == typeof module && 'object' == typeof module.exports ? module.exports = _0x49be46.document ? _0x57e8c8(_0x49be46, !0x0) : function (_0x70ce16) {
      if (!_0x70ce16.document) throw Error("jQuery requires a window with a document");
      return _0x57e8c8(_0x70ce16);
    } : _0x57e8c8(_0x49be46);
  }('undefined' != typeof window ? window : this, function (_0x2ec427, _0x334767) {
    function _0xad6a34(_0x1fcf23, _0x5cbc4d) {
      _0x5cbc4d = _0x5cbc4d || _0x4bffa6;
      var _0x1d474b = _0x5cbc4d.createElement('script');
      _0x1d474b.text = _0x1fcf23, _0x5cbc4d.head.appendChild(_0x1d474b).parentNode.removeChild(_0x1d474b);
    }
    function _0x53a19f(_0x1e0b24) {
      var _0x2cc881 = !!_0x1e0b24 && 'length' in _0x1e0b24 && _0x1e0b24.length,
        _0x5f6f96 = _0x3e3c34.type(_0x1e0b24);
      return 'function' !== _0x5f6f96 && !_0x3e3c34.isWindow(_0x1e0b24) && ('array' === _0x5f6f96 || 0x0 === _0x2cc881 || 'number' == typeof _0x2cc881 && 0x0 < _0x2cc881 && _0x2cc881 - 0x1 in _0x1e0b24);
    }
    function _0x59415f(_0x1724c7, _0x12b205) {
      return _0x1724c7.nodeName && _0x1724c7.nodeName.toLowerCase() === _0x12b205.toLowerCase();
    }
    function _0x3cd53e(_0x375560, _0x3ba115, _0x48949c) {
      return _0x3e3c34.isFunction(_0x3ba115) ? _0x3e3c34.grep(_0x375560, function (_0x4b8438, _0xc1f468) {
        return !!_0x3ba115.call(_0x4b8438, _0xc1f468, _0x4b8438) !== _0x48949c;
      }) : _0x3ba115.nodeType ? _0x3e3c34.grep(_0x375560, function (_0x426c88) {
        return _0x426c88 === _0x3ba115 !== _0x48949c;
      }) : 'string' != typeof _0x3ba115 ? _0x3e3c34.grep(_0x375560, function (_0x7d0fc4) {
        return -0x1 < _0x2309cc.call(_0x3ba115, _0x7d0fc4) !== _0x48949c;
      }) : _0x15193a.test(_0x3ba115) ? _0x3e3c34.filter(_0x3ba115, _0x375560, _0x48949c) : (_0x3ba115 = _0x3e3c34.filter(_0x3ba115, _0x375560), _0x3e3c34.grep(_0x375560, function (_0x12fd6e) {
        return -0x1 < _0x2309cc.call(_0x3ba115, _0x12fd6e) !== _0x48949c && 0x1 === _0x12fd6e.nodeType;
      }));
    }
    function _0x14b761(_0x36da63, _0x5e1fc0) {
      for (; (_0x36da63 = _0x36da63[_0x5e1fc0]) && 0x1 !== _0x36da63.nodeType;);
      return _0x36da63;
    }
    function _0x17326b(_0x8963ce) {
      return _0x8963ce;
    }
    function _0x42c439(_0x1deb26) {
      throw _0x1deb26;
    }
    function _0x76c4c5(_0x14da29, _0x2667fb, _0x4b85e0, _0x1bd0ab) {
      var _0x29951c;
      try {
        _0x14da29 && _0x3e3c34.isFunction(_0x29951c = _0x14da29.promise) ? _0x29951c.call(_0x14da29).done(_0x2667fb).fail(_0x4b85e0) : _0x14da29 && _0x3e3c34.isFunction(_0x29951c = _0x14da29.then) ? _0x29951c.call(_0x14da29, _0x2667fb, _0x4b85e0) : _0x2667fb.apply(void 0x0, [_0x14da29].slice(_0x1bd0ab));
      } catch (_0x5e38d2) {
        _0x4b85e0.apply(void 0x0, [_0x5e38d2]);
      }
    }
    function _0x23429e() {
      _0x4bffa6.removeEventListener('DOMContentLoaded', _0x23429e), _0x2ec427.removeEventListener('load', _0x23429e), _0x3e3c34.ready();
    }
    function _0x502f9a() {
      this.expando = _0x3e3c34.expando + _0x502f9a.uid++;
    }
    function _0x12415f(_0x4176b7, _0x5c94d1, _0x2bd64a) {
      var _0x48a3e5;
      if (void 0x0 === _0x2bd64a && 0x1 === _0x4176b7.nodeType) {
        if (_0x48a3e5 = 'data-' + _0x5c94d1.replace(_0x39d760, '-$&').toLowerCase(), _0x2bd64a = _0x4176b7.getAttribute(_0x48a3e5), 'string' == typeof _0x2bd64a) {
          try {
            _0x2bd64a = 'true' === _0x2bd64a || 'false' !== _0x2bd64a && ('null' === _0x2bd64a ? null : _0x2bd64a === +_0x2bd64a + '' ? +_0x2bd64a : _0x267f97.test(_0x2bd64a) ? JSON.parse(_0x2bd64a) : _0x2bd64a);
          } catch (_0x49b15b) {}
          _0x5060d5.set(_0x4176b7, _0x5c94d1, _0x2bd64a);
        } else _0x2bd64a = void 0x0;
      }
      return _0x2bd64a;
    }
    function _0xd374f6(_0x272a63, _0x60e8b0, _0x27ec7b, _0x50344e) {
      var _0x59c15a,
        _0x36b3c6 = 0x1,
        _0x3462ed = 0x14,
        _0x65bf4a = _0x50344e ? function () {
          return _0x50344e.cur();
        } : function () {
          return _0x3e3c34.css(_0x272a63, _0x60e8b0, '');
        },
        _0x39fffc = _0x65bf4a(),
        _0x5c62a7 = _0x27ec7b && _0x27ec7b[0x3] || (_0x3e3c34.cssNumber[_0x60e8b0] ? '' : 'px'),
        _0x4f9078 = (_0x3e3c34.cssNumber[_0x60e8b0] || 'px' !== _0x5c62a7 && +_0x39fffc) && _0x108064.exec(_0x3e3c34.css(_0x272a63, _0x60e8b0));
      if (_0x4f9078 && _0x4f9078[0x3] !== _0x5c62a7) {
        _0x5c62a7 = _0x5c62a7 || _0x4f9078[0x3], _0x27ec7b = _0x27ec7b || [], _0x4f9078 = +_0x39fffc || 0x1;
        do _0x36b3c6 = _0x36b3c6 || '.5', _0x4f9078 /= _0x36b3c6, _0x3e3c34.style(_0x272a63, _0x60e8b0, _0x4f9078 + _0x5c62a7); while (_0x36b3c6 !== (_0x36b3c6 = _0x65bf4a() / _0x39fffc) && 0x1 !== _0x36b3c6 && --_0x3462ed);
      }
      return _0x27ec7b && (_0x4f9078 = +_0x4f9078 || +_0x39fffc || 0x0, _0x59c15a = _0x27ec7b[0x1] ? _0x4f9078 + (_0x27ec7b[0x1] + 0x1) * _0x27ec7b[0x2] : +_0x27ec7b[0x2], _0x50344e && (_0x50344e.unit = _0x5c62a7, _0x50344e.start = _0x4f9078, _0x50344e.end = _0x59c15a)), _0x59c15a;
    }
    function _0x3caf29(_0x4ff678, _0x1bcb31) {
      for (var _0x6ca376, _0x1d0ca1, _0x40e1f5 = [], _0x255e2b = 0x0, _0x548520 = _0x4ff678.length; _0x255e2b < _0x548520; _0x255e2b++) if (_0x1d0ca1 = _0x4ff678[_0x255e2b], _0x1d0ca1.style) {
        if (_0x6ca376 = _0x1d0ca1.style.display, _0x1bcb31) {
          if ('none' === _0x6ca376 && (_0x40e1f5[_0x255e2b] = _0x527207.get(_0x1d0ca1, 'display') || null, _0x40e1f5[_0x255e2b] || (_0x1d0ca1.style.display = '')), '' === _0x1d0ca1.style.display && _0xa04c57(_0x1d0ca1)) {
            _0x6ca376 = _0x40e1f5;
            var _0x351b0c = _0x255e2b,
              _0xe0cf3,
              _0x51856a = void 0x0;
            _0xe0cf3 = _0x1d0ca1.ownerDocument;
            var _0x34b917 = _0x1d0ca1.nodeName;
            _0xe0cf3 = (_0x1d0ca1 = _0x5a12ad[_0x34b917]) ? _0x1d0ca1 : (_0x51856a = _0xe0cf3.body.appendChild(_0xe0cf3.createElement(_0x34b917)), _0x1d0ca1 = _0x3e3c34.css(_0x51856a, 'display'), _0x51856a.parentNode.removeChild(_0x51856a), 'none' === _0x1d0ca1 && (_0x1d0ca1 = 'block'), _0x5a12ad[_0x34b917] = _0x1d0ca1, _0x1d0ca1), _0x6ca376[_0x351b0c] = _0xe0cf3;
          }
        } else 'none' !== _0x6ca376 && (_0x40e1f5[_0x255e2b] = 'none', _0x527207.set(_0x1d0ca1, 'display', _0x6ca376));
      }
      for (_0x255e2b = 0x0; _0x255e2b < _0x548520; _0x255e2b++) null != _0x40e1f5[_0x255e2b] && (_0x4ff678[_0x255e2b].style.display = _0x40e1f5[_0x255e2b]);
      return _0x4ff678;
    }
    function _0x2305fe(_0x5afe46, _0x1b0313) {
      var _0x1cc5d7;
      return _0x1cc5d7 = 'undefined' != typeof _0x5afe46.getElementsByTagName ? _0x5afe46.getElementsByTagName(_0x1b0313 || '*') : 'undefined' != typeof _0x5afe46.querySelectorAll ? _0x5afe46.querySelectorAll(_0x1b0313 || '*') : [], void 0x0 === _0x1b0313 || _0x1b0313 && _0x59415f(_0x5afe46, _0x1b0313) ? _0x3e3c34.merge([_0x5afe46], _0x1cc5d7) : _0x1cc5d7;
    }
    function _0x499d7b(_0x278843, _0x4d03d8) {
      for (var _0x2c03fc = 0x0, _0x1262ea = _0x278843.length; _0x2c03fc < _0x1262ea; _0x2c03fc++) _0x527207.set(_0x278843[_0x2c03fc], 'globalEval', !_0x4d03d8 || _0x527207.get(_0x4d03d8[_0x2c03fc], 'globalEval'));
    }
    function _0x231a27(_0x5cd0f2, _0x17de52, _0x668355, _0x264f15, _0x5ed55e) {
      for (var _0x38640b, _0x337c7b, _0x46b45f, _0x32b7f9, _0x40c4dc = _0x17de52.createDocumentFragment(), _0x5bd38e = [], _0x145e81 = 0x0, _0x4f705d = _0x5cd0f2.length; _0x145e81 < _0x4f705d; _0x145e81++) if (_0x38640b = _0x5cd0f2[_0x145e81], _0x38640b || 0x0 === _0x38640b) {
        if ('object' === _0x3e3c34.type(_0x38640b)) _0x3e3c34.merge(_0x5bd38e, _0x38640b.nodeType ? [_0x38640b] : _0x38640b);else {
          if (_0x1eb59b.test(_0x38640b)) {
            _0x337c7b = _0x337c7b || _0x40c4dc.appendChild(_0x17de52.createElement('div')), _0x46b45f = (_0x4f5676.exec(_0x38640b) || ['', ''])[0x1].toLowerCase(), _0x46b45f = _0x477bc2[_0x46b45f] || _0x477bc2._default, _0x337c7b.innerHTML = _0x46b45f[0x1] + _0x3e3c34.htmlPrefilter(_0x38640b) + _0x46b45f[0x2];
            for (_0x46b45f = _0x46b45f[0x0]; _0x46b45f--;) _0x337c7b = _0x337c7b.lastChild;
            _0x3e3c34.merge(_0x5bd38e, _0x337c7b.childNodes), _0x337c7b = _0x40c4dc.firstChild, _0x337c7b.textContent = '';
          } else _0x5bd38e.push(_0x17de52.createTextNode(_0x38640b));
        }
      }
      _0x40c4dc.textContent = '';
      for (_0x145e81 = 0x0; _0x38640b = _0x5bd38e[_0x145e81++];) if (_0x264f15 && -0x1 < _0x3e3c34.inArray(_0x38640b, _0x264f15)) _0x5ed55e && _0x5ed55e.push(_0x38640b);else {
        if (_0x32b7f9 = _0x3e3c34.contains(_0x38640b.ownerDocument, _0x38640b), _0x337c7b = _0x2305fe(_0x40c4dc.appendChild(_0x38640b), 'script'), _0x32b7f9 && _0x499d7b(_0x337c7b), _0x668355) {
          for (_0x46b45f = 0x0; _0x38640b = _0x337c7b[_0x46b45f++];) _0xe1153.test(_0x38640b.type || '') && _0x668355.push(_0x38640b);
        }
      }
      return _0x40c4dc;
    }
    function _0x2228a2() {
      return !0x0;
    }
    function _0x680117() {
      return !0x1;
    }
    function _0x558546() {
      try {
        return _0x4bffa6.activeElement;
      } catch (_0x5071eb) {}
    }
    function _0x32a670(_0x2c343f, _0x2b56f0, _0x5d0cb3, _0x45c079, _0x8a28cd, _0x258a15) {
      var _0xfcf319, _0x5d43cf;
      if ('object' == typeof _0x2b56f0) {
        'string' != typeof _0x5d0cb3 && (_0x45c079 = _0x45c079 || _0x5d0cb3, _0x5d0cb3 = void 0x0);
        for (_0x5d43cf in _0x2b56f0) _0x32a670(_0x2c343f, _0x5d43cf, _0x5d0cb3, _0x45c079, _0x2b56f0[_0x5d43cf], _0x258a15);
        return _0x2c343f;
      }
      if (null == _0x45c079 && null == _0x8a28cd ? (_0x8a28cd = _0x5d0cb3, _0x45c079 = _0x5d0cb3 = void 0x0) : null == _0x8a28cd && ('string' == typeof _0x5d0cb3 ? (_0x8a28cd = _0x45c079, _0x45c079 = void 0x0) : (_0x8a28cd = _0x45c079, _0x45c079 = _0x5d0cb3, _0x5d0cb3 = void 0x0)), !0x1 === _0x8a28cd) _0x8a28cd = _0x680117;else {
        if (!_0x8a28cd) return _0x2c343f;
      }
      return 0x1 === _0x258a15 && (_0xfcf319 = _0x8a28cd, _0x8a28cd = function (_0x41500d) {
        return _0x3e3c34().off(_0x41500d), _0xfcf319.apply(this, arguments);
      }, _0x8a28cd.guid = _0xfcf319.guid || (_0xfcf319.guid = _0x3e3c34.guid++)), _0x2c343f.each(function () {
        _0x3e3c34.event.add(this, _0x2b56f0, _0x8a28cd, _0x45c079, _0x5d0cb3);
      });
    }
    function _0x1bdaf0(_0x58b028, _0x2eccf1) {
      return _0x59415f(_0x58b028, 'table') && _0x59415f(0xb !== _0x2eccf1.nodeType ? _0x2eccf1 : _0x2eccf1.firstChild, 'tr') ? _0x3e3c34('>tbody', _0x58b028)[0x0] || _0x58b028 : _0x58b028;
    }
    function _0x18b29a(_0x968f60) {
      return _0x968f60.type = (null !== _0x968f60.getAttribute('type')) + '/' + _0x968f60.type, _0x968f60;
    }
    function _0x510b9e(_0x28d91a) {
      var _0x45c0a2 = _0xd81c30.exec(_0x28d91a.type);
      return _0x45c0a2 ? _0x28d91a.type = _0x45c0a2[0x1] : _0x28d91a.removeAttribute('type'), _0x28d91a;
    }
    function _0x4a322c(_0x1dd67a, _0x4edb06) {
      var _0x25aa45, _0x1bd466, _0x202038, _0x4c4c50, _0x320c89, _0x5800d6;
      if (0x1 === _0x4edb06.nodeType) {
        if (_0x527207.hasData(_0x1dd67a) && (_0x25aa45 = _0x527207.access(_0x1dd67a), _0x1bd466 = _0x527207.set(_0x4edb06, _0x25aa45), _0x5800d6 = _0x25aa45.events)) for (_0x202038 in delete _0x1bd466.handle, _0x1bd466.events = {}, _0x5800d6) {
          _0x25aa45 = 0x0;
          for (_0x1bd466 = _0x5800d6[_0x202038].length; _0x25aa45 < _0x1bd466; _0x25aa45++) _0x3e3c34.event.add(_0x4edb06, _0x202038, _0x5800d6[_0x202038][_0x25aa45]);
        }
        _0x5060d5.hasData(_0x1dd67a) && (_0x4c4c50 = _0x5060d5.access(_0x1dd67a), _0x320c89 = _0x3e3c34.extend({}, _0x4c4c50), _0x5060d5.set(_0x4edb06, _0x320c89));
      }
    }
    function _0x2638b9(_0x28b540, _0x146254, _0x354d26, _0x551c15) {
      _0x146254 = _0x523fc4.apply([], _0x146254);
      var _0x584e47,
        _0x565fe4,
        _0x28684,
        _0x5ce806,
        _0x3afb06 = 0x0,
        _0x9e1d69 = _0x28b540.length,
        _0x13bb1a = _0x9e1d69 - 0x1,
        _0x48d89d = _0x146254[0x0],
        _0x105f4f = _0x3e3c34.isFunction(_0x48d89d);
      if (_0x105f4f || 0x1 < _0x9e1d69 && 'string' == typeof _0x48d89d && !_0x16b25d.checkClone && _0x43e4f6.test(_0x48d89d)) return _0x28b540.each(function (_0x1fac51) {
        var _0x1524e8 = _0x28b540.eq(_0x1fac51);
        _0x105f4f && (_0x146254[0x0] = _0x48d89d.call(this, _0x1fac51, _0x1524e8.html())), _0x2638b9(_0x1524e8, _0x146254, _0x354d26, _0x551c15);
      });
      if (_0x9e1d69 && (_0x584e47 = _0x231a27(_0x146254, _0x28b540[0x0].ownerDocument, !0x1, _0x28b540, _0x551c15), _0x565fe4 = _0x584e47.firstChild, 0x1 === _0x584e47.childNodes.length && (_0x584e47 = _0x565fe4), _0x565fe4 || _0x551c15)) {
        _0x565fe4 = _0x3e3c34.map(_0x2305fe(_0x584e47, 'script'), _0x18b29a);
        for (_0x28684 = _0x565fe4.length; _0x3afb06 < _0x9e1d69; _0x3afb06++) _0x5ce806 = _0x584e47, _0x3afb06 !== _0x13bb1a && (_0x5ce806 = _0x3e3c34.clone(_0x5ce806, !0x0, !0x0), _0x28684 && _0x3e3c34.merge(_0x565fe4, _0x2305fe(_0x5ce806, 'script'))), _0x354d26.call(_0x28b540[_0x3afb06], _0x5ce806, _0x3afb06);
        if (_0x28684) {
          _0x584e47 = _0x565fe4[_0x565fe4.length - 0x1].ownerDocument, _0x3e3c34.map(_0x565fe4, _0x510b9e);
          for (_0x3afb06 = 0x0; _0x3afb06 < _0x28684; _0x3afb06++) _0x5ce806 = _0x565fe4[_0x3afb06], _0xe1153.test(_0x5ce806.type || '') && !_0x527207.access(_0x5ce806, 'globalEval') && _0x3e3c34.contains(_0x584e47, _0x5ce806) && (_0x5ce806.src ? _0x3e3c34._evalUrl && _0x3e3c34._evalUrl(_0x5ce806.src) : _0xad6a34(_0x5ce806.textContent.replace(_0x2f0186, ''), _0x584e47));
        }
      }
      return _0x28b540;
    }
    function _0x1381eb(_0xdb67c0, _0x5aabd8, _0x4e8f05) {
      for (var _0x353c70 = _0x5aabd8 ? _0x3e3c34.filter(_0x5aabd8, _0xdb67c0) : _0xdb67c0, _0x19b99f = 0x0; null != (_0x5aabd8 = _0x353c70[_0x19b99f]); _0x19b99f++) _0x4e8f05 || 0x1 !== _0x5aabd8.nodeType || _0x3e3c34.cleanData(_0x2305fe(_0x5aabd8)), _0x5aabd8.parentNode && (_0x4e8f05 && _0x3e3c34.contains(_0x5aabd8.ownerDocument, _0x5aabd8) && _0x499d7b(_0x2305fe(_0x5aabd8, 'script')), _0x5aabd8.parentNode.removeChild(_0x5aabd8));
      return _0xdb67c0;
    }
    function _0x435def(_0x181146, _0x59ad38, _0x50a52b) {
      var _0x1a9f81,
        _0x79293a,
        _0x3c1532,
        _0x309bf5,
        _0x48dc32 = _0x181146.style;
      return _0x50a52b = _0x50a52b || _0x20adc6(_0x181146), _0x50a52b && (_0x309bf5 = _0x50a52b.getPropertyValue(_0x59ad38) || _0x50a52b[_0x59ad38], '' !== _0x309bf5 || _0x3e3c34.contains(_0x181146.ownerDocument, _0x181146) || (_0x309bf5 = _0x3e3c34.style(_0x181146, _0x59ad38)), !_0x16b25d.pixelMarginRight() && _0x27199e.test(_0x309bf5) && _0x2b7bba.test(_0x59ad38) && (_0x1a9f81 = _0x48dc32.width, _0x79293a = _0x48dc32.minWidth, _0x3c1532 = _0x48dc32.maxWidth, _0x48dc32.minWidth = _0x48dc32.maxWidth = _0x48dc32.width = _0x309bf5, _0x309bf5 = _0x50a52b.width, _0x48dc32.width = _0x1a9f81, _0x48dc32.minWidth = _0x79293a, _0x48dc32.maxWidth = _0x3c1532)), void 0x0 !== _0x309bf5 ? _0x309bf5 + '' : _0x309bf5;
    }
    function _0x4a329f(_0x2db414, _0x48a577) {
      return {
        'get': function () {
          return _0x2db414() ? void delete this.get : (this.get = _0x48a577).apply(this, arguments);
        }
      };
    }
    function _0x3beb8a(_0x3f2be6) {
      var _0x2e47ea = _0x3e3c34.cssProps[_0x3f2be6];
      if (!_0x2e47ea) {
        var _0x2e47ea = _0x3e3c34.cssProps,
          _0x5a1486;
        _0x15a4ad: if (_0x5a1486 = _0x3f2be6, !(_0x5a1486 in _0x11286c)) {
          for (var _0x25cd2a = _0x5a1486[0x0].toUpperCase() + _0x5a1486.slice(0x1), _0x1379bc = _0x57c4ec.length; _0x1379bc--;) if (_0x5a1486 = _0x57c4ec[_0x1379bc] + _0x25cd2a, _0x5a1486 in _0x11286c) break _0x15a4ad;
          _0x5a1486 = void 0x0;
        }
        _0x2e47ea = _0x2e47ea[_0x3f2be6] = _0x5a1486 || _0x3f2be6;
      }
      return _0x2e47ea;
    }
    function _0xd01171(_0x15efff, _0x11a629, _0x2cbc78) {
      return (_0x15efff = _0x108064.exec(_0x11a629)) ? Math.max(0x0, _0x15efff[0x2] - (_0x2cbc78 || 0x0)) + (_0x15efff[0x3] || 'px') : _0x11a629;
    }
    function _0x4f7783(_0x5bf6cb, _0x2dfbaf, _0x316138, _0x3794ce, _0x3066d6) {
      var _0x2af670 = 0x0;
      for (_0x2dfbaf = _0x316138 === (_0x3794ce ? 'border' : 'content') ? 0x4 : 'width' === _0x2dfbaf ? 0x1 : 0x0; 0x4 > _0x2dfbaf; _0x2dfbaf += 0x2) 'margin' === _0x316138 && (_0x2af670 += _0x3e3c34.css(_0x5bf6cb, _0x316138 + _0x31f91c[_0x2dfbaf], !0x0, _0x3066d6)), _0x3794ce ? ('content' === _0x316138 && (_0x2af670 -= _0x3e3c34.css(_0x5bf6cb, 'padding' + _0x31f91c[_0x2dfbaf], !0x0, _0x3066d6)), 'margin' !== _0x316138 && (_0x2af670 -= _0x3e3c34.css(_0x5bf6cb, 'border' + _0x31f91c[_0x2dfbaf] + 'Width', !0x0, _0x3066d6))) : (_0x2af670 += _0x3e3c34.css(_0x5bf6cb, 'padding' + _0x31f91c[_0x2dfbaf], !0x0, _0x3066d6), 'padding' !== _0x316138 && (_0x2af670 += _0x3e3c34.css(_0x5bf6cb, 'border' + _0x31f91c[_0x2dfbaf] + 'Width', !0x0, _0x3066d6)));
      return _0x2af670;
    }
    function _0x5b1b1b(_0x3d5353, _0xc3ed9b, _0xdb2a50) {
      var _0xd11780,
        _0x278caf = _0x20adc6(_0x3d5353),
        _0x421dee = _0x435def(_0x3d5353, _0xc3ed9b, _0x278caf),
        _0x3aa1af = 'border-box' === _0x3e3c34.css(_0x3d5353, 'boxSizing', !0x1, _0x278caf);
      return _0x27199e.test(_0x421dee) ? _0x421dee : (_0xd11780 = _0x3aa1af && (_0x16b25d.boxSizingReliable() || _0x421dee === _0x3d5353.style[_0xc3ed9b]), 'auto' === _0x421dee && (_0x421dee = _0x3d5353['offset' + _0xc3ed9b[0x0].toUpperCase() + _0xc3ed9b.slice(0x1)]), _0x421dee = parseFloat(_0x421dee) || 0x0, _0x421dee + _0x4f7783(_0x3d5353, _0xc3ed9b, _0xdb2a50 || (_0x3aa1af ? 'border' : 'content'), _0xd11780, _0x278caf) + 'px');
    }
    function _0x54ce7a(_0x19b8e3, _0x479cc9, _0x56d149, _0x43b921, _0x5d5af3) {
      return new _0x54ce7a.prototype.init(_0x19b8e3, _0x479cc9, _0x56d149, _0x43b921, _0x5d5af3);
    }
    function _0x593141() {
      _0x16d9f9 && (!0x1 === _0x4bffa6.hidden && _0x2ec427.requestAnimationFrame ? _0x2ec427.requestAnimationFrame(_0x593141) : _0x2ec427.setTimeout(_0x593141, _0x3e3c34.fx.interval), _0x3e3c34.fx.tick());
    }
    function _0x5184ed() {
      return _0x2ec427.setTimeout(function () {
        _0x282db1 = void 0x0;
      }), _0x282db1 = _0x3e3c34.now();
    }
    function _0x438ec2(_0x39ba8d, _0x25a7cc) {
      var _0x410183,
        _0x7b1e38 = 0x0,
        _0x593a70 = {
          'height': _0x39ba8d
        };
      for (_0x25a7cc = _0x25a7cc ? 0x1 : 0x0; 0x4 > _0x7b1e38; _0x7b1e38 += 0x2 - _0x25a7cc) _0x410183 = _0x31f91c[_0x7b1e38], _0x593a70['margin' + _0x410183] = _0x593a70['padding' + _0x410183] = _0x39ba8d;
      return _0x25a7cc && (_0x593a70.opacity = _0x593a70.width = _0x39ba8d), _0x593a70;
    }
    function _0x1a20f7(_0x543f9e, _0x26d3c2, _0x1344aa) {
      for (var _0x84afd8, _0x1e594c = (_0x544ded.tweeners[_0x26d3c2] || []).concat(_0x544ded.tweeners['*']), _0x481ea6 = 0x0, _0x4ef3ee = _0x1e594c.length; _0x481ea6 < _0x4ef3ee; _0x481ea6++) if (_0x84afd8 = _0x1e594c[_0x481ea6].call(_0x1344aa, _0x26d3c2, _0x543f9e)) return _0x84afd8;
    }
    function _0x544ded(_0x2e1b74, _0x4bee67, _0x2557b4) {
      var _0x31bd62,
        _0x1da6af,
        _0x5dd678 = 0x0,
        _0x278a59 = _0x544ded.prefilters.length,
        _0x43bf0e = _0x3e3c34.Deferred().always(function () {
          delete _0x3c6c90.elem;
        }),
        _0x3c6c90 = function () {
          if (_0x1da6af) return !0x1;
          for (var _0x275c74 = _0x282db1 || _0x5184ed(), _0x275c74 = Math.max(0x0, _0x4e88da.startTime + _0x4e88da.duration - _0x275c74), _0x4d5001 = 0x1 - (_0x275c74 / _0x4e88da.duration || 0x0), _0x19ab28 = 0x0, _0x1de6da = _0x4e88da.tweens.length; _0x19ab28 < _0x1de6da; _0x19ab28++) _0x4e88da.tweens[_0x19ab28].run(_0x4d5001);
          return _0x43bf0e.notifyWith(_0x2e1b74, [_0x4e88da, _0x4d5001, _0x275c74]), 0x1 > _0x4d5001 && _0x1de6da ? _0x275c74 : (_0x1de6da || _0x43bf0e.notifyWith(_0x2e1b74, [_0x4e88da, 0x1, 0x0]), _0x43bf0e.resolveWith(_0x2e1b74, [_0x4e88da]), !0x1);
        },
        _0x4e88da = _0x43bf0e.promise({
          'elem': _0x2e1b74,
          'props': _0x3e3c34.extend({}, _0x4bee67),
          'opts': _0x3e3c34.extend(!0x0, {
            'specialEasing': {},
            'easing': _0x3e3c34.easing._default
          }, _0x2557b4),
          'originalProperties': _0x4bee67,
          'originalOptions': _0x2557b4,
          'startTime': _0x282db1 || _0x5184ed(),
          'duration': _0x2557b4.duration,
          'tweens': [],
          'createTween': function (_0x2a0e30, _0x5624ea) {
            var _0x39dcbd = _0x3e3c34.Tween(_0x2e1b74, _0x4e88da.opts, _0x2a0e30, _0x5624ea, _0x4e88da.opts.specialEasing[_0x2a0e30] || _0x4e88da.opts.easing);
            return _0x4e88da.tweens.push(_0x39dcbd), _0x39dcbd;
          },
          'stop': function (_0x35f4c0) {
            var _0x39b1c6 = 0x0,
              _0x3f72a5 = _0x35f4c0 ? _0x4e88da.tweens.length : 0x0;
            if (_0x1da6af) return this;
            for (_0x1da6af = !0x0; _0x39b1c6 < _0x3f72a5; _0x39b1c6++) _0x4e88da.tweens[_0x39b1c6].run(0x1);
            return _0x35f4c0 ? (_0x43bf0e.notifyWith(_0x2e1b74, [_0x4e88da, 0x1, 0x0]), _0x43bf0e.resolveWith(_0x2e1b74, [_0x4e88da, _0x35f4c0])) : _0x43bf0e.rejectWith(_0x2e1b74, [_0x4e88da, _0x35f4c0]), this;
          }
        });
      _0x4bee67 = _0x4e88da.props, _0x2557b4 = _0x4e88da.opts.specialEasing;
      var _0x7a5b5b, _0x3b9eaf, _0x45313b, _0x30e181;
      for (_0x31bd62 in _0x4bee67) if (_0x7a5b5b = _0x3e3c34.camelCase(_0x31bd62), _0x3b9eaf = _0x2557b4[_0x7a5b5b], _0x45313b = _0x4bee67[_0x31bd62], Array.isArray(_0x45313b) && (_0x3b9eaf = _0x45313b[0x1], _0x45313b = _0x4bee67[_0x31bd62] = _0x45313b[0x0]), _0x31bd62 !== _0x7a5b5b && (_0x4bee67[_0x7a5b5b] = _0x45313b, delete _0x4bee67[_0x31bd62]), _0x30e181 = _0x3e3c34.cssHooks[_0x7a5b5b], _0x30e181 && 'expand' in _0x30e181) {
        for (_0x31bd62 in _0x45313b = _0x30e181.expand(_0x45313b), delete _0x4bee67[_0x7a5b5b], _0x45313b) _0x31bd62 in _0x4bee67 || (_0x4bee67[_0x31bd62] = _0x45313b[_0x31bd62], _0x2557b4[_0x31bd62] = _0x3b9eaf);
      } else _0x2557b4[_0x7a5b5b] = _0x3b9eaf;
      for (; _0x5dd678 < _0x278a59; _0x5dd678++) if (_0x31bd62 = _0x544ded.prefilters[_0x5dd678].call(_0x4e88da, _0x2e1b74, _0x4bee67, _0x4e88da.opts)) return _0x3e3c34.isFunction(_0x31bd62.stop) && (_0x3e3c34._queueHooks(_0x4e88da.elem, _0x4e88da.opts.queue).stop = _0x3e3c34.proxy(_0x31bd62.stop, _0x31bd62)), _0x31bd62;
      return _0x3e3c34.map(_0x4bee67, _0x1a20f7, _0x4e88da), _0x3e3c34.isFunction(_0x4e88da.opts.start) && _0x4e88da.opts.start.call(_0x2e1b74, _0x4e88da), _0x4e88da.progress(_0x4e88da.opts.progress).done(_0x4e88da.opts.done, _0x4e88da.opts.complete).fail(_0x4e88da.opts.fail).always(_0x4e88da.opts.always), _0x3e3c34.fx.timer(_0x3e3c34.extend(_0x3c6c90, {
        'elem': _0x2e1b74,
        'anim': _0x4e88da,
        'queue': _0x4e88da.opts.queue
      })), _0x4e88da;
    }
    function _0x356640(_0x58d9e2) {
      return (_0x58d9e2.match(_0x22da69) || []).join(" ");
    }
    function _0x43ac7e(_0x2abf16) {
      return _0x2abf16.getAttribute && _0x2abf16.getAttribute('class') || '';
    }
    function _0x2c2274(_0x3c89a0, _0x19c5b6, _0xf689fb, _0x5d305c) {
      var _0x554d4d;
      if (Array.isArray(_0x19c5b6)) _0x3e3c34.each(_0x19c5b6, function (_0xcc6bf8, _0x2e51f8) {
        _0xf689fb || _0x243a59.test(_0x3c89a0) ? _0x5d305c(_0x3c89a0, _0x2e51f8) : _0x2c2274(_0x3c89a0 + '[' + ('object' == typeof _0x2e51f8 && null != _0x2e51f8 ? _0xcc6bf8 : '') + ']', _0x2e51f8, _0xf689fb, _0x5d305c);
      });else {
        if (_0xf689fb || 'object' !== _0x3e3c34.type(_0x19c5b6)) _0x5d305c(_0x3c89a0, _0x19c5b6);else {
          for (_0x554d4d in _0x19c5b6) _0x2c2274(_0x3c89a0 + '[' + _0x554d4d + ']', _0x19c5b6[_0x554d4d], _0xf689fb, _0x5d305c);
        }
      }
    }
    function _0x4fd2e4(_0x516d56) {
      return function (_0x220bcf, _0x497fb4) {
        'string' != typeof _0x220bcf && (_0x497fb4 = _0x220bcf, _0x220bcf = '*');
        var _0x54535e,
          _0x4c9225 = 0x0,
          _0x131436 = _0x220bcf.toLowerCase().match(_0x22da69) || [];
        if (_0x3e3c34.isFunction(_0x497fb4)) {
          for (; _0x54535e = _0x131436[_0x4c9225++];) '+' === _0x54535e[0x0] ? (_0x54535e = _0x54535e.slice(0x1) || '*', (_0x516d56[_0x54535e] = _0x516d56[_0x54535e] || []).unshift(_0x497fb4)) : (_0x516d56[_0x54535e] = _0x516d56[_0x54535e] || []).push(_0x497fb4);
        }
      };
    }
    function _0x1bc628(_0x5e8e25, _0x26d4b8, _0x350f88, _0x30f49b) {
      function _0x2b7939(_0x43281c) {
        var _0x400971;
        return _0x179dd7[_0x43281c] = !0x0, _0x3e3c34.each(_0x5e8e25[_0x43281c] || [], function (_0x2164bd, _0x22d60f) {
          var _0x379543 = _0x22d60f(_0x26d4b8, _0x350f88, _0x30f49b);
          return 'string' != typeof _0x379543 || _0x48b0b9 || _0x179dd7[_0x379543] ? _0x48b0b9 ? !(_0x400971 = _0x379543) : void 0x0 : (_0x26d4b8.dataTypes.unshift(_0x379543), _0x2b7939(_0x379543), !0x1);
        }), _0x400971;
      }
      var _0x179dd7 = {},
        _0x48b0b9 = _0x5e8e25 === _0x413e6c;
      return _0x2b7939(_0x26d4b8.dataTypes[0x0]) || !_0x179dd7['*'] && _0x2b7939('*');
    }
    function _0x45402d(_0x1e62c6, _0x5e7a83) {
      var _0x154603,
        _0x53815c,
        _0x583bae = _0x3e3c34.ajaxSettings.flatOptions || {};
      for (_0x154603 in _0x5e7a83) void 0x0 !== _0x5e7a83[_0x154603] && ((_0x583bae[_0x154603] ? _0x1e62c6 : _0x53815c || (_0x53815c = {}))[_0x154603] = _0x5e7a83[_0x154603]);
      return _0x53815c && _0x3e3c34.extend(!0x0, _0x1e62c6, _0x53815c), _0x1e62c6;
    }
    var _0x3bdff6 = [],
      _0x4bffa6 = _0x2ec427.document,
      _0x1e2cbe = Object.getPrototypeOf,
      _0x3940fe = _0x3bdff6.slice,
      _0x523fc4 = _0x3bdff6.concat,
      _0x44d174 = _0x3bdff6.push,
      _0x2309cc = _0x3bdff6.indexOf,
      _0x5cc759 = {},
      _0x4f7173 = _0x5cc759.toString,
      _0x1261e9 = _0x5cc759.hasOwnProperty,
      _0x15ad87 = _0x1261e9.toString,
      _0xb20401 = _0x15ad87.call(Object),
      _0x16b25d = {},
      _0x3e3c34 = function (_0x346f4e, _0x533d15) {
        return new _0x3e3c34.fn.init(_0x346f4e, _0x533d15);
      },
      _0x170d7a = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
      _0x19ea60 = /^-ms-/,
      _0x5a85a1 = /-([a-z])/g,
      _0x464286 = function (_0xd13def, _0x4ddb13) {
        return _0x4ddb13.toUpperCase();
      };
    _0x3e3c34.fn = _0x3e3c34.prototype = {
      'jquery': '3.2.1',
      'constructor': _0x3e3c34,
      'length': 0x0,
      'toArray': function () {
        return _0x3940fe.call(this);
      },
      'get': function (_0x594d4c) {
        return null == _0x594d4c ? _0x3940fe.call(this) : 0x0 > _0x594d4c ? this[_0x594d4c + this.length] : this[_0x594d4c];
      },
      'pushStack': function (_0x429405) {
        return _0x429405 = _0x3e3c34.merge(this.constructor(), _0x429405), _0x429405.prevObject = this, _0x429405;
      },
      'each': function (_0x59de83) {
        return _0x3e3c34.each(this, _0x59de83);
      },
      'map': function (_0xc932f6) {
        return this.pushStack(_0x3e3c34.map(this, function (_0x5037e8, _0x3db4df) {
          return _0xc932f6.call(_0x5037e8, _0x3db4df, _0x5037e8);
        }));
      },
      'slice': function () {
        return this.pushStack(_0x3940fe.apply(this, arguments));
      },
      'first': function () {
        return this.eq(0x0);
      },
      'last': function () {
        return this.eq(-0x1);
      },
      'eq': function (_0x3c3669) {
        var _0x16e561 = this.length;
        return _0x3c3669 = +_0x3c3669 + (0x0 > _0x3c3669 ? _0x16e561 : 0x0), this.pushStack(0x0 <= _0x3c3669 && _0x3c3669 < _0x16e561 ? [this[_0x3c3669]] : []);
      },
      'end': function () {
        return this.prevObject || this.constructor();
      },
      'push': _0x44d174,
      'sort': _0x3bdff6.sort,
      'splice': _0x3bdff6.splice
    }, _0x3e3c34.extend = _0x3e3c34.fn.extend = function () {
      var _0xa39d07,
        _0x1d85ba,
        _0x2e6f78,
        _0x5f41e1,
        _0x1f5567,
        _0x507fbc,
        _0x14cc25 = arguments[0x0] || {},
        _0x5df556 = 0x1,
        _0x503874 = arguments.length,
        _0x2545c3 = !0x1;
      'boolean' == typeof _0x14cc25 && (_0x2545c3 = _0x14cc25, _0x14cc25 = arguments[_0x5df556] || {}, _0x5df556++), 'object' == typeof _0x14cc25 || _0x3e3c34.isFunction(_0x14cc25) || (_0x14cc25 = {});
      for (_0x5df556 === _0x503874 && (_0x14cc25 = this, _0x5df556--); _0x5df556 < _0x503874; _0x5df556++) if (null != (_0xa39d07 = arguments[_0x5df556])) {
        for (_0x1d85ba in _0xa39d07) _0x2e6f78 = _0x14cc25[_0x1d85ba], _0x5f41e1 = _0xa39d07[_0x1d85ba], _0x14cc25 !== _0x5f41e1 && (_0x2545c3 && _0x5f41e1 && (_0x3e3c34.isPlainObject(_0x5f41e1) || (_0x1f5567 = Array.isArray(_0x5f41e1))) ? (_0x1f5567 ? (_0x1f5567 = !0x1, _0x507fbc = _0x2e6f78 && Array.isArray(_0x2e6f78) ? _0x2e6f78 : []) : _0x507fbc = _0x2e6f78 && _0x3e3c34.isPlainObject(_0x2e6f78) ? _0x2e6f78 : {}, _0x14cc25[_0x1d85ba] = _0x3e3c34.extend(_0x2545c3, _0x507fbc, _0x5f41e1)) : void 0x0 !== _0x5f41e1 && (_0x14cc25[_0x1d85ba] = _0x5f41e1));
      }
      return _0x14cc25;
    }, _0x3e3c34.extend({
      'expando': 'jQuery' + ('3.2.1' + Math.random()).replace(/\D/g, ''),
      'isReady': !0x0,
      'error': function (_0x21b55b) {
        throw Error(_0x21b55b);
      },
      'noop': function () {},
      'isFunction': function (_0xee461a) {
        return 'function' === _0x3e3c34.type(_0xee461a);
      },
      'isWindow': function (_0x150eda) {
        return null != _0x150eda && _0x150eda === _0x150eda.window;
      },
      'isNumeric': function (_0x2de578) {
        var _0x4b084d = _0x3e3c34.type(_0x2de578);
        return ('number' === _0x4b084d || 'string' === _0x4b084d) && !isNaN(_0x2de578 - parseFloat(_0x2de578));
      },
      'isPlainObject': function (_0x526e0e) {
        var _0x473ed4, _0x30c4d2;
        return !(!_0x526e0e || "[object Object]" !== _0x4f7173.call(_0x526e0e)) && (!(_0x473ed4 = _0x1e2cbe(_0x526e0e)) || (_0x30c4d2 = _0x1261e9.call(_0x473ed4, 'constructor') && _0x473ed4.constructor, 'function' == typeof _0x30c4d2 && _0x15ad87.call(_0x30c4d2) === _0xb20401));
      },
      'isEmptyObject': function (_0x57e4b1) {
        for (var _0x38ea22 in _0x57e4b1) return !0x1;
        return !0x0;
      },
      'type': function (_0x224a01) {
        return null == _0x224a01 ? _0x224a01 + '' : 'object' == typeof _0x224a01 || 'function' == typeof _0x224a01 ? _0x5cc759[_0x4f7173.call(_0x224a01)] || 'object' : typeof _0x224a01;
      },
      'globalEval': function (_0x5f69ab) {
        _0xad6a34(_0x5f69ab);
      },
      'camelCase': function (_0x11e64a) {
        return _0x11e64a.replace(_0x19ea60, 'ms-').replace(_0x5a85a1, _0x464286);
      },
      'each': function (_0x1df950, _0x5edd29) {
        var _0x2eca66,
          _0x21820a = 0x0;
        if (_0x53a19f(_0x1df950)) {
          for (_0x2eca66 = _0x1df950.length; _0x21820a < _0x2eca66 && !0x1 !== _0x5edd29.call(_0x1df950[_0x21820a], _0x21820a, _0x1df950[_0x21820a]); _0x21820a++);
        } else {
          for (_0x21820a in _0x1df950) if (!0x1 === _0x5edd29.call(_0x1df950[_0x21820a], _0x21820a, _0x1df950[_0x21820a])) break;
        }
        return _0x1df950;
      },
      'trim': function (_0x48f504) {
        return null == _0x48f504 ? '' : (_0x48f504 + '').replace(_0x170d7a, '');
      },
      'makeArray': function (_0x1fe0f0, _0x5472a7) {
        var _0x74ba0b = _0x5472a7 || [];
        return null != _0x1fe0f0 && (_0x53a19f(Object(_0x1fe0f0)) ? _0x3e3c34.merge(_0x74ba0b, 'string' == typeof _0x1fe0f0 ? [_0x1fe0f0] : _0x1fe0f0) : _0x44d174.call(_0x74ba0b, _0x1fe0f0)), _0x74ba0b;
      },
      'inArray': function (_0x23fe1f, _0x2df0c9, _0x8e82a4) {
        return null == _0x2df0c9 ? -0x1 : _0x2309cc.call(_0x2df0c9, _0x23fe1f, _0x8e82a4);
      },
      'merge': function (_0x5406de, _0xee2103) {
        for (var _0x3ec72b = +_0xee2103.length, _0x742d3a = 0x0, _0x1dce36 = _0x5406de.length; _0x742d3a < _0x3ec72b; _0x742d3a++) _0x5406de[_0x1dce36++] = _0xee2103[_0x742d3a];
        return _0x5406de.length = _0x1dce36, _0x5406de;
      },
      'grep': function (_0x4d14c2, _0x3b7056, _0x2745a3) {
        for (var _0x374507 = [], _0x4cb19f = 0x0, _0x1319df = _0x4d14c2.length, _0xe0fd6e = !_0x2745a3; _0x4cb19f < _0x1319df; _0x4cb19f++) _0x2745a3 = !_0x3b7056(_0x4d14c2[_0x4cb19f], _0x4cb19f), _0x2745a3 !== _0xe0fd6e && _0x374507.push(_0x4d14c2[_0x4cb19f]);
        return _0x374507;
      },
      'map': function (_0x1c8b4c, _0x3b942d, _0xc0df7) {
        var _0x12f9ce,
          _0x1d5cc7,
          _0x2fa29b = 0x0,
          _0x40bdf6 = [];
        if (_0x53a19f(_0x1c8b4c)) {
          for (_0x12f9ce = _0x1c8b4c.length; _0x2fa29b < _0x12f9ce; _0x2fa29b++) _0x1d5cc7 = _0x3b942d(_0x1c8b4c[_0x2fa29b], _0x2fa29b, _0xc0df7), null != _0x1d5cc7 && _0x40bdf6.push(_0x1d5cc7);
        } else {
          for (_0x2fa29b in _0x1c8b4c) _0x1d5cc7 = _0x3b942d(_0x1c8b4c[_0x2fa29b], _0x2fa29b, _0xc0df7), null != _0x1d5cc7 && _0x40bdf6.push(_0x1d5cc7);
        }
        return _0x523fc4.apply([], _0x40bdf6);
      },
      'guid': 0x1,
      'proxy': function (_0x2b02ad, _0x3b2822) {
        var _0x384ef2, _0x206219, _0x150269;
        if ('string' == typeof _0x3b2822 && (_0x384ef2 = _0x2b02ad[_0x3b2822], _0x3b2822 = _0x2b02ad, _0x2b02ad = _0x384ef2), _0x3e3c34.isFunction(_0x2b02ad)) return _0x206219 = _0x3940fe.call(arguments, 0x2), _0x150269 = function () {
          return _0x2b02ad.apply(_0x3b2822 || this, _0x206219.concat(_0x3940fe.call(arguments)));
        }, _0x150269.guid = _0x2b02ad.guid = _0x2b02ad.guid || _0x3e3c34.guid++, _0x150269;
      },
      'now': Date.now,
      'support': _0x16b25d
    }), 'function' == typeof Symbol && (_0x3e3c34.fn[Symbol.iterator] = _0x3bdff6[Symbol.iterator]), _0x3e3c34.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (_0x28bdc1, _0x5653a2) {
      _0x5cc759["[object " + _0x5653a2 + ']'] = _0x5653a2.toLowerCase();
    });
    var _0x29e312,
      _0x1fa2eb = _0x2ec427,
      _0x4312ca = function (_0x415e0b, _0x5be1e1, _0x397f18, _0x4ffaa1) {
        var _0x3b1bd0,
          _0x37630c,
          _0x38c03f,
          _0x2b3c68,
          _0x3c9f1f,
          _0x5f27e2 = _0x5be1e1 && _0x5be1e1.ownerDocument,
          _0x120389 = _0x5be1e1 ? _0x5be1e1.nodeType : 0x9;
        if (_0x397f18 = _0x397f18 || [], 'string' != typeof _0x415e0b || !_0x415e0b || 0x1 !== _0x120389 && 0x9 !== _0x120389 && 0xb !== _0x120389) return _0x397f18;
        if (!_0x4ffaa1 && ((_0x5be1e1 ? _0x5be1e1.ownerDocument || _0x5be1e1 : _0x3c3326) !== _0x2b496b && _0x249f82(_0x5be1e1), _0x5be1e1 = _0x5be1e1 || _0x2b496b, _0x911f8c)) {
          if (0xb !== _0x120389 && (_0x2b3c68 = _0x1fd7bc.exec(_0x415e0b))) {
            if (_0x3b1bd0 = _0x2b3c68[0x1]) {
              if (0x9 === _0x120389) {
                if (!(_0x37630c = _0x5be1e1.getElementById(_0x3b1bd0))) return _0x397f18;
                if (_0x37630c.id === _0x3b1bd0) return _0x397f18.push(_0x37630c), _0x397f18;
              } else {
                if (_0x5f27e2 && (_0x37630c = _0x5f27e2.getElementById(_0x3b1bd0)) && _0x5833aa(_0x5be1e1, _0x37630c) && _0x37630c.id === _0x3b1bd0) return _0x397f18.push(_0x37630c), _0x397f18;
              }
            } else {
              if (_0x2b3c68[0x2]) return _0x3d895e.apply(_0x397f18, _0x5be1e1.getElementsByTagName(_0x415e0b)), _0x397f18;
              if ((_0x3b1bd0 = _0x2b3c68[0x3]) && _0x54a057.getElementsByClassName && _0x5be1e1.getElementsByClassName) return _0x3d895e.apply(_0x397f18, _0x5be1e1.getElementsByClassName(_0x3b1bd0)), _0x397f18;
            }
          }
          if (_0x54a057.qsa && !_0x141dd1[_0x415e0b + " "] && (!_0x48873e || !_0x48873e.test(_0x415e0b))) {
            if (0x1 !== _0x120389) _0x5f27e2 = _0x5be1e1, _0x3c9f1f = _0x415e0b;else {
              if ('object' !== _0x5be1e1.nodeName.toLowerCase()) {
                (_0x38c03f = _0x5be1e1.getAttribute('id')) ? _0x38c03f = _0x38c03f.replace(_0x2f5bcb, _0x244772) : _0x5be1e1.setAttribute('id', _0x38c03f = _0x5cac61), _0x37630c = _0x107df6(_0x415e0b);
                for (_0x3b1bd0 = _0x37630c.length; _0x3b1bd0--;) _0x37630c[_0x3b1bd0] = '#' + _0x38c03f + " " + _0x45487d(_0x37630c[_0x3b1bd0]);
                _0x3c9f1f = _0x37630c.join(','), _0x5f27e2 = _0x3ec73e.test(_0x415e0b) && _0x1eb970(_0x5be1e1.parentNode) || _0x5be1e1;
              }
            }
            if (_0x3c9f1f) try {
              return _0x3d895e.apply(_0x397f18, _0x5f27e2.querySelectorAll(_0x3c9f1f)), _0x397f18;
            } catch (_0x31c0e3) {} finally {
              _0x38c03f === _0x5cac61 && _0x5be1e1.removeAttribute('id');
            }
          }
        }
        return _0x214d13(_0x415e0b.replace(_0x4e1bb9, '$1'), _0x5be1e1, _0x397f18, _0x4ffaa1);
      },
      _0x80db8e = function () {
        function _0x122787(_0x39e79c, _0x36ae0c) {
          return _0x2ff378.push(_0x39e79c + " ") > _0x2716a0.cacheLength && delete _0x122787[_0x2ff378.shift()], _0x122787[_0x39e79c + " "] = _0x36ae0c;
        }
        var _0x2ff378 = [];
        return _0x122787;
      },
      _0x7edd0b = function (_0x45a310) {
        return _0x45a310[_0x5cac61] = !0x0, _0x45a310;
      },
      _0x519d3c = function (_0x1d9454) {
        var _0x4d16b3 = _0x2b496b.createElement('fieldset');
        try {
          return !!_0x1d9454(_0x4d16b3);
        } catch (_0x371e21) {
          return !0x1;
        } finally {
          _0x4d16b3.parentNode && _0x4d16b3.parentNode.removeChild(_0x4d16b3);
        }
      },
      _0x125fda = function (_0x41293f, _0x5215df) {
        for (var _0x5cc161 = _0x41293f.split('|'), _0x2cc872 = _0x5cc161.length; _0x2cc872--;) _0x2716a0.attrHandle[_0x5cc161[_0x2cc872]] = _0x5215df;
      },
      _0x396f42 = function (_0x5aabea, _0x71933b) {
        var _0x1a9ac7 = _0x71933b && _0x5aabea,
          _0xfc0f77 = _0x1a9ac7 && 0x1 === _0x5aabea.nodeType && 0x1 === _0x71933b.nodeType && _0x5aabea.sourceIndex - _0x71933b.sourceIndex;
        if (_0xfc0f77) return _0xfc0f77;
        if (_0x1a9ac7) {
          for (; _0x1a9ac7 = _0x1a9ac7.nextSibling;) if (_0x1a9ac7 === _0x71933b) return -0x1;
        }
        return _0x5aabea ? 0x1 : -0x1;
      },
      _0x26fe45 = function (_0x460434) {
        return function (_0x507e35) {
          return 'input' === _0x507e35.nodeName.toLowerCase() && _0x507e35.type === _0x460434;
        };
      },
      _0x43c343 = function (_0x3f552c) {
        return function (_0x4b29b7) {
          var _0x3593eb = _0x4b29b7.nodeName.toLowerCase();
          return ('input' === _0x3593eb || 'button' === _0x3593eb) && _0x4b29b7.type === _0x3f552c;
        };
      },
      _0xfbdbe9 = function (_0x4f6fa5) {
        return function (_0x4dd3da) {
          return 'form' in _0x4dd3da ? _0x4dd3da.parentNode && !0x1 === _0x4dd3da.disabled ? 'label' in _0x4dd3da ? 'label' in _0x4dd3da.parentNode ? _0x4dd3da.parentNode.disabled === _0x4f6fa5 : _0x4dd3da.disabled === _0x4f6fa5 : _0x4dd3da.isDisabled === _0x4f6fa5 || _0x4dd3da.isDisabled !== !_0x4f6fa5 && _0x514ad7(_0x4dd3da) === _0x4f6fa5 : _0x4dd3da.disabled === _0x4f6fa5 : 'label' in _0x4dd3da && _0x4dd3da.disabled === _0x4f6fa5;
        };
      },
      _0x26fa7a = function (_0x5551fb) {
        return _0x7edd0b(function (_0x59c3ba) {
          return _0x59c3ba = +_0x59c3ba, _0x7edd0b(function (_0x4a51a1, _0x2b6e9b) {
            for (var _0x1844a2, _0x530254 = _0x5551fb([], _0x4a51a1.length, _0x59c3ba), _0xb851c4 = _0x530254.length; _0xb851c4--;) _0x4a51a1[_0x1844a2 = _0x530254[_0xb851c4]] && (_0x4a51a1[_0x1844a2] = !(_0x2b6e9b[_0x1844a2] = _0x4a51a1[_0x1844a2]));
          });
        });
      },
      _0x1eb970 = function (_0x2cc8dd) {
        return _0x2cc8dd && 'undefined' != typeof _0x2cc8dd.getElementsByTagName && _0x2cc8dd;
      },
      _0x520813 = function () {},
      _0x45487d = function (_0x2b714b) {
        for (var _0x368000 = 0x0, _0x25ca16 = _0x2b714b.length, _0xe4a0c = ''; _0x368000 < _0x25ca16; _0x368000++) _0xe4a0c += _0x2b714b[_0x368000].value;
        return _0xe4a0c;
      },
      _0x2b4e00 = function (_0x32bd0d, _0x12a0a1, _0x166995) {
        var _0x40c675 = _0x12a0a1.dir,
          _0x4757c1 = _0x12a0a1.next,
          _0x49a769 = _0x4757c1 || _0x40c675,
          _0x1e1a5d = _0x166995 && 'parentNode' === _0x49a769,
          _0x1f271a = _0x4bcbdc++;
        return _0x12a0a1.first ? function (_0x363fb6, _0x99118d, _0x417d12) {
          for (; _0x363fb6 = _0x363fb6[_0x40c675];) if (0x1 === _0x363fb6.nodeType || _0x1e1a5d) return _0x32bd0d(_0x363fb6, _0x99118d, _0x417d12);
          return !0x1;
        } : function (_0x95ef79, _0x5d552a, _0x5386f0) {
          var _0x3c82e2,
            _0x18b5d4,
            _0x3ee550,
            _0x5c7b4d = [_0x155059, _0x1f271a];
          if (_0x5386f0) for (; _0x95ef79 = _0x95ef79[_0x40c675];) {
            if ((0x1 === _0x95ef79.nodeType || _0x1e1a5d) && _0x32bd0d(_0x95ef79, _0x5d552a, _0x5386f0)) return !0x0;
          } else {
            for (; _0x95ef79 = _0x95ef79[_0x40c675];) if (0x1 === _0x95ef79.nodeType || _0x1e1a5d) {
              if (_0x3ee550 = _0x95ef79[_0x5cac61] || (_0x95ef79[_0x5cac61] = {}), _0x18b5d4 = _0x3ee550[_0x95ef79.uniqueID] || (_0x3ee550[_0x95ef79.uniqueID] = {}), _0x4757c1 && _0x4757c1 === _0x95ef79.nodeName.toLowerCase()) _0x95ef79 = _0x95ef79[_0x40c675] || _0x95ef79;else {
                if ((_0x3c82e2 = _0x18b5d4[_0x49a769]) && _0x3c82e2[0x0] === _0x155059 && _0x3c82e2[0x1] === _0x1f271a) return _0x5c7b4d[0x2] = _0x3c82e2[0x2];
                if (_0x18b5d4[_0x49a769] = _0x5c7b4d, _0x5c7b4d[0x2] = _0x32bd0d(_0x95ef79, _0x5d552a, _0x5386f0)) return !0x0;
              }
            }
          }
          return !0x1;
        };
      },
      _0x7912e3 = function (_0x4d38ab) {
        return 0x1 < _0x4d38ab.length ? function (_0x31466d, _0x1f820e, _0x16a1c6) {
          for (var _0x4454fc = _0x4d38ab.length; _0x4454fc--;) if (!_0x4d38ab[_0x4454fc](_0x31466d, _0x1f820e, _0x16a1c6)) return !0x1;
          return !0x0;
        } : _0x4d38ab[0x0];
      },
      _0x553d27 = function (_0x52b79f, _0x17ce69, _0x10605c, _0xe8a6b2, _0x1e1806) {
        for (var _0x3c7298, _0x51c6d5 = [], _0x2e1b88 = 0x0, _0x352973 = _0x52b79f.length, _0x3e719d = null != _0x17ce69; _0x2e1b88 < _0x352973; _0x2e1b88++) (_0x3c7298 = _0x52b79f[_0x2e1b88]) && (_0x10605c && !_0x10605c(_0x3c7298, _0xe8a6b2, _0x1e1806) || (_0x51c6d5.push(_0x3c7298), _0x3e719d && _0x17ce69.push(_0x2e1b88)));
        return _0x51c6d5;
      },
      _0x16901f = function (_0x331398, _0x110708, _0x3a5f5a, _0x54e085, _0x422663, _0x39649f) {
        return _0x54e085 && !_0x54e085[_0x5cac61] && (_0x54e085 = _0x16901f(_0x54e085)), _0x422663 && !_0x422663[_0x5cac61] && (_0x422663 = _0x16901f(_0x422663, _0x39649f)), _0x7edd0b(function (_0x397633, _0x153df9, _0x3b7510, _0x1399b9) {
          var _0x1d1aea,
            _0x5950e6,
            _0x494c0d = [],
            _0x314005 = [],
            _0xdaea2c = _0x153df9.length,
            _0x4bce37;
          if (!(_0x4bce37 = _0x397633)) {
            _0x4bce37 = _0x110708 || '*';
            for (var _0x78e64f = _0x3b7510.nodeType ? [_0x3b7510] : _0x3b7510, _0x26ac79 = [], _0x1f8e7b = 0x0, _0x1304bf = _0x78e64f.length; _0x1f8e7b < _0x1304bf; _0x1f8e7b++) _0x4312ca(_0x4bce37, _0x78e64f[_0x1f8e7b], _0x26ac79);
            _0x4bce37 = _0x26ac79;
          }
          _0x4bce37 = !_0x331398 || !_0x397633 && _0x110708 ? _0x4bce37 : _0x553d27(_0x4bce37, _0x494c0d, _0x331398, _0x3b7510, _0x1399b9), _0x78e64f = _0x3a5f5a ? _0x422663 || (_0x397633 ? _0x331398 : _0xdaea2c || _0x54e085) ? [] : _0x153df9 : _0x4bce37;
          if (_0x3a5f5a && _0x3a5f5a(_0x4bce37, _0x78e64f, _0x3b7510, _0x1399b9), _0x54e085) {
            _0x1d1aea = _0x553d27(_0x78e64f, _0x314005), _0x54e085(_0x1d1aea, [], _0x3b7510, _0x1399b9);
            for (_0x3b7510 = _0x1d1aea.length; _0x3b7510--;) (_0x5950e6 = _0x1d1aea[_0x3b7510]) && (_0x78e64f[_0x314005[_0x3b7510]] = !(_0x4bce37[_0x314005[_0x3b7510]] = _0x5950e6));
          }
          if (_0x397633) {
            if (_0x422663 || _0x331398) {
              if (_0x422663) {
                _0x1d1aea = [];
                for (_0x3b7510 = _0x78e64f.length; _0x3b7510--;) (_0x5950e6 = _0x78e64f[_0x3b7510]) && _0x1d1aea.push(_0x4bce37[_0x3b7510] = _0x5950e6);
                _0x422663(null, _0x78e64f = [], _0x1d1aea, _0x1399b9);
              }
              for (_0x3b7510 = _0x78e64f.length; _0x3b7510--;) (_0x5950e6 = _0x78e64f[_0x3b7510]) && -0x1 < (_0x1d1aea = _0x422663 ? _0x246f0f(_0x397633, _0x5950e6) : _0x494c0d[_0x3b7510]) && (_0x397633[_0x1d1aea] = !(_0x153df9[_0x1d1aea] = _0x5950e6));
            }
          } else _0x78e64f = _0x553d27(_0x78e64f === _0x153df9 ? _0x78e64f.splice(_0xdaea2c, _0x78e64f.length) : _0x78e64f), _0x422663 ? _0x422663(null, _0x153df9, _0x78e64f, _0x1399b9) : _0x3d895e.apply(_0x153df9, _0x78e64f);
        });
      },
      _0x2aa9cb = function (_0x2a510e) {
        var _0x543643,
          _0x54911e,
          _0x307489,
          _0x1794c5 = _0x2a510e.length,
          _0x9eaf6f = _0x2716a0.relative[_0x2a510e[0x0].type];
        _0x54911e = _0x9eaf6f || _0x2716a0.relative[" "];
        for (var _0x284ead = _0x9eaf6f ? 0x1 : 0x0, _0x2600b4 = _0x2b4e00(function (_0x10ac29) {
            return _0x10ac29 === _0x543643;
          }, _0x54911e, !0x0), _0x14a47b = _0x2b4e00(function (_0x12cd3d) {
            return -0x1 < _0x246f0f(_0x543643, _0x12cd3d);
          }, _0x54911e, !0x0), _0x4ec212 = [function (_0x120d69, _0x276cf7, _0x56b302) {
            return _0x120d69 = !_0x9eaf6f && (_0x56b302 || _0x276cf7 !== _0x331624) || ((_0x543643 = _0x276cf7).nodeType ? _0x2600b4(_0x120d69, _0x276cf7, _0x56b302) : _0x14a47b(_0x120d69, _0x276cf7, _0x56b302)), _0x543643 = null, _0x120d69;
          }]; _0x284ead < _0x1794c5; _0x284ead++) if (_0x54911e = _0x2716a0.relative[_0x2a510e[_0x284ead].type]) _0x4ec212 = [_0x2b4e00(_0x7912e3(_0x4ec212), _0x54911e)];else {
          if (_0x54911e = _0x2716a0.filter[_0x2a510e[_0x284ead].type].apply(null, _0x2a510e[_0x284ead].matches), _0x54911e[_0x5cac61]) {
            for (_0x307489 = ++_0x284ead; _0x307489 < _0x1794c5 && !_0x2716a0.relative[_0x2a510e[_0x307489].type]; _0x307489++);
            return _0x16901f(0x1 < _0x284ead && _0x7912e3(_0x4ec212), 0x1 < _0x284ead && _0x45487d(_0x2a510e.slice(0x0, _0x284ead - 0x1).concat({
              'value': " " === _0x2a510e[_0x284ead - 0x2].type ? '*' : ''
            })).replace(_0x4e1bb9, '$1'), _0x54911e, _0x284ead < _0x307489 && _0x2aa9cb(_0x2a510e.slice(_0x284ead, _0x307489)), _0x307489 < _0x1794c5 && _0x2aa9cb(_0x2a510e = _0x2a510e.slice(_0x307489)), _0x307489 < _0x1794c5 && _0x45487d(_0x2a510e));
          }
          _0x4ec212.push(_0x54911e);
        }
        return _0x7912e3(_0x4ec212);
      },
      _0x13a3f4,
      _0x54a057,
      _0x2716a0,
      _0x2afef8,
      _0x61a0f1,
      _0x107df6,
      _0x26f7f2,
      _0x214d13,
      _0x331624,
      _0x474ca8,
      _0x3a77d5,
      _0x249f82,
      _0x2b496b,
      _0x3bea35,
      _0x911f8c,
      _0x48873e,
      _0x427cf4,
      _0x57cb88,
      _0x5833aa,
      _0x5cac61 = 'sizzle' + 0x1 * new Date(),
      _0x3c3326 = _0x1fa2eb.document,
      _0x155059 = 0x0,
      _0x4bcbdc = 0x0,
      _0x438aae = _0x80db8e(),
      _0x126a7f = _0x80db8e(),
      _0x141dd1 = _0x80db8e(),
      _0x55a9bf = function (_0x492656, _0x5ca042) {
        return _0x492656 === _0x5ca042 && (_0x3a77d5 = !0x0), 0x0;
      },
      _0x51be52 = {}.hasOwnProperty,
      _0x5c4b08 = [],
      _0x4f4232 = _0x5c4b08.pop,
      _0x4184c2 = _0x5c4b08.push,
      _0x3d895e = _0x5c4b08.push,
      _0x423336 = _0x5c4b08.slice,
      _0x246f0f = function (_0x543f59, _0x47ad29) {
        for (var _0x1b4d94 = 0x0, _0x9b65ca = _0x543f59.length; _0x1b4d94 < _0x9b65ca; _0x1b4d94++) if (_0x543f59[_0x1b4d94] === _0x47ad29) return _0x1b4d94;
        return -0x1;
      },
      _0x36e64d = /[\x20\t\r\n\f]+/g,
      _0x4e1bb9 = /^[\x20\t\r\n\f]+|((?:^|[^\\])(?:\\.)*)[\x20\t\r\n\f]+$/g,
      _0x1ff6dd = /^[\x20\t\r\n\f]*,[\x20\t\r\n\f]*/,
      _0x2ac96c = /^[\x20\t\r\n\f]*([>+~]|[\x20\t\r\n\f])[\x20\t\r\n\f]*/,
      _0x3e7ffd = /=[\x20\t\r\n\f]*([^\]'"]*?)[\x20\t\r\n\f]*\]/g,
      _0x4bf52d = RegExp(":((?:\\\\.|[\\w-]|[^\0-\\xa0])+)(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|\\[[\\x20\\t\\r\\n\\f]*((?:\\\\.|[\\w-]|[^\0-\\xa0])+)(?:[\\x20\\t\\r\\n\\f]*([*^$|!~]?=)[\\x20\\t\\r\\n\\f]*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|((?:\\\\.|[\\w-]|[^\0-\\xa0])+))|)[\\x20\\t\\r\\n\\f]*\\])*)|.*)\\)|)"),
      _0x37b8c7 = /^(?:\\.|[\w-]|[^\x00-\xa0])+$/,
      _0x5864fa = {
        'ID': /^#((?:\\.|[\w-]|[^\x00-\xa0])+)/,
        'CLASS': /^\.((?:\\.|[\w-]|[^\x00-\xa0])+)/,
        'TAG': /^((?:\\.|[\w-]|[^\x00-\xa0])+|[*])/,
        'ATTR': RegExp("^\\[[\\x20\\t\\r\\n\\f]*((?:\\\\.|[\\w-]|[^\0-\\xa0])+)(?:[\\x20\\t\\r\\n\\f]*([*^$|!~]?=)[\\x20\\t\\r\\n\\f]*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|((?:\\\\.|[\\w-]|[^\0-\\xa0])+))|)[\\x20\\t\\r\\n\\f]*\\]"),
        'PSEUDO': RegExp("^:((?:\\\\.|[\\w-]|[^\0-\\xa0])+)(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|\\[[\\x20\\t\\r\\n\\f]*((?:\\\\.|[\\w-]|[^\0-\\xa0])+)(?:[\\x20\\t\\r\\n\\f]*([*^$|!~]?=)[\\x20\\t\\r\\n\\f]*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|((?:\\\\.|[\\w-]|[^\0-\\xa0])+))|)[\\x20\\t\\r\\n\\f]*\\])*)|.*)\\)|)"),
        'CHILD': RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\([\\x20\\t\\r\\n\\f]*(even|odd|(([+-]|)(\\d*)n|)[\\x20\\t\\r\\n\\f]*(?:([+-]|)[\\x20\\t\\r\\n\\f]*(\\d+)|))[\\x20\\t\\r\\n\\f]*\\)|)", 'i'),
        'bool': RegExp('^(?:checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped)$', 'i'),
        'needsContext': RegExp("^[\\x20\\t\\r\\n\\f]*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\([\\x20\\t\\r\\n\\f]*((?:-\\d)?\\d*)[\\x20\\t\\r\\n\\f]*\\)|)(?=[^-]|$)", 'i')
      },
      _0x1a81af = /^(?:input|select|textarea|button)$/i,
      _0x49a1dc = /^h\d$/i,
      _0x22def6 = /^[^{]+\{\s*\[native \w/,
      _0x1fd7bc = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
      _0x3ec73e = /[+~]/,
      _0x5d07fe = /\\([\da-f]{1,6}[\x20\t\r\n\f]?|([\x20\t\r\n\f])|.)/ig,
      _0x172fb0 = function (_0x53bf24, _0xbac243, _0x191c5b) {
        return _0x53bf24 = '0x' + _0xbac243 - 0x10000, _0x53bf24 !== _0x53bf24 || _0x191c5b ? _0xbac243 : 0x0 > _0x53bf24 ? String.fromCharCode(_0x53bf24 + 0x10000) : String.fromCharCode(_0x53bf24 >> 0xa | 0xd800, 0x3ff & _0x53bf24 | 0xdc00);
      },
      _0x2f5bcb = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
      _0x244772 = function (_0x56cbb7, _0x18bf80) {
        return _0x18bf80 ? "\0" === _0x56cbb7 ? '�' : _0x56cbb7.slice(0x0, -0x1) + "\\" + _0x56cbb7.charCodeAt(_0x56cbb7.length - 0x1).toString(0x10) + " " : "\\" + _0x56cbb7;
      },
      _0x1dcbb6 = function () {
        _0x249f82();
      },
      _0x514ad7 = _0x2b4e00(function (_0x1358bd) {
        return !0x0 === _0x1358bd.disabled && ('form' in _0x1358bd || 'label' in _0x1358bd);
      }, {
        'dir': 'parentNode',
        'next': 'legend'
      });
    try {
      _0x3d895e.apply(_0x5c4b08 = _0x423336.call(_0x3c3326.childNodes), _0x3c3326.childNodes), _0x5c4b08[_0x3c3326.childNodes.length].nodeType;
    } catch (_0x52554b) {
      _0x3d895e = {
        'apply': _0x5c4b08.length ? function (_0x132cd7, _0x37b452) {
          _0x4184c2.apply(_0x132cd7, _0x423336.call(_0x37b452));
        } : function (_0x149d28, _0x13ba6c) {
          for (var _0x47264c = _0x149d28.length, _0xef15ef = 0x0; _0x149d28[_0x47264c++] = _0x13ba6c[_0xef15ef++];);
          _0x149d28.length = _0x47264c - 0x1;
        }
      };
    }
    _0x54a057 = _0x4312ca.support = {}, _0x61a0f1 = _0x4312ca.isXML = function (_0x570d68) {
      return _0x570d68 = _0x570d68 && (_0x570d68.ownerDocument || _0x570d68).documentElement, !!_0x570d68 && 'HTML' !== _0x570d68.nodeName;
    }, _0x249f82 = _0x4312ca.setDocument = function (_0x4d35ad) {
      var _0x1a88e7, _0x30cc0b;
      return _0x4d35ad = _0x4d35ad ? _0x4d35ad.ownerDocument || _0x4d35ad : _0x3c3326, _0x4d35ad !== _0x2b496b && 0x9 === _0x4d35ad.nodeType && _0x4d35ad.documentElement ? (_0x2b496b = _0x4d35ad, _0x3bea35 = _0x2b496b.documentElement, _0x911f8c = !_0x61a0f1(_0x2b496b), _0x3c3326 !== _0x2b496b && (_0x30cc0b = _0x2b496b.defaultView) && _0x30cc0b.top !== _0x30cc0b && (_0x30cc0b.addEventListener ? _0x30cc0b.addEventListener('unload', _0x1dcbb6, !0x1) : _0x30cc0b.attachEvent && _0x30cc0b.attachEvent('onunload', _0x1dcbb6)), _0x54a057.attributes = _0x519d3c(function (_0x546cb5) {
        return _0x546cb5.className = 'i', !_0x546cb5.getAttribute('className');
      }), _0x54a057.getElementsByTagName = _0x519d3c(function (_0x1a1191) {
        return _0x1a1191.appendChild(_0x2b496b.createComment('')), !_0x1a1191.getElementsByTagName('*').length;
      }), _0x54a057.getElementsByClassName = _0x22def6.test(_0x2b496b.getElementsByClassName), _0x54a057.getById = _0x519d3c(function (_0x283b9f) {
        return _0x3bea35.appendChild(_0x283b9f).id = _0x5cac61, !_0x2b496b.getElementsByName || !_0x2b496b.getElementsByName(_0x5cac61).length;
      }), _0x54a057.getById ? (_0x2716a0.filter.ID = function (_0x453a1e) {
        var _0x24eff6 = _0x453a1e.replace(_0x5d07fe, _0x172fb0);
        return function (_0x4296f8) {
          return _0x4296f8.getAttribute('id') === _0x24eff6;
        };
      }, _0x2716a0.find.ID = function (_0x3541c6, _0x5f2966) {
        if ('undefined' != typeof _0x5f2966.getElementById && _0x911f8c) {
          var _0x4dd6f3 = _0x5f2966.getElementById(_0x3541c6);
          return _0x4dd6f3 ? [_0x4dd6f3] : [];
        }
      }) : (_0x2716a0.filter.ID = function (_0x4bc925) {
        var _0x47a641 = _0x4bc925.replace(_0x5d07fe, _0x172fb0);
        return function (_0x3b225f) {
          return (_0x3b225f = 'undefined' != typeof _0x3b225f.getAttributeNode && _0x3b225f.getAttributeNode('id')) && _0x3b225f.value === _0x47a641;
        };
      }, _0x2716a0.find.ID = function (_0x26b92f, _0x342154) {
        if ('undefined' != typeof _0x342154.getElementById && _0x911f8c) {
          var _0x4e7d65,
            _0x1a64c3,
            _0x4880cf,
            _0x377a55 = _0x342154.getElementById(_0x26b92f);
          if (_0x377a55) {
            if (_0x4e7d65 = _0x377a55.getAttributeNode('id'), _0x4e7d65 && _0x4e7d65.value === _0x26b92f) return [_0x377a55];
            _0x4880cf = _0x342154.getElementsByName(_0x26b92f);
            for (_0x1a64c3 = 0x0; _0x377a55 = _0x4880cf[_0x1a64c3++];) if (_0x4e7d65 = _0x377a55.getAttributeNode('id'), _0x4e7d65 && _0x4e7d65.value === _0x26b92f) return [_0x377a55];
          }
          return [];
        }
      }), _0x2716a0.find.TAG = _0x54a057.getElementsByTagName ? function (_0x592593, _0x55a3b8) {
        return 'undefined' != typeof _0x55a3b8.getElementsByTagName ? _0x55a3b8.getElementsByTagName(_0x592593) : _0x54a057.qsa ? _0x55a3b8.querySelectorAll(_0x592593) : void 0x0;
      } : function (_0x104840, _0x4efc04) {
        var _0x133516,
          _0x12e717 = [],
          _0x6ae769 = 0x0,
          _0x589041 = _0x4efc04.getElementsByTagName(_0x104840);
        if ('*' === _0x104840) {
          for (; _0x133516 = _0x589041[_0x6ae769++];) 0x1 === _0x133516.nodeType && _0x12e717.push(_0x133516);
          return _0x12e717;
        }
        return _0x589041;
      }, _0x2716a0.find.CLASS = _0x54a057.getElementsByClassName && function (_0x31f5cb, _0x62f58f) {
        if ('undefined' != typeof _0x62f58f.getElementsByClassName && _0x911f8c) return _0x62f58f.getElementsByClassName(_0x31f5cb);
      }, _0x427cf4 = [], _0x48873e = [], (_0x54a057.qsa = _0x22def6.test(_0x2b496b.querySelectorAll)) && (_0x519d3c(function (_0x1d3f8b) {
        _0x3bea35.appendChild(_0x1d3f8b).innerHTML = "<a id='" + _0x5cac61 + "'></a><select id='" + _0x5cac61 + "-\r\\' msallowcapture=''><option selected=''></option></select>", _0x1d3f8b.querySelectorAll("[msallowcapture^='']").length && _0x48873e.push("[*^$]=[\\x20\\t\\r\\n\\f]*(?:''|\"\")"), _0x1d3f8b.querySelectorAll('[selected]').length || _0x48873e.push("\\[[\\x20\\t\\r\\n\\f]*(?:value|checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped)"), _0x1d3f8b.querySelectorAll('[id~=' + _0x5cac61 + '-]').length || _0x48873e.push('~='), _0x1d3f8b.querySelectorAll(':checked').length || _0x48873e.push(':checked'), _0x1d3f8b.querySelectorAll('a#' + _0x5cac61 + '+*').length || _0x48873e.push('.#.+[+~]');
      }), _0x519d3c(function (_0x4c7db0) {
        _0x4c7db0.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
        var _0x138ca7 = _0x2b496b.createElement('input');
        _0x138ca7.setAttribute('type', 'hidden'), _0x4c7db0.appendChild(_0x138ca7).setAttribute('name', 'D'), _0x4c7db0.querySelectorAll('[name=d]').length && _0x48873e.push("name[\\x20\\t\\r\\n\\f]*[*^$|!~]?="), 0x2 !== _0x4c7db0.querySelectorAll(':enabled').length && _0x48873e.push(':enabled', ':disabled'), _0x3bea35.appendChild(_0x4c7db0).disabled = !0x0, 0x2 !== _0x4c7db0.querySelectorAll(':disabled').length && _0x48873e.push(':enabled', ':disabled'), _0x4c7db0.querySelectorAll('*,:x'), _0x48873e.push(',.*:');
      })), (_0x54a057.matchesSelector = _0x22def6.test(_0x57cb88 = _0x3bea35.matches || _0x3bea35.webkitMatchesSelector || _0x3bea35.mozMatchesSelector || _0x3bea35.oMatchesSelector || _0x3bea35.msMatchesSelector)) && _0x519d3c(function (_0x27ce9b) {
        _0x54a057.disconnectedMatch = _0x57cb88.call(_0x27ce9b, '*'), _0x57cb88.call(_0x27ce9b, "[s!='']:x"), _0x427cf4.push('!=', ":((?:\\\\.|[\\w-]|[^\0-\\xa0])+)(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|\\[[\\x20\\t\\r\\n\\f]*((?:\\\\.|[\\w-]|[^\0-\\xa0])+)(?:[\\x20\\t\\r\\n\\f]*([*^$|!~]?=)[\\x20\\t\\r\\n\\f]*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|((?:\\\\.|[\\w-]|[^\0-\\xa0])+))|)[\\x20\\t\\r\\n\\f]*\\])*)|.*)\\)|)");
      }), _0x48873e = _0x48873e.length && RegExp(_0x48873e.join('|')), _0x427cf4 = _0x427cf4.length && RegExp(_0x427cf4.join('|')), _0x1a88e7 = _0x22def6.test(_0x3bea35.compareDocumentPosition), _0x5833aa = _0x1a88e7 || _0x22def6.test(_0x3bea35.contains) ? function (_0x4f33db, _0x4f6920) {
        var _0x2aeebc = 0x9 === _0x4f33db.nodeType ? _0x4f33db.documentElement : _0x4f33db,
          _0x3e6f96 = _0x4f6920 && _0x4f6920.parentNode;
        return _0x4f33db === _0x3e6f96 || !(!_0x3e6f96 || 0x1 !== _0x3e6f96.nodeType || !(_0x2aeebc.contains ? _0x2aeebc.contains(_0x3e6f96) : _0x4f33db.compareDocumentPosition && 0x10 & _0x4f33db.compareDocumentPosition(_0x3e6f96)));
      } : function (_0x5533fb, _0xc0fc30) {
        if (_0xc0fc30) {
          for (; _0xc0fc30 = _0xc0fc30.parentNode;) if (_0xc0fc30 === _0x5533fb) return !0x0;
        }
        return !0x1;
      }, _0x55a9bf = _0x1a88e7 ? function (_0x4d1ea3, _0x4903d8) {
        if (_0x4d1ea3 === _0x4903d8) return _0x3a77d5 = !0x0, 0x0;
        var _0x52ec39 = !_0x4d1ea3.compareDocumentPosition - !_0x4903d8.compareDocumentPosition;
        return _0x52ec39 ? _0x52ec39 : (_0x52ec39 = (_0x4d1ea3.ownerDocument || _0x4d1ea3) === (_0x4903d8.ownerDocument || _0x4903d8) ? _0x4d1ea3.compareDocumentPosition(_0x4903d8) : 0x1, 0x1 & _0x52ec39 || !_0x54a057.sortDetached && _0x4903d8.compareDocumentPosition(_0x4d1ea3) === _0x52ec39 ? _0x4d1ea3 === _0x2b496b || _0x4d1ea3.ownerDocument === _0x3c3326 && _0x5833aa(_0x3c3326, _0x4d1ea3) ? -0x1 : _0x4903d8 === _0x2b496b || _0x4903d8.ownerDocument === _0x3c3326 && _0x5833aa(_0x3c3326, _0x4903d8) ? 0x1 : _0x474ca8 ? _0x246f0f(_0x474ca8, _0x4d1ea3) - _0x246f0f(_0x474ca8, _0x4903d8) : 0x0 : 0x4 & _0x52ec39 ? -0x1 : 0x1);
      } : function (_0x1a383f, _0x4c2dd7) {
        if (_0x1a383f === _0x4c2dd7) return _0x3a77d5 = !0x0, 0x0;
        var _0x11cc10,
          _0xd03276 = 0x0;
        _0x11cc10 = _0x1a383f.parentNode;
        var _0x3b94f9 = _0x4c2dd7.parentNode,
          _0x3401d8 = [_0x1a383f],
          _0x35ac4e = [_0x4c2dd7];
        if (!_0x11cc10 || !_0x3b94f9) return _0x1a383f === _0x2b496b ? -0x1 : _0x4c2dd7 === _0x2b496b ? 0x1 : _0x11cc10 ? -0x1 : _0x3b94f9 ? 0x1 : _0x474ca8 ? _0x246f0f(_0x474ca8, _0x1a383f) - _0x246f0f(_0x474ca8, _0x4c2dd7) : 0x0;
        if (_0x11cc10 === _0x3b94f9) return _0x396f42(_0x1a383f, _0x4c2dd7);
        for (_0x11cc10 = _0x1a383f; _0x11cc10 = _0x11cc10.parentNode;) _0x3401d8.unshift(_0x11cc10);
        for (_0x11cc10 = _0x4c2dd7; _0x11cc10 = _0x11cc10.parentNode;) _0x35ac4e.unshift(_0x11cc10);
        for (; _0x3401d8[_0xd03276] === _0x35ac4e[_0xd03276];) _0xd03276++;
        return _0xd03276 ? _0x396f42(_0x3401d8[_0xd03276], _0x35ac4e[_0xd03276]) : _0x3401d8[_0xd03276] === _0x3c3326 ? -0x1 : _0x35ac4e[_0xd03276] === _0x3c3326 ? 0x1 : 0x0;
      }, _0x2b496b) : _0x2b496b;
    }, _0x4312ca.matches = function (_0x2a4be8, _0x772aa7) {
      return _0x4312ca(_0x2a4be8, null, null, _0x772aa7);
    }, _0x4312ca.matchesSelector = function (_0x185d1a, _0x3ccdac) {
      if ((_0x185d1a.ownerDocument || _0x185d1a) !== _0x2b496b && _0x249f82(_0x185d1a), _0x3ccdac = _0x3ccdac.replace(_0x3e7ffd, "='$1']"), _0x54a057.matchesSelector && _0x911f8c && !_0x141dd1[_0x3ccdac + " "] && (!_0x427cf4 || !_0x427cf4.test(_0x3ccdac)) && (!_0x48873e || !_0x48873e.test(_0x3ccdac))) try {
        var _0x2e84c3 = _0x57cb88.call(_0x185d1a, _0x3ccdac);
        if (_0x2e84c3 || _0x54a057.disconnectedMatch || _0x185d1a.document && 0xb !== _0x185d1a.document.nodeType) return _0x2e84c3;
      } catch (_0x38c4ec) {}
      return 0x0 < _0x4312ca(_0x3ccdac, _0x2b496b, null, [_0x185d1a]).length;
    }, _0x4312ca.contains = function (_0x373c33, _0x359d6f) {
      return (_0x373c33.ownerDocument || _0x373c33) !== _0x2b496b && _0x249f82(_0x373c33), _0x5833aa(_0x373c33, _0x359d6f);
    }, _0x4312ca.attr = function (_0x4a898b, _0x174746) {
      (_0x4a898b.ownerDocument || _0x4a898b) !== _0x2b496b && _0x249f82(_0x4a898b);
      var _0xabe92f = _0x2716a0.attrHandle[_0x174746.toLowerCase()],
        _0xabe92f = _0xabe92f && _0x51be52.call(_0x2716a0.attrHandle, _0x174746.toLowerCase()) ? _0xabe92f(_0x4a898b, _0x174746, !_0x911f8c) : void 0x0;
      return void 0x0 !== _0xabe92f ? _0xabe92f : _0x54a057.attributes || !_0x911f8c ? _0x4a898b.getAttribute(_0x174746) : (_0xabe92f = _0x4a898b.getAttributeNode(_0x174746)) && _0xabe92f.specified ? _0xabe92f.value : null;
    }, _0x4312ca.escape = function (_0x547575) {
      return (_0x547575 + '').replace(_0x2f5bcb, _0x244772);
    }, _0x4312ca.error = function (_0x295b47) {
      throw Error("Syntax error, unrecognized expression: " + _0x295b47);
    }, _0x4312ca.uniqueSort = function (_0x38bf41) {
      var _0x268d77,
        _0x1d67d8 = [],
        _0x4fda08 = 0x0,
        _0x5409d7 = 0x0;
      if (_0x3a77d5 = !_0x54a057.detectDuplicates, _0x474ca8 = !_0x54a057.sortStable && _0x38bf41.slice(0x0), _0x38bf41.sort(_0x55a9bf), _0x3a77d5) {
        for (; _0x268d77 = _0x38bf41[_0x5409d7++];) _0x268d77 === _0x38bf41[_0x5409d7] && (_0x4fda08 = _0x1d67d8.push(_0x5409d7));
        for (; _0x4fda08--;) _0x38bf41.splice(_0x1d67d8[_0x4fda08], 0x1);
      }
      return _0x474ca8 = null, _0x38bf41;
    }, _0x2afef8 = _0x4312ca.getText = function (_0x2f6120) {
      var _0x356bfd,
        _0x2cdcdb = '',
        _0x2ab60d = 0x0;
      if (_0x356bfd = _0x2f6120.nodeType) {
        if (0x1 === _0x356bfd || 0x9 === _0x356bfd || 0xb === _0x356bfd) {
          if ('string' == typeof _0x2f6120.textContent) return _0x2f6120.textContent;
          for (_0x2f6120 = _0x2f6120.firstChild; _0x2f6120; _0x2f6120 = _0x2f6120.nextSibling) _0x2cdcdb += _0x2afef8(_0x2f6120);
        } else {
          if (0x3 === _0x356bfd || 0x4 === _0x356bfd) return _0x2f6120.nodeValue;
        }
      } else {
        for (; _0x356bfd = _0x2f6120[_0x2ab60d++];) _0x2cdcdb += _0x2afef8(_0x356bfd);
      }
      return _0x2cdcdb;
    }, _0x2716a0 = _0x4312ca.selectors = {
      'cacheLength': 0x32,
      'createPseudo': _0x7edd0b,
      'match': _0x5864fa,
      'attrHandle': {},
      'find': {},
      'relative': {
        '>': {
          'dir': 'parentNode',
          'first': !0x0
        },
        " ": {
          'dir': 'parentNode'
        },
        '+': {
          'dir': 'previousSibling',
          'first': !0x0
        },
        '~': {
          'dir': 'previousSibling'
        }
      },
      'preFilter': {
        'ATTR': function (_0x20fb47) {
          return _0x20fb47[0x1] = _0x20fb47[0x1].replace(_0x5d07fe, _0x172fb0), _0x20fb47[0x3] = (_0x20fb47[0x3] || _0x20fb47[0x4] || _0x20fb47[0x5] || '').replace(_0x5d07fe, _0x172fb0), '~=' === _0x20fb47[0x2] && (_0x20fb47[0x3] = " " + _0x20fb47[0x3] + " "), _0x20fb47.slice(0x0, 0x4);
        },
        'CHILD': function (_0x14cf31) {
          return _0x14cf31[0x1] = _0x14cf31[0x1].toLowerCase(), 'nth' === _0x14cf31[0x1].slice(0x0, 0x3) ? (_0x14cf31[0x3] || _0x4312ca.error(_0x14cf31[0x0]), _0x14cf31[0x4] = +(_0x14cf31[0x4] ? _0x14cf31[0x5] + (_0x14cf31[0x6] || 0x1) : 0x2 * ('even' === _0x14cf31[0x3] || 'odd' === _0x14cf31[0x3])), _0x14cf31[0x5] = +(_0x14cf31[0x7] + _0x14cf31[0x8] || 'odd' === _0x14cf31[0x3])) : _0x14cf31[0x3] && _0x4312ca.error(_0x14cf31[0x0]), _0x14cf31;
        },
        'PSEUDO': function (_0x1f6d9d) {
          var _0x3c8984,
            _0x373d5f = !_0x1f6d9d[0x6] && _0x1f6d9d[0x2];
          return _0x5864fa.CHILD.test(_0x1f6d9d[0x0]) ? null : (_0x1f6d9d[0x3] ? _0x1f6d9d[0x2] = _0x1f6d9d[0x4] || _0x1f6d9d[0x5] || '' : _0x373d5f && _0x4bf52d.test(_0x373d5f) && (_0x3c8984 = _0x107df6(_0x373d5f, !0x0)) && (_0x3c8984 = _0x373d5f.indexOf(')', _0x373d5f.length - _0x3c8984) - _0x373d5f.length) && (_0x1f6d9d[0x0] = _0x1f6d9d[0x0].slice(0x0, _0x3c8984), _0x1f6d9d[0x2] = _0x373d5f.slice(0x0, _0x3c8984)), _0x1f6d9d.slice(0x0, 0x3));
        }
      },
      'filter': {
        'TAG': function (_0x18c008) {
          var _0x836425 = _0x18c008.replace(_0x5d07fe, _0x172fb0).toLowerCase();
          return '*' === _0x18c008 ? function () {
            return !0x0;
          } : function (_0x1870a1) {
            return _0x1870a1.nodeName && _0x1870a1.nodeName.toLowerCase() === _0x836425;
          };
        },
        'CLASS': function (_0x540af3) {
          var _0x5a8aba = _0x438aae[_0x540af3 + " "];
          return _0x5a8aba || (_0x5a8aba = RegExp("(^|[\\x20\\t\\r\\n\\f])" + _0x540af3 + "([\\x20\\t\\r\\n\\f]|$)")) && _0x438aae(_0x540af3, function (_0x282511) {
            return _0x5a8aba.test('string' == typeof _0x282511.className && _0x282511.className || 'undefined' != typeof _0x282511.getAttribute && _0x282511.getAttribute('class') || '');
          });
        },
        'ATTR': function (_0x17b2f6, _0x85a4c3, _0x374630) {
          return function (_0x3e929d) {
            return _0x3e929d = _0x4312ca.attr(_0x3e929d, _0x17b2f6), null == _0x3e929d ? '!=' === _0x85a4c3 : !_0x85a4c3 || (_0x3e929d += '', '=' === _0x85a4c3 ? _0x3e929d === _0x374630 : '!=' === _0x85a4c3 ? _0x3e929d !== _0x374630 : '^=' === _0x85a4c3 ? _0x374630 && 0x0 === _0x3e929d.indexOf(_0x374630) : '*=' === _0x85a4c3 ? _0x374630 && -0x1 < _0x3e929d.indexOf(_0x374630) : '$=' === _0x85a4c3 ? _0x374630 && _0x3e929d.slice(-_0x374630.length) === _0x374630 : '~=' === _0x85a4c3 ? -0x1 < (" " + _0x3e929d.replace(_0x36e64d, " ") + " ").indexOf(_0x374630) : '|=' === _0x85a4c3 && (_0x3e929d === _0x374630 || _0x3e929d.slice(0x0, _0x374630.length + 0x1) === _0x374630 + '-'));
          };
        },
        'CHILD': function (_0x296897, _0x2fa821, _0x543568, _0x404aaa, _0x5a30e4) {
          var _0x177f4f = 'nth' !== _0x296897.slice(0x0, 0x3),
            _0x5cd5e4 = 'last' !== _0x296897.slice(-0x4),
            _0x157132 = 'of-type' === _0x2fa821;
          return 0x1 === _0x404aaa && 0x0 === _0x5a30e4 ? function (_0x287000) {
            return !!_0x287000.parentNode;
          } : function (_0x13a413, _0x5bdd63, _0x538536) {
            var _0x652f5a, _0x37748b, _0x380401, _0x1094a4, _0x23b42a, _0x444fe8;
            _0x5bdd63 = _0x177f4f !== _0x5cd5e4 ? 'nextSibling' : 'previousSibling';
            var _0x521f96 = _0x13a413.parentNode,
              _0x66fd0f = _0x157132 && _0x13a413.nodeName.toLowerCase();
            _0x538536 = !_0x538536 && !_0x157132;
            var _0x100674 = !0x1;
            if (_0x521f96) {
              if (_0x177f4f) {
                for (; _0x5bdd63;) {
                  for (_0x1094a4 = _0x13a413; _0x1094a4 = _0x1094a4[_0x5bdd63];) if (_0x157132 ? _0x1094a4.nodeName.toLowerCase() === _0x66fd0f : 0x1 === _0x1094a4.nodeType) return !0x1;
                  _0x444fe8 = _0x5bdd63 = 'only' === _0x296897 && !_0x444fe8 && 'nextSibling';
                }
                return !0x0;
              }
              if (_0x444fe8 = [_0x5cd5e4 ? _0x521f96.firstChild : _0x521f96.lastChild], _0x5cd5e4 && _0x538536) {
                _0x1094a4 = _0x521f96, _0x380401 = _0x1094a4[_0x5cac61] || (_0x1094a4[_0x5cac61] = {}), _0x37748b = _0x380401[_0x1094a4.uniqueID] || (_0x380401[_0x1094a4.uniqueID] = {}), _0x652f5a = _0x37748b[_0x296897] || [], _0x100674 = (_0x23b42a = _0x652f5a[0x0] === _0x155059 && _0x652f5a[0x1]) && _0x652f5a[0x2];
                for (_0x1094a4 = _0x23b42a && _0x521f96.childNodes[_0x23b42a]; _0x1094a4 = ++_0x23b42a && _0x1094a4 && _0x1094a4[_0x5bdd63] || (_0x100674 = _0x23b42a = 0x0) || _0x444fe8.pop();) if (0x1 === _0x1094a4.nodeType && ++_0x100674 && _0x1094a4 === _0x13a413) {
                  _0x37748b[_0x296897] = [_0x155059, _0x23b42a, _0x100674];
                  break;
                }
              } else {
                if (_0x538536 && (_0x1094a4 = _0x13a413, _0x380401 = _0x1094a4[_0x5cac61] || (_0x1094a4[_0x5cac61] = {}), _0x37748b = _0x380401[_0x1094a4.uniqueID] || (_0x380401[_0x1094a4.uniqueID] = {}), _0x652f5a = _0x37748b[_0x296897] || [], _0x23b42a = _0x652f5a[0x0] === _0x155059 && _0x652f5a[0x1], _0x100674 = _0x23b42a), !0x1 === _0x100674) {
                  for (; (_0x1094a4 = ++_0x23b42a && _0x1094a4 && _0x1094a4[_0x5bdd63] || (_0x100674 = _0x23b42a = 0x0) || _0x444fe8.pop()) && (!(_0x157132 ? _0x1094a4.nodeName.toLowerCase() === _0x66fd0f : 0x1 === _0x1094a4.nodeType) || !++_0x100674 || !(_0x538536 && (_0x380401 = _0x1094a4[_0x5cac61] || (_0x1094a4[_0x5cac61] = {}), _0x37748b = _0x380401[_0x1094a4.uniqueID] || (_0x380401[_0x1094a4.uniqueID] = {}), _0x37748b[_0x296897] = [_0x155059, _0x100674]), _0x1094a4 === _0x13a413)););
                }
              }
              return _0x100674 -= _0x5a30e4, _0x100674 === _0x404aaa || 0x0 === _0x100674 % _0x404aaa && 0x0 <= _0x100674 / _0x404aaa;
            }
          };
        },
        'PSEUDO': function (_0x5790a2, _0xfaabe9) {
          var _0x15dae3,
            _0x58c339 = _0x2716a0.pseudos[_0x5790a2] || _0x2716a0.setFilters[_0x5790a2.toLowerCase()] || _0x4312ca.error("unsupported pseudo: " + _0x5790a2);
          return _0x58c339[_0x5cac61] ? _0x58c339(_0xfaabe9) : 0x1 < _0x58c339.length ? (_0x15dae3 = [_0x5790a2, _0x5790a2, '', _0xfaabe9], _0x2716a0.setFilters.hasOwnProperty(_0x5790a2.toLowerCase()) ? _0x7edd0b(function (_0x3559a8, _0x31c74a) {
            for (var _0x4736bf, _0x301126 = _0x58c339(_0x3559a8, _0xfaabe9), _0x24df50 = _0x301126.length; _0x24df50--;) _0x4736bf = _0x246f0f(_0x3559a8, _0x301126[_0x24df50]), _0x3559a8[_0x4736bf] = !(_0x31c74a[_0x4736bf] = _0x301126[_0x24df50]);
          }) : function (_0x510acd) {
            return _0x58c339(_0x510acd, 0x0, _0x15dae3);
          }) : _0x58c339;
        }
      },
      'pseudos': {
        'not': _0x7edd0b(function (_0x38ecc2) {
          var _0x2f517f = [],
            _0x3796e1 = [],
            _0x16bc9b = _0x26f7f2(_0x38ecc2.replace(_0x4e1bb9, '$1'));
          return _0x16bc9b[_0x5cac61] ? _0x7edd0b(function (_0x3e3a3f, _0x120d39, _0xe6562d, _0x1d3ab0) {
            var _0x4457ff;
            _0xe6562d = _0x16bc9b(_0x3e3a3f, null, _0x1d3ab0, []);
            for (_0x1d3ab0 = _0x3e3a3f.length; _0x1d3ab0--;) (_0x4457ff = _0xe6562d[_0x1d3ab0]) && (_0x3e3a3f[_0x1d3ab0] = !(_0x120d39[_0x1d3ab0] = _0x4457ff));
          }) : function (_0x56ceb7, _0x4b01d4, _0x1077f1) {
            return _0x2f517f[0x0] = _0x56ceb7, _0x16bc9b(_0x2f517f, null, _0x1077f1, _0x3796e1), _0x2f517f[0x0] = null, !_0x3796e1.pop();
          };
        }),
        'has': _0x7edd0b(function (_0xc1e0b8) {
          return function (_0x3d6390) {
            return 0x0 < _0x4312ca(_0xc1e0b8, _0x3d6390).length;
          };
        }),
        'contains': _0x7edd0b(function (_0xe285da) {
          return _0xe285da = _0xe285da.replace(_0x5d07fe, _0x172fb0), function (_0x840292) {
            return -0x1 < (_0x840292.textContent || _0x840292.innerText || _0x2afef8(_0x840292)).indexOf(_0xe285da);
          };
        }),
        'lang': _0x7edd0b(function (_0x5ea8f3) {
          return _0x37b8c7.test(_0x5ea8f3 || '') || _0x4312ca.error("unsupported lang: " + _0x5ea8f3), _0x5ea8f3 = _0x5ea8f3.replace(_0x5d07fe, _0x172fb0).toLowerCase(), function (_0x8f0122) {
            var _0x5c5e6d;
            do if (_0x5c5e6d = _0x911f8c ? _0x8f0122.lang : _0x8f0122.getAttribute('xml:lang') || _0x8f0122.getAttribute('lang')) return _0x5c5e6d = _0x5c5e6d.toLowerCase(), _0x5c5e6d === _0x5ea8f3 || 0x0 === _0x5c5e6d.indexOf(_0x5ea8f3 + '-'); while ((_0x8f0122 = _0x8f0122.parentNode) && 0x1 === _0x8f0122.nodeType);
            return !0x1;
          };
        }),
        'target': function (_0x4d6ad5) {
          var _0x4e9ddf = _0x1fa2eb.location && _0x1fa2eb.location.hash;
          return _0x4e9ddf && _0x4e9ddf.slice(0x1) === _0x4d6ad5.id;
        },
        'root': function (_0x47882d) {
          return _0x47882d === _0x3bea35;
        },
        'focus': function (_0x48fbfc) {
          return _0x48fbfc === _0x2b496b.activeElement && (!_0x2b496b.hasFocus || _0x2b496b.hasFocus()) && !(!_0x48fbfc.type && !_0x48fbfc.href && !~_0x48fbfc.tabIndex);
        },
        'enabled': _0xfbdbe9(!0x1),
        'disabled': _0xfbdbe9(!0x0),
        'checked': function (_0x183aae) {
          var _0x23b5e8 = _0x183aae.nodeName.toLowerCase();
          return 'input' === _0x23b5e8 && !!_0x183aae.checked || 'option' === _0x23b5e8 && !!_0x183aae.selected;
        },
        'selected': function (_0x320ca7) {
          return _0x320ca7.parentNode && _0x320ca7.parentNode.selectedIndex, !0x0 === _0x320ca7.selected;
        },
        'empty': function (_0x3ed88a) {
          for (_0x3ed88a = _0x3ed88a.firstChild; _0x3ed88a; _0x3ed88a = _0x3ed88a.nextSibling) if (0x6 > _0x3ed88a.nodeType) return !0x1;
          return !0x0;
        },
        'parent': function (_0x828e99) {
          return !_0x2716a0.pseudos.empty(_0x828e99);
        },
        'header': function (_0x46e985) {
          return _0x49a1dc.test(_0x46e985.nodeName);
        },
        'input': function (_0x1ad2d1) {
          return _0x1a81af.test(_0x1ad2d1.nodeName);
        },
        'button': function (_0x445e88) {
          var _0x2c7526 = _0x445e88.nodeName.toLowerCase();
          return 'input' === _0x2c7526 && 'button' === _0x445e88.type || 'button' === _0x2c7526;
        },
        'text': function (_0x592293) {
          var _0x2f61c4;
          return 'input' === _0x592293.nodeName.toLowerCase() && 'text' === _0x592293.type && (null == (_0x2f61c4 = _0x592293.getAttribute('type')) || 'text' === _0x2f61c4.toLowerCase());
        },
        'first': _0x26fa7a(function () {
          return [0x0];
        }),
        'last': _0x26fa7a(function (_0x3fa4a6, _0x1a75f8) {
          return [_0x1a75f8 - 0x1];
        }),
        'eq': _0x26fa7a(function (_0xa8932e, _0x3a8ba6, _0x469c5a) {
          return [0x0 > _0x469c5a ? _0x469c5a + _0x3a8ba6 : _0x469c5a];
        }),
        'even': _0x26fa7a(function (_0x2be273, _0x316f35) {
          for (var _0x3987e7 = 0x0; _0x3987e7 < _0x316f35; _0x3987e7 += 0x2) _0x2be273.push(_0x3987e7);
          return _0x2be273;
        }),
        'odd': _0x26fa7a(function (_0x119d54, _0x119578) {
          for (var _0x45a98c = 0x1; _0x45a98c < _0x119578; _0x45a98c += 0x2) _0x119d54.push(_0x45a98c);
          return _0x119d54;
        }),
        'lt': _0x26fa7a(function (_0x4a7579, _0x5bb81d, _0x3a53ef) {
          for (_0x5bb81d = 0x0 > _0x3a53ef ? _0x3a53ef + _0x5bb81d : _0x3a53ef; 0x0 <= --_0x5bb81d;) _0x4a7579.push(_0x5bb81d);
          return _0x4a7579;
        }),
        'gt': _0x26fa7a(function (_0x1d714e, _0x22bd04, _0x2b20aa) {
          for (_0x2b20aa = 0x0 > _0x2b20aa ? _0x2b20aa + _0x22bd04 : _0x2b20aa; ++_0x2b20aa < _0x22bd04;) _0x1d714e.push(_0x2b20aa);
          return _0x1d714e;
        })
      }
    }, _0x2716a0.pseudos.nth = _0x2716a0.pseudos.eq;
    for (_0x13a3f4 in {
      'radio': !0x0,
      'checkbox': !0x0,
      'file': !0x0,
      'password': !0x0,
      'image': !0x0
    }) _0x2716a0.pseudos[_0x13a3f4] = _0x26fe45(_0x13a3f4);
    for (_0x13a3f4 in {
      'submit': !0x0,
      'reset': !0x0
    }) _0x2716a0.pseudos[_0x13a3f4] = _0x43c343(_0x13a3f4);
    _0x520813.prototype = _0x2716a0.filters = _0x2716a0.pseudos, _0x2716a0.setFilters = new _0x520813(), _0x107df6 = _0x4312ca.tokenize = function (_0x53a95d, _0x3dcabb) {
      var _0x3cef9a, _0x3b1a39, _0x54ddcb, _0x34656f, _0x416d71, _0x1fd7a7, _0x1fbea5;
      if (_0x416d71 = _0x126a7f[_0x53a95d + " "]) return _0x3dcabb ? 0x0 : _0x416d71.slice(0x0);
      _0x416d71 = _0x53a95d, _0x1fd7a7 = [];
      for (_0x1fbea5 = _0x2716a0.preFilter; _0x416d71;) {
        _0x3cef9a && !(_0x3b1a39 = _0x1ff6dd.exec(_0x416d71)) || (_0x3b1a39 && (_0x416d71 = _0x416d71.slice(_0x3b1a39[0x0].length) || _0x416d71), _0x1fd7a7.push(_0x54ddcb = [])), _0x3cef9a = !0x1, (_0x3b1a39 = _0x2ac96c.exec(_0x416d71)) && (_0x3cef9a = _0x3b1a39.shift(), _0x54ddcb.push({
          'value': _0x3cef9a,
          'type': _0x3b1a39[0x0].replace(_0x4e1bb9, " ")
        }), _0x416d71 = _0x416d71.slice(_0x3cef9a.length));
        for (_0x34656f in _0x2716a0.filter) !(_0x3b1a39 = _0x5864fa[_0x34656f].exec(_0x416d71)) || _0x1fbea5[_0x34656f] && !(_0x3b1a39 = _0x1fbea5[_0x34656f](_0x3b1a39)) || (_0x3cef9a = _0x3b1a39.shift(), _0x54ddcb.push({
          'value': _0x3cef9a,
          'type': _0x34656f,
          'matches': _0x3b1a39
        }), _0x416d71 = _0x416d71.slice(_0x3cef9a.length));
        if (!_0x3cef9a) break;
      }
      return _0x3dcabb ? _0x416d71.length : _0x416d71 ? _0x4312ca.error(_0x53a95d) : _0x126a7f(_0x53a95d, _0x1fd7a7).slice(0x0);
    }, _0x29e312 = (_0x26f7f2 = _0x4312ca.compile = function (_0x2ea1b2, _0x1d1479) {
      var _0x24d26a,
        _0xec0cd6 = [],
        _0x35a503 = [],
        _0x24c130 = _0x141dd1[_0x2ea1b2 + " "];
      if (!_0x24c130) {
        _0x1d1479 || (_0x1d1479 = _0x107df6(_0x2ea1b2));
        for (_0x24d26a = _0x1d1479.length; _0x24d26a--;) _0x24c130 = _0x2aa9cb(_0x1d1479[_0x24d26a]), _0x24c130[_0x5cac61] ? _0xec0cd6.push(_0x24c130) : _0x35a503.push(_0x24c130);
        _0x24d26a = _0x141dd1;
        var _0x13150f = 0x0 < _0xec0cd6.length,
          _0x41146e = 0x0 < _0x35a503.length,
          _0x24c130 = function (_0x59a118, _0x18adcd, _0x443945, _0xdbe1c6, _0x2168b9) {
            var _0x58d5c0,
              _0x199996,
              _0x266744,
              _0x170cd3 = 0x0,
              _0x256233 = '0',
              _0x22f138 = _0x59a118 && [],
              _0x2625ef = [],
              _0x315c69 = _0x331624,
              _0x22c691 = _0x59a118 || _0x41146e && _0x2716a0.find.TAG('*', _0x2168b9),
              _0x3ebfbb = _0x155059 += null == _0x315c69 ? 0x1 : Math.random() || 0.1,
              _0x18dcd8 = _0x22c691.length;
            for (_0x2168b9 && (_0x331624 = _0x18adcd === _0x2b496b || _0x18adcd || _0x2168b9); _0x256233 !== _0x18dcd8 && null != (_0x58d5c0 = _0x22c691[_0x256233]); _0x256233++) {
              if (_0x41146e && _0x58d5c0) {
                _0x199996 = 0x0;
                for (_0x18adcd || _0x58d5c0.ownerDocument === _0x2b496b || (_0x249f82(_0x58d5c0), _0x443945 = !_0x911f8c); _0x266744 = _0x35a503[_0x199996++];) if (_0x266744(_0x58d5c0, _0x18adcd || _0x2b496b, _0x443945)) {
                  _0xdbe1c6.push(_0x58d5c0);
                  break;
                }
                _0x2168b9 && (_0x155059 = _0x3ebfbb);
              }
              _0x13150f && ((_0x58d5c0 = !_0x266744 && _0x58d5c0) && _0x170cd3--, _0x59a118 && _0x22f138.push(_0x58d5c0));
            }
            if (_0x170cd3 += _0x256233, _0x13150f && _0x256233 !== _0x170cd3) {
              for (_0x199996 = 0x0; _0x266744 = _0xec0cd6[_0x199996++];) _0x266744(_0x22f138, _0x2625ef, _0x18adcd, _0x443945);
              if (_0x59a118) {
                if (0x0 < _0x170cd3) {
                  for (; _0x256233--;) _0x22f138[_0x256233] || _0x2625ef[_0x256233] || (_0x2625ef[_0x256233] = _0x4f4232.call(_0xdbe1c6));
                }
                _0x2625ef = _0x553d27(_0x2625ef);
              }
              _0x3d895e.apply(_0xdbe1c6, _0x2625ef), _0x2168b9 && !_0x59a118 && 0x0 < _0x2625ef.length && 0x1 < _0x170cd3 + _0xec0cd6.length && _0x4312ca.uniqueSort(_0xdbe1c6);
            }
            return _0x2168b9 && (_0x155059 = _0x3ebfbb, _0x331624 = _0x315c69), _0x22f138;
          },
          _0x24c130 = _0x13150f ? _0x7edd0b(_0x24c130) : _0x24c130,
          _0x24c130 = _0x24d26a(_0x2ea1b2, _0x24c130);
        _0x24c130.selector = _0x2ea1b2;
      }
      return _0x24c130;
    }, _0x214d13 = _0x4312ca.select = function (_0xea4d1b, _0x5aef5a, _0x4adc5c, _0xc939c6) {
      var _0x4c5a9e,
        _0x998952,
        _0x3eb1a5,
        _0x211b84,
        _0x36b11d,
        _0x1f6fca = 'function' == typeof _0xea4d1b && _0xea4d1b,
        _0x51f3ac = !_0xc939c6 && _0x107df6(_0xea4d1b = _0x1f6fca.selector || _0xea4d1b);
      if (_0x4adc5c = _0x4adc5c || [], 0x1 === _0x51f3ac.length) {
        if (_0x998952 = _0x51f3ac[0x0] = _0x51f3ac[0x0].slice(0x0), 0x2 < _0x998952.length && 'ID' === (_0x3eb1a5 = _0x998952[0x0]).type && 0x9 === _0x5aef5a.nodeType && _0x911f8c && _0x2716a0.relative[_0x998952[0x1].type]) {
          if (_0x5aef5a = (_0x2716a0.find.ID(_0x3eb1a5.matches[0x0].replace(_0x5d07fe, _0x172fb0), _0x5aef5a) || [])[0x0], !_0x5aef5a) return _0x4adc5c;
          _0x1f6fca && (_0x5aef5a = _0x5aef5a.parentNode), _0xea4d1b = _0xea4d1b.slice(_0x998952.shift().value.length);
        }
        for (_0x4c5a9e = _0x5864fa.needsContext.test(_0xea4d1b) ? 0x0 : _0x998952.length; _0x4c5a9e-- && !(_0x3eb1a5 = _0x998952[_0x4c5a9e], _0x2716a0.relative[_0x211b84 = _0x3eb1a5.type]);) if ((_0x36b11d = _0x2716a0.find[_0x211b84]) && (_0xc939c6 = _0x36b11d(_0x3eb1a5.matches[0x0].replace(_0x5d07fe, _0x172fb0), _0x3ec73e.test(_0x998952[0x0].type) && _0x1eb970(_0x5aef5a.parentNode) || _0x5aef5a))) {
          if (_0x998952.splice(_0x4c5a9e, 0x1), _0xea4d1b = _0xc939c6.length && _0x45487d(_0x998952), !_0xea4d1b) return _0x3d895e.apply(_0x4adc5c, _0xc939c6), _0x4adc5c;
          break;
        }
      }
      return (_0x1f6fca || _0x26f7f2(_0xea4d1b, _0x51f3ac))(_0xc939c6, _0x5aef5a, !_0x911f8c, _0x4adc5c, !_0x5aef5a || _0x3ec73e.test(_0xea4d1b) && _0x1eb970(_0x5aef5a.parentNode) || _0x5aef5a), _0x4adc5c;
    }, _0x54a057.sortStable = _0x5cac61.split('').sort(_0x55a9bf).join('') === _0x5cac61, _0x54a057.detectDuplicates = !!_0x3a77d5, _0x249f82(), _0x54a057.sortDetached = _0x519d3c(function (_0x39a684) {
      return 0x1 & _0x39a684.compareDocumentPosition(_0x2b496b.createElement('fieldset'));
    }), _0x519d3c(function (_0x5de8d4) {
      return _0x5de8d4.innerHTML = "<a href='#'></a>", '#' === _0x5de8d4.firstChild.getAttribute('href');
    }) || _0x125fda('type|href|height|width', function (_0x291114, _0x5b773b, _0x1126ac) {
      if (!_0x1126ac) return _0x291114.getAttribute(_0x5b773b, 'type' === _0x5b773b.toLowerCase() ? 0x1 : 0x2);
    }), _0x54a057.attributes && _0x519d3c(function (_0x5b3d6c) {
      return _0x5b3d6c.innerHTML = '<input/>', _0x5b3d6c.firstChild.setAttribute('value', ''), '' === _0x5b3d6c.firstChild.getAttribute('value');
    }) || _0x125fda('value', function (_0x37f654, _0x58b817, _0x197d3e) {
      if (!_0x197d3e && 'input' === _0x37f654.nodeName.toLowerCase()) return _0x37f654.defaultValue;
    }), _0x519d3c(function (_0x207ea8) {
      return null == _0x207ea8.getAttribute('disabled');
    }) || _0x125fda('checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped', function (_0x200f0a, _0x33e0b3, _0x1aef0f) {
      var _0xf083e9;
      if (!_0x1aef0f) return !0x0 === _0x200f0a[_0x33e0b3] ? _0x33e0b3.toLowerCase() : (_0xf083e9 = _0x200f0a.getAttributeNode(_0x33e0b3)) && _0xf083e9.specified ? _0xf083e9.value : null;
    }), _0x4312ca), _0x3e3c34.find = _0x29e312, _0x3e3c34.expr = _0x29e312.selectors, _0x3e3c34.expr[':'] = _0x3e3c34.expr.pseudos, _0x3e3c34.uniqueSort = _0x3e3c34.unique = _0x29e312.uniqueSort, _0x3e3c34.text = _0x29e312.getText, _0x3e3c34.isXMLDoc = _0x29e312.isXML, _0x3e3c34.contains = _0x29e312.contains, _0x3e3c34.escapeSelector = _0x29e312.escape;
    var _0x57fa10 = function (_0x5d27c7, _0x3a4af4, _0x1ae951) {
        for (var _0x27742b = [], _0x35913b = void 0x0 !== _0x1ae951; (_0x5d27c7 = _0x5d27c7[_0x3a4af4]) && 0x9 !== _0x5d27c7.nodeType;) if (0x1 === _0x5d27c7.nodeType) {
          if (_0x35913b && _0x3e3c34(_0x5d27c7).is(_0x1ae951)) break;
          _0x27742b.push(_0x5d27c7);
        }
        return _0x27742b;
      },
      _0x4dde40 = function (_0x19a127, _0x4f9fbe) {
        for (var _0x29747f = []; _0x19a127; _0x19a127 = _0x19a127.nextSibling) 0x1 === _0x19a127.nodeType && _0x19a127 !== _0x4f9fbe && _0x29747f.push(_0x19a127);
        return _0x29747f;
      },
      _0x3b2940 = _0x3e3c34.expr.match.needsContext,
      _0x157419 = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,
      _0x15193a = /^.[^:#\[\.,]*$/;
    _0x3e3c34.filter = function (_0x19b3df, _0x31a9c8, _0x3ddb6a) {
      var _0x332b66 = _0x31a9c8[0x0];
      return _0x3ddb6a && (_0x19b3df = ':not(' + _0x19b3df + ')'), 0x1 === _0x31a9c8.length && 0x1 === _0x332b66.nodeType ? _0x3e3c34.find.matchesSelector(_0x332b66, _0x19b3df) ? [_0x332b66] : [] : _0x3e3c34.find.matches(_0x19b3df, _0x3e3c34.grep(_0x31a9c8, function (_0x9ad278) {
        return 0x1 === _0x9ad278.nodeType;
      }));
    }, _0x3e3c34.fn.extend({
      'find': function (_0x5e5341) {
        var _0x47098f,
          _0x271823,
          _0x1f14ae = this.length,
          _0x5d12dc = this;
        if ('string' != typeof _0x5e5341) return this.pushStack(_0x3e3c34(_0x5e5341).filter(function () {
          for (_0x47098f = 0x0; _0x47098f < _0x1f14ae; _0x47098f++) if (_0x3e3c34.contains(_0x5d12dc[_0x47098f], this)) return !0x0;
        }));
        _0x271823 = this.pushStack([]);
        for (_0x47098f = 0x0; _0x47098f < _0x1f14ae; _0x47098f++) _0x3e3c34.find(_0x5e5341, _0x5d12dc[_0x47098f], _0x271823);
        return 0x1 < _0x1f14ae ? _0x3e3c34.uniqueSort(_0x271823) : _0x271823;
      },
      'filter': function (_0x1ae367) {
        return this.pushStack(_0x3cd53e(this, _0x1ae367 || [], !0x1));
      },
      'not': function (_0xb53ab4) {
        return this.pushStack(_0x3cd53e(this, _0xb53ab4 || [], !0x0));
      },
      'is': function (_0x5213fd) {
        return !!_0x3cd53e(this, 'string' == typeof _0x5213fd && _0x3b2940.test(_0x5213fd) ? _0x3e3c34(_0x5213fd) : _0x5213fd || [], !0x1).length;
      }
    });
    var _0x140d70,
      _0xa75672 = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
    (_0x3e3c34.fn.init = function (_0x1885ac, _0x4bc1f8, _0x1075f7) {
      var _0x185faf, _0x1f7708;
      if (!_0x1885ac) return this;
      if (_0x1075f7 = _0x1075f7 || _0x140d70, 'string' == typeof _0x1885ac) {
        if (_0x185faf = '<' === _0x1885ac[0x0] && '>' === _0x1885ac[_0x1885ac.length - 0x1] && 0x3 <= _0x1885ac.length ? [null, _0x1885ac, null] : _0xa75672.exec(_0x1885ac), !_0x185faf || !_0x185faf[0x1] && _0x4bc1f8) return !_0x4bc1f8 || _0x4bc1f8.jquery ? (_0x4bc1f8 || _0x1075f7).find(_0x1885ac) : this.constructor(_0x4bc1f8).find(_0x1885ac);
        if (_0x185faf[0x1]) {
          if (_0x4bc1f8 = _0x4bc1f8 instanceof _0x3e3c34 ? _0x4bc1f8[0x0] : _0x4bc1f8, _0x3e3c34.merge(this, _0x3e3c34.parseHTML(_0x185faf[0x1], _0x4bc1f8 && _0x4bc1f8.nodeType ? _0x4bc1f8.ownerDocument || _0x4bc1f8 : _0x4bffa6, !0x0)), _0x157419.test(_0x185faf[0x1]) && _0x3e3c34.isPlainObject(_0x4bc1f8)) {
            for (_0x185faf in _0x4bc1f8) _0x3e3c34.isFunction(this[_0x185faf]) ? this[_0x185faf](_0x4bc1f8[_0x185faf]) : this.attr(_0x185faf, _0x4bc1f8[_0x185faf]);
          }
          return this;
        }
        return _0x1f7708 = _0x4bffa6.getElementById(_0x185faf[0x2]), _0x1f7708 && (this[0x0] = _0x1f7708, this.length = 0x1), this;
      }
      return _0x1885ac.nodeType ? (this[0x0] = _0x1885ac, this.length = 0x1, this) : _0x3e3c34.isFunction(_0x1885ac) ? void 0x0 !== _0x1075f7.ready ? _0x1075f7.ready(_0x1885ac) : _0x1885ac(_0x3e3c34) : _0x3e3c34.makeArray(_0x1885ac, this);
    }).prototype = _0x3e3c34.fn, _0x140d70 = _0x3e3c34(_0x4bffa6);
    var _0x293fcb = /^(?:parents|prev(?:Until|All))/,
      _0x5d776b = {
        'children': !0x0,
        'contents': !0x0,
        'next': !0x0,
        'prev': !0x0
      };
    _0x3e3c34.fn.extend({
      'has': function (_0x439826) {
        var _0x1cd965 = _0x3e3c34(_0x439826, this),
          _0x567687 = _0x1cd965.length;
        return this.filter(function () {
          for (var _0x5d2c09 = 0x0; _0x5d2c09 < _0x567687; _0x5d2c09++) if (_0x3e3c34.contains(this, _0x1cd965[_0x5d2c09])) return !0x0;
        });
      },
      'closest': function (_0x5c3478, _0x18bdde) {
        var _0x3b94ad,
          _0x59b485 = 0x0,
          _0x177152 = this.length,
          _0x56df20 = [],
          _0x429eb0 = 'string' != typeof _0x5c3478 && _0x3e3c34(_0x5c3478);
        if (!_0x3b2940.test(_0x5c3478)) {
          for (; _0x59b485 < _0x177152; _0x59b485++) for (_0x3b94ad = this[_0x59b485]; _0x3b94ad && _0x3b94ad !== _0x18bdde; _0x3b94ad = _0x3b94ad.parentNode) if (0xb > _0x3b94ad.nodeType && (_0x429eb0 ? -0x1 < _0x429eb0.index(_0x3b94ad) : 0x1 === _0x3b94ad.nodeType && _0x3e3c34.find.matchesSelector(_0x3b94ad, _0x5c3478))) {
            _0x56df20.push(_0x3b94ad);
            break;
          }
        }
        return this.pushStack(0x1 < _0x56df20.length ? _0x3e3c34.uniqueSort(_0x56df20) : _0x56df20);
      },
      'index': function (_0x56cfa9) {
        return _0x56cfa9 ? 'string' == typeof _0x56cfa9 ? _0x2309cc.call(_0x3e3c34(_0x56cfa9), this[0x0]) : _0x2309cc.call(this, _0x56cfa9.jquery ? _0x56cfa9[0x0] : _0x56cfa9) : this[0x0] && this[0x0].parentNode ? this.first().prevAll().length : -0x1;
      },
      'add': function (_0x261702, _0x5dd1de) {
        return this.pushStack(_0x3e3c34.uniqueSort(_0x3e3c34.merge(this.get(), _0x3e3c34(_0x261702, _0x5dd1de))));
      },
      'addBack': function (_0x30bd86) {
        return this.add(null == _0x30bd86 ? this.prevObject : this.prevObject.filter(_0x30bd86));
      }
    }), _0x3e3c34.each({
      'parent': function (_0x1843a2) {
        return (_0x1843a2 = _0x1843a2.parentNode) && 0xb !== _0x1843a2.nodeType ? _0x1843a2 : null;
      },
      'parents': function (_0x5e5427) {
        return _0x57fa10(_0x5e5427, 'parentNode');
      },
      'parentsUntil': function (_0x1af026, _0xfc36bb, _0x2d225f) {
        return _0x57fa10(_0x1af026, 'parentNode', _0x2d225f);
      },
      'next': function (_0x44f804) {
        return _0x14b761(_0x44f804, 'nextSibling');
      },
      'prev': function (_0x42ea95) {
        return _0x14b761(_0x42ea95, 'previousSibling');
      },
      'nextAll': function (_0x197281) {
        return _0x57fa10(_0x197281, 'nextSibling');
      },
      'prevAll': function (_0x1a2b44) {
        return _0x57fa10(_0x1a2b44, 'previousSibling');
      },
      'nextUntil': function (_0x4ea099, _0x23005b, _0x47b6db) {
        return _0x57fa10(_0x4ea099, 'nextSibling', _0x47b6db);
      },
      'prevUntil': function (_0x2fe782, _0x4fbd2c, _0x553fbb) {
        return _0x57fa10(_0x2fe782, 'previousSibling', _0x553fbb);
      },
      'siblings': function (_0x2319b9) {
        return _0x4dde40((_0x2319b9.parentNode || {}).firstChild, _0x2319b9);
      },
      'children': function (_0x365f71) {
        return _0x4dde40(_0x365f71.firstChild);
      },
      'contents': function (_0x59ecc6) {
        return _0x59415f(_0x59ecc6, 'iframe') ? _0x59ecc6.contentDocument : (_0x59415f(_0x59ecc6, 'template') && (_0x59ecc6 = _0x59ecc6.content || _0x59ecc6), _0x3e3c34.merge([], _0x59ecc6.childNodes));
      }
    }, function (_0x71f018, _0x103d0a) {
      _0x3e3c34.fn[_0x71f018] = function (_0xa5c123, _0x29991c) {
        var _0x53f92c = _0x3e3c34.map(this, _0x103d0a, _0xa5c123);
        return 'Until' !== _0x71f018.slice(-0x5) && (_0x29991c = _0xa5c123), _0x29991c && 'string' == typeof _0x29991c && (_0x53f92c = _0x3e3c34.filter(_0x29991c, _0x53f92c)), 0x1 < this.length && (_0x5d776b[_0x71f018] || _0x3e3c34.uniqueSort(_0x53f92c), _0x293fcb.test(_0x71f018) && _0x53f92c.reverse()), this.pushStack(_0x53f92c);
      };
    });
    var _0x22da69 = /[^\x20\t\r\n\f]+/g;
    _0x3e3c34.Callbacks = function (_0x65654e) {
      var _0x3c307d;
      if ('string' == typeof _0x65654e) {
        var _0x491a90 = {};
        _0x3c307d = (_0x3e3c34.each(_0x65654e.match(_0x22da69) || [], function (_0x73c2d6, _0x2fc11e) {
          _0x491a90[_0x2fc11e] = !0x0;
        }), _0x491a90);
      } else _0x3c307d = _0x3e3c34.extend({}, _0x65654e);
      _0x65654e = _0x3c307d;
      var _0x3adb53,
        _0x400529,
        _0x4ef717,
        _0xb7947b,
        _0x9078ed = [],
        _0x3eb968 = [],
        _0x211474 = -0x1,
        _0x4b5605 = function () {
          _0xb7947b = _0xb7947b || _0x65654e.once;
          for (_0x4ef717 = _0x3adb53 = !0x0; _0x3eb968.length; _0x211474 = -0x1) for (_0x400529 = _0x3eb968.shift(); ++_0x211474 < _0x9078ed.length;) !0x1 === _0x9078ed[_0x211474].apply(_0x400529[0x0], _0x400529[0x1]) && _0x65654e.stopOnFalse && (_0x211474 = _0x9078ed.length, _0x400529 = !0x1);
          _0x65654e.memory || (_0x400529 = !0x1), _0x3adb53 = !0x1, _0xb7947b && (_0x9078ed = _0x400529 ? [] : '');
        },
        _0xe50c70 = {
          'add': function () {
            return _0x9078ed && (_0x400529 && !_0x3adb53 && (_0x211474 = _0x9078ed.length - 0x1, _0x3eb968.push(_0x400529)), function _0x19ae50(_0x426153) {
              _0x3e3c34.each(_0x426153, function (_0x459659, _0x427665) {
                _0x3e3c34.isFunction(_0x427665) ? _0x65654e.unique && _0xe50c70.has(_0x427665) || _0x9078ed.push(_0x427665) : _0x427665 && _0x427665.length && 'string' !== _0x3e3c34.type(_0x427665) && _0x19ae50(_0x427665);
              });
            }(arguments), _0x400529 && !_0x3adb53 && _0x4b5605()), this;
          },
          'remove': function () {
            return _0x3e3c34.each(arguments, function (_0x29838e, _0xa84179) {
              for (var _0x407fca; -0x1 < (_0x407fca = _0x3e3c34.inArray(_0xa84179, _0x9078ed, _0x407fca));) _0x9078ed.splice(_0x407fca, 0x1), _0x407fca <= _0x211474 && _0x211474--;
            }), this;
          },
          'has': function (_0x344727) {
            return _0x344727 ? -0x1 < _0x3e3c34.inArray(_0x344727, _0x9078ed) : 0x0 < _0x9078ed.length;
          },
          'empty': function () {
            return _0x9078ed && (_0x9078ed = []), this;
          },
          'disable': function () {
            return _0xb7947b = _0x3eb968 = [], _0x9078ed = _0x400529 = '', this;
          },
          'disabled': function () {
            return !_0x9078ed;
          },
          'lock': function () {
            return _0xb7947b = _0x3eb968 = [], _0x400529 || _0x3adb53 || (_0x9078ed = _0x400529 = ''), this;
          },
          'locked': function () {
            return !!_0xb7947b;
          },
          'fireWith': function (_0x48e112, _0x5a740c) {
            return _0xb7947b || (_0x5a740c = _0x5a740c || [], _0x5a740c = [_0x48e112, _0x5a740c.slice ? _0x5a740c.slice() : _0x5a740c], _0x3eb968.push(_0x5a740c), _0x3adb53 || _0x4b5605()), this;
          },
          'fire': function () {
            return _0xe50c70.fireWith(this, arguments), this;
          },
          'fired': function () {
            return !!_0x4ef717;
          }
        };
      return _0xe50c70;
    }, _0x3e3c34.extend({
      'Deferred': function (_0x3456c3) {
        var _0x204f6a = [['notify', 'progress', _0x3e3c34.Callbacks('memory'), _0x3e3c34.Callbacks('memory'), 0x2], ['resolve', 'done', _0x3e3c34.Callbacks("once memory"), _0x3e3c34.Callbacks("once memory"), 0x0, 'resolved'], ['reject', 'fail', _0x3e3c34.Callbacks("once memory"), _0x3e3c34.Callbacks("once memory"), 0x1, 'rejected']],
          _0x214806 = 'pending',
          _0x1432b5 = {
            'state': function () {
              return _0x214806;
            },
            'always': function () {
              return _0x35eca0.done(arguments).fail(arguments), this;
            },
            'catch': function (_0x2d4374) {
              return _0x1432b5.then(null, _0x2d4374);
            },
            'pipe': function () {
              var _0x56666f = arguments;
              return _0x3e3c34.Deferred(function (_0x2c1368) {
                _0x3e3c34.each(_0x204f6a, function (_0x3c8015, _0x590ee0) {
                  var _0x2776ec = _0x3e3c34.isFunction(_0x56666f[_0x590ee0[0x4]]) && _0x56666f[_0x590ee0[0x4]];
                  _0x35eca0[_0x590ee0[0x1]](function () {
                    var _0x7ac5ec = _0x2776ec && _0x2776ec.apply(this, arguments);
                    _0x7ac5ec && _0x3e3c34.isFunction(_0x7ac5ec.promise) ? _0x7ac5ec.promise().progress(_0x2c1368.notify).done(_0x2c1368.resolve).fail(_0x2c1368.reject) : _0x2c1368[_0x590ee0[0x0] + 'With'](this, _0x2776ec ? [_0x7ac5ec] : arguments);
                  });
                }), _0x56666f = null;
              }).promise();
            },
            'then': function (_0x5f4288, _0x54629c, _0x6e6309) {
              function _0x65b066(_0x13cf54, _0x142c9a, _0x53add2, _0x21a92b) {
                return function () {
                  var _0x13d512 = this,
                    _0x422f5a = arguments,
                    _0x2285a9 = function () {
                      var _0x220563, _0x11fd3e;
                      if (!(_0x13cf54 < _0x513478)) {
                        if (_0x220563 = _0x53add2.apply(_0x13d512, _0x422f5a), _0x220563 === _0x142c9a.promise()) throw new TypeError("Thenable self-resolution");
                        _0x11fd3e = _0x220563 && ('object' == typeof _0x220563 || 'function' == typeof _0x220563) && _0x220563.then, _0x3e3c34.isFunction(_0x11fd3e) ? _0x21a92b ? _0x11fd3e.call(_0x220563, _0x65b066(_0x513478, _0x142c9a, _0x17326b, _0x21a92b), _0x65b066(_0x513478, _0x142c9a, _0x42c439, _0x21a92b)) : (_0x513478++, _0x11fd3e.call(_0x220563, _0x65b066(_0x513478, _0x142c9a, _0x17326b, _0x21a92b), _0x65b066(_0x513478, _0x142c9a, _0x42c439, _0x21a92b), _0x65b066(_0x513478, _0x142c9a, _0x17326b, _0x142c9a.notifyWith))) : (_0x53add2 !== _0x17326b && (_0x13d512 = void 0x0, _0x422f5a = [_0x220563]), (_0x21a92b || _0x142c9a.resolveWith)(_0x13d512, _0x422f5a));
                      }
                    },
                    _0x126e10 = _0x21a92b ? _0x2285a9 : function () {
                      try {
                        _0x2285a9();
                      } catch (_0xa19a88) {
                        _0x3e3c34.Deferred.exceptionHook && _0x3e3c34.Deferred.exceptionHook(_0xa19a88, _0x126e10.stackTrace), _0x13cf54 + 0x1 >= _0x513478 && (_0x53add2 !== _0x42c439 && (_0x13d512 = void 0x0, _0x422f5a = [_0xa19a88]), _0x142c9a.rejectWith(_0x13d512, _0x422f5a));
                      }
                    };
                  _0x13cf54 ? _0x126e10() : (_0x3e3c34.Deferred.getStackHook && (_0x126e10.stackTrace = _0x3e3c34.Deferred.getStackHook()), _0x2ec427.setTimeout(_0x126e10));
                };
              }
              var _0x513478 = 0x0;
              return _0x3e3c34.Deferred(function (_0x250a71) {
                _0x204f6a[0x0][0x3].add(_0x65b066(0x0, _0x250a71, _0x3e3c34.isFunction(_0x6e6309) ? _0x6e6309 : _0x17326b, _0x250a71.notifyWith)), _0x204f6a[0x1][0x3].add(_0x65b066(0x0, _0x250a71, _0x3e3c34.isFunction(_0x5f4288) ? _0x5f4288 : _0x17326b)), _0x204f6a[0x2][0x3].add(_0x65b066(0x0, _0x250a71, _0x3e3c34.isFunction(_0x54629c) ? _0x54629c : _0x42c439));
              }).promise();
            },
            'promise': function (_0x12bf96) {
              return null != _0x12bf96 ? _0x3e3c34.extend(_0x12bf96, _0x1432b5) : _0x1432b5;
            }
          },
          _0x35eca0 = {};
        return _0x3e3c34.each(_0x204f6a, function (_0x22958b, _0x4ead9d) {
          var _0x19a6a0 = _0x4ead9d[0x2],
            _0x577991 = _0x4ead9d[0x5];
          _0x1432b5[_0x4ead9d[0x1]] = _0x19a6a0.add, _0x577991 && _0x19a6a0.add(function () {
            _0x214806 = _0x577991;
          }, _0x204f6a[0x3 - _0x22958b][0x2].disable, _0x204f6a[0x0][0x2].lock), _0x19a6a0.add(_0x4ead9d[0x3].fire), _0x35eca0[_0x4ead9d[0x0]] = function () {
            return _0x35eca0[_0x4ead9d[0x0] + 'With'](this === _0x35eca0 ? void 0x0 : this, arguments), this;
          }, _0x35eca0[_0x4ead9d[0x0] + 'With'] = _0x19a6a0.fireWith;
        }), _0x1432b5.promise(_0x35eca0), _0x3456c3 && _0x3456c3.call(_0x35eca0, _0x35eca0), _0x35eca0;
      },
      'when': function (_0x1c01cf) {
        var _0x554f64 = arguments.length,
          _0x328f10 = _0x554f64,
          _0x239f76 = Array(_0x328f10),
          _0x2a3463 = _0x3940fe.call(arguments),
          _0x119550 = _0x3e3c34.Deferred(),
          _0x220e88 = function (_0x2dc841) {
            return function (_0xf604f4) {
              _0x239f76[_0x2dc841] = this, _0x2a3463[_0x2dc841] = 0x1 < arguments.length ? _0x3940fe.call(arguments) : _0xf604f4, --_0x554f64 || _0x119550.resolveWith(_0x239f76, _0x2a3463);
            };
          };
        if (0x1 >= _0x554f64 && (_0x76c4c5(_0x1c01cf, _0x119550.done(_0x220e88(_0x328f10)).resolve, _0x119550.reject, !_0x554f64), 'pending' === _0x119550.state() || _0x3e3c34.isFunction(_0x2a3463[_0x328f10] && _0x2a3463[_0x328f10].then))) return _0x119550.then();
        for (; _0x328f10--;) _0x76c4c5(_0x2a3463[_0x328f10], _0x220e88(_0x328f10), _0x119550.reject);
        return _0x119550.promise();
      }
    });
    var _0x10e742 = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    _0x3e3c34.Deferred.exceptionHook = function (_0xc992a3, _0x58b60d) {
      _0x2ec427.console && _0x2ec427.console.warn && _0xc992a3 && _0x10e742.test(_0xc992a3.name) && _0x2ec427.console.warn("jQuery.Deferred exception: " + _0xc992a3.message, _0xc992a3.stack, _0x58b60d);
    }, _0x3e3c34.readyException = function (_0x2672e0) {
      _0x2ec427.setTimeout(function () {
        throw _0x2672e0;
      });
    };
    var _0x25bda1 = _0x3e3c34.Deferred();
    _0x3e3c34.fn.ready = function (_0x2f5993) {
      return _0x25bda1.then(_0x2f5993)['catch'](function (_0x3d7059) {
        _0x3e3c34.readyException(_0x3d7059);
      }), this;
    }, _0x3e3c34.extend({
      'isReady': !0x1,
      'readyWait': 0x1,
      'ready': function (_0x33e89c) {
        (!0x0 === _0x33e89c ? --_0x3e3c34.readyWait : _0x3e3c34.isReady) || (_0x3e3c34.isReady = !0x0, !0x0 !== _0x33e89c && 0x0 < --_0x3e3c34.readyWait || _0x25bda1.resolveWith(_0x4bffa6, [_0x3e3c34]));
      }
    }), _0x3e3c34.ready.then = _0x25bda1.then, 'complete' === _0x4bffa6.readyState || 'loading' !== _0x4bffa6.readyState && !_0x4bffa6.documentElement.doScroll ? _0x2ec427.setTimeout(_0x3e3c34.ready) : (_0x4bffa6.addEventListener('DOMContentLoaded', _0x23429e), _0x2ec427.addEventListener('load', _0x23429e));
    var _0x23b480 = function (_0x219945, _0xdc183c, _0x3d7cea, _0x4a7ff9, _0x1c0ea3, _0x58e7c5, _0x1d74f9) {
        var _0x24bfce = 0x0,
          _0x34045a = _0x219945.length,
          _0x460835 = null == _0x3d7cea;
        if ('object' === _0x3e3c34.type(_0x3d7cea)) {
          for (_0x24bfce in _0x1c0ea3 = !0x0, _0x3d7cea) _0x23b480(_0x219945, _0xdc183c, _0x24bfce, _0x3d7cea[_0x24bfce], !0x0, _0x58e7c5, _0x1d74f9);
        } else {
          if (void 0x0 !== _0x4a7ff9 && (_0x1c0ea3 = !0x0, _0x3e3c34.isFunction(_0x4a7ff9) || (_0x1d74f9 = !0x0), _0x460835 && (_0x1d74f9 ? (_0xdc183c.call(_0x219945, _0x4a7ff9), _0xdc183c = null) : (_0x460835 = _0xdc183c, _0xdc183c = function (_0x1c8b52, _0x32c494, _0x248543) {
            return _0x460835.call(_0x3e3c34(_0x1c8b52), _0x248543);
          })), _0xdc183c)) {
            for (; _0x24bfce < _0x34045a; _0x24bfce++) _0xdc183c(_0x219945[_0x24bfce], _0x3d7cea, _0x1d74f9 ? _0x4a7ff9 : _0x4a7ff9.call(_0x219945[_0x24bfce], _0x24bfce, _0xdc183c(_0x219945[_0x24bfce], _0x3d7cea)));
          }
        }
        return _0x1c0ea3 ? _0x219945 : _0x460835 ? _0xdc183c.call(_0x219945) : _0x34045a ? _0xdc183c(_0x219945[0x0], _0x3d7cea) : _0x58e7c5;
      },
      _0x12a9f6 = function (_0x302ab8) {
        return 0x1 === _0x302ab8.nodeType || 0x9 === _0x302ab8.nodeType || !+_0x302ab8.nodeType;
      };
    _0x502f9a.uid = 0x1, _0x502f9a.prototype = {
      'cache': function (_0x38d54d) {
        var _0x3e2f9d = _0x38d54d[this.expando];
        return _0x3e2f9d || (_0x3e2f9d = {}, _0x12a9f6(_0x38d54d) && (_0x38d54d.nodeType ? _0x38d54d[this.expando] = _0x3e2f9d : Object.defineProperty(_0x38d54d, this.expando, {
          'value': _0x3e2f9d,
          'configurable': !0x0
        }))), _0x3e2f9d;
      },
      'set': function (_0x16ab40, _0x422425, _0x54042a) {
        var _0x59a1b8;
        _0x16ab40 = this.cache(_0x16ab40);
        if ('string' == typeof _0x422425) _0x16ab40[_0x3e3c34.camelCase(_0x422425)] = _0x54042a;else {
          for (_0x59a1b8 in _0x422425) _0x16ab40[_0x3e3c34.camelCase(_0x59a1b8)] = _0x422425[_0x59a1b8];
        }
        return _0x16ab40;
      },
      'get': function (_0x47f355, _0xc36a3c) {
        return void 0x0 === _0xc36a3c ? this.cache(_0x47f355) : _0x47f355[this.expando] && _0x47f355[this.expando][_0x3e3c34.camelCase(_0xc36a3c)];
      },
      'access': function (_0x1dd1da, _0x5a552a, _0x47b137) {
        return void 0x0 === _0x5a552a || _0x5a552a && 'string' == typeof _0x5a552a && void 0x0 === _0x47b137 ? this.get(_0x1dd1da, _0x5a552a) : (this.set(_0x1dd1da, _0x5a552a, _0x47b137), void 0x0 !== _0x47b137 ? _0x47b137 : _0x5a552a);
      },
      'remove': function (_0x2c40cc, _0x54daa8) {
        var _0x281721,
          _0x38d461 = _0x2c40cc[this.expando];
        if (void 0x0 !== _0x38d461) {
          if (void 0x0 !== _0x54daa8) {
            Array.isArray(_0x54daa8) ? _0x54daa8 = _0x54daa8.map(_0x3e3c34.camelCase) : (_0x54daa8 = _0x3e3c34.camelCase(_0x54daa8), _0x54daa8 = _0x54daa8 in _0x38d461 ? [_0x54daa8] : _0x54daa8.match(_0x22da69) || []);
            for (_0x281721 = _0x54daa8.length; _0x281721--;) delete _0x38d461[_0x54daa8[_0x281721]];
          }
          (void 0x0 === _0x54daa8 || _0x3e3c34.isEmptyObject(_0x38d461)) && (_0x2c40cc.nodeType ? _0x2c40cc[this.expando] = void 0x0 : delete _0x2c40cc[this.expando]);
        }
      },
      'hasData': function (_0x13bd2f) {
        return _0x13bd2f = _0x13bd2f[this.expando], void 0x0 !== _0x13bd2f && !_0x3e3c34.isEmptyObject(_0x13bd2f);
      }
    };
    var _0x527207 = new _0x502f9a(),
      _0x5060d5 = new _0x502f9a(),
      _0x267f97 = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
      _0x39d760 = /[A-Z]/g;
    _0x3e3c34.extend({
      'hasData': function (_0x43e9bb) {
        return _0x5060d5.hasData(_0x43e9bb) || _0x527207.hasData(_0x43e9bb);
      },
      'data': function (_0x144440, _0x2e3fb5, _0x358a52) {
        return _0x5060d5.access(_0x144440, _0x2e3fb5, _0x358a52);
      },
      'removeData': function (_0x32d32f, _0x544255) {
        _0x5060d5.remove(_0x32d32f, _0x544255);
      },
      '_data': function (_0x5d6440, _0x4f6ce2, _0x1da3a4) {
        return _0x527207.access(_0x5d6440, _0x4f6ce2, _0x1da3a4);
      },
      '_removeData': function (_0x36ca19, _0x1d1a94) {
        _0x527207.remove(_0x36ca19, _0x1d1a94);
      }
    }), _0x3e3c34.fn.extend({
      'data': function (_0x25fdb4, _0xd5f6ac) {
        var _0x80f7b5,
          _0xef97a,
          _0xb05de3,
          _0x58083b = this[0x0],
          _0x3052c3 = _0x58083b && _0x58083b.attributes;
        if (void 0x0 === _0x25fdb4) {
          if (this.length && (_0xb05de3 = _0x5060d5.get(_0x58083b), 0x1 === _0x58083b.nodeType && !_0x527207.get(_0x58083b, 'hasDataAttrs'))) {
            for (_0x80f7b5 = _0x3052c3.length; _0x80f7b5--;) _0x3052c3[_0x80f7b5] && (_0xef97a = _0x3052c3[_0x80f7b5].name, 0x0 === _0xef97a.indexOf('data-') && (_0xef97a = _0x3e3c34.camelCase(_0xef97a.slice(0x5)), _0x12415f(_0x58083b, _0xef97a, _0xb05de3[_0xef97a])));
            _0x527207.set(_0x58083b, 'hasDataAttrs', !0x0);
          }
          return _0xb05de3;
        }
        return 'object' == typeof _0x25fdb4 ? this.each(function () {
          _0x5060d5.set(this, _0x25fdb4);
        }) : _0x23b480(this, function (_0x522c0a) {
          var _0x3e6a01;
          if (_0x58083b && void 0x0 === _0x522c0a) {
            if ((_0x3e6a01 = _0x5060d5.get(_0x58083b, _0x25fdb4), void 0x0 !== _0x3e6a01) || (_0x3e6a01 = _0x12415f(_0x58083b, _0x25fdb4), void 0x0 !== _0x3e6a01)) return _0x3e6a01;
          } else this.each(function () {
            _0x5060d5.set(this, _0x25fdb4, _0x522c0a);
          });
        }, null, _0xd5f6ac, 0x1 < arguments.length, null, !0x0);
      },
      'removeData': function (_0x5e0e81) {
        return this.each(function () {
          _0x5060d5.remove(this, _0x5e0e81);
        });
      }
    }), _0x3e3c34.extend({
      'queue': function (_0x2dfba0, _0x4b7753, _0x36c317) {
        var _0x589f36;
        if (_0x2dfba0) return _0x4b7753 = (_0x4b7753 || 'fx') + 'queue', _0x589f36 = _0x527207.get(_0x2dfba0, _0x4b7753), _0x36c317 && (!_0x589f36 || Array.isArray(_0x36c317) ? _0x589f36 = _0x527207.access(_0x2dfba0, _0x4b7753, _0x3e3c34.makeArray(_0x36c317)) : _0x589f36.push(_0x36c317)), _0x589f36 || [];
      },
      'dequeue': function (_0x5abcbc, _0x9c2f9b) {
        _0x9c2f9b = _0x9c2f9b || 'fx';
        var _0x81fd3d = _0x3e3c34.queue(_0x5abcbc, _0x9c2f9b),
          _0x53ebbe = _0x81fd3d.length,
          _0x1c9054 = _0x81fd3d.shift(),
          _0x3528b0 = _0x3e3c34._queueHooks(_0x5abcbc, _0x9c2f9b),
          _0x5aa7cf = function () {
            _0x3e3c34.dequeue(_0x5abcbc, _0x9c2f9b);
          };
        'inprogress' === _0x1c9054 && (_0x1c9054 = _0x81fd3d.shift(), _0x53ebbe--), _0x1c9054 && ('fx' === _0x9c2f9b && _0x81fd3d.unshift('inprogress'), delete _0x3528b0.stop, _0x1c9054.call(_0x5abcbc, _0x5aa7cf, _0x3528b0)), !_0x53ebbe && _0x3528b0 && _0x3528b0.empty.fire();
      },
      '_queueHooks': function (_0x140228, _0x422ead) {
        var _0x29e954 = _0x422ead + 'queueHooks';
        return _0x527207.get(_0x140228, _0x29e954) || _0x527207.access(_0x140228, _0x29e954, {
          'empty': _0x3e3c34.Callbacks("once memory").add(function () {
            _0x527207.remove(_0x140228, [_0x422ead + 'queue', _0x29e954]);
          })
        });
      }
    }), _0x3e3c34.fn.extend({
      'queue': function (_0x270525, _0x2a41e3) {
        var _0x50b1fd = 0x2;
        return 'string' != typeof _0x270525 && (_0x2a41e3 = _0x270525, _0x270525 = 'fx', _0x50b1fd--), arguments.length < _0x50b1fd ? _0x3e3c34.queue(this[0x0], _0x270525) : void 0x0 === _0x2a41e3 ? this : this.each(function () {
          var _0x45a239 = _0x3e3c34.queue(this, _0x270525, _0x2a41e3);
          _0x3e3c34._queueHooks(this, _0x270525), 'fx' === _0x270525 && 'inprogress' !== _0x45a239[0x0] && _0x3e3c34.dequeue(this, _0x270525);
        });
      },
      'dequeue': function (_0x4c2fc4) {
        return this.each(function () {
          _0x3e3c34.dequeue(this, _0x4c2fc4);
        });
      },
      'clearQueue': function (_0x942e6c) {
        return this.queue(_0x942e6c || 'fx', []);
      },
      'promise': function (_0x1a20e9, _0x14ea6d) {
        var _0x3ef867,
          _0x1006c3 = 0x1,
          _0xbbf68e = _0x3e3c34.Deferred(),
          _0x3accbb = this,
          _0x569d10 = this.length,
          _0x35c300 = function () {
            --_0x1006c3 || _0xbbf68e.resolveWith(_0x3accbb, [_0x3accbb]);
          };
        'string' != typeof _0x1a20e9 && (_0x14ea6d = _0x1a20e9, _0x1a20e9 = void 0x0);
        for (_0x1a20e9 = _0x1a20e9 || 'fx'; _0x569d10--;) (_0x3ef867 = _0x527207.get(_0x3accbb[_0x569d10], _0x1a20e9 + 'queueHooks')) && _0x3ef867.empty && (_0x1006c3++, _0x3ef867.empty.add(_0x35c300));
        return _0x35c300(), _0xbbf68e.promise(_0x14ea6d);
      }
    });
    var _0x1948fc = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
      _0x108064 = RegExp('^(?:([+-])=|)(' + _0x1948fc + ')([a-z%]*)$', 'i'),
      _0x31f91c = ['Top', 'Right', 'Bottom', 'Left'],
      _0xa04c57 = function (_0x440864, _0x51a76d) {
        return _0x440864 = _0x51a76d || _0x440864, 'none' === _0x440864.style.display || '' === _0x440864.style.display && _0x3e3c34.contains(_0x440864.ownerDocument, _0x440864) && 'none' === _0x3e3c34.css(_0x440864, 'display');
      },
      _0x23d024 = function (_0x33ed12, _0x4408a0, _0x5cadb3, _0x4356e7) {
        var _0x4754c6,
          _0x29b04f = {};
        for (_0x4754c6 in _0x4408a0) _0x29b04f[_0x4754c6] = _0x33ed12.style[_0x4754c6], _0x33ed12.style[_0x4754c6] = _0x4408a0[_0x4754c6];
        _0x5cadb3 = _0x5cadb3.apply(_0x33ed12, _0x4356e7 || []);
        for (_0x4754c6 in _0x4408a0) _0x33ed12.style[_0x4754c6] = _0x29b04f[_0x4754c6];
        return _0x5cadb3;
      },
      _0x5a12ad = {};
    _0x3e3c34.fn.extend({
      'show': function () {
        return _0x3caf29(this, !0x0);
      },
      'hide': function () {
        return _0x3caf29(this);
      },
      'toggle': function (_0xd29638) {
        return 'boolean' == typeof _0xd29638 ? _0xd29638 ? this.show() : this.hide() : this.each(function () {
          _0xa04c57(this) ? _0x3e3c34(this).show() : _0x3e3c34(this).hide();
        });
      }
    });
    var _0xfa8f44 = /^(?:checkbox|radio)$/i,
      _0x4f5676 = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i,
      _0xe1153 = /^$|\/(?:java|ecma)script/i,
      _0x477bc2 = {
        'option': [0x1, "<select multiple='multiple'>", '</select>'],
        'thead': [0x1, '<table>', '</table>'],
        'col': [0x2, '<table><colgroup>', '</colgroup></table>'],
        'tr': [0x2, '<table><tbody>', '</tbody></table>'],
        'td': [0x3, '<table><tbody><tr>', '</tr></tbody></table>'],
        '_default': [0x0, '', '']
      };
    _0x477bc2.optgroup = _0x477bc2.option, _0x477bc2.tbody = _0x477bc2.tfoot = _0x477bc2.colgroup = _0x477bc2.caption = _0x477bc2.thead, _0x477bc2.th = _0x477bc2.td;
    var _0x1eb59b = /<|&#?\w+;/,
      _0x168c5a = _0x4bffa6.createDocumentFragment().appendChild(_0x4bffa6.createElement('div')),
      _0x5810d1 = _0x4bffa6.createElement('input');
    _0x5810d1.setAttribute('type', 'radio'), _0x5810d1.setAttribute('checked', 'checked'), _0x5810d1.setAttribute('name', 't'), _0x168c5a.appendChild(_0x5810d1), _0x16b25d.checkClone = _0x168c5a.cloneNode(!0x0).cloneNode(!0x0).lastChild.checked, _0x168c5a.innerHTML = '<textarea>x</textarea>', _0x16b25d.noCloneChecked = !!_0x168c5a.cloneNode(!0x0).lastChild.defaultValue, !0x0;
    var _0x296075 = _0x4bffa6.documentElement,
      _0x4787aa = /^key/,
      _0x13db79 = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
      _0x1ff508 = /^([^.]*)(?:\.(.+)|)/;
    _0x3e3c34.event = {
      'global': {},
      'add': function (_0x38bfcc, _0x31526f, _0x382efc, _0x1093ee, _0x21f556) {
        var _0x5d7f6e, _0x3807eb, _0x24f60a, _0x587ed1, _0xdbd5c7, _0x1b66f3, _0xa57361, _0x4f75b0, _0x4443bb, _0xd4beca;
        if (_0xdbd5c7 = _0x527207.get(_0x38bfcc)) {
          _0x382efc.handler && (_0x5d7f6e = _0x382efc, _0x382efc = _0x5d7f6e.handler, _0x21f556 = _0x5d7f6e.selector), _0x21f556 && _0x3e3c34.find.matchesSelector(_0x296075, _0x21f556), _0x382efc.guid || (_0x382efc.guid = _0x3e3c34.guid++), (_0x587ed1 = _0xdbd5c7.events) || (_0x587ed1 = _0xdbd5c7.events = {}), (_0x3807eb = _0xdbd5c7.handle) || (_0x3807eb = _0xdbd5c7.handle = function (_0x452d85) {
            return 'undefined' != typeof _0x3e3c34 && _0x3e3c34.event.triggered !== _0x452d85.type ? _0x3e3c34.event.dispatch.apply(_0x38bfcc, arguments) : void 0x0;
          }), _0x31526f = (_0x31526f || '').match(_0x22da69) || [''];
          for (_0xdbd5c7 = _0x31526f.length; _0xdbd5c7--;) _0x24f60a = _0x1ff508.exec(_0x31526f[_0xdbd5c7]) || [], _0x4443bb = _0xd4beca = _0x24f60a[0x1], _0x24f60a = (_0x24f60a[0x2] || '').split('.').sort(), _0x4443bb && (_0xa57361 = _0x3e3c34.event.special[_0x4443bb] || {}, _0x4443bb = (_0x21f556 ? _0xa57361.delegateType : _0xa57361.bindType) || _0x4443bb, _0xa57361 = _0x3e3c34.event.special[_0x4443bb] || {}, _0x1b66f3 = _0x3e3c34.extend({
            'type': _0x4443bb,
            'origType': _0xd4beca,
            'data': _0x1093ee,
            'handler': _0x382efc,
            'guid': _0x382efc.guid,
            'selector': _0x21f556,
            'needsContext': _0x21f556 && _0x3e3c34.expr.match.needsContext.test(_0x21f556),
            'namespace': _0x24f60a.join('.')
          }, _0x5d7f6e), (_0x4f75b0 = _0x587ed1[_0x4443bb]) || (_0x4f75b0 = _0x587ed1[_0x4443bb] = [], _0x4f75b0.delegateCount = 0x0, _0xa57361.setup && !0x1 !== _0xa57361.setup.call(_0x38bfcc, _0x1093ee, _0x24f60a, _0x3807eb) || _0x38bfcc.addEventListener && _0x38bfcc.addEventListener(_0x4443bb, _0x3807eb)), _0xa57361.add && (_0xa57361.add.call(_0x38bfcc, _0x1b66f3), _0x1b66f3.handler.guid || (_0x1b66f3.handler.guid = _0x382efc.guid)), _0x21f556 ? _0x4f75b0.splice(_0x4f75b0.delegateCount++, 0x0, _0x1b66f3) : _0x4f75b0.push(_0x1b66f3), _0x3e3c34.event.global[_0x4443bb] = !0x0);
        }
      },
      'remove': function (_0x26aaee, _0x961946, _0x29a6a1, _0xa257b8, _0x4d27ca) {
        var _0x45e9e9,
          _0xe40d26,
          _0x5e0049,
          _0x49840e,
          _0x4bc66f,
          _0x125fb8,
          _0x5c2552,
          _0x1bedbb,
          _0x2441ef,
          _0x47ad03,
          _0xb4c0c7,
          _0x597506 = _0x527207.hasData(_0x26aaee) && _0x527207.get(_0x26aaee);
        if (_0x597506 && (_0x49840e = _0x597506.events)) {
          _0x961946 = (_0x961946 || '').match(_0x22da69) || [''];
          for (_0x4bc66f = _0x961946.length; _0x4bc66f--;) if (_0x5e0049 = _0x1ff508.exec(_0x961946[_0x4bc66f]) || [], _0x2441ef = _0xb4c0c7 = _0x5e0049[0x1], _0x47ad03 = (_0x5e0049[0x2] || '').split('.').sort(), _0x2441ef) {
            _0x5c2552 = _0x3e3c34.event.special[_0x2441ef] || {}, _0x2441ef = (_0xa257b8 ? _0x5c2552.delegateType : _0x5c2552.bindType) || _0x2441ef, _0x1bedbb = _0x49840e[_0x2441ef] || [], _0x5e0049 = _0x5e0049[0x2] && RegExp("(^|\\.)" + _0x47ad03.join("\\.(?:.*\\.|)") + "(\\.|$)");
            for (_0xe40d26 = _0x45e9e9 = _0x1bedbb.length; _0x45e9e9--;) _0x125fb8 = _0x1bedbb[_0x45e9e9], !_0x4d27ca && _0xb4c0c7 !== _0x125fb8.origType || _0x29a6a1 && _0x29a6a1.guid !== _0x125fb8.guid || _0x5e0049 && !_0x5e0049.test(_0x125fb8.namespace) || _0xa257b8 && _0xa257b8 !== _0x125fb8.selector && ('**' !== _0xa257b8 || !_0x125fb8.selector) || (_0x1bedbb.splice(_0x45e9e9, 0x1), _0x125fb8.selector && _0x1bedbb.delegateCount--, _0x5c2552.remove && _0x5c2552.remove.call(_0x26aaee, _0x125fb8));
            _0xe40d26 && !_0x1bedbb.length && (_0x5c2552.teardown && !0x1 !== _0x5c2552.teardown.call(_0x26aaee, _0x47ad03, _0x597506.handle) || _0x3e3c34.removeEvent(_0x26aaee, _0x2441ef, _0x597506.handle), delete _0x49840e[_0x2441ef]);
          } else {
            for (_0x2441ef in _0x49840e) _0x3e3c34.event.remove(_0x26aaee, _0x2441ef + _0x961946[_0x4bc66f], _0x29a6a1, _0xa257b8, !0x0);
          }
          _0x3e3c34.isEmptyObject(_0x49840e) && _0x527207.remove(_0x26aaee, "handle events");
        }
      },
      'dispatch': function (_0x170e45) {
        var _0x2fa71a = _0x3e3c34.event.fix(_0x170e45),
          _0x31d8a7,
          _0x91df82,
          _0x4e1a1b,
          _0x29ff21,
          _0x34516a,
          _0x4dc941,
          _0x24f989 = Array(arguments.length);
        _0x91df82 = (_0x527207.get(this, 'events') || {})[_0x2fa71a.type] || [];
        var _0x22457f = _0x3e3c34.event.special[_0x2fa71a.type] || {};
        _0x24f989[0x0] = _0x2fa71a;
        for (_0x31d8a7 = 0x1; _0x31d8a7 < arguments.length; _0x31d8a7++) _0x24f989[_0x31d8a7] = arguments[_0x31d8a7];
        if (_0x2fa71a.delegateTarget = this, !_0x22457f.preDispatch || !0x1 !== _0x22457f.preDispatch.call(this, _0x2fa71a)) {
          _0x4dc941 = _0x3e3c34.event.handlers.call(this, _0x2fa71a, _0x91df82);
          for (_0x31d8a7 = 0x0; (_0x29ff21 = _0x4dc941[_0x31d8a7++]) && !_0x2fa71a.isPropagationStopped();) {
            _0x2fa71a.currentTarget = _0x29ff21.elem;
            for (_0x91df82 = 0x0; (_0x34516a = _0x29ff21.handlers[_0x91df82++]) && !_0x2fa71a.isImmediatePropagationStopped();) _0x2fa71a.rnamespace && !_0x2fa71a.rnamespace.test(_0x34516a.namespace) || (_0x2fa71a.handleObj = _0x34516a, _0x2fa71a.data = _0x34516a.data, _0x4e1a1b = ((_0x3e3c34.event.special[_0x34516a.origType] || {}).handle || _0x34516a.handler).apply(_0x29ff21.elem, _0x24f989), void 0x0 !== _0x4e1a1b && !0x1 === (_0x2fa71a.result = _0x4e1a1b) && (_0x2fa71a.preventDefault(), _0x2fa71a.stopPropagation()));
          }
          return _0x22457f.postDispatch && _0x22457f.postDispatch.call(this, _0x2fa71a), _0x2fa71a.result;
        }
      },
      'handlers': function (_0xfab3c2, _0x358c9c) {
        var _0x3d7e21,
          _0x1b4cd7,
          _0x1c6a40,
          _0xf17f3,
          _0x4c1112,
          _0x4c210e = [],
          _0x531e9c = _0x358c9c.delegateCount,
          _0x2913bb = _0xfab3c2.target;
        if (_0x531e9c && _0x2913bb.nodeType && !('click' === _0xfab3c2.type && 0x1 <= _0xfab3c2.button)) {
          for (; _0x2913bb !== this; _0x2913bb = _0x2913bb.parentNode || this) if (0x1 === _0x2913bb.nodeType && ('click' !== _0xfab3c2.type || !0x0 !== _0x2913bb.disabled)) {
            _0xf17f3 = [], _0x4c1112 = {};
            for (_0x3d7e21 = 0x0; _0x3d7e21 < _0x531e9c; _0x3d7e21++) _0x1b4cd7 = _0x358c9c[_0x3d7e21], _0x1c6a40 = _0x1b4cd7.selector + " ", void 0x0 === _0x4c1112[_0x1c6a40] && (_0x4c1112[_0x1c6a40] = _0x1b4cd7.needsContext ? -0x1 < _0x3e3c34(_0x1c6a40, this).index(_0x2913bb) : _0x3e3c34.find(_0x1c6a40, this, null, [_0x2913bb]).length), _0x4c1112[_0x1c6a40] && _0xf17f3.push(_0x1b4cd7);
            _0xf17f3.length && _0x4c210e.push({
              'elem': _0x2913bb,
              'handlers': _0xf17f3
            });
          }
        }
        return _0x2913bb = this, _0x531e9c < _0x358c9c.length && _0x4c210e.push({
          'elem': _0x2913bb,
          'handlers': _0x358c9c.slice(_0x531e9c)
        }), _0x4c210e;
      },
      'addProp': function (_0x4b3542, _0x5eb4c7) {
        Object.defineProperty(_0x3e3c34.Event.prototype, _0x4b3542, {
          'enumerable': !0x0,
          'configurable': !0x0,
          'get': _0x3e3c34.isFunction(_0x5eb4c7) ? function () {
            if (this.originalEvent) return _0x5eb4c7(this.originalEvent);
          } : function () {
            if (this.originalEvent) return this.originalEvent[_0x4b3542];
          },
          'set': function (_0x41799a) {
            Object.defineProperty(this, _0x4b3542, {
              'enumerable': !0x0,
              'configurable': !0x0,
              'writable': !0x0,
              'value': _0x41799a
            });
          }
        });
      },
      'fix': function (_0x3f72d7) {
        return _0x3f72d7[_0x3e3c34.expando] ? _0x3f72d7 : new _0x3e3c34.Event(_0x3f72d7);
      },
      'special': {
        'load': {
          'noBubble': !0x0
        },
        'focus': {
          'trigger': function () {
            if (this !== _0x558546() && this.focus) return this.focus(), !0x1;
          },
          'delegateType': 'focusin'
        },
        'blur': {
          'trigger': function () {
            if (this === _0x558546() && this.blur) return this.blur(), !0x1;
          },
          'delegateType': 'focusout'
        },
        'click': {
          'trigger': function () {
            if ('checkbox' === this.type && this.click && _0x59415f(this, 'input')) return this.click(), !0x1;
          },
          '_default': function (_0x1c624d) {
            return _0x59415f(_0x1c624d.target, 'a');
          }
        },
        'beforeunload': {
          'postDispatch': function (_0x473d6f) {
            void 0x0 !== _0x473d6f.result && _0x473d6f.originalEvent && (_0x473d6f.originalEvent.returnValue = _0x473d6f.result);
          }
        }
      }
    }, _0x3e3c34.removeEvent = function (_0x504622, _0x2119e7, _0x26020f) {
      _0x504622.removeEventListener && _0x504622.removeEventListener(_0x2119e7, _0x26020f);
    }, _0x3e3c34.Event = function (_0x24e5c3, _0x28f0a4) {
      return this instanceof _0x3e3c34.Event ? (_0x24e5c3 && _0x24e5c3.type ? (this.originalEvent = _0x24e5c3, this.type = _0x24e5c3.type, this.isDefaultPrevented = _0x24e5c3.defaultPrevented || void 0x0 === _0x24e5c3.defaultPrevented && !0x1 === _0x24e5c3.returnValue ? _0x2228a2 : _0x680117, this.target = _0x24e5c3.target && 0x3 === _0x24e5c3.target.nodeType ? _0x24e5c3.target.parentNode : _0x24e5c3.target, this.currentTarget = _0x24e5c3.currentTarget, this.relatedTarget = _0x24e5c3.relatedTarget) : this.type = _0x24e5c3, _0x28f0a4 && _0x3e3c34.extend(this, _0x28f0a4), this.timeStamp = _0x24e5c3 && _0x24e5c3.timeStamp || _0x3e3c34.now(), void (this[_0x3e3c34.expando] = !0x0)) : new _0x3e3c34.Event(_0x24e5c3, _0x28f0a4);
    }, _0x3e3c34.Event.prototype = {
      'constructor': _0x3e3c34.Event,
      'isDefaultPrevented': _0x680117,
      'isPropagationStopped': _0x680117,
      'isImmediatePropagationStopped': _0x680117,
      'isSimulated': !0x1,
      'preventDefault': function () {
        var _0x4141b8 = this.originalEvent;
        this.isDefaultPrevented = _0x2228a2, _0x4141b8 && !this.isSimulated && _0x4141b8.preventDefault();
      },
      'stopPropagation': function () {
        var _0x2818fe = this.originalEvent;
        this.isPropagationStopped = _0x2228a2, _0x2818fe && !this.isSimulated && _0x2818fe.stopPropagation();
      },
      'stopImmediatePropagation': function () {
        var _0x4cf165 = this.originalEvent;
        this.isImmediatePropagationStopped = _0x2228a2, _0x4cf165 && !this.isSimulated && _0x4cf165.stopImmediatePropagation(), this.stopPropagation();
      }
    }, _0x3e3c34.each({
      'altKey': !0x0,
      'bubbles': !0x0,
      'cancelable': !0x0,
      'changedTouches': !0x0,
      'ctrlKey': !0x0,
      'detail': !0x0,
      'eventPhase': !0x0,
      'metaKey': !0x0,
      'pageX': !0x0,
      'pageY': !0x0,
      'shiftKey': !0x0,
      'view': !0x0,
      'char': !0x0,
      'charCode': !0x0,
      'key': !0x0,
      'keyCode': !0x0,
      'button': !0x0,
      'buttons': !0x0,
      'clientX': !0x0,
      'clientY': !0x0,
      'offsetX': !0x0,
      'offsetY': !0x0,
      'pointerId': !0x0,
      'pointerType': !0x0,
      'screenX': !0x0,
      'screenY': !0x0,
      'targetTouches': !0x0,
      'toElement': !0x0,
      'touches': !0x0,
      'which': function (_0x1d3377) {
        var _0xbcce3b = _0x1d3377.button;
        return null == _0x1d3377.which && _0x4787aa.test(_0x1d3377.type) ? null != _0x1d3377.charCode ? _0x1d3377.charCode : _0x1d3377.keyCode : !_0x1d3377.which && void 0x0 !== _0xbcce3b && _0x13db79.test(_0x1d3377.type) ? 0x1 & _0xbcce3b ? 0x1 : 0x2 & _0xbcce3b ? 0x3 : 0x4 & _0xbcce3b ? 0x2 : 0x0 : _0x1d3377.which;
      }
    }, _0x3e3c34.event.addProp), _0x3e3c34.each({
      'mouseenter': 'mouseover',
      'mouseleave': 'mouseout',
      'pointerenter': 'pointerover',
      'pointerleave': 'pointerout'
    }, function (_0x41bd97, _0x78a740) {
      _0x3e3c34.event.special[_0x41bd97] = {
        'delegateType': _0x78a740,
        'bindType': _0x78a740,
        'handle': function (_0x477b89) {
          var _0x5a5566,
            _0x39608a = _0x477b89.relatedTarget,
            _0x398854 = _0x477b89.handleObj;
          return _0x39608a && (_0x39608a === this || _0x3e3c34.contains(this, _0x39608a)) || (_0x477b89.type = _0x398854.origType, _0x5a5566 = _0x398854.handler.apply(this, arguments), _0x477b89.type = _0x78a740), _0x5a5566;
        }
      };
    }), _0x3e3c34.fn.extend({
      'on': function (_0x9d8e72, _0x1ef7dc, _0x7d83a3, _0xc87920) {
        return _0x32a670(this, _0x9d8e72, _0x1ef7dc, _0x7d83a3, _0xc87920);
      },
      'one': function (_0x4ad45e, _0x307b53, _0x2d2e1b, _0x46b23b) {
        return _0x32a670(this, _0x4ad45e, _0x307b53, _0x2d2e1b, _0x46b23b, 0x1);
      },
      'off': function (_0x4aa0ba, _0x545821, _0x1674a1) {
        var _0x4f2ba9, _0x9bd56e;
        if (_0x4aa0ba && _0x4aa0ba.preventDefault && _0x4aa0ba.handleObj) return _0x4f2ba9 = _0x4aa0ba.handleObj, _0x3e3c34(_0x4aa0ba.delegateTarget).off(_0x4f2ba9.namespace ? _0x4f2ba9.origType + '.' + _0x4f2ba9.namespace : _0x4f2ba9.origType, _0x4f2ba9.selector, _0x4f2ba9.handler), this;
        if ('object' == typeof _0x4aa0ba) {
          for (_0x9bd56e in _0x4aa0ba) this.off(_0x9bd56e, _0x545821, _0x4aa0ba[_0x9bd56e]);
          return this;
        }
        return !0x1 !== _0x545821 && 'function' != typeof _0x545821 || (_0x1674a1 = _0x545821, _0x545821 = void 0x0), !0x1 === _0x1674a1 && (_0x1674a1 = _0x680117), this.each(function () {
          _0x3e3c34.event.remove(this, _0x4aa0ba, _0x1674a1, _0x545821);
        });
      }
    });
    var _0x5836d8 = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,
      _0x12b9f9 = /<script|<style|<link/i,
      _0x43e4f6 = /checked\s*(?:[^=]|=\s*.checked.)/i,
      _0xd81c30 = /^true\/(.*)/,
      _0x2f0186 = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
    _0x3e3c34.extend({
      'htmlPrefilter': function (_0x7345fc) {
        return _0x7345fc.replace(_0x5836d8, '<$1></$2>');
      },
      'clone': function (_0x24ef0a, _0x53f70a, _0x3abd83) {
        var _0x1f9e68,
          _0x1cc628,
          _0x5b2533,
          _0x50dfdf,
          _0xd2fa64 = _0x24ef0a.cloneNode(!0x0),
          _0x3b1355 = _0x3e3c34.contains(_0x24ef0a.ownerDocument, _0x24ef0a);
        if (!_0x16b25d.noCloneChecked && !(0x1 !== _0x24ef0a.nodeType && 0xb !== _0x24ef0a.nodeType || _0x3e3c34.isXMLDoc(_0x24ef0a))) {
          _0x50dfdf = _0x2305fe(_0xd2fa64), _0x5b2533 = _0x2305fe(_0x24ef0a), _0x1f9e68 = 0x0;
          for (_0x1cc628 = _0x5b2533.length; _0x1f9e68 < _0x1cc628; _0x1f9e68++) {
            var _0x380ef4 = _0x5b2533[_0x1f9e68],
              _0x644e8e = _0x50dfdf[_0x1f9e68],
              _0x17bfcc = _0x644e8e.nodeName.toLowerCase();
            'input' === _0x17bfcc && _0xfa8f44.test(_0x380ef4.type) ? _0x644e8e.checked = _0x380ef4.checked : 'input' !== _0x17bfcc && 'textarea' !== _0x17bfcc || (_0x644e8e.defaultValue = _0x380ef4.defaultValue);
          }
        }
        if (_0x53f70a) {
          if (_0x3abd83) {
            _0x5b2533 = _0x5b2533 || _0x2305fe(_0x24ef0a), _0x50dfdf = _0x50dfdf || _0x2305fe(_0xd2fa64), _0x1f9e68 = 0x0;
            for (_0x1cc628 = _0x5b2533.length; _0x1f9e68 < _0x1cc628; _0x1f9e68++) _0x4a322c(_0x5b2533[_0x1f9e68], _0x50dfdf[_0x1f9e68]);
          } else _0x4a322c(_0x24ef0a, _0xd2fa64);
        }
        return _0x50dfdf = _0x2305fe(_0xd2fa64, 'script'), 0x0 < _0x50dfdf.length && _0x499d7b(_0x50dfdf, !_0x3b1355 && _0x2305fe(_0x24ef0a, 'script')), _0xd2fa64;
      },
      'cleanData': function (_0x9e266e) {
        for (var _0x46fd5f, _0x81d46, _0x31d038, _0x44f8a5 = _0x3e3c34.event.special, _0x3f9ee7 = 0x0; void 0x0 !== (_0x81d46 = _0x9e266e[_0x3f9ee7]); _0x3f9ee7++) if (_0x12a9f6(_0x81d46)) {
          if (_0x46fd5f = _0x81d46[_0x527207.expando]) {
            if (_0x46fd5f.events) {
              for (_0x31d038 in _0x46fd5f.events) _0x44f8a5[_0x31d038] ? _0x3e3c34.event.remove(_0x81d46, _0x31d038) : _0x3e3c34.removeEvent(_0x81d46, _0x31d038, _0x46fd5f.handle);
            }
            _0x81d46[_0x527207.expando] = void 0x0;
          }
          _0x81d46[_0x5060d5.expando] && (_0x81d46[_0x5060d5.expando] = void 0x0);
        }
      }
    }), _0x3e3c34.fn.extend({
      'detach': function (_0x3650d0) {
        return _0x1381eb(this, _0x3650d0, !0x0);
      },
      'remove': function (_0x17047a) {
        return _0x1381eb(this, _0x17047a);
      },
      'text': function (_0x2006ef) {
        return _0x23b480(this, function (_0xca433c) {
          return void 0x0 === _0xca433c ? _0x3e3c34.text(this) : this.empty().each(function () {
            0x1 !== this.nodeType && 0xb !== this.nodeType && 0x9 !== this.nodeType || (this.textContent = _0xca433c);
          });
        }, null, _0x2006ef, arguments.length);
      },
      'append': function () {
        return _0x2638b9(this, arguments, function (_0xbb31ac) {
          (0x1 === this.nodeType || 0xb === this.nodeType || 0x9 === this.nodeType) && _0x1bdaf0(this, _0xbb31ac).appendChild(_0xbb31ac);
        });
      },
      'prepend': function () {
        return _0x2638b9(this, arguments, function (_0x214ae6) {
          if (0x1 === this.nodeType || 0xb === this.nodeType || 0x9 === this.nodeType) {
            var _0x258646 = _0x1bdaf0(this, _0x214ae6);
            _0x258646.insertBefore(_0x214ae6, _0x258646.firstChild);
          }
        });
      },
      'before': function () {
        return _0x2638b9(this, arguments, function (_0x13f05e) {
          this.parentNode && this.parentNode.insertBefore(_0x13f05e, this);
        });
      },
      'after': function () {
        return _0x2638b9(this, arguments, function (_0x23b98e) {
          this.parentNode && this.parentNode.insertBefore(_0x23b98e, this.nextSibling);
        });
      },
      'empty': function () {
        for (var _0x36af87, _0x5de03d = 0x0; null != (_0x36af87 = this[_0x5de03d]); _0x5de03d++) 0x1 === _0x36af87.nodeType && (_0x3e3c34.cleanData(_0x2305fe(_0x36af87, !0x1)), _0x36af87.textContent = '');
        return this;
      },
      'clone': function (_0xe63011, _0x44bca0) {
        return _0xe63011 = null != _0xe63011 && _0xe63011, _0x44bca0 = null == _0x44bca0 ? _0xe63011 : _0x44bca0, this.map(function () {
          return _0x3e3c34.clone(this, _0xe63011, _0x44bca0);
        });
      },
      'html': function (_0x350ef4) {
        return _0x23b480(this, function (_0x324c9e) {
          var _0x4ddf67 = this[0x0] || {},
            _0x6ab7f = 0x0,
            _0x1db347 = this.length;
          if (void 0x0 === _0x324c9e && 0x1 === _0x4ddf67.nodeType) return _0x4ddf67.innerHTML;
          if ('string' == typeof _0x324c9e && !_0x12b9f9.test(_0x324c9e) && !_0x477bc2[(_0x4f5676.exec(_0x324c9e) || ['', ''])[0x1].toLowerCase()]) {
            _0x324c9e = _0x3e3c34.htmlPrefilter(_0x324c9e);
            try {
              for (; _0x6ab7f < _0x1db347; _0x6ab7f++) _0x4ddf67 = this[_0x6ab7f] || {}, 0x1 === _0x4ddf67.nodeType && (_0x3e3c34.cleanData(_0x2305fe(_0x4ddf67, !0x1)), _0x4ddf67.innerHTML = _0x324c9e);
              _0x4ddf67 = 0x0;
            } catch (_0x38f970) {}
          }
          _0x4ddf67 && this.empty().append(_0x324c9e);
        }, null, _0x350ef4, arguments.length);
      },
      'replaceWith': function () {
        var _0x239067 = [];
        return _0x2638b9(this, arguments, function (_0x539734) {
          var _0x11493b = this.parentNode;
          0x0 > _0x3e3c34.inArray(this, _0x239067) && (_0x3e3c34.cleanData(_0x2305fe(this)), _0x11493b && _0x11493b.replaceChild(_0x539734, this));
        }, _0x239067);
      }
    }), _0x3e3c34.each({
      'appendTo': 'append',
      'prependTo': 'prepend',
      'insertBefore': 'before',
      'insertAfter': 'after',
      'replaceAll': 'replaceWith'
    }, function (_0x28051d, _0xe0dbe6) {
      _0x3e3c34.fn[_0x28051d] = function (_0x5644e1) {
        for (var _0x486c70 = [], _0x1b0db5 = _0x3e3c34(_0x5644e1), _0x384983 = _0x1b0db5.length - 0x1, _0x16bb19 = 0x0; _0x16bb19 <= _0x384983; _0x16bb19++) _0x5644e1 = _0x16bb19 === _0x384983 ? this : this.clone(!0x0), _0x3e3c34(_0x1b0db5[_0x16bb19])[_0xe0dbe6](_0x5644e1), _0x44d174.apply(_0x486c70, _0x5644e1.get());
        return this.pushStack(_0x486c70);
      };
    });
    var _0x2b7bba = /^margin/,
      _0x27199e = RegExp('^(' + _0x1948fc + ')(?!px)[a-z%]+$', 'i'),
      _0x20adc6 = function (_0x5ce335) {
        var _0x1c570c = _0x5ce335.ownerDocument.defaultView;
        return _0x1c570c && _0x1c570c.opener || (_0x1c570c = _0x2ec427), _0x1c570c.getComputedStyle(_0x5ce335);
      },
      _0x1d10e9 = function () {
        if (_0x293872) {
          _0x293872.style.cssText = 'box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%', _0x293872.innerHTML = '', _0x296075.appendChild(_0x2888fb);
          var _0x2e957e = _0x2ec427.getComputedStyle(_0x293872);
          _0x498304 = '1%' !== _0x2e957e.top, _0x1b681d = '2px' === _0x2e957e.marginLeft, _0x5815a4 = '4px' === _0x2e957e.width, _0x293872.style.marginRight = '50%', _0x2c1dc0 = '4px' === _0x2e957e.marginRight, _0x296075.removeChild(_0x2888fb), _0x293872 = null;
        }
      },
      _0x498304,
      _0x5815a4,
      _0x2c1dc0,
      _0x1b681d,
      _0x2888fb = _0x4bffa6.createElement('div'),
      _0x293872 = _0x4bffa6.createElement('div');
    _0x293872.style && (_0x293872.style.backgroundClip = 'content-box', _0x293872.cloneNode(!0x0).style.backgroundClip = '', _0x16b25d.clearCloneStyle = 'content-box' === _0x293872.style.backgroundClip, _0x2888fb.style.cssText = 'border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute', _0x2888fb.appendChild(_0x293872), _0x3e3c34.extend(_0x16b25d, {
      'pixelPosition': function () {
        return _0x1d10e9(), _0x498304;
      },
      'boxSizingReliable': function () {
        return _0x1d10e9(), _0x5815a4;
      },
      'pixelMarginRight': function () {
        return _0x1d10e9(), _0x2c1dc0;
      },
      'reliableMarginLeft': function () {
        return _0x1d10e9(), _0x1b681d;
      }
    })), !0x0;
    var _0x54e737 = /^(none|table(?!-c[ea]).+)/,
      _0x26c11f = /^--/,
      _0x24ed64 = {
        'position': 'absolute',
        'visibility': 'hidden',
        'display': 'block'
      },
      _0x48766c = {
        'letterSpacing': '0',
        'fontWeight': '400'
      },
      _0x57c4ec = ['Webkit', 'Moz', 'ms'],
      _0x11286c = _0x4bffa6.createElement('div').style;
    _0x3e3c34.extend({
      'cssHooks': {
        'opacity': {
          'get': function (_0x1bbea7, _0x3bbe3) {
            if (_0x3bbe3) {
              var _0x38eabe = _0x435def(_0x1bbea7, 'opacity');
              return '' === _0x38eabe ? '1' : _0x38eabe;
            }
          }
        }
      },
      'cssNumber': {
        'animationIterationCount': !0x0,
        'columnCount': !0x0,
        'fillOpacity': !0x0,
        'flexGrow': !0x0,
        'flexShrink': !0x0,
        'fontWeight': !0x0,
        'lineHeight': !0x0,
        'opacity': !0x0,
        'order': !0x0,
        'orphans': !0x0,
        'widows': !0x0,
        'zIndex': !0x0,
        'zoom': !0x0
      },
      'cssProps': {
        'float': 'cssFloat'
      },
      'style': function (_0x4be048, _0x4821be, _0x14833b, _0x435ab3) {
        if (_0x4be048 && 0x3 !== _0x4be048.nodeType && 0x8 !== _0x4be048.nodeType && _0x4be048.style) {
          var _0x50870e,
            _0x584b78,
            _0xf62fd1,
            _0x41c59f = _0x3e3c34.camelCase(_0x4821be),
            _0x566257 = _0x26c11f.test(_0x4821be),
            _0x3e87e7 = _0x4be048.style;
          return _0x566257 || (_0x4821be = _0x3beb8a(_0x41c59f)), _0xf62fd1 = _0x3e3c34.cssHooks[_0x4821be] || _0x3e3c34.cssHooks[_0x41c59f], void 0x0 === _0x14833b ? _0xf62fd1 && 'get' in _0xf62fd1 && void 0x0 !== (_0x50870e = _0xf62fd1.get(_0x4be048, !0x1, _0x435ab3)) ? _0x50870e : _0x3e87e7[_0x4821be] : (_0x584b78 = typeof _0x14833b, 'string' === _0x584b78 && (_0x50870e = _0x108064.exec(_0x14833b)) && _0x50870e[0x1] && (_0x14833b = _0xd374f6(_0x4be048, _0x4821be, _0x50870e), _0x584b78 = 'number'), null != _0x14833b && _0x14833b === _0x14833b && ('number' === _0x584b78 && (_0x14833b += _0x50870e && _0x50870e[0x3] || (_0x3e3c34.cssNumber[_0x41c59f] ? '' : 'px')), _0x16b25d.clearCloneStyle || '' !== _0x14833b || 0x0 !== _0x4821be.indexOf('background') || (_0x3e87e7[_0x4821be] = 'inherit'), _0xf62fd1 && 'set' in _0xf62fd1 && void 0x0 === (_0x14833b = _0xf62fd1.set(_0x4be048, _0x14833b, _0x435ab3)) || (_0x566257 ? _0x3e87e7.setProperty(_0x4821be, _0x14833b) : _0x3e87e7[_0x4821be] = _0x14833b)), void 0x0);
        }
      },
      'css': function (_0xb00fab, _0x1ae588, _0x30b797, _0x177d21) {
        var _0x3c5773,
          _0x5368b3,
          _0x2de33a,
          _0x579598 = _0x3e3c34.camelCase(_0x1ae588);
        return _0x26c11f.test(_0x1ae588) || (_0x1ae588 = _0x3beb8a(_0x579598)), _0x2de33a = _0x3e3c34.cssHooks[_0x1ae588] || _0x3e3c34.cssHooks[_0x579598], _0x2de33a && 'get' in _0x2de33a && (_0x3c5773 = _0x2de33a.get(_0xb00fab, !0x0, _0x30b797)), void 0x0 === _0x3c5773 && (_0x3c5773 = _0x435def(_0xb00fab, _0x1ae588, _0x177d21)), 'normal' === _0x3c5773 && _0x1ae588 in _0x48766c && (_0x3c5773 = _0x48766c[_0x1ae588]), '' === _0x30b797 || _0x30b797 ? (_0x5368b3 = parseFloat(_0x3c5773), !0x0 === _0x30b797 || isFinite(_0x5368b3) ? _0x5368b3 || 0x0 : _0x3c5773) : _0x3c5773;
      }
    }), _0x3e3c34.each(['height', 'width'], function (_0x390989, _0x3e8c21) {
      _0x3e3c34.cssHooks[_0x3e8c21] = {
        'get': function (_0x11f494, _0x10288a, _0x3c208d) {
          if (_0x10288a) return !_0x54e737.test(_0x3e3c34.css(_0x11f494, 'display')) || _0x11f494.getClientRects().length && _0x11f494.getBoundingClientRect().width ? _0x5b1b1b(_0x11f494, _0x3e8c21, _0x3c208d) : _0x23d024(_0x11f494, _0x24ed64, function () {
            return _0x5b1b1b(_0x11f494, _0x3e8c21, _0x3c208d);
          });
        },
        'set': function (_0x14473f, _0x19e6a4, _0x4475b2) {
          var _0x232716,
            _0x1ff83e = _0x4475b2 && _0x20adc6(_0x14473f);
          return _0x4475b2 = _0x4475b2 && _0x4f7783(_0x14473f, _0x3e8c21, _0x4475b2, 'border-box' === _0x3e3c34.css(_0x14473f, 'boxSizing', !0x1, _0x1ff83e), _0x1ff83e), _0x4475b2 && (_0x232716 = _0x108064.exec(_0x19e6a4)) && 'px' !== (_0x232716[0x3] || 'px') && (_0x14473f.style[_0x3e8c21] = _0x19e6a4, _0x19e6a4 = _0x3e3c34.css(_0x14473f, _0x3e8c21)), _0xd01171(_0x14473f, _0x19e6a4, _0x4475b2);
        }
      };
    }), _0x3e3c34.cssHooks.marginLeft = _0x4a329f(_0x16b25d.reliableMarginLeft, function (_0x20a84b, _0x531935) {
      if (_0x531935) return (parseFloat(_0x435def(_0x20a84b, 'marginLeft')) || _0x20a84b.getBoundingClientRect().left - _0x23d024(_0x20a84b, {
        'marginLeft': 0x0
      }, function () {
        return _0x20a84b.getBoundingClientRect().left;
      })) + 'px';
    }), _0x3e3c34.each({
      'margin': '',
      'padding': '',
      'border': 'Width'
    }, function (_0x1e03a8, _0x4265f0) {
      _0x3e3c34.cssHooks[_0x1e03a8 + _0x4265f0] = {
        'expand': function (_0x115252) {
          var _0x54bb93 = 0x0,
            _0x15312d = {};
          for (_0x115252 = 'string' == typeof _0x115252 ? _0x115252.split(" ") : [_0x115252]; 0x4 > _0x54bb93; _0x54bb93++) _0x15312d[_0x1e03a8 + _0x31f91c[_0x54bb93] + _0x4265f0] = _0x115252[_0x54bb93] || _0x115252[_0x54bb93 - 0x2] || _0x115252[0x0];
          return _0x15312d;
        }
      }, _0x2b7bba.test(_0x1e03a8) || (_0x3e3c34.cssHooks[_0x1e03a8 + _0x4265f0].set = _0xd01171);
    }), _0x3e3c34.fn.extend({
      'css': function (_0x28a055, _0x31bc38) {
        return _0x23b480(this, function (_0x4ea359, _0x5850ef, _0x1ddcf6) {
          var _0x5418c0,
            _0x56da71 = {},
            _0x51650c = 0x0;
          if (Array.isArray(_0x5850ef)) {
            _0x1ddcf6 = _0x20adc6(_0x4ea359);
            for (_0x5418c0 = _0x5850ef.length; _0x51650c < _0x5418c0; _0x51650c++) _0x56da71[_0x5850ef[_0x51650c]] = _0x3e3c34.css(_0x4ea359, _0x5850ef[_0x51650c], !0x1, _0x1ddcf6);
            return _0x56da71;
          }
          return void 0x0 !== _0x1ddcf6 ? _0x3e3c34.style(_0x4ea359, _0x5850ef, _0x1ddcf6) : _0x3e3c34.css(_0x4ea359, _0x5850ef);
        }, _0x28a055, _0x31bc38, 0x1 < arguments.length);
      }
    }), _0x3e3c34.Tween = _0x54ce7a, _0x54ce7a.prototype = {
      'constructor': _0x54ce7a,
      'init': function (_0x12d2c9, _0x35f175, _0x3d0216, _0x531ba8, _0x5716b2, _0x90cd01) {
        this.elem = _0x12d2c9, this.prop = _0x3d0216, this.easing = _0x5716b2 || _0x3e3c34.easing._default, this.options = _0x35f175, this.start = this.now = this.cur(), this.end = _0x531ba8, this.unit = _0x90cd01 || (_0x3e3c34.cssNumber[_0x3d0216] ? '' : 'px');
      },
      'cur': function () {
        var _0x1c7d83 = _0x54ce7a.propHooks[this.prop];
        return _0x1c7d83 && _0x1c7d83.get ? _0x1c7d83.get(this) : _0x54ce7a.propHooks._default.get(this);
      },
      'run': function (_0x36e725) {
        var _0x1bd277,
          _0x573fbb = _0x54ce7a.propHooks[this.prop];
        return this.options.duration ? this.pos = _0x1bd277 = _0x3e3c34.easing[this.easing](_0x36e725, this.options.duration * _0x36e725, 0x0, 0x1, this.options.duration) : this.pos = _0x1bd277 = _0x36e725, this.now = (this.end - this.start) * _0x1bd277 + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), _0x573fbb && _0x573fbb.set ? _0x573fbb.set(this) : _0x54ce7a.propHooks._default.set(this), this;
      }
    }, _0x54ce7a.prototype.init.prototype = _0x54ce7a.prototype, _0x54ce7a.propHooks = {
      '_default': {
        'get': function (_0x2f235f) {
          var _0x29e1cf;
          return 0x1 !== _0x2f235f.elem.nodeType || null != _0x2f235f.elem[_0x2f235f.prop] && null == _0x2f235f.elem.style[_0x2f235f.prop] ? _0x2f235f.elem[_0x2f235f.prop] : (_0x29e1cf = _0x3e3c34.css(_0x2f235f.elem, _0x2f235f.prop, ''), _0x29e1cf && 'auto' !== _0x29e1cf ? _0x29e1cf : 0x0);
        },
        'set': function (_0x34ab67) {
          _0x3e3c34.fx.step[_0x34ab67.prop] ? _0x3e3c34.fx.step[_0x34ab67.prop](_0x34ab67) : 0x1 !== _0x34ab67.elem.nodeType || null == _0x34ab67.elem.style[_0x3e3c34.cssProps[_0x34ab67.prop]] && !_0x3e3c34.cssHooks[_0x34ab67.prop] ? _0x34ab67.elem[_0x34ab67.prop] = _0x34ab67.now : _0x3e3c34.style(_0x34ab67.elem, _0x34ab67.prop, _0x34ab67.now + _0x34ab67.unit);
        }
      }
    }, _0x54ce7a.propHooks.scrollTop = _0x54ce7a.propHooks.scrollLeft = {
      'set': function (_0xeb673) {
        _0xeb673.elem.nodeType && _0xeb673.elem.parentNode && (_0xeb673.elem[_0xeb673.prop] = _0xeb673.now);
      }
    }, _0x3e3c34.easing = {
      'linear': function (_0x453c35) {
        return _0x453c35;
      },
      'swing': function (_0x3705b4) {
        return 0.5 - Math.cos(_0x3705b4 * Math.PI) / 0x2;
      },
      '_default': 'swing'
    }, _0x3e3c34.fx = _0x54ce7a.prototype.init, _0x3e3c34.fx.step = {};
    var _0x282db1,
      _0x16d9f9,
      _0x660ed6 = /^(?:toggle|show|hide)$/,
      _0x122a1b = /queueHooks$/;
    _0x3e3c34.Animation = _0x3e3c34.extend(_0x544ded, {
      'tweeners': {
        '*': [function (_0x4a931f, _0x214179) {
          var _0x5986f4 = this.createTween(_0x4a931f, _0x214179);
          return _0xd374f6(_0x5986f4.elem, _0x4a931f, _0x108064.exec(_0x214179), _0x5986f4), _0x5986f4;
        }]
      },
      'tweener': function (_0x5a443e, _0x87ef8f) {
        _0x3e3c34.isFunction(_0x5a443e) ? (_0x87ef8f = _0x5a443e, _0x5a443e = ['*']) : _0x5a443e = _0x5a443e.match(_0x22da69);
        for (var _0x4c2ac3, _0x4a56a9 = 0x0, _0x2325ef = _0x5a443e.length; _0x4a56a9 < _0x2325ef; _0x4a56a9++) _0x4c2ac3 = _0x5a443e[_0x4a56a9], _0x544ded.tweeners[_0x4c2ac3] = _0x544ded.tweeners[_0x4c2ac3] || [], _0x544ded.tweeners[_0x4c2ac3].unshift(_0x87ef8f);
      },
      'prefilters': [function (_0x4c74b6, _0xac25df, _0x1f5aca) {
        var _0x4da139,
          _0x3c1f9a,
          _0x1d33cf,
          _0x245742,
          _0x166138,
          _0x5e7f02,
          _0x54a58c,
          _0x2934ce,
          _0xfd0f87 = 'width' in _0xac25df || 'height' in _0xac25df,
          _0x310a30 = this,
          _0x19721d = {},
          _0x243cbd = _0x4c74b6.style,
          _0x531ce6 = _0x4c74b6.nodeType && _0xa04c57(_0x4c74b6),
          _0x12da57 = _0x527207.get(_0x4c74b6, 'fxshow');
        _0x1f5aca.queue || (_0x245742 = _0x3e3c34._queueHooks(_0x4c74b6, 'fx'), null == _0x245742.unqueued && (_0x245742.unqueued = 0x0, _0x166138 = _0x245742.empty.fire, _0x245742.empty.fire = function () {
          _0x245742.unqueued || _0x166138();
        }), _0x245742.unqueued++, _0x310a30.always(function () {
          _0x310a30.always(function () {
            _0x245742.unqueued--, _0x3e3c34.queue(_0x4c74b6, 'fx').length || _0x245742.empty.fire();
          });
        }));
        for (_0x4da139 in _0xac25df) if (_0x3c1f9a = _0xac25df[_0x4da139], _0x660ed6.test(_0x3c1f9a)) {
          if (delete _0xac25df[_0x4da139], _0x1d33cf = _0x1d33cf || 'toggle' === _0x3c1f9a, _0x3c1f9a === (_0x531ce6 ? 'hide' : 'show')) {
            if ('show' !== _0x3c1f9a || !_0x12da57 || void 0x0 === _0x12da57[_0x4da139]) continue;
            _0x531ce6 = !0x0;
          }
          _0x19721d[_0x4da139] = _0x12da57 && _0x12da57[_0x4da139] || _0x3e3c34.style(_0x4c74b6, _0x4da139);
        }
        if (_0x5e7f02 = !_0x3e3c34.isEmptyObject(_0xac25df), _0x5e7f02 || !_0x3e3c34.isEmptyObject(_0x19721d)) {
          for (_0x4da139 in _0xfd0f87 && 0x1 === _0x4c74b6.nodeType && (_0x1f5aca.overflow = [_0x243cbd.overflow, _0x243cbd.overflowX, _0x243cbd.overflowY], _0x54a58c = _0x12da57 && _0x12da57.display, null == _0x54a58c && (_0x54a58c = _0x527207.get(_0x4c74b6, 'display')), _0x2934ce = _0x3e3c34.css(_0x4c74b6, 'display'), 'none' === _0x2934ce && (_0x54a58c ? _0x2934ce = _0x54a58c : (_0x3caf29([_0x4c74b6], !0x0), _0x54a58c = _0x4c74b6.style.display || _0x54a58c, _0x2934ce = _0x3e3c34.css(_0x4c74b6, 'display'), _0x3caf29([_0x4c74b6]))), ('inline' === _0x2934ce || 'inline-block' === _0x2934ce && null != _0x54a58c) && 'none' === _0x3e3c34.css(_0x4c74b6, 'float') && (_0x5e7f02 || (_0x310a30.done(function () {
            _0x243cbd.display = _0x54a58c;
          }), null == _0x54a58c && (_0x2934ce = _0x243cbd.display, _0x54a58c = 'none' === _0x2934ce ? '' : _0x2934ce)), _0x243cbd.display = 'inline-block')), _0x1f5aca.overflow && (_0x243cbd.overflow = 'hidden', _0x310a30.always(function () {
            _0x243cbd.overflow = _0x1f5aca.overflow[0x0], _0x243cbd.overflowX = _0x1f5aca.overflow[0x1], _0x243cbd.overflowY = _0x1f5aca.overflow[0x2];
          })), _0x5e7f02 = !0x1, _0x19721d) _0x5e7f02 || (_0x12da57 ? 'hidden' in _0x12da57 && (_0x531ce6 = _0x12da57.hidden) : _0x12da57 = _0x527207.access(_0x4c74b6, 'fxshow', {
            'display': _0x54a58c
          }), _0x1d33cf && (_0x12da57.hidden = !_0x531ce6), _0x531ce6 && _0x3caf29([_0x4c74b6], !0x0), _0x310a30.done(function () {
            _0x531ce6 || _0x3caf29([_0x4c74b6]), _0x527207.remove(_0x4c74b6, 'fxshow');
            for (_0x4da139 in _0x19721d) _0x3e3c34.style(_0x4c74b6, _0x4da139, _0x19721d[_0x4da139]);
          })), _0x5e7f02 = _0x1a20f7(_0x531ce6 ? _0x12da57[_0x4da139] : 0x0, _0x4da139, _0x310a30), _0x4da139 in _0x12da57 || (_0x12da57[_0x4da139] = _0x5e7f02.start, _0x531ce6 && (_0x5e7f02.end = _0x5e7f02.start, _0x5e7f02.start = 0x0));
        }
      }],
      'prefilter': function (_0xfda7c, _0x367097) {
        _0x367097 ? _0x544ded.prefilters.unshift(_0xfda7c) : _0x544ded.prefilters.push(_0xfda7c);
      }
    }), _0x3e3c34.speed = function (_0x550ee7, _0x50fd5c, _0x56fcf0) {
      var _0x5a0b72 = _0x550ee7 && 'object' == typeof _0x550ee7 ? _0x3e3c34.extend({}, _0x550ee7) : {
        'complete': _0x56fcf0 || !_0x56fcf0 && _0x50fd5c || _0x3e3c34.isFunction(_0x550ee7) && _0x550ee7,
        'duration': _0x550ee7,
        'easing': _0x56fcf0 && _0x50fd5c || _0x50fd5c && !_0x3e3c34.isFunction(_0x50fd5c) && _0x50fd5c
      };
      return _0x3e3c34.fx.off ? _0x5a0b72.duration = 0x0 : 'number' != typeof _0x5a0b72.duration && (_0x5a0b72.duration in _0x3e3c34.fx.speeds ? _0x5a0b72.duration = _0x3e3c34.fx.speeds[_0x5a0b72.duration] : _0x5a0b72.duration = _0x3e3c34.fx.speeds._default), null != _0x5a0b72.queue && !0x0 !== _0x5a0b72.queue || (_0x5a0b72.queue = 'fx'), _0x5a0b72.old = _0x5a0b72.complete, _0x5a0b72.complete = function () {
        _0x3e3c34.isFunction(_0x5a0b72.old) && _0x5a0b72.old.call(this), _0x5a0b72.queue && _0x3e3c34.dequeue(this, _0x5a0b72.queue);
      }, _0x5a0b72;
    }, _0x3e3c34.fn.extend({
      'fadeTo': function (_0x1702b0, _0x1e700c, _0x43418f, _0x3d665d) {
        return this.filter(_0xa04c57).css('opacity', 0x0).show().end().animate({
          'opacity': _0x1e700c
        }, _0x1702b0, _0x43418f, _0x3d665d);
      },
      'animate': function (_0x1bf920, _0x5488b7, _0x15e7ba, _0x1dbafb) {
        var _0x50fcab = _0x3e3c34.isEmptyObject(_0x1bf920),
          _0x8aff52 = _0x3e3c34.speed(_0x5488b7, _0x15e7ba, _0x1dbafb);
        return _0x5488b7 = function () {
          var _0x217180 = _0x544ded(this, _0x3e3c34.extend({}, _0x1bf920), _0x8aff52);
          (_0x50fcab || _0x527207.get(this, 'finish')) && _0x217180.stop(!0x0);
        }, _0x5488b7.finish = _0x5488b7, _0x50fcab || !0x1 === _0x8aff52.queue ? this.each(_0x5488b7) : this.queue(_0x8aff52.queue, _0x5488b7);
      },
      'stop': function (_0x17b36b, _0x101deb, _0x23a56c) {
        var _0x3a02f8 = function (_0x244ae7) {
          var _0x414122 = _0x244ae7.stop;
          delete _0x244ae7.stop, _0x414122(_0x23a56c);
        };
        return 'string' != typeof _0x17b36b && (_0x23a56c = _0x101deb, _0x101deb = _0x17b36b, _0x17b36b = void 0x0), _0x101deb && !0x1 !== _0x17b36b && this.queue(_0x17b36b || 'fx', []), this.each(function () {
          var _0x299082 = !0x0,
            _0x83063d = null != _0x17b36b && _0x17b36b + 'queueHooks',
            _0x16cada = _0x3e3c34.timers,
            _0x1a956f = _0x527207.get(this);
          if (_0x83063d) _0x1a956f[_0x83063d] && _0x1a956f[_0x83063d].stop && _0x3a02f8(_0x1a956f[_0x83063d]);else {
            for (_0x83063d in _0x1a956f) _0x1a956f[_0x83063d] && _0x1a956f[_0x83063d].stop && _0x122a1b.test(_0x83063d) && _0x3a02f8(_0x1a956f[_0x83063d]);
          }
          for (_0x83063d = _0x16cada.length; _0x83063d--;) _0x16cada[_0x83063d].elem !== this || null != _0x17b36b && _0x16cada[_0x83063d].queue !== _0x17b36b || (_0x16cada[_0x83063d].anim.stop(_0x23a56c), _0x299082 = !0x1, _0x16cada.splice(_0x83063d, 0x1));
          !_0x299082 && _0x23a56c || _0x3e3c34.dequeue(this, _0x17b36b);
        });
      },
      'finish': function (_0x501c1a) {
        return !0x1 !== _0x501c1a && (_0x501c1a = _0x501c1a || 'fx'), this.each(function () {
          var _0x268258,
            _0x5eedb1 = _0x527207.get(this),
            _0x56bcc2 = _0x5eedb1[_0x501c1a + 'queue'];
          _0x268258 = _0x5eedb1[_0x501c1a + 'queueHooks'];
          var _0x59480c = _0x3e3c34.timers,
            _0x529c08 = _0x56bcc2 ? _0x56bcc2.length : 0x0;
          _0x5eedb1.finish = !0x0, _0x3e3c34.queue(this, _0x501c1a, []), _0x268258 && _0x268258.stop && _0x268258.stop.call(this, !0x0);
          for (_0x268258 = _0x59480c.length; _0x268258--;) _0x59480c[_0x268258].elem === this && _0x59480c[_0x268258].queue === _0x501c1a && (_0x59480c[_0x268258].anim.stop(!0x0), _0x59480c.splice(_0x268258, 0x1));
          for (_0x268258 = 0x0; _0x268258 < _0x529c08; _0x268258++) _0x56bcc2[_0x268258] && _0x56bcc2[_0x268258].finish && _0x56bcc2[_0x268258].finish.call(this);
          delete _0x5eedb1.finish;
        });
      }
    }), _0x3e3c34.each(['toggle', 'show', 'hide'], function (_0x2d1038, _0x126e78) {
      var _0x581d13 = _0x3e3c34.fn[_0x126e78];
      _0x3e3c34.fn[_0x126e78] = function (_0x26c711, _0x35864c, _0x2dda1b) {
        return null == _0x26c711 || 'boolean' == typeof _0x26c711 ? _0x581d13.apply(this, arguments) : this.animate(_0x438ec2(_0x126e78, !0x0), _0x26c711, _0x35864c, _0x2dda1b);
      };
    }), _0x3e3c34.each({
      'slideDown': _0x438ec2('show'),
      'slideUp': _0x438ec2('hide'),
      'slideToggle': _0x438ec2('toggle'),
      'fadeIn': {
        'opacity': 'show'
      },
      'fadeOut': {
        'opacity': 'hide'
      },
      'fadeToggle': {
        'opacity': 'toggle'
      }
    }, function (_0x5a8b9f, _0x70e1a6) {
      _0x3e3c34.fn[_0x5a8b9f] = function (_0xcc4a5f, _0x1a5bf3, _0x48e14f) {
        return this.animate(_0x70e1a6, _0xcc4a5f, _0x1a5bf3, _0x48e14f);
      };
    }), _0x3e3c34.timers = [], _0x3e3c34.fx.tick = function () {
      var _0x31285d,
        _0x38cf40 = 0x0,
        _0x5b46bf = _0x3e3c34.timers;
      for (_0x282db1 = _0x3e3c34.now(); _0x38cf40 < _0x5b46bf.length; _0x38cf40++) _0x31285d = _0x5b46bf[_0x38cf40], _0x31285d() || _0x5b46bf[_0x38cf40] !== _0x31285d || _0x5b46bf.splice(_0x38cf40--, 0x1);
      _0x5b46bf.length || _0x3e3c34.fx.stop(), _0x282db1 = void 0x0;
    }, _0x3e3c34.fx.timer = function (_0x2c83c3) {
      _0x3e3c34.timers.push(_0x2c83c3), _0x3e3c34.fx.start();
    }, _0x3e3c34.fx.interval = 0xd, _0x3e3c34.fx.start = function () {
      _0x16d9f9 || (_0x16d9f9 = !0x0, _0x593141());
    }, _0x3e3c34.fx.stop = function () {
      _0x16d9f9 = null;
    }, _0x3e3c34.fx.speeds = {
      'slow': 0x258,
      'fast': 0xc8,
      '_default': 0x190
    }, _0x3e3c34.fn.delay = function (_0x353902, _0xb966a0) {
      return _0x353902 = _0x3e3c34.fx ? _0x3e3c34.fx.speeds[_0x353902] || _0x353902 : _0x353902, _0xb966a0 = _0xb966a0 || 'fx', this.queue(_0xb966a0, function (_0x71b677, _0x298261) {
        var _0x2d7597 = _0x2ec427.setTimeout(_0x71b677, _0x353902);
        _0x298261.stop = function () {
          _0x2ec427.clearTimeout(_0x2d7597);
        };
      });
    };
    var _0x546598 = _0x4bffa6.createElement('input'),
      _0x2777d4 = _0x4bffa6.createElement('select').appendChild(_0x4bffa6.createElement('option'));
    _0x546598.type = 'checkbox', _0x16b25d.checkOn = '' !== _0x546598.value, _0x16b25d.optSelected = _0x2777d4.selected, _0x546598 = _0x4bffa6.createElement('input'), _0x546598.value = 't', _0x546598.type = 'radio', _0x16b25d.radioValue = 't' === _0x546598.value;
    var _0x580de4,
      _0x29cf4a = _0x3e3c34.expr.attrHandle;
    _0x3e3c34.fn.extend({
      'attr': function (_0x19e0c1, _0x4e7d44) {
        return _0x23b480(this, _0x3e3c34.attr, _0x19e0c1, _0x4e7d44, 0x1 < arguments.length);
      },
      'removeAttr': function (_0x55a627) {
        return this.each(function () {
          _0x3e3c34.removeAttr(this, _0x55a627);
        });
      }
    }), _0x3e3c34.extend({
      'attr': function (_0x335936, _0x28b674, _0x2d2330) {
        var _0x59211d,
          _0x4de318,
          _0x3477a7 = _0x335936.nodeType;
        if (0x3 !== _0x3477a7 && 0x8 !== _0x3477a7 && 0x2 !== _0x3477a7) return 'undefined' == typeof _0x335936.getAttribute ? _0x3e3c34.prop(_0x335936, _0x28b674, _0x2d2330) : (0x1 === _0x3477a7 && _0x3e3c34.isXMLDoc(_0x335936) || (_0x4de318 = _0x3e3c34.attrHooks[_0x28b674.toLowerCase()] || (_0x3e3c34.expr.match.bool.test(_0x28b674) ? _0x580de4 : void 0x0)), void 0x0 !== _0x2d2330 ? null === _0x2d2330 ? void _0x3e3c34.removeAttr(_0x335936, _0x28b674) : _0x4de318 && 'set' in _0x4de318 && void 0x0 !== (_0x59211d = _0x4de318.set(_0x335936, _0x2d2330, _0x28b674)) ? _0x59211d : (_0x335936.setAttribute(_0x28b674, _0x2d2330 + ''), _0x2d2330) : _0x4de318 && 'get' in _0x4de318 && null !== (_0x59211d = _0x4de318.get(_0x335936, _0x28b674)) ? _0x59211d : (_0x59211d = _0x3e3c34.find.attr(_0x335936, _0x28b674), null == _0x59211d ? void 0x0 : _0x59211d));
      },
      'attrHooks': {
        'type': {
          'set': function (_0x4a25d6, _0x5ed8a1) {
            if (!_0x16b25d.radioValue && 'radio' === _0x5ed8a1 && _0x59415f(_0x4a25d6, 'input')) {
              var _0x4ade9f = _0x4a25d6.value;
              return _0x4a25d6.setAttribute('type', _0x5ed8a1), _0x4ade9f && (_0x4a25d6.value = _0x4ade9f), _0x5ed8a1;
            }
          }
        }
      },
      'removeAttr': function (_0x391524, _0x2b2fbd) {
        var _0x2cb297,
          _0x26f53b = 0x0,
          _0x3d59a9 = _0x2b2fbd && _0x2b2fbd.match(_0x22da69);
        if (_0x3d59a9 && 0x1 === _0x391524.nodeType) {
          for (; _0x2cb297 = _0x3d59a9[_0x26f53b++];) _0x391524.removeAttribute(_0x2cb297);
        }
      }
    }), _0x580de4 = {
      'set': function (_0x1fcde1, _0x45bea6, _0x59559a) {
        return !0x1 === _0x45bea6 ? _0x3e3c34.removeAttr(_0x1fcde1, _0x59559a) : _0x1fcde1.setAttribute(_0x59559a, _0x59559a), _0x59559a;
      }
    }, _0x3e3c34.each(_0x3e3c34.expr.match.bool.source.match(/\w+/g), function (_0x17098f, _0x4032bf) {
      var _0x5888db = _0x29cf4a[_0x4032bf] || _0x3e3c34.find.attr;
      _0x29cf4a[_0x4032bf] = function (_0x3f5109, _0x27eefd, _0x3d1a30) {
        var _0x22d68f,
          _0x9d8318,
          _0x26a663 = _0x27eefd.toLowerCase();
        return _0x3d1a30 || (_0x9d8318 = _0x29cf4a[_0x26a663], _0x29cf4a[_0x26a663] = _0x22d68f, _0x22d68f = null != _0x5888db(_0x3f5109, _0x27eefd, _0x3d1a30) ? _0x26a663 : null, _0x29cf4a[_0x26a663] = _0x9d8318), _0x22d68f;
      };
    });
    var _0x513395 = /^(?:input|select|textarea|button)$/i,
      _0x3d137b = /^(?:a|area)$/i;
    _0x3e3c34.fn.extend({
      'prop': function (_0x3930bb, _0x354caa) {
        return _0x23b480(this, _0x3e3c34.prop, _0x3930bb, _0x354caa, 0x1 < arguments.length);
      },
      'removeProp': function (_0x58ac77) {
        return this.each(function () {
          delete this[_0x3e3c34.propFix[_0x58ac77] || _0x58ac77];
        });
      }
    }), _0x3e3c34.extend({
      'prop': function (_0x3307a5, _0x17bb66, _0x163f27) {
        var _0x5876b3,
          _0x164079,
          _0x50e29e = _0x3307a5.nodeType;
        if (0x3 !== _0x50e29e && 0x8 !== _0x50e29e && 0x2 !== _0x50e29e) return 0x1 === _0x50e29e && _0x3e3c34.isXMLDoc(_0x3307a5) || (_0x17bb66 = _0x3e3c34.propFix[_0x17bb66] || _0x17bb66, _0x164079 = _0x3e3c34.propHooks[_0x17bb66]), void 0x0 !== _0x163f27 ? _0x164079 && 'set' in _0x164079 && void 0x0 !== (_0x5876b3 = _0x164079.set(_0x3307a5, _0x163f27, _0x17bb66)) ? _0x5876b3 : _0x3307a5[_0x17bb66] = _0x163f27 : _0x164079 && 'get' in _0x164079 && null !== (_0x5876b3 = _0x164079.get(_0x3307a5, _0x17bb66)) ? _0x5876b3 : _0x3307a5[_0x17bb66];
      },
      'propHooks': {
        'tabIndex': {
          'get': function (_0x10ba21) {
            var _0x3909cf = _0x3e3c34.find.attr(_0x10ba21, 'tabindex');
            return _0x3909cf ? parseInt(_0x3909cf, 0xa) : _0x513395.test(_0x10ba21.nodeName) || _0x3d137b.test(_0x10ba21.nodeName) && _0x10ba21.href ? 0x0 : -0x1;
          }
        }
      },
      'propFix': {
        'for': 'htmlFor',
        'class': 'className'
      }
    }), _0x16b25d.optSelected || (_0x3e3c34.propHooks.selected = {
      'get': function (_0xe0805e) {
        return _0xe0805e = _0xe0805e.parentNode, _0xe0805e && _0xe0805e.parentNode && _0xe0805e.parentNode.selectedIndex, null;
      },
      'set': function (_0xd1b5d) {
        _0xd1b5d = _0xd1b5d.parentNode, _0xd1b5d && (_0xd1b5d.selectedIndex, _0xd1b5d.parentNode && _0xd1b5d.parentNode.selectedIndex);
      }
    }), _0x3e3c34.each("tabIndex readOnly maxLength cellSpacing cellPadding rowSpan colSpan useMap frameBorder contentEditable".split(" "), function () {
      _0x3e3c34.propFix[this.toLowerCase()] = this;
    }), _0x3e3c34.fn.extend({
      'addClass': function (_0x85dc0e) {
        var _0x433989,
          _0xd1eb08,
          _0x84a919,
          _0xc5f90,
          _0x34106d,
          _0x328d0a,
          _0x13a0bb = 0x0;
        if (_0x3e3c34.isFunction(_0x85dc0e)) return this.each(function (_0x198659) {
          _0x3e3c34(this).addClass(_0x85dc0e.call(this, _0x198659, _0x43ac7e(this)));
        });
        if ('string' == typeof _0x85dc0e && _0x85dc0e) {
          for (_0x433989 = _0x85dc0e.match(_0x22da69) || []; _0xd1eb08 = this[_0x13a0bb++];) if (_0xc5f90 = _0x43ac7e(_0xd1eb08), _0x84a919 = 0x1 === _0xd1eb08.nodeType && " " + _0x356640(_0xc5f90) + " ") {
            for (_0x328d0a = 0x0; _0x34106d = _0x433989[_0x328d0a++];) 0x0 > _0x84a919.indexOf(" " + _0x34106d + " ") && (_0x84a919 += _0x34106d + " ");
            _0x84a919 = _0x356640(_0x84a919), _0xc5f90 !== _0x84a919 && _0xd1eb08.setAttribute('class', _0x84a919);
          }
        }
        return this;
      },
      'removeClass': function (_0x35a702) {
        var _0x118c6d,
          _0x27edbc,
          _0x2f9f8e,
          _0x40258d,
          _0x154d86,
          _0x44d67d,
          _0x152f92 = 0x0;
        if (_0x3e3c34.isFunction(_0x35a702)) return this.each(function (_0x100d87) {
          _0x3e3c34(this).removeClass(_0x35a702.call(this, _0x100d87, _0x43ac7e(this)));
        });
        if (!arguments.length) return this.attr('class', '');
        if ('string' == typeof _0x35a702 && _0x35a702) {
          for (_0x118c6d = _0x35a702.match(_0x22da69) || []; _0x27edbc = this[_0x152f92++];) if (_0x40258d = _0x43ac7e(_0x27edbc), _0x2f9f8e = 0x1 === _0x27edbc.nodeType && " " + _0x356640(_0x40258d) + " ") {
            for (_0x44d67d = 0x0; _0x154d86 = _0x118c6d[_0x44d67d++];) for (; -0x1 < _0x2f9f8e.indexOf(" " + _0x154d86 + " ");) _0x2f9f8e = _0x2f9f8e.replace(" " + _0x154d86 + " ", " ");
            _0x2f9f8e = _0x356640(_0x2f9f8e), _0x40258d !== _0x2f9f8e && _0x27edbc.setAttribute('class', _0x2f9f8e);
          }
        }
        return this;
      },
      'toggleClass': function (_0x1d179d, _0x219914) {
        var _0x270556 = typeof _0x1d179d;
        return 'boolean' == typeof _0x219914 && 'string' === _0x270556 ? _0x219914 ? this.addClass(_0x1d179d) : this.removeClass(_0x1d179d) : _0x3e3c34.isFunction(_0x1d179d) ? this.each(function (_0x12b7d6) {
          _0x3e3c34(this).toggleClass(_0x1d179d.call(this, _0x12b7d6, _0x43ac7e(this), _0x219914), _0x219914);
        }) : this.each(function () {
          var _0x54654e, _0x473e58, _0x196a8e, _0x10be9c;
          if ('string' === _0x270556) {
            _0x473e58 = 0x0, _0x196a8e = _0x3e3c34(this);
            for (_0x10be9c = _0x1d179d.match(_0x22da69) || []; _0x54654e = _0x10be9c[_0x473e58++];) _0x196a8e.hasClass(_0x54654e) ? _0x196a8e.removeClass(_0x54654e) : _0x196a8e.addClass(_0x54654e);
          } else void 0x0 !== _0x1d179d && 'boolean' !== _0x270556 || (_0x54654e = _0x43ac7e(this), _0x54654e && _0x527207.set(this, '__className__', _0x54654e), this.setAttribute && this.setAttribute('class', _0x54654e || !0x1 === _0x1d179d ? '' : _0x527207.get(this, '__className__') || ''));
        });
      },
      'hasClass': function (_0x598616) {
        var _0x570508,
          _0x40ff80 = 0x0;
        for (_0x598616 = " " + _0x598616 + " "; _0x570508 = this[_0x40ff80++];) if (0x1 === _0x570508.nodeType && -0x1 < (" " + _0x356640(_0x43ac7e(_0x570508)) + " ").indexOf(_0x598616)) return !0x0;
        return !0x1;
      }
    });
    var _0x2f7886 = /\r/g;
    _0x3e3c34.fn.extend({
      'val': function (_0x22013c) {
        var _0x2dbec9,
          _0x341d11,
          _0x9e2170,
          _0x403aba = this[0x0];
        if (arguments.length) return _0x9e2170 = _0x3e3c34.isFunction(_0x22013c), this.each(function (_0xe4385c) {
          var _0x3c20f3;
          0x1 === this.nodeType && (_0x3c20f3 = _0x9e2170 ? _0x22013c.call(this, _0xe4385c, _0x3e3c34(this).val()) : _0x22013c, null == _0x3c20f3 ? _0x3c20f3 = '' : 'number' == typeof _0x3c20f3 ? _0x3c20f3 += '' : Array.isArray(_0x3c20f3) && (_0x3c20f3 = _0x3e3c34.map(_0x3c20f3, function (_0x594fea) {
            return null == _0x594fea ? '' : _0x594fea + '';
          })), _0x2dbec9 = _0x3e3c34.valHooks[this.type] || _0x3e3c34.valHooks[this.nodeName.toLowerCase()], _0x2dbec9 && 'set' in _0x2dbec9 && void 0x0 !== _0x2dbec9.set(this, _0x3c20f3, 'value') || (this.value = _0x3c20f3));
        });
        if (_0x403aba) return _0x2dbec9 = _0x3e3c34.valHooks[_0x403aba.type] || _0x3e3c34.valHooks[_0x403aba.nodeName.toLowerCase()], _0x2dbec9 && 'get' in _0x2dbec9 && void 0x0 !== (_0x341d11 = _0x2dbec9.get(_0x403aba, 'value')) ? _0x341d11 : (_0x341d11 = _0x403aba.value, 'string' == typeof _0x341d11 ? _0x341d11.replace(_0x2f7886, '') : null == _0x341d11 ? '' : _0x341d11);
      }
    }), _0x3e3c34.extend({
      'valHooks': {
        'option': {
          'get': function (_0x1076b8) {
            var _0x18ab33 = _0x3e3c34.find.attr(_0x1076b8, 'value');
            return null != _0x18ab33 ? _0x18ab33 : _0x356640(_0x3e3c34.text(_0x1076b8));
          }
        },
        'select': {
          'get': function (_0x1d9701) {
            var _0xfad4bf,
              _0x24fdee,
              _0x5d5e0c = _0x1d9701.options,
              _0x1a97c1 = _0x1d9701.selectedIndex,
              _0x5f0fb2 = 'select-one' === _0x1d9701.type,
              _0x2dbc6d = _0x5f0fb2 ? null : [],
              _0x4070ec = _0x5f0fb2 ? _0x1a97c1 + 0x1 : _0x5d5e0c.length;
            for (_0x24fdee = 0x0 > _0x1a97c1 ? _0x4070ec : _0x5f0fb2 ? _0x1a97c1 : 0x0; _0x24fdee < _0x4070ec; _0x24fdee++) if (_0xfad4bf = _0x5d5e0c[_0x24fdee], (_0xfad4bf.selected || _0x24fdee === _0x1a97c1) && !_0xfad4bf.disabled && (!_0xfad4bf.parentNode.disabled || !_0x59415f(_0xfad4bf.parentNode, 'optgroup'))) {
              if (_0x1d9701 = _0x3e3c34(_0xfad4bf).val(), _0x5f0fb2) return _0x1d9701;
              _0x2dbc6d.push(_0x1d9701);
            }
            return _0x2dbc6d;
          },
          'set': function (_0x3a01f8, _0x38a069) {
            for (var _0x140086, _0x2525ab, _0x3a9d71 = _0x3a01f8.options, _0x134379 = _0x3e3c34.makeArray(_0x38a069), _0xd01f77 = _0x3a9d71.length; _0xd01f77--;) _0x2525ab = _0x3a9d71[_0xd01f77], (_0x2525ab.selected = -0x1 < _0x3e3c34.inArray(_0x3e3c34.valHooks.option.get(_0x2525ab), _0x134379)) && (_0x140086 = !0x0);
            return _0x140086 || (_0x3a01f8.selectedIndex = -0x1), _0x134379;
          }
        }
      }
    }), _0x3e3c34.each(['radio', 'checkbox'], function () {
      _0x3e3c34.valHooks[this] = {
        'set': function (_0x17df9a, _0x1049ce) {
          if (Array.isArray(_0x1049ce)) return _0x17df9a.checked = -0x1 < _0x3e3c34.inArray(_0x3e3c34(_0x17df9a).val(), _0x1049ce);
        }
      }, _0x16b25d.checkOn || (_0x3e3c34.valHooks[this].get = function (_0x55a8d6) {
        return null === _0x55a8d6.getAttribute('value') ? 'on' : _0x55a8d6.value;
      });
    });
    var _0x31fe46 = /^(?:focusinfocus|focusoutblur)$/;
    _0x3e3c34.extend(_0x3e3c34.event, {
      'trigger': function (_0x59aeca, _0x45ded3, _0x500939, _0x409424) {
        var _0x266f27,
          _0x566ea9,
          _0x5940cd,
          _0xe861aa,
          _0x474250,
          _0x1bdbd2,
          _0x23e06c,
          _0x3f6660 = [_0x500939 || _0x4bffa6],
          _0x448b2e = _0x1261e9.call(_0x59aeca, 'type') ? _0x59aeca.type : _0x59aeca;
        _0x266f27 = _0x1261e9.call(_0x59aeca, 'namespace') ? _0x59aeca.namespace.split('.') : [];
        if (_0x566ea9 = _0x5940cd = _0x500939 = _0x500939 || _0x4bffa6, 0x3 !== _0x500939.nodeType && 0x8 !== _0x500939.nodeType && !_0x31fe46.test(_0x448b2e + _0x3e3c34.event.triggered) && (-0x1 < _0x448b2e.indexOf('.') && (_0x266f27 = _0x448b2e.split('.'), _0x448b2e = _0x266f27.shift(), _0x266f27.sort()), _0x474250 = 0x0 > _0x448b2e.indexOf(':') && 'on' + _0x448b2e, _0x59aeca = _0x59aeca[_0x3e3c34.expando] ? _0x59aeca : new _0x3e3c34.Event(_0x448b2e, 'object' == typeof _0x59aeca && _0x59aeca), _0x59aeca.isTrigger = _0x409424 ? 0x2 : 0x3, _0x59aeca.namespace = _0x266f27.join('.'), _0x59aeca.rnamespace = _0x59aeca.namespace ? RegExp("(^|\\.)" + _0x266f27.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, _0x59aeca.result = void 0x0, _0x59aeca.target || (_0x59aeca.target = _0x500939), _0x45ded3 = null == _0x45ded3 ? [_0x59aeca] : _0x3e3c34.makeArray(_0x45ded3, [_0x59aeca]), _0x23e06c = _0x3e3c34.event.special[_0x448b2e] || {}, _0x409424 || !_0x23e06c.trigger || !0x1 !== _0x23e06c.trigger.apply(_0x500939, _0x45ded3))) {
          if (!_0x409424 && !_0x23e06c.noBubble && !_0x3e3c34.isWindow(_0x500939)) {
            _0xe861aa = _0x23e06c.delegateType || _0x448b2e;
            for (_0x31fe46.test(_0xe861aa + _0x448b2e) || (_0x566ea9 = _0x566ea9.parentNode); _0x566ea9; _0x566ea9 = _0x566ea9.parentNode) _0x3f6660.push(_0x566ea9), _0x5940cd = _0x566ea9;
            _0x5940cd === (_0x500939.ownerDocument || _0x4bffa6) && _0x3f6660.push(_0x5940cd.defaultView || _0x5940cd.parentWindow || _0x2ec427);
          }
          for (_0x266f27 = 0x0; (_0x566ea9 = _0x3f6660[_0x266f27++]) && !_0x59aeca.isPropagationStopped();) _0x59aeca.type = 0x1 < _0x266f27 ? _0xe861aa : _0x23e06c.bindType || _0x448b2e, (_0x1bdbd2 = (_0x527207.get(_0x566ea9, 'events') || {})[_0x59aeca.type] && _0x527207.get(_0x566ea9, 'handle')) && _0x1bdbd2.apply(_0x566ea9, _0x45ded3), (_0x1bdbd2 = _0x474250 && _0x566ea9[_0x474250]) && _0x1bdbd2.apply && _0x12a9f6(_0x566ea9) && (_0x59aeca.result = _0x1bdbd2.apply(_0x566ea9, _0x45ded3), !0x1 === _0x59aeca.result && _0x59aeca.preventDefault());
          return _0x59aeca.type = _0x448b2e, _0x409424 || _0x59aeca.isDefaultPrevented() || _0x23e06c._default && !0x1 !== _0x23e06c._default.apply(_0x3f6660.pop(), _0x45ded3) || !_0x12a9f6(_0x500939) || _0x474250 && _0x3e3c34.isFunction(_0x500939[_0x448b2e]) && !_0x3e3c34.isWindow(_0x500939) && (_0x5940cd = _0x500939[_0x474250], _0x5940cd && (_0x500939[_0x474250] = null), _0x3e3c34.event.triggered = _0x448b2e, _0x500939[_0x448b2e](), _0x3e3c34.event.triggered = void 0x0, _0x5940cd && (_0x500939[_0x474250] = _0x5940cd)), _0x59aeca.result;
        }
      },
      'simulate': function (_0x4649a4, _0x19ebd4, _0x1278c0) {
        _0x4649a4 = _0x3e3c34.extend(new _0x3e3c34.Event(), _0x1278c0, {
          'type': _0x4649a4,
          'isSimulated': !0x0
        }), _0x3e3c34.event.trigger(_0x4649a4, null, _0x19ebd4);
      }
    }), _0x3e3c34.fn.extend({
      'trigger': function (_0x15175d, _0x247722) {
        return this.each(function () {
          _0x3e3c34.event.trigger(_0x15175d, _0x247722, this);
        });
      },
      'triggerHandler': function (_0x4fd68d, _0x4e82b8) {
        var _0x3ab1f1 = this[0x0];
        if (_0x3ab1f1) return _0x3e3c34.event.trigger(_0x4fd68d, _0x4e82b8, _0x3ab1f1, !0x0);
      }
    }), _0x3e3c34.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function (_0x4e99a5, _0x4a4cbf) {
      _0x3e3c34.fn[_0x4a4cbf] = function (_0x54b30c, _0x816387) {
        return 0x0 < arguments.length ? this.on(_0x4a4cbf, null, _0x54b30c, _0x816387) : this.trigger(_0x4a4cbf);
      };
    }), _0x3e3c34.fn.extend({
      'hover': function (_0x2aa446, _0x5700ae) {
        return this.mouseenter(_0x2aa446).mouseleave(_0x5700ae || _0x2aa446);
      }
    }), _0x16b25d.focusin = 'onfocusin' in _0x2ec427, _0x16b25d.focusin || _0x3e3c34.each({
      'focus': 'focusin',
      'blur': 'focusout'
    }, function (_0xa5755, _0x142ab2) {
      var _0x1e87de = function (_0xaaa930) {
        _0x3e3c34.event.simulate(_0x142ab2, _0xaaa930.target, _0x3e3c34.event.fix(_0xaaa930));
      };
      _0x3e3c34.event.special[_0x142ab2] = {
        'setup': function () {
          var _0x24c9be = this.ownerDocument || this,
            _0x2b8a33 = _0x527207.access(_0x24c9be, _0x142ab2);
          _0x2b8a33 || _0x24c9be.addEventListener(_0xa5755, _0x1e87de, !0x0), _0x527207.access(_0x24c9be, _0x142ab2, (_0x2b8a33 || 0x0) + 0x1);
        },
        'teardown': function () {
          var _0x478bd7 = this.ownerDocument || this,
            _0x2353cc = _0x527207.access(_0x478bd7, _0x142ab2) - 0x1;
          _0x2353cc ? _0x527207.access(_0x478bd7, _0x142ab2, _0x2353cc) : (_0x478bd7.removeEventListener(_0xa5755, _0x1e87de, !0x0), _0x527207.remove(_0x478bd7, _0x142ab2));
        }
      };
    });
    var _0x9d7945 = _0x2ec427.location,
      _0x243b3e = _0x3e3c34.now(),
      _0x697731 = /\?/;
    _0x3e3c34.parseXML = function (_0x273d2a) {
      var _0x32f3fa;
      if (!_0x273d2a || 'string' != typeof _0x273d2a) return null;
      try {
        _0x32f3fa = new _0x2ec427.DOMParser().parseFromString(_0x273d2a, 'text/xml');
      } catch (_0x57b79b) {
        _0x32f3fa = void 0x0;
      }
      return _0x32f3fa && !_0x32f3fa.getElementsByTagName('parsererror').length || _0x3e3c34.error("Invalid XML: " + _0x273d2a), _0x32f3fa;
    };
    var _0x243a59 = /\[\]$/,
      _0x52660e = /\r?\n/g,
      _0x3d2aeb = /^(?:submit|button|image|reset|file)$/i,
      _0x5b268b = /^(?:input|select|textarea|keygen)/i;
    _0x3e3c34.param = function (_0x17d56a, _0x131fbf) {
      var _0x3f80e0,
        _0x15f073 = [],
        _0xb03142 = function (_0x742c91, _0x4ec3c6) {
          var _0x4d6d5b = _0x3e3c34.isFunction(_0x4ec3c6) ? _0x4ec3c6() : _0x4ec3c6;
          _0x15f073[_0x15f073.length] = encodeURIComponent(_0x742c91) + '=' + encodeURIComponent(null == _0x4d6d5b ? '' : _0x4d6d5b);
        };
      if (Array.isArray(_0x17d56a) || _0x17d56a.jquery && !_0x3e3c34.isPlainObject(_0x17d56a)) _0x3e3c34.each(_0x17d56a, function () {
        _0xb03142(this.name, this.value);
      });else {
        for (_0x3f80e0 in _0x17d56a) _0x2c2274(_0x3f80e0, _0x17d56a[_0x3f80e0], _0x131fbf, _0xb03142);
      }
      return _0x15f073.join('&');
    }, _0x3e3c34.fn.extend({
      'serialize': function () {
        return _0x3e3c34.param(this.serializeArray());
      },
      'serializeArray': function () {
        return this.map(function () {
          var _0x263c55 = _0x3e3c34.prop(this, 'elements');
          return _0x263c55 ? _0x3e3c34.makeArray(_0x263c55) : this;
        }).filter(function () {
          var _0x1e6fb2 = this.type;
          return this.name && !_0x3e3c34(this).is(':disabled') && _0x5b268b.test(this.nodeName) && !_0x3d2aeb.test(_0x1e6fb2) && (this.checked || !_0xfa8f44.test(_0x1e6fb2));
        }).map(function (_0x84154f, _0x75d0ce) {
          var _0x34130c = _0x3e3c34(this).val();
          return null == _0x34130c ? null : Array.isArray(_0x34130c) ? _0x3e3c34.map(_0x34130c, function (_0x223202) {
            return {
              'name': _0x75d0ce.name,
              'value': _0x223202.replace(_0x52660e, "\r\n")
            };
          }) : {
            'name': _0x75d0ce.name,
            'value': _0x34130c.replace(_0x52660e, "\r\n")
          };
        }).get();
      }
    });
    var _0x32ef50 = /%20/g,
      _0x575b73 = /#.*$/,
      _0x242441 = /([?&])_=[^&]*/,
      _0x789aa4 = /^(.*?):[ \t]*([^\r\n]*)$/gm,
      _0x4a00dc = /^(?:GET|HEAD)$/,
      _0x13fc4 = /^\/\//,
      _0x338941 = {},
      _0x413e6c = {},
      _0x3248e2 = '*/'.concat('*'),
      _0x25ce10 = _0x4bffa6.createElement('a');
    _0x25ce10.href = _0x9d7945.href, _0x3e3c34.extend({
      'active': 0x0,
      'lastModified': {},
      'etag': {},
      'ajaxSettings': {
        'url': _0x9d7945.href,
        'type': 'GET',
        'isLocal': /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(_0x9d7945.protocol),
        'global': !0x0,
        'processData': !0x0,
        'async': !0x0,
        'contentType': "application/x-www-form-urlencoded; charset=UTF-8",
        'accepts': {
          '*': _0x3248e2,
          'text': 'text/plain',
          'html': 'text/html',
          'xml': "application/xml, text/xml",
          'json': "application/json, text/javascript"
        },
        'contents': {
          'xml': /\bxml\b/,
          'html': /\bhtml/,
          'json': /\bjson\b/
        },
        'responseFields': {
          'xml': 'responseXML',
          'text': 'responseText',
          'json': 'responseJSON'
        },
        'converters': {
          "* text": String,
          "text html": !0x0,
          "text json": JSON.parse,
          "text xml": _0x3e3c34.parseXML
        },
        'flatOptions': {
          'url': !0x0,
          'context': !0x0
        }
      },
      'ajaxSetup': function (_0x572aeb, _0x49d176) {
        return _0x49d176 ? _0x45402d(_0x45402d(_0x572aeb, _0x3e3c34.ajaxSettings), _0x49d176) : _0x45402d(_0x3e3c34.ajaxSettings, _0x572aeb);
      },
      'ajaxPrefilter': _0x4fd2e4(_0x338941),
      'ajaxTransport': _0x4fd2e4(_0x413e6c),
      'ajax': function (_0x1a9227, _0x54dd5a) {
        function _0x3ab9c0(_0x47f445, _0x232c23, _0x59eb8c, _0x5a9858) {
          var _0x519f9f,
            _0x5253fa,
            _0x319cf3,
            _0x31bf1d,
            _0x5b193d = _0x232c23;
          if (!_0x53d5d3) {
            _0x53d5d3 = !0x0, _0x2ab479 && _0x2ec427.clearTimeout(_0x2ab479), _0x4667e4 = void 0x0, _0x58be68 = _0x5a9858 || '', _0x2fa2d9.readyState = 0x0 < _0x47f445 ? 0x4 : 0x0, _0x5a9858 = 0xc8 <= _0x47f445 && 0x12c > _0x47f445 || 0x130 === _0x47f445;
            if (_0x59eb8c) {
              _0x319cf3 = _0x5c5363;
              for (var _0x2c5257 = _0x2fa2d9, _0x54bef9, _0xc79c20, _0x211c33, _0x4c5d38, _0x235a8e = _0x319cf3.contents, _0x2e6cb9 = _0x319cf3.dataTypes; '*' === _0x2e6cb9[0x0];) _0x2e6cb9.shift(), void 0x0 === _0x54bef9 && (_0x54bef9 = _0x319cf3.mimeType || _0x2c5257.getResponseHeader('Content-Type'));
              if (_0x54bef9) {
                for (_0xc79c20 in _0x235a8e) if (_0x235a8e[_0xc79c20] && _0x235a8e[_0xc79c20].test(_0x54bef9)) {
                  _0x2e6cb9.unshift(_0xc79c20);
                  break;
                }
              }
              if (_0x2e6cb9[0x0] in _0x59eb8c) _0x211c33 = _0x2e6cb9[0x0];else {
                for (_0xc79c20 in _0x59eb8c) {
                  if (!_0x2e6cb9[0x0] || _0x319cf3.converters[_0xc79c20 + " " + _0x2e6cb9[0x0]]) {
                    _0x211c33 = _0xc79c20;
                    break;
                  }
                  _0x4c5d38 || (_0x4c5d38 = _0xc79c20);
                }
                _0x211c33 = _0x211c33 || _0x4c5d38;
              }
              _0x319cf3 = _0x59eb8c = _0x211c33 ? (_0x211c33 !== _0x2e6cb9[0x0] && _0x2e6cb9.unshift(_0x211c33), _0x59eb8c[_0x211c33]) : void 0x0;
            }
            var _0x1b782f;
            _0x5d13de: {
              _0x59eb8c = _0x5c5363, _0x54bef9 = _0x319cf3, _0xc79c20 = _0x2fa2d9, _0x211c33 = _0x5a9858;
              var _0x218f38, _0x41ea4a, _0x4cda27;
              _0x319cf3 = {}, _0x2c5257 = _0x59eb8c.dataTypes.slice();
              if (_0x2c5257[0x1]) {
                for (_0x218f38 in _0x59eb8c.converters) _0x319cf3[_0x218f38.toLowerCase()] = _0x59eb8c.converters[_0x218f38];
              }
              for (_0x4c5d38 = _0x2c5257.shift(); _0x4c5d38;) if (_0x59eb8c.responseFields[_0x4c5d38] && (_0xc79c20[_0x59eb8c.responseFields[_0x4c5d38]] = _0x54bef9), !_0x4cda27 && _0x211c33 && _0x59eb8c.dataFilter && (_0x54bef9 = _0x59eb8c.dataFilter(_0x54bef9, _0x59eb8c.dataType)), _0x4cda27 = _0x4c5d38, _0x4c5d38 = _0x2c5257.shift()) {
                if ('*' === _0x4c5d38) _0x4c5d38 = _0x4cda27;else {
                  if ('*' !== _0x4cda27 && _0x4cda27 !== _0x4c5d38) {
                    if (_0x218f38 = _0x319cf3[_0x4cda27 + " " + _0x4c5d38] || _0x319cf3["* " + _0x4c5d38], !_0x218f38) {
                      for (_0x1b782f in _0x319cf3) if (_0x41ea4a = _0x1b782f.split(" "), _0x41ea4a[0x1] === _0x4c5d38 && (_0x218f38 = _0x319cf3[_0x4cda27 + " " + _0x41ea4a[0x0]] || _0x319cf3["* " + _0x41ea4a[0x0]])) {
                        !0x0 === _0x218f38 ? _0x218f38 = _0x319cf3[_0x1b782f] : !0x0 !== _0x319cf3[_0x1b782f] && (_0x4c5d38 = _0x41ea4a[0x0], _0x2c5257.unshift(_0x41ea4a[0x1]));
                        break;
                      }
                    }
                    if (!0x0 !== _0x218f38) {
                      if (_0x218f38 && _0x59eb8c.throws) _0x54bef9 = _0x218f38(_0x54bef9);else try {
                        _0x54bef9 = _0x218f38(_0x54bef9);
                      } catch (_0x47faf0) {
                        _0x1b782f = {
                          'state': 'parsererror',
                          'error': _0x218f38 ? _0x47faf0 : "No conversion from " + _0x4cda27 + " to " + _0x4c5d38
                        };
                        break _0x5d13de;
                      }
                    }
                  }
                }
              }
              _0x1b782f = {
                'state': 'success',
                'data': _0x54bef9
              };
            }
            _0x319cf3 = _0x1b782f, _0x5a9858 ? (_0x5c5363.ifModified && (_0x31bf1d = _0x2fa2d9.getResponseHeader('Last-Modified'), _0x31bf1d && (_0x3e3c34.lastModified[_0x37070b] = _0x31bf1d), _0x31bf1d = _0x2fa2d9.getResponseHeader('etag'), _0x31bf1d && (_0x3e3c34.etag[_0x37070b] = _0x31bf1d)), 0xcc === _0x47f445 || 'HEAD' === _0x5c5363.type ? _0x5b193d = 'nocontent' : 0x130 === _0x47f445 ? _0x5b193d = 'notmodified' : (_0x5b193d = _0x319cf3.state, _0x519f9f = _0x319cf3.data, _0x5253fa = _0x319cf3.error, _0x5a9858 = !_0x5253fa)) : (_0x5253fa = _0x5b193d, !_0x47f445 && _0x5b193d || (_0x5b193d = 'error', 0x0 > _0x47f445 && (_0x47f445 = 0x0))), _0x2fa2d9.status = _0x47f445, _0x2fa2d9.statusText = (_0x232c23 || _0x5b193d) + '', _0x5a9858 ? _0x1fb827.resolveWith(_0x1c63e8, [_0x519f9f, _0x5b193d, _0x2fa2d9]) : _0x1fb827.rejectWith(_0x1c63e8, [_0x2fa2d9, _0x5b193d, _0x5253fa]), _0x2fa2d9.statusCode(_0x3247c2), _0x3247c2 = void 0x0, _0x397b6e && _0x3234d8.trigger(_0x5a9858 ? 'ajaxSuccess' : 'ajaxError', [_0x2fa2d9, _0x5c5363, _0x5a9858 ? _0x519f9f : _0x5253fa]), _0x733939.fireWith(_0x1c63e8, [_0x2fa2d9, _0x5b193d]), _0x397b6e && (_0x3234d8.trigger('ajaxComplete', [_0x2fa2d9, _0x5c5363]), --_0x3e3c34.active || _0x3e3c34.event.trigger('ajaxStop'));
          }
        }
        'object' == typeof _0x1a9227 && (_0x54dd5a = _0x1a9227, _0x1a9227 = void 0x0), _0x54dd5a = _0x54dd5a || {};
        var _0x4667e4,
          _0x37070b,
          _0x58be68,
          _0x167599,
          _0x2ab479,
          _0x2f5daa,
          _0x53d5d3,
          _0x397b6e,
          _0x3524d8,
          _0xeae8af,
          _0x5c5363 = _0x3e3c34.ajaxSetup({}, _0x54dd5a),
          _0x1c63e8 = _0x5c5363.context || _0x5c5363,
          _0x3234d8 = _0x5c5363.context && (_0x1c63e8.nodeType || _0x1c63e8.jquery) ? _0x3e3c34(_0x1c63e8) : _0x3e3c34.event,
          _0x1fb827 = _0x3e3c34.Deferred(),
          _0x733939 = _0x3e3c34.Callbacks("once memory"),
          _0x3247c2 = _0x5c5363.statusCode || {},
          _0x5d7086 = {},
          _0x2ddbd9 = {},
          _0x3b5815 = 'canceled',
          _0x2fa2d9 = {
            'readyState': 0x0,
            'getResponseHeader': function (_0x318125) {
              var _0x3f7bad;
              if (_0x53d5d3) {
                if (!_0x167599) {
                  for (_0x167599 = {}; _0x3f7bad = _0x789aa4.exec(_0x58be68);) _0x167599[_0x3f7bad[0x1].toLowerCase()] = _0x3f7bad[0x2];
                }
                _0x3f7bad = _0x167599[_0x318125.toLowerCase()];
              }
              return null == _0x3f7bad ? null : _0x3f7bad;
            },
            'getAllResponseHeaders': function () {
              return _0x53d5d3 ? _0x58be68 : null;
            },
            'setRequestHeader': function (_0x5355c4, _0x3e4071) {
              return null == _0x53d5d3 && (_0x5355c4 = _0x2ddbd9[_0x5355c4.toLowerCase()] = _0x2ddbd9[_0x5355c4.toLowerCase()] || _0x5355c4, _0x5d7086[_0x5355c4] = _0x3e4071), this;
            },
            'overrideMimeType': function (_0x352d32) {
              return null == _0x53d5d3 && (_0x5c5363.mimeType = _0x352d32), this;
            },
            'statusCode': function (_0x405ce4) {
              var _0x3116ab;
              if (_0x405ce4) {
                if (_0x53d5d3) _0x2fa2d9.always(_0x405ce4[_0x2fa2d9.status]);else {
                  for (_0x3116ab in _0x405ce4) _0x3247c2[_0x3116ab] = [_0x3247c2[_0x3116ab], _0x405ce4[_0x3116ab]];
                }
              }
              return this;
            },
            'abort': function (_0x2da78b) {
              return _0x2da78b = _0x2da78b || _0x3b5815, _0x4667e4 && _0x4667e4.abort(_0x2da78b), _0x3ab9c0(0x0, _0x2da78b), this;
            }
          };
        if (_0x1fb827.promise(_0x2fa2d9), _0x5c5363.url = ((_0x1a9227 || _0x5c5363.url || _0x9d7945.href) + '').replace(_0x13fc4, _0x9d7945.protocol + '//'), _0x5c5363.type = _0x54dd5a.method || _0x54dd5a.type || _0x5c5363.method || _0x5c5363.type, _0x5c5363.dataTypes = (_0x5c5363.dataType || '*').toLowerCase().match(_0x22da69) || [''], null == _0x5c5363.crossDomain) {
          _0x2f5daa = _0x4bffa6.createElement('a');
          try {
            _0x2f5daa.href = _0x5c5363.url, _0x2f5daa.href = _0x2f5daa.href, _0x5c5363.crossDomain = _0x25ce10.protocol + '//' + _0x25ce10.host != _0x2f5daa.protocol + '//' + _0x2f5daa.host;
          } catch (_0x4a8861) {
            _0x5c5363.crossDomain = !0x0;
          }
        }
        if (_0x5c5363.data && _0x5c5363.processData && 'string' != typeof _0x5c5363.data && (_0x5c5363.data = _0x3e3c34.param(_0x5c5363.data, _0x5c5363.traditional)), _0x1bc628(_0x338941, _0x5c5363, _0x54dd5a, _0x2fa2d9), _0x53d5d3) return _0x2fa2d9;
        (_0x397b6e = _0x3e3c34.event && _0x5c5363.global) && 0x0 === _0x3e3c34.active++ && _0x3e3c34.event.trigger('ajaxStart'), _0x5c5363.type = _0x5c5363.type.toUpperCase(), _0x5c5363.hasContent = !_0x4a00dc.test(_0x5c5363.type), _0x37070b = _0x5c5363.url.replace(_0x575b73, ''), _0x5c5363.hasContent ? _0x5c5363.data && _0x5c5363.processData && 0x0 === (_0x5c5363.contentType || '').indexOf('application/x-www-form-urlencoded') && (_0x5c5363.data = _0x5c5363.data.replace(_0x32ef50, '+')) : (_0xeae8af = _0x5c5363.url.slice(_0x37070b.length), _0x5c5363.data && (_0x37070b += (_0x697731.test(_0x37070b) ? '&' : '?') + _0x5c5363.data, delete _0x5c5363.data), !0x1 === _0x5c5363.cache && (_0x37070b = _0x37070b.replace(_0x242441, '$1'), _0xeae8af = (_0x697731.test(_0x37070b) ? '&' : '?') + '_=' + _0x243b3e++ + _0xeae8af), _0x5c5363.url = _0x37070b + _0xeae8af), _0x5c5363.ifModified && (_0x3e3c34.lastModified[_0x37070b] && _0x2fa2d9.setRequestHeader('If-Modified-Since', _0x3e3c34.lastModified[_0x37070b]), _0x3e3c34.etag[_0x37070b] && _0x2fa2d9.setRequestHeader('If-None-Match', _0x3e3c34.etag[_0x37070b])), (_0x5c5363.data && _0x5c5363.hasContent && !0x1 !== _0x5c5363.contentType || _0x54dd5a.contentType) && _0x2fa2d9.setRequestHeader('Content-Type', _0x5c5363.contentType), _0x2fa2d9.setRequestHeader('Accept', _0x5c5363.dataTypes[0x0] && _0x5c5363.accepts[_0x5c5363.dataTypes[0x0]] ? _0x5c5363.accepts[_0x5c5363.dataTypes[0x0]] + ('*' !== _0x5c5363.dataTypes[0x0] ? ", " + _0x3248e2 + "; q=0.01" : '') : _0x5c5363.accepts['*']);
        for (_0x3524d8 in _0x5c5363.headers) _0x2fa2d9.setRequestHeader(_0x3524d8, _0x5c5363.headers[_0x3524d8]);
        if (_0x5c5363.beforeSend && (!0x1 === _0x5c5363.beforeSend.call(_0x1c63e8, _0x2fa2d9, _0x5c5363) || _0x53d5d3)) return _0x2fa2d9.abort();
        if (_0x3b5815 = 'abort', _0x733939.add(_0x5c5363.complete), _0x2fa2d9.done(_0x5c5363.success), _0x2fa2d9.fail(_0x5c5363.error), _0x4667e4 = _0x1bc628(_0x413e6c, _0x5c5363, _0x54dd5a, _0x2fa2d9)) {
          if (_0x2fa2d9.readyState = 0x1, _0x397b6e && _0x3234d8.trigger('ajaxSend', [_0x2fa2d9, _0x5c5363]), _0x53d5d3) return _0x2fa2d9;
          _0x5c5363.async && 0x0 < _0x5c5363.timeout && (_0x2ab479 = _0x2ec427.setTimeout(function () {
            _0x2fa2d9.abort('timeout');
          }, _0x5c5363.timeout));
          try {
            _0x53d5d3 = !0x1, _0x4667e4.send(_0x5d7086, _0x3ab9c0);
          } catch (_0x252660) {
            if (_0x53d5d3) throw _0x252660;
            _0x3ab9c0(-0x1, _0x252660);
          }
        } else _0x3ab9c0(-0x1, "No Transport");
        return _0x2fa2d9;
      },
      'getJSON': function (_0x3f0d2e, _0x15348a, _0x314dc8) {
        return _0x3e3c34.get(_0x3f0d2e, _0x15348a, _0x314dc8, 'json');
      },
      'getScript': function (_0x44fd8d, _0x993428) {
        return _0x3e3c34.get(_0x44fd8d, void 0x0, _0x993428, 'script');
      }
    }), _0x3e3c34.each(['get', 'post'], function (_0x21b543, _0x5a9fff) {
      _0x3e3c34[_0x5a9fff] = function (_0x5c37cf, _0xa7163d, _0x416afc, _0x206850) {
        return _0x3e3c34.isFunction(_0xa7163d) && (_0x206850 = _0x206850 || _0x416afc, _0x416afc = _0xa7163d, _0xa7163d = void 0x0), _0x3e3c34.ajax(_0x3e3c34.extend({
          'url': _0x5c37cf,
          'type': _0x5a9fff,
          'dataType': _0x206850,
          'data': _0xa7163d,
          'success': _0x416afc
        }, _0x3e3c34.isPlainObject(_0x5c37cf) && _0x5c37cf));
      };
    }), _0x3e3c34._evalUrl = function (_0x1e6f18) {
      return _0x3e3c34.ajax({
        'url': _0x1e6f18,
        'type': 'GET',
        'dataType': 'script',
        'cache': !0x0,
        'async': !0x1,
        'global': !0x1,
        'throws': !0x0
      });
    }, _0x3e3c34.fn.extend({
      'wrapAll': function (_0x2555cd) {
        var _0x14d7f9;
        return this[0x0] && (_0x3e3c34.isFunction(_0x2555cd) && (_0x2555cd = _0x2555cd.call(this[0x0])), _0x14d7f9 = _0x3e3c34(_0x2555cd, this[0x0].ownerDocument).eq(0x0).clone(!0x0), this[0x0].parentNode && _0x14d7f9.insertBefore(this[0x0]), _0x14d7f9.map(function () {
          for (var _0x536db1 = this; _0x536db1.firstElementChild;) _0x536db1 = _0x536db1.firstElementChild;
          return _0x536db1;
        }).append(this)), this;
      },
      'wrapInner': function (_0x41f699) {
        return _0x3e3c34.isFunction(_0x41f699) ? this.each(function (_0x10281a) {
          _0x3e3c34(this).wrapInner(_0x41f699.call(this, _0x10281a));
        }) : this.each(function () {
          var _0x5b4bdf = _0x3e3c34(this),
            _0x104aba = _0x5b4bdf.contents();
          _0x104aba.length ? _0x104aba.wrapAll(_0x41f699) : _0x5b4bdf.append(_0x41f699);
        });
      },
      'wrap': function (_0x3e9c63) {
        var _0x3388ab = _0x3e3c34.isFunction(_0x3e9c63);
        return this.each(function (_0x23ab02) {
          _0x3e3c34(this).wrapAll(_0x3388ab ? _0x3e9c63.call(this, _0x23ab02) : _0x3e9c63);
        });
      },
      'unwrap': function (_0x93b5bb) {
        return this.parent(_0x93b5bb).not('body').each(function () {
          _0x3e3c34(this).replaceWith(this.childNodes);
        }), this;
      }
    }), _0x3e3c34.expr.pseudos.hidden = function (_0x3304f9) {
      return !_0x3e3c34.expr.pseudos.visible(_0x3304f9);
    }, _0x3e3c34.expr.pseudos.visible = function (_0x23e18b) {
      return !(!_0x23e18b.offsetWidth && !_0x23e18b.offsetHeight && !_0x23e18b.getClientRects().length);
    }, _0x3e3c34.ajaxSettings.xhr = function () {
      try {
        return new _0x2ec427.XMLHttpRequest();
      } catch (_0x592c4e) {}
    };
    var _0xcbfcbc = {
        '0': 0xc8,
        0x4c7: 0xcc
      },
      _0x213c5e = _0x3e3c34.ajaxSettings.xhr();
    _0x16b25d.cors = !!_0x213c5e && 'withCredentials' in _0x213c5e, _0x16b25d.ajax = _0x213c5e = !!_0x213c5e, _0x3e3c34.ajaxTransport(function (_0x331858) {
      var _0x4a8e50, _0x5ecef4;
      if (_0x16b25d.cors || _0x213c5e && !_0x331858.crossDomain) return {
        'send': function (_0x3f7bb9, _0x4339b0) {
          var _0x5802b2,
            _0x1586ec = _0x331858.xhr();
          if (_0x1586ec.open(_0x331858.type, _0x331858.url, _0x331858.async, _0x331858.username, _0x331858.password), _0x331858.xhrFields) {
            for (_0x5802b2 in _0x331858.xhrFields) _0x1586ec[_0x5802b2] = _0x331858.xhrFields[_0x5802b2];
          }
          _0x331858.mimeType && _0x1586ec.overrideMimeType && _0x1586ec.overrideMimeType(_0x331858.mimeType), _0x331858.crossDomain || _0x3f7bb9['X-Requested-With'] || (_0x3f7bb9['X-Requested-With'] = 'XMLHttpRequest');
          for (_0x5802b2 in _0x3f7bb9) _0x1586ec.setRequestHeader(_0x5802b2, _0x3f7bb9[_0x5802b2]);
          _0x4a8e50 = function (_0x17aa1f) {
            return function () {
              _0x4a8e50 && (_0x4a8e50 = _0x5ecef4 = _0x1586ec.onload = _0x1586ec.onerror = _0x1586ec.onabort = _0x1586ec.onreadystatechange = null, 'abort' === _0x17aa1f ? _0x1586ec.abort() : 'error' === _0x17aa1f ? 'number' != typeof _0x1586ec.status ? _0x4339b0(0x0, 'error') : _0x4339b0(_0x1586ec.status, _0x1586ec.statusText) : _0x4339b0(_0xcbfcbc[_0x1586ec.status] || _0x1586ec.status, _0x1586ec.statusText, 'text' !== (_0x1586ec.responseType || 'text') || 'string' != typeof _0x1586ec.responseText ? {
                'binary': _0x1586ec.response
              } : {
                'text': _0x1586ec.responseText
              }, _0x1586ec.getAllResponseHeaders()));
            };
          }, _0x1586ec.onload = _0x4a8e50(), _0x5ecef4 = _0x1586ec.onerror = _0x4a8e50('error'), void 0x0 !== _0x1586ec.onabort ? _0x1586ec.onabort = _0x5ecef4 : _0x1586ec.onreadystatechange = function () {
            0x4 === _0x1586ec.readyState && _0x2ec427.setTimeout(function () {
              _0x4a8e50 && _0x5ecef4();
            });
          }, _0x4a8e50 = _0x4a8e50('abort');
          try {
            _0x1586ec.send(_0x331858.hasContent && _0x331858.data || null);
          } catch (_0x49ee67) {
            if (_0x4a8e50) throw _0x49ee67;
          }
        },
        'abort': function () {
          _0x4a8e50 && _0x4a8e50();
        }
      };
    }), _0x3e3c34.ajaxPrefilter(function (_0x40c1dc) {
      _0x40c1dc.crossDomain && (_0x40c1dc.contents.script = !0x1);
    }), _0x3e3c34.ajaxSetup({
      'accepts': {
        'script': "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
      },
      'contents': {
        'script': /\b(?:java|ecma)script\b/
      },
      'converters': {
        "text script": function (_0x324780) {
          return _0x3e3c34.globalEval(_0x324780), _0x324780;
        }
      }
    }), _0x3e3c34.ajaxPrefilter('script', function (_0x59811d) {
      void 0x0 === _0x59811d.cache && (_0x59811d.cache = !0x1), _0x59811d.crossDomain && (_0x59811d.type = 'GET');
    }), _0x3e3c34.ajaxTransport('script', function (_0x2c955d) {
      if (_0x2c955d.crossDomain) {
        var _0x1d8618, _0x492eb6;
        return {
          'send': function (_0x526c71, _0x318925) {
            _0x1d8618 = _0x3e3c34('<script>').prop({
              'charset': _0x2c955d.scriptCharset,
              'src': _0x2c955d.url
            }).on("load error", _0x492eb6 = function (_0x5be988) {
              _0x1d8618.remove(), _0x492eb6 = null, _0x5be988 && _0x318925('error' === _0x5be988.type ? 0x194 : 0xc8, _0x5be988.type);
            }), _0x4bffa6.head.appendChild(_0x1d8618[0x0]);
          },
          'abort': function () {
            _0x492eb6 && _0x492eb6();
          }
        };
      }
    });
    var _0x232333 = [],
      _0x408c29 = /(=)\?(?=&|$)|\?\?/;
    _0x3e3c34.ajaxSetup({
      'jsonp': 'callback',
      'jsonpCallback': function () {
        var _0x4307e0 = _0x232333.pop() || _0x3e3c34.expando + '_' + _0x243b3e++;
        return this[_0x4307e0] = !0x0, _0x4307e0;
      }
    }), _0x3e3c34.ajaxPrefilter("json jsonp", function (_0x489ef4, _0x56738f, _0x39d4c7) {
      var _0xe6a02d,
        _0x2af230,
        _0xa34898,
        _0x5c0136 = !0x1 !== _0x489ef4.jsonp && (_0x408c29.test(_0x489ef4.url) ? 'url' : 'string' == typeof _0x489ef4.data && 0x0 === (_0x489ef4.contentType || '').indexOf('application/x-www-form-urlencoded') && _0x408c29.test(_0x489ef4.data) && 'data');
      if (_0x5c0136 || 'jsonp' === _0x489ef4.dataTypes[0x0]) return _0xe6a02d = _0x489ef4.jsonpCallback = _0x3e3c34.isFunction(_0x489ef4.jsonpCallback) ? _0x489ef4.jsonpCallback() : _0x489ef4.jsonpCallback, _0x5c0136 ? _0x489ef4[_0x5c0136] = _0x489ef4[_0x5c0136].replace(_0x408c29, '$1' + _0xe6a02d) : !0x1 !== _0x489ef4.jsonp && (_0x489ef4.url += (_0x697731.test(_0x489ef4.url) ? '&' : '?') + _0x489ef4.jsonp + '=' + _0xe6a02d), _0x489ef4.converters["script json"] = function () {
        return _0xa34898 || _0x3e3c34.error(_0xe6a02d + " was not called"), _0xa34898[0x0];
      }, _0x489ef4.dataTypes[0x0] = 'json', _0x2af230 = _0x2ec427[_0xe6a02d], _0x2ec427[_0xe6a02d] = function () {
        _0xa34898 = arguments;
      }, _0x39d4c7.always(function () {
        void 0x0 === _0x2af230 ? _0x3e3c34(_0x2ec427).removeProp(_0xe6a02d) : _0x2ec427[_0xe6a02d] = _0x2af230, _0x489ef4[_0xe6a02d] && (_0x489ef4.jsonpCallback = _0x56738f.jsonpCallback, _0x232333.push(_0xe6a02d)), _0xa34898 && _0x3e3c34.isFunction(_0x2af230) && _0x2af230(_0xa34898[0x0]), _0xa34898 = _0x2af230 = void 0x0;
      }), 'script';
    });
    var _0x861ea1 = _0x16b25d,
      _0x2db2ef,
      _0x29eafa = _0x4bffa6.implementation.createHTMLDocument('').body;
    _0x2db2ef = (_0x29eafa.innerHTML = '<form></form><form></form>', 0x2 === _0x29eafa.childNodes.length), _0x861ea1.createHTMLDocument = _0x2db2ef, _0x3e3c34.parseHTML = function (_0x460423, _0x3e7a08, _0x938aff) {
      if ('string' != typeof _0x460423) return [];
      'boolean' == typeof _0x3e7a08 && (_0x938aff = _0x3e7a08, _0x3e7a08 = !0x1);
      var _0x518f06, _0x11a3ac, _0x2c7314;
      return _0x3e7a08 || (_0x16b25d.createHTMLDocument ? (_0x3e7a08 = _0x4bffa6.implementation.createHTMLDocument(''), _0x518f06 = _0x3e7a08.createElement('base'), _0x518f06.href = _0x4bffa6.location.href, _0x3e7a08.head.appendChild(_0x518f06)) : _0x3e7a08 = _0x4bffa6), _0x11a3ac = _0x157419.exec(_0x460423), _0x2c7314 = !_0x938aff && [], _0x11a3ac ? [_0x3e7a08.createElement(_0x11a3ac[0x1])] : (_0x11a3ac = _0x231a27([_0x460423], _0x3e7a08, _0x2c7314), _0x2c7314 && _0x2c7314.length && _0x3e3c34(_0x2c7314).remove(), _0x3e3c34.merge([], _0x11a3ac.childNodes));
    }, _0x3e3c34.fn.load = function (_0x4e3952, _0x25c3dd, _0x4edd3c) {
      var _0x2eecf8,
        _0x31c751,
        _0x104830,
        _0x254cb2 = this,
        _0x46c7c7 = _0x4e3952.indexOf(" ");
      return -0x1 < _0x46c7c7 && (_0x2eecf8 = _0x356640(_0x4e3952.slice(_0x46c7c7)), _0x4e3952 = _0x4e3952.slice(0x0, _0x46c7c7)), _0x3e3c34.isFunction(_0x25c3dd) ? (_0x4edd3c = _0x25c3dd, _0x25c3dd = void 0x0) : _0x25c3dd && 'object' == typeof _0x25c3dd && (_0x31c751 = 'POST'), 0x0 < _0x254cb2.length && _0x3e3c34.ajax({
        'url': _0x4e3952,
        'type': _0x31c751 || 'GET',
        'dataType': 'html',
        'data': _0x25c3dd
      }).done(function (_0x2de30e) {
        _0x104830 = arguments, _0x254cb2.html(_0x2eecf8 ? _0x3e3c34('<div>').append(_0x3e3c34.parseHTML(_0x2de30e)).find(_0x2eecf8) : _0x2de30e);
      }).always(_0x4edd3c && function (_0x457b43, _0x46536f) {
        _0x254cb2.each(function () {
          _0x4edd3c.apply(this, _0x104830 || [_0x457b43.responseText, _0x46536f, _0x457b43]);
        });
      }), this;
    }, _0x3e3c34.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function (_0xa6366c, _0x219c98) {
      _0x3e3c34.fn[_0x219c98] = function (_0x31da99) {
        return this.on(_0x219c98, _0x31da99);
      };
    }), _0x3e3c34.expr.pseudos.animated = function (_0x1c9045) {
      return _0x3e3c34.grep(_0x3e3c34.timers, function (_0x1f8d61) {
        return _0x1c9045 === _0x1f8d61.elem;
      }).length;
    }, _0x3e3c34.offset = {
      'setOffset': function (_0x4aa26a, _0x2c8221, _0xbaf65b) {
        var _0x3413a2,
          _0xa706ab,
          _0x25b3ab,
          _0x2b3646,
          _0x49fc01,
          _0x360ed9,
          _0xa9e889 = _0x3e3c34.css(_0x4aa26a, 'position'),
          _0x192d92 = _0x3e3c34(_0x4aa26a),
          _0x4118bc = {};
        'static' === _0xa9e889 && (_0x4aa26a.style.position = 'relative'), _0x49fc01 = _0x192d92.offset(), _0x25b3ab = _0x3e3c34.css(_0x4aa26a, 'top'), _0x360ed9 = _0x3e3c34.css(_0x4aa26a, 'left'), ('absolute' === _0xa9e889 || 'fixed' === _0xa9e889) && -0x1 < (_0x25b3ab + _0x360ed9).indexOf('auto') ? (_0x3413a2 = _0x192d92.position(), _0x2b3646 = _0x3413a2.top, _0xa706ab = _0x3413a2.left) : (_0x2b3646 = parseFloat(_0x25b3ab) || 0x0, _0xa706ab = parseFloat(_0x360ed9) || 0x0), _0x3e3c34.isFunction(_0x2c8221) && (_0x2c8221 = _0x2c8221.call(_0x4aa26a, _0xbaf65b, _0x3e3c34.extend({}, _0x49fc01))), null != _0x2c8221.top && (_0x4118bc.top = _0x2c8221.top - _0x49fc01.top + _0x2b3646), null != _0x2c8221.left && (_0x4118bc.left = _0x2c8221.left - _0x49fc01.left + _0xa706ab), 'using' in _0x2c8221 ? _0x2c8221.using.call(_0x4aa26a, _0x4118bc) : _0x192d92.css(_0x4118bc);
      }
    }, _0x3e3c34.fn.extend({
      'offset': function (_0x3f6dd7) {
        if (arguments.length) return void 0x0 === _0x3f6dd7 ? this : this.each(function (_0x3c717d) {
          _0x3e3c34.offset.setOffset(this, _0x3f6dd7, _0x3c717d);
        });
        var _0x25d241,
          _0x168b00,
          _0x7b479d,
          _0x54a10e,
          _0x4bb5c8 = this[0x0];
        if (_0x4bb5c8) return _0x4bb5c8.getClientRects().length ? (_0x7b479d = _0x4bb5c8.getBoundingClientRect(), _0x25d241 = _0x4bb5c8.ownerDocument, _0x168b00 = _0x25d241.documentElement, _0x54a10e = _0x25d241.defaultView, {
          'top': _0x7b479d.top + _0x54a10e.pageYOffset - _0x168b00.clientTop,
          'left': _0x7b479d.left + _0x54a10e.pageXOffset - _0x168b00.clientLeft
        }) : {
          'top': 0x0,
          'left': 0x0
        };
      },
      'position': function () {
        if (this[0x0]) {
          var _0x77e7f4,
            _0xad6b5f,
            _0xbbc844 = this[0x0],
            _0x97d12c = {
              'top': 0x0,
              'left': 0x0
            };
          return 'fixed' === _0x3e3c34.css(_0xbbc844, 'position') ? _0xad6b5f = _0xbbc844.getBoundingClientRect() : (_0x77e7f4 = this.offsetParent(), _0xad6b5f = this.offset(), _0x59415f(_0x77e7f4[0x0], 'html') || (_0x97d12c = _0x77e7f4.offset()), _0x97d12c = {
            'top': _0x97d12c.top + _0x3e3c34.css(_0x77e7f4[0x0], 'borderTopWidth', !0x0),
            'left': _0x97d12c.left + _0x3e3c34.css(_0x77e7f4[0x0], 'borderLeftWidth', !0x0)
          }), {
            'top': _0xad6b5f.top - _0x97d12c.top - _0x3e3c34.css(_0xbbc844, 'marginTop', !0x0),
            'left': _0xad6b5f.left - _0x97d12c.left - _0x3e3c34.css(_0xbbc844, 'marginLeft', !0x0)
          };
        }
      },
      'offsetParent': function () {
        return this.map(function () {
          for (var _0x371b48 = this.offsetParent; _0x371b48 && 'static' === _0x3e3c34.css(_0x371b48, 'position');) _0x371b48 = _0x371b48.offsetParent;
          return _0x371b48 || _0x296075;
        });
      }
    }), _0x3e3c34.each({
      'scrollLeft': 'pageXOffset',
      'scrollTop': 'pageYOffset'
    }, function (_0x49709c, _0xf76572) {
      var _0x3d5fee = 'pageYOffset' === _0xf76572;
      _0x3e3c34.fn[_0x49709c] = function (_0x56bd42) {
        return _0x23b480(this, function (_0x1ece9a, _0x30737b, _0x2cb9cb) {
          var _0x221eff;
          return _0x3e3c34.isWindow(_0x1ece9a) ? _0x221eff = _0x1ece9a : 0x9 === _0x1ece9a.nodeType && (_0x221eff = _0x1ece9a.defaultView), void 0x0 === _0x2cb9cb ? _0x221eff ? _0x221eff[_0xf76572] : _0x1ece9a[_0x30737b] : void (_0x221eff ? _0x221eff.scrollTo(_0x3d5fee ? _0x221eff.pageXOffset : _0x2cb9cb, _0x3d5fee ? _0x2cb9cb : _0x221eff.pageYOffset) : _0x1ece9a[_0x30737b] = _0x2cb9cb);
        }, _0x49709c, _0x56bd42, arguments.length);
      };
    }), _0x3e3c34.each(['top', 'left'], function (_0xed9646, _0x3984d2) {
      _0x3e3c34.cssHooks[_0x3984d2] = _0x4a329f(_0x16b25d.pixelPosition, function (_0x54783c, _0x23f65c) {
        if (_0x23f65c) return _0x23f65c = _0x435def(_0x54783c, _0x3984d2), _0x27199e.test(_0x23f65c) ? _0x3e3c34(_0x54783c).position()[_0x3984d2] + 'px' : _0x23f65c;
      });
    }), _0x3e3c34.each({
      'Height': 'height',
      'Width': 'width'
    }, function (_0x5061b8, _0x806c3d) {
      _0x3e3c34.each({
        'padding': 'inner' + _0x5061b8,
        'content': _0x806c3d,
        '': 'outer' + _0x5061b8
      }, function (_0x4ce829, _0x4fafda) {
        _0x3e3c34.fn[_0x4fafda] = function (_0x2aff87, _0x702b7f) {
          var _0x59704d = arguments.length && (_0x4ce829 || 'boolean' != typeof _0x2aff87),
            _0x2a4c5a = _0x4ce829 || (!0x0 === _0x2aff87 || !0x0 === _0x702b7f ? 'margin' : 'border');
          return _0x23b480(this, function (_0x1f6caa, _0x598210, _0x57a8e6) {
            var _0x4cd2dd;
            return _0x3e3c34.isWindow(_0x1f6caa) ? 0x0 === _0x4fafda.indexOf('outer') ? _0x1f6caa['inner' + _0x5061b8] : _0x1f6caa.document.documentElement['client' + _0x5061b8] : 0x9 === _0x1f6caa.nodeType ? (_0x4cd2dd = _0x1f6caa.documentElement, Math.max(_0x1f6caa.body['scroll' + _0x5061b8], _0x4cd2dd['scroll' + _0x5061b8], _0x1f6caa.body['offset' + _0x5061b8], _0x4cd2dd['offset' + _0x5061b8], _0x4cd2dd['client' + _0x5061b8])) : void 0x0 === _0x57a8e6 ? _0x3e3c34.css(_0x1f6caa, _0x598210, _0x2a4c5a) : _0x3e3c34.style(_0x1f6caa, _0x598210, _0x57a8e6, _0x2a4c5a);
          }, _0x806c3d, _0x59704d ? _0x2aff87 : void 0x0, _0x59704d);
        };
      });
    }), _0x3e3c34.fn.extend({
      'bind': function (_0x152120, _0x1a4a8f, _0x2a4372) {
        return this.on(_0x152120, null, _0x1a4a8f, _0x2a4372);
      },
      'unbind': function (_0x7d8834, _0x49107e) {
        return this.off(_0x7d8834, null, _0x49107e);
      },
      'delegate': function (_0xaeefed, _0x467842, _0x25afac, _0x5b8a5e) {
        return this.on(_0x467842, _0xaeefed, _0x25afac, _0x5b8a5e);
      },
      'undelegate': function (_0x13496a, _0x7fcdba, _0x232682) {
        return 0x1 === arguments.length ? this.off(_0x13496a, '**') : this.off(_0x7fcdba, _0x13496a || '**', _0x232682);
      }
    }), _0x3e3c34.holdReady = function (_0x380480) {
      _0x380480 ? _0x3e3c34.readyWait++ : _0x3e3c34.ready(!0x0);
    }, _0x3e3c34.isArray = Array.isArray, _0x3e3c34.parseJSON = JSON.parse, _0x3e3c34.nodeName = _0x59415f, 'function' == typeof define && define.amd && define('jquery', [], function () {
      return _0x3e3c34;
    });
    var _0x2f9b49 = _0x2ec427.jQuery,
      _0x54016f = _0x2ec427.$;
    return _0x3e3c34.noConflict = function (_0x273f1b) {
      return _0x2ec427.$ === _0x3e3c34 && (_0x2ec427.$ = _0x54016f), _0x273f1b && _0x2ec427.jQuery === _0x3e3c34 && (_0x2ec427.jQuery = _0x2f9b49), _0x3e3c34;
    }, _0x334767 || (_0x2ec427.jQuery = _0x2ec427.$ = _0x3e3c34), _0x3e3c34;
  });
  function getInternetExplorerVersion() {
    var _0x25ad31 = -0x1;
    return "Microsoft Internet Explorer" == navigator.appName && null != /MSIE ([0-9]{1,}[.0-9]{0,})/.exec(navigator.userAgent) && (_0x25ad31 = parseFloat(RegExp.$1)), _0x25ad31;
  }
  var ie = getInternetExplorerVersion();
  function getQueryVariable(_0x138332) {
    for (var _0x3e8292 = window.location.search.substring(0x1).split('&'), _0x4f48df = 0x0; _0x4f48df < _0x3e8292.length; _0x4f48df++) {
      var _0x364538 = _0x3e8292[_0x4f48df].match(/([^=]+?)=(.+)/);
      if (_0x364538 && decodeURIComponent(_0x364538[0x1]) == _0x138332) return decodeURIComponent(_0x364538[0x2]);
    }
  }
  this.jukebox = {}, jukebox.Player = function (_0x51b59c, _0x3b07f3) {
    this.id = ++jukebox.__jukeboxId, this.origin = _0x3b07f3 || null, this.settings = {};
    for (var _0x59b7fc in this.defaults) this.settings[_0x59b7fc] = this.defaults[_0x59b7fc];
    if ("[object Object]" === Object.prototype.toString.call(_0x51b59c)) {
      for (var _0x44bd01 in _0x51b59c) this.settings[_0x44bd01] = _0x51b59c[_0x44bd01];
    }
    "[object Function]" === Object.prototype.toString.call(jukebox.Manager) && (jukebox.Manager = new jukebox.Manager()), this.resource = this.isPlaying = null, this.resource = "[object Object]" === Object.prototype.toString.call(jukebox.Manager) ? jukebox.Manager.getPlayableResource(this.settings.resources) : this.settings.resources[0x0] || null;
    if (null === this.resource) throw "Your browser can't playback the given resources - or you have missed to include jukebox.Manager";
    return this.__init(), this;
  }, jukebox.__jukeboxId = 0x0, jukebox.Player.prototype = {
    'defaults': {
      'resources': [],
      'autoplay': !0x1,
      'spritemap': {},
      'flashMediaElement': './swf/FlashMediaElement.swf',
      'timeout': 0x3e8
    },
    '__addToManager': function () {
      !0x0 !== this.__wasAddedToManager && (jukebox.Manager.add(this), this.__wasAddedToManager = !0x0);
    },
    '__init': function () {
      var _0x5de459 = this,
        _0x8eb6ad = this.settings,
        _0x329f69 = {},
        _0x179ef9;
      jukebox.Manager && void 0x0 !== jukebox.Manager.features && (_0x329f69 = jukebox.Manager.features);
      if (!0x0 === _0x329f69.html5audio) {
        this.context = new Audio(), this.context.src = this.resource;
        if (null === this.origin) {
          var _0xdc1ff3 = function (_0x1c27a7) {
            _0x5de459.__addToManager(_0x1c27a7);
          };
          this.context.addEventListener('canplaythrough', _0xdc1ff3, !0x0), window.setTimeout(function () {
            _0x5de459.context.removeEventListener('canplaythrough', _0xdc1ff3, !0x0), _0xdc1ff3('timeout');
          }, _0x8eb6ad.timeout);
        }
        this.context.autobuffer = !0x0, this.context.preload = !0x0;
        for (_0x179ef9 in this.HTML5API) this[_0x179ef9] = this.HTML5API[_0x179ef9];
        0x1 < _0x329f69.channels ? !0x0 === _0x8eb6ad.autoplay ? this.context.autoplay = !0x0 : void 0x0 !== _0x8eb6ad.spritemap[_0x8eb6ad.autoplay] && this.play(_0x8eb6ad.autoplay) : 0x1 === _0x329f69.channels && void 0x0 !== _0x8eb6ad.spritemap[_0x8eb6ad.autoplay] && (this.backgroundMusic = _0x8eb6ad.spritemap[_0x8eb6ad.autoplay], this.backgroundMusic.started = Date.now ? Date.now() : +new Date(), this.play(_0x8eb6ad.autoplay)), 0x1 == _0x329f69.channels && !0x0 !== _0x8eb6ad.canPlayBackground && (window.addEventListener('pagehide', function () {
          null !== _0x5de459.isPlaying && (_0x5de459.pause(), _0x5de459.__wasAutoPaused = !0x0);
        }), window.addEventListener('pageshow', function () {
          _0x5de459.__wasAutoPaused && (_0x5de459.resume(), delete _0x5de459._wasAutoPaused);
        }));
      } else {
        if (!0x0 === _0x329f69.flashaudio) {
          for (_0x179ef9 in this.FLASHAPI) this[_0x179ef9] = this.FLASHAPI[_0x179ef9];
          _0x329f69 = ['id=jukebox-flashstream-' + this.id, 'autoplay=' + _0x8eb6ad.autoplay, 'file=' + window.encodeURIComponent(this.resource)], this.__initFlashContext(_0x329f69), !0x0 === _0x8eb6ad.autoplay ? this.play(0x0) : _0x8eb6ad.spritemap[_0x8eb6ad.autoplay] && this.play(_0x8eb6ad.autoplay);
        } else throw "Your Browser does not support Flash Audio or HTML5 Audio.";
      }
    },
    '__initFlashContext': function (_0x4e1437) {
      var _0x5ecc21,
        _0x444c6c = this.settings.flashMediaElement,
        _0x1906ce,
        _0x24312f = {
          'flashvars': _0x4e1437.join('&'),
          'quality': 'high',
          'bgcolor': '#000000',
          'wmode': 'transparent',
          'allowscriptaccess': 'always',
          'allowfullscreen': 'true'
        };
      if (navigator.userAgent.match(/MSIE/)) {
        _0x5ecc21 = document.createElement('div'), document.getElementsByTagName('body')[0x0].appendChild(_0x5ecc21);
        var _0x11068c = document.createElement('object');
        _0x11068c.id = 'jukebox-flashstream-' + this.id, _0x11068c.setAttribute('type', 'application/x-shockwave-flash'), _0x11068c.setAttribute('classid', 'clsid:d27cdb6e-ae6d-11cf-96b8-444553540000'), _0x11068c.setAttribute('width', '0'), _0x11068c.setAttribute('height', '0'), _0x24312f.movie = _0x444c6c + '?x=' + (Date.now ? Date.now() : +new Date()), _0x24312f.flashvars = _0x4e1437.join('&amp;');
        for (_0x1906ce in _0x24312f) _0x4e1437 = document.createElement('param'), _0x4e1437.setAttribute('name', _0x1906ce), _0x4e1437.setAttribute('value', _0x24312f[_0x1906ce]), _0x11068c.appendChild(_0x4e1437);
        _0x5ecc21.outerHTML = _0x11068c.outerHTML, this.context = document.getElementById('jukebox-flashstream-' + this.id);
      } else {
        _0x5ecc21 = document.createElement('embed'), _0x5ecc21.id = 'jukebox-flashstream-' + this.id, _0x5ecc21.setAttribute('type', 'application/x-shockwave-flash'), _0x5ecc21.setAttribute('width', '100'), _0x5ecc21.setAttribute('height', '100'), _0x24312f.play = !0x1, _0x24312f.loop = !0x1, _0x24312f.src = _0x444c6c + '?x=' + (Date.now ? Date.now() : +new Date());
        for (_0x1906ce in _0x24312f) _0x5ecc21.setAttribute(_0x1906ce, _0x24312f[_0x1906ce]);
        document.getElementsByTagName('body')[0x0].appendChild(_0x5ecc21), this.context = _0x5ecc21;
      }
    },
    'backgroundHackForiOS': function () {
      if (void 0x0 !== this.backgroundMusic) {
        var _0x388e74 = Date.now ? Date.now() : +new Date();
        void 0x0 === this.backgroundMusic.started ? (this.backgroundMusic.started = _0x388e74, this.setCurrentTime(this.backgroundMusic.start)) : (this.backgroundMusic.lastPointer = (_0x388e74 - this.backgroundMusic.started) / 0x3e8 % (this.backgroundMusic.end - this.backgroundMusic.start) + this.backgroundMusic.start, this.play(this.backgroundMusic.lastPointer));
      }
    },
    'play': function (_0x3d2f15, _0x1854fb) {
      if (null !== this.isPlaying && !0x0 !== _0x1854fb) void 0x0 !== jukebox.Manager && jukebox.Manager.addToQueue(_0x3d2f15, this.id);else {
        var _0x47d4a7 = this.settings.spritemap,
          _0x1f84bf;
        if (void 0x0 !== _0x47d4a7[_0x3d2f15]) _0x1f84bf = _0x47d4a7[_0x3d2f15].start;else {
          if ('number' === typeof _0x3d2f15) {
            _0x1f84bf = _0x3d2f15;
            for (var _0x3f3a9e in _0x47d4a7) if (_0x1f84bf >= _0x47d4a7[_0x3f3a9e].start && _0x1f84bf <= _0x47d4a7[_0x3f3a9e].end) {
              _0x3d2f15 = _0x3f3a9e;
              break;
            }
          }
        }
        void 0x0 !== _0x1f84bf && "[object Object]" === Object.prototype.toString.call(_0x47d4a7[_0x3d2f15]) && (this.isPlaying = this.settings.spritemap[_0x3d2f15], this.context.play && this.context.play(), this.wasReady = this.setCurrentTime(_0x1f84bf));
      }
    },
    'stop': function () {
      return this.__lastPosition = 0x0, this.isPlaying = null, this.backgroundMusic ? this.backgroundHackForiOS() : this.context.pause(), !0x0;
    },
    'pause': function () {
      return this.isPlaying = null, this.__lastPosition = this.getCurrentTime(), this.context.pause(), this.__lastPosition;
    },
    'resume': function (_0x39f6d6) {
      _0x39f6d6 = 'number' === typeof _0x39f6d6 ? _0x39f6d6 : this.__lastPosition;
      if (null !== _0x39f6d6) return this.play(_0x39f6d6), this.__lastPosition = null, !0x0;
      return this.context.play(), !0x1;
    },
    'HTML5API': {
      'getVolume': function () {
        return this.context.volume || 0x1;
      },
      'setVolume': function (_0x50cf04) {
        return this.context.volume = _0x50cf04, 0.0001 > Math.abs(this.context.volume - _0x50cf04) ? !0x0 : !0x1;
      },
      'getCurrentTime': function () {
        return this.context.currentTime || 0x0;
      },
      'setCurrentTime': function (_0x4cb54d) {
        try {
          return this.context.currentTime = _0x4cb54d, !0x0;
        } catch (_0x5b1c81) {
          return !0x1;
        }
      }
    },
    'FLASHAPI': {
      'getVolume': function () {
        return this.context && 'function' === typeof this.context.getVolume ? this.context.getVolume() : 0x1;
      },
      'setVolume': function (_0x2001de) {
        return this.context && 'function' === typeof this.context.setVolume ? (this.context.setVolume(_0x2001de), !0x0) : !0x1;
      },
      'getCurrentTime': function () {
        return this.context && 'function' === typeof this.context.getCurrentTime ? this.context.getCurrentTime() : 0x0;
      },
      'setCurrentTime': function (_0x33ac1c) {
        return this.context && 'function' === typeof this.context.setCurrentTime ? this.context.setCurrentTime(_0x33ac1c) : !0x1;
      }
    }
  };
  if (void 0x0 === this.jukebox) throw "jukebox.Manager requires jukebox.Player (Player.js) to run properly.";
  jukebox.Manager = function (_0x18bce7) {
    this.features = {}, this.codecs = {}, this.__players = {}, this.__playersLength = 0x0, this.__clones = {}, this.__queue = [], this.settings = {};
    for (var _0x1b60ce in this.defaults) this.settings[_0x1b60ce] = this.defaults[_0x1b60ce];
    if ("[object Object]" === Object.prototype.toString.call(_0x18bce7)) {
      for (var _0x461fa2 in _0x18bce7) this.settings[_0x461fa2] = _0x18bce7[_0x461fa2];
    }
    this.__detectFeatures(), jukebox.Manager.__initialized = !0x1 === this.settings.useGameLoop ? window.setInterval(function () {
      jukebox.Manager.loop();
    }, 0x14) : !0x0;
  }, jukebox.Manager.prototype = {
    'defaults': {
      'useFlash': !0x1,
      'useGameLoop': !0x1
    },
    '__detectFeatures': function () {
      var _0x41d451 = window.Audio && new Audio();
      if (_0x41d451 && _0x41d451.canPlayType && !0x1 === this.settings.useFlash) {
        for (var _0x2c69b6 = [{
            'e': '3gp',
            'm': ['audio/3gpp', 'audio/amr']
          }, {
            'e': 'aac',
            'm': ['audio/aac', 'audio/aacp']
          }, {
            'e': 'amr',
            'm': ['audio/amr', 'audio/3gpp']
          }, {
            'e': 'caf',
            'm': ['audio/IMA-ADPCM', 'audio/x-adpcm', "audio/x-aiff; codecs=\"IMA-ADPCM, ADPCM\""]
          }, {
            'e': 'm4a',
            'm': "audio/mp4{audio/mp4; codecs=\"mp4a.40.2,avc1.42E01E\"{audio/mpeg4{audio/mpeg4-generic{audio/mp4a-latm{audio/MP4A-LATM{audio/x-m4a".split('{')
          }, {
            'e': 'mp3',
            'm': ['audio/mp3', 'audio/mpeg', "audio/mpeg; codecs=\"mp3\"", 'audio/MPA', 'audio/mpa-robust']
          }, {
            'e': 'mpga',
            'm': ['audio/MPA', 'audio/mpa-robust', 'audio/mpeg', 'video/mpeg']
          }, {
            'e': 'mp4',
            'm': ['audio/mp4', 'video/mp4']
          }, {
            'e': 'ogg',
            'm': ['application/ogg', 'audio/ogg', "audio/ogg; codecs=\"theora, vorbis\"", 'video/ogg', "video/ogg; codecs=\"theora, vorbis\""]
          }, {
            'e': 'wav',
            'm': ['audio/wave', 'audio/wav', "audio/wav; codecs=\"1\"", 'audio/x-wav', 'audio/x-pn-wav']
          }, {
            'e': 'webm',
            'm': ['audio/webm', "audio/webm; codecs=\"vorbis\"", 'video/webm']
          }], _0x1cba81, _0x459a87, _0x3f11be = 0x0, _0x48f37f = _0x2c69b6.length; _0x3f11be < _0x48f37f; _0x3f11be++) if (_0x459a87 = _0x2c69b6[_0x3f11be].e, _0x2c69b6[_0x3f11be].m.length && 'object' === typeof _0x2c69b6[_0x3f11be].m) {
          for (var _0xe16448 = 0x0, _0x151eb1 = _0x2c69b6[_0x3f11be].m.length; _0xe16448 < _0x151eb1; _0xe16448++) if (_0x1cba81 = _0x2c69b6[_0x3f11be].m[_0xe16448], '' !== _0x41d451.canPlayType(_0x1cba81)) {
            this.codecs[_0x459a87] = _0x1cba81;
            break;
          } else this.codecs[_0x459a87] || (this.codecs[_0x459a87] = !0x1);
        }
        this.features.html5audio = !(!this.codecs.mp3 && !this.codecs.ogg && !this.codecs.webm && !this.codecs.wav), this.features.channels = 0x8, _0x41d451.volume = 0.1337, this.features.volume = !!(0.0001 > Math.abs(_0x41d451.volume - 0.1337)), navigator.userAgent.match(/iPhone|iPod|iPad/i) && (this.features.channels = 0x1);
      }
      this.features.flashaudio = !!navigator.mimeTypes['application/x-shockwave-flash'] || !!navigator.plugins["Shockwave Flash"] || !0x1;
      if (window.ActiveXObject) try {
        new ActiveXObject('ShockwaveFlash.ShockwaveFlash.10'), this.features.flashaudio = !0x0;
      } catch (_0xc2fb5a) {}
      !0x0 === this.settings.useFlash && (this.features.flashaudio = !0x0), !0x0 === this.features.flashaudio && !this.features.html5audio && (this.codecs.mp3 = 'audio/mp3', this.codecs.mpga = 'audio/mpeg', this.codecs.mp4 = 'audio/mp4', this.codecs.m4a = 'audio/mp4', this.codecs['3gp'] = 'audio/3gpp', this.codecs.amr = 'audio/amr', this.features.volume = !0x0, this.features.channels = 0x1);
    },
    '__getPlayerById': function (_0x406ae0) {
      return this.__players && void 0x0 !== this.__players[_0x406ae0] ? this.__players[_0x406ae0] : null;
    },
    '__getClone': function (_0x57fdbc, _0xbede40) {
      for (var _0x2ed64f in this.__clones) {
        var _0x267366 = this.__clones[_0x2ed64f];
        if (null === _0x267366.isPlaying && _0x267366.origin === _0x57fdbc) return _0x267366;
      }
      if ("[object Object]" === Object.prototype.toString.call(_0xbede40)) {
        _0x2ed64f = {};
        for (var _0x2cf4f2 in _0xbede40) _0x2ed64f[_0x2cf4f2] = _0xbede40[_0x2cf4f2];
        return _0x2ed64f.autoplay = !0x1, _0x2cf4f2 = new jukebox.Player(_0x2ed64f, _0x57fdbc), _0x2cf4f2.isClone = !0x0, _0x2cf4f2.wasReady = !0x1, this.__clones[_0x2cf4f2.id] = _0x2cf4f2;
      }
      return null;
    },
    'loop': function () {
      if (0x0 !== this.__playersLength) {
        if (this.__queue.length && this.__playersLength < this.features.channels) {
          var _0x18d6d2 = this.__queue[0x0],
            _0x249d32 = this.__getPlayerById(_0x18d6d2.origin);
          if (null !== _0x249d32) {
            var _0x5afbf9 = this.__getClone(_0x18d6d2.origin, _0x249d32.settings);
            null !== _0x5afbf9 && (!0x0 === this.features.volume && (_0x249d32 = this.__players[_0x18d6d2.origin]) && _0x5afbf9.setVolume(_0x249d32.getVolume()), this.add(_0x5afbf9), _0x5afbf9.play(_0x18d6d2.pointer, !0x0));
          }
          this.__queue.splice(0x0, 0x1);
        } else {
          for (_0x5afbf9 in this.__queue.length && 0x1 === this.features.channels && (_0x18d6d2 = this.__queue[0x0], _0x249d32 = this.__getPlayerById(_0x18d6d2.origin), null !== _0x249d32 && _0x249d32.play(_0x18d6d2.pointer, !0x0), this.__queue.splice(0x0, 0x1)), this.__players) _0x18d6d2 = this.__players[_0x5afbf9], _0x249d32 = _0x18d6d2.getCurrentTime() || 0x0, _0x18d6d2.isPlaying && !0x1 === _0x18d6d2.wasReady ? _0x18d6d2.wasReady = _0x18d6d2.setCurrentTime(_0x18d6d2.isPlaying.start) : _0x18d6d2.isPlaying && !0x0 === _0x18d6d2.wasReady ? _0x249d32 > _0x18d6d2.isPlaying.end && (!0x0 === _0x18d6d2.isPlaying.loop ? _0x18d6d2.play(_0x18d6d2.isPlaying.start, !0x0) : _0x18d6d2.stop()) : _0x18d6d2.isClone && null === _0x18d6d2.isPlaying ? this.remove(_0x18d6d2) : void 0x0 !== _0x18d6d2.backgroundMusic && null === _0x18d6d2.isPlaying && _0x249d32 > _0x18d6d2.backgroundMusic.end && _0x18d6d2.backgroundHackForiOS();
        }
      }
    },
    'getPlayableResource': function (_0x58c3ab) {
      "[object Array]" !== Object.prototype.toString.call(_0x58c3ab) && (_0x58c3ab = [_0x58c3ab]);
      for (var _0x73f5ac = 0x0, _0x40d389 = _0x58c3ab.length; _0x73f5ac < _0x40d389; _0x73f5ac++) {
        var _0x4f0ebc = _0x58c3ab[_0x73f5ac],
          _0x53f053 = _0x4f0ebc.match(/\.([^\.]*)$/)[0x1];
        if (_0x53f053 && this.codecs[_0x53f053]) return _0x4f0ebc;
      }
      return null;
    },
    'add': function (_0x21d87a) {
      return _0x21d87a instanceof jukebox.Player && void 0x0 === this.__players[_0x21d87a.id] ? (this.__playersLength++, this.__players[_0x21d87a.id] = _0x21d87a, !0x0) : !0x1;
    },
    'remove': function (_0x35fe66) {
      return _0x35fe66 instanceof jukebox.Player && void 0x0 !== this.__players[_0x35fe66.id] ? (this.__playersLength--, delete this.__players[_0x35fe66.id], !0x0) : !0x1;
    },
    'addToQueue': function (_0x3eecb8, _0x4f6c7d) {
      return ('string' === typeof _0x3eecb8 || 'number' === typeof _0x3eecb8) && void 0x0 !== this.__players[_0x4f6c7d] ? (this.__queue.push({
        'pointer': _0x3eecb8,
        'origin': _0x4f6c7d
      }), !0x0) : !0x1;
    }
  }, function () {
    var _0x4fc4af = function () {
      this.init();
    };
    _0x4fc4af.prototype = {
      'init': function () {
        var _0x4ee38b = this || _0x40784d;
        return _0x4ee38b._counter = 0x3e8, _0x4ee38b._html5AudioPool = [], _0x4ee38b.html5PoolSize = 0xa, _0x4ee38b._codecs = {}, _0x4ee38b._howls = [], _0x4ee38b._muted = !0x1, _0x4ee38b._volume = 0x1, _0x4ee38b._canPlayEvent = 'canplaythrough', _0x4ee38b._navigator = 'undefined' !== typeof window && window.navigator ? window.navigator : null, _0x4ee38b.masterGain = null, _0x4ee38b.noAudio = !0x1, _0x4ee38b.usingWebAudio = !0x0, _0x4ee38b.autoSuspend = !0x1, _0x4ee38b.ctx = null, _0x4ee38b.autoUnlock = !0x0, _0x4ee38b._setup(), _0x4ee38b;
      },
      'volume': function (_0x32bfe2) {
        var _0x561062 = this || _0x40784d;
        _0x32bfe2 = parseFloat(_0x32bfe2), _0x561062.ctx || _0x1f87d9();
        if ('undefined' !== typeof _0x32bfe2 && 0x0 <= _0x32bfe2 && 0x1 >= _0x32bfe2) {
          _0x561062._volume = _0x32bfe2;
          if (_0x561062._muted) return _0x561062;
          _0x561062.usingWebAudio && _0x561062.masterGain.gain.setValueAtTime(_0x32bfe2, _0x40784d.ctx.currentTime);
          for (var _0x26949a = 0x0; _0x26949a < _0x561062._howls.length; _0x26949a++) if (!_0x561062._howls[_0x26949a]._webAudio) for (var _0x141729 = _0x561062._howls[_0x26949a]._getSoundIds(), _0xd7bc5c = 0x0; _0xd7bc5c < _0x141729.length; _0xd7bc5c++) {
            var _0x1b4ff5 = _0x561062._howls[_0x26949a]._soundById(_0x141729[_0xd7bc5c]);
            _0x1b4ff5 && _0x1b4ff5._node && (_0x1b4ff5._node.volume = _0x1b4ff5._volume * _0x32bfe2);
          }
          return _0x561062;
        }
        return _0x561062._volume;
      },
      'mute': function (_0x5b1093) {
        var _0x109319 = this || _0x40784d;
        _0x109319.ctx || _0x1f87d9(), _0x109319._muted = _0x5b1093, _0x109319.usingWebAudio && _0x109319.masterGain.gain.setValueAtTime(_0x5b1093 ? 0x0 : _0x109319._volume, _0x40784d.ctx.currentTime);
        for (var _0x226114 = 0x0; _0x226114 < _0x109319._howls.length; _0x226114++) if (!_0x109319._howls[_0x226114]._webAudio) for (var _0x310af1 = _0x109319._howls[_0x226114]._getSoundIds(), _0x1d5bad = 0x0; _0x1d5bad < _0x310af1.length; _0x1d5bad++) {
          var _0x20db45 = _0x109319._howls[_0x226114]._soundById(_0x310af1[_0x1d5bad]);
          _0x20db45 && _0x20db45._node && (_0x20db45._node.muted = _0x5b1093 ? !0x0 : _0x20db45._muted);
        }
        return _0x109319;
      },
      'stop': function () {
        for (var _0x2ce5ff = this || _0x40784d, _0x25d9ba = 0x0; _0x25d9ba < _0x2ce5ff._howls.length; _0x25d9ba++) _0x2ce5ff._howls[_0x25d9ba].stop();
        return _0x2ce5ff;
      },
      'unload': function () {
        for (var _0x18d8a6 = this || _0x40784d, _0x52fcb0 = _0x18d8a6._howls.length - 0x1; 0x0 <= _0x52fcb0; _0x52fcb0--) _0x18d8a6._howls[_0x52fcb0].unload();
        return _0x18d8a6.usingWebAudio && _0x18d8a6.ctx && 'undefined' !== typeof _0x18d8a6.ctx.close && (_0x18d8a6.ctx.close(), _0x18d8a6.ctx = null, _0x1f87d9()), _0x18d8a6;
      },
      'codecs': function (_0x1b61ba) {
        return (this || _0x40784d)._codecs[_0x1b61ba.replace(/^x-/, '')];
      },
      '_setup': function () {
        var _0x2c3d27 = this || _0x40784d;
        _0x2c3d27.state = _0x2c3d27.ctx ? _0x2c3d27.ctx.state || 'suspended' : 'suspended', _0x2c3d27._autoSuspend();
        if (!_0x2c3d27.usingWebAudio) {
          if ('undefined' !== typeof Audio) try {
            var _0x43896b = new Audio();
            'undefined' === typeof _0x43896b.oncanplaythrough && (_0x2c3d27._canPlayEvent = 'canplay');
          } catch (_0x5a802d) {
            _0x2c3d27.noAudio = !0x0;
          } else _0x2c3d27.noAudio = !0x0;
        }
        try {
          _0x43896b = new Audio(), _0x43896b.muted && (_0x2c3d27.noAudio = !0x0);
        } catch (_0x2b10cb) {}
        return _0x2c3d27.noAudio || _0x2c3d27._setupCodecs(), _0x2c3d27;
      },
      '_setupCodecs': function () {
        var _0x32e694 = this || _0x40784d,
          _0x5bbfee = null;
        try {
          _0x5bbfee = 'undefined' !== typeof Audio ? new Audio() : null;
        } catch (_0x5d8da4) {
          return _0x32e694;
        }
        if (!_0x5bbfee || 'function' !== typeof _0x5bbfee.canPlayType) return _0x32e694;
        var _0x26b400 = _0x5bbfee.canPlayType('audio/mpeg;').replace(/^no$/, ''),
          _0x45ae77 = _0x32e694._navigator ? _0x32e694._navigator.userAgent : '',
          _0x3b11bd = _0x45ae77.match(/OPR\/(\d+)/g),
          _0x3b11bd = _0x3b11bd && 0x21 > parseInt(_0x3b11bd[0x0].split('/')[0x1], 0xa),
          _0x2dc449 = -0x1 !== _0x45ae77.indexOf('Safari') && -0x1 === _0x45ae77.indexOf('Chrome'),
          _0x45ae77 = _0x45ae77.match(/Version\/(.*?) /),
          _0x45ae77 = _0x2dc449 && _0x45ae77 && 0xf > parseInt(_0x45ae77[0x1], 0xa);
        return _0x32e694._codecs = {
          'mp3': !(_0x3b11bd || !_0x26b400 && !_0x5bbfee.canPlayType('audio/mp3;').replace(/^no$/, '')),
          'mpeg': !!_0x26b400,
          'opus': !!_0x5bbfee.canPlayType("audio/ogg; codecs=\"opus\"").replace(/^no$/, ''),
          'ogg': !!_0x5bbfee.canPlayType("audio/ogg; codecs=\"vorbis\"").replace(/^no$/, ''),
          'oga': !!_0x5bbfee.canPlayType("audio/ogg; codecs=\"vorbis\"").replace(/^no$/, ''),
          'wav': !!(_0x5bbfee.canPlayType("audio/wav; codecs=\"1\"") || _0x5bbfee.canPlayType('audio/wav')).replace(/^no$/, ''),
          'aac': !!_0x5bbfee.canPlayType('audio/aac;').replace(/^no$/, ''),
          'caf': !!_0x5bbfee.canPlayType('audio/x-caf;').replace(/^no$/, ''),
          'm4a': !!(_0x5bbfee.canPlayType('audio/x-m4a;') || _0x5bbfee.canPlayType('audio/m4a;') || _0x5bbfee.canPlayType('audio/aac;')).replace(/^no$/, ''),
          'm4b': !!(_0x5bbfee.canPlayType('audio/x-m4b;') || _0x5bbfee.canPlayType('audio/m4b;') || _0x5bbfee.canPlayType('audio/aac;')).replace(/^no$/, ''),
          'mp4': !!(_0x5bbfee.canPlayType('audio/x-mp4;') || _0x5bbfee.canPlayType('audio/mp4;') || _0x5bbfee.canPlayType('audio/aac;')).replace(/^no$/, ''),
          'weba': !(_0x45ae77 || !_0x5bbfee.canPlayType("audio/webm; codecs=\"vorbis\"").replace(/^no$/, '')),
          'webm': !(_0x45ae77 || !_0x5bbfee.canPlayType("audio/webm; codecs=\"vorbis\"").replace(/^no$/, '')),
          'dolby': !!_0x5bbfee.canPlayType("audio/mp4; codecs=\"ec-3\"").replace(/^no$/, ''),
          'flac': !!(_0x5bbfee.canPlayType('audio/x-flac;') || _0x5bbfee.canPlayType('audio/flac;')).replace(/^no$/, '')
        }, _0x32e694;
      },
      '_unlockAudio': function () {
        var _0x2b5d23 = this || _0x40784d;
        if (!_0x2b5d23._audioUnlocked && _0x2b5d23.ctx) {
          _0x2b5d23._audioUnlocked = !0x1, _0x2b5d23.autoUnlock = !0x1, !_0x2b5d23._mobileUnloaded && 0xac44 !== _0x2b5d23.ctx.sampleRate && (_0x2b5d23._mobileUnloaded = !0x0, _0x2b5d23.unload()), _0x2b5d23._scratchBuffer = _0x2b5d23.ctx.createBuffer(0x1, 0x1, 0x5622);
          var _0xf98f8d = function () {
            for (; _0x2b5d23._html5AudioPool.length < _0x2b5d23.html5PoolSize;) try {
              var _0x878fb6 = new Audio();
              _0x878fb6._unlocked = !0x0, _0x2b5d23._releaseHtml5Audio(_0x878fb6);
            } catch (_0x3017c5) {
              _0x2b5d23.noAudio = !0x0;
              break;
            }
            for (_0x878fb6 = 0x0; _0x878fb6 < _0x2b5d23._howls.length; _0x878fb6++) if (!_0x2b5d23._howls[_0x878fb6]._webAudio) for (var _0x1b22b7 = _0x2b5d23._howls[_0x878fb6]._getSoundIds(), _0x25fd2b = 0x0; _0x25fd2b < _0x1b22b7.length; _0x25fd2b++) {
              var _0x274424 = _0x2b5d23._howls[_0x878fb6]._soundById(_0x1b22b7[_0x25fd2b]);
              _0x274424 && _0x274424._node && !_0x274424._node._unlocked && (_0x274424._node._unlocked = !0x0, _0x274424._node.load());
            }
            _0x2b5d23._autoResume();
            var _0x5ed5e2 = _0x2b5d23.ctx.createBufferSource();
            _0x5ed5e2.buffer = _0x2b5d23._scratchBuffer, _0x5ed5e2.connect(_0x2b5d23.ctx.destination), 'undefined' === typeof _0x5ed5e2.start ? _0x5ed5e2.noteOn(0x0) : _0x5ed5e2.start(0x0), 'function' === typeof _0x2b5d23.ctx.resume && _0x2b5d23.ctx.resume(), _0x5ed5e2.onended = function () {
              _0x5ed5e2.disconnect(0x0), _0x2b5d23._audioUnlocked = !0x0, document.removeEventListener('touchstart', _0xf98f8d, !0x0), document.removeEventListener('touchend', _0xf98f8d, !0x0), document.removeEventListener('click', _0xf98f8d, !0x0), document.removeEventListener('keydown', _0xf98f8d, !0x0);
              for (var _0x37552e = 0x0; _0x37552e < _0x2b5d23._howls.length; _0x37552e++) _0x2b5d23._howls[_0x37552e]._emit('unlock');
            };
          };
          return document.addEventListener('touchstart', _0xf98f8d, !0x0), document.addEventListener('touchend', _0xf98f8d, !0x0), document.addEventListener('click', _0xf98f8d, !0x0), document.addEventListener('keydown', _0xf98f8d, !0x0), _0x2b5d23;
        }
      },
      '_obtainHtml5Audio': function () {
        var _0x3257c9 = this || _0x40784d;
        if (_0x3257c9._html5AudioPool.length) return _0x3257c9._html5AudioPool.pop();
        return (_0x3257c9 = new Audio().play()) && 'undefined' !== typeof Promise && (_0x3257c9 instanceof Promise || 'function' === typeof _0x3257c9.then) && _0x3257c9['catch'](function () {
          console.warn("HTML5 Audio pool exhausted, returning potentially locked audio object.");
        }), new Audio();
      },
      '_releaseHtml5Audio': function (_0x220ec1) {
        var _0x6cf0ac = this || _0x40784d;
        return _0x220ec1._unlocked && _0x6cf0ac._html5AudioPool.push(_0x220ec1), _0x6cf0ac;
      },
      '_autoSuspend': function () {
        var _0x1c6355 = this;
        if (_0x1c6355.autoSuspend && _0x1c6355.ctx && 'undefined' !== typeof _0x1c6355.ctx.suspend && _0x40784d.usingWebAudio) {
          for (var _0x4cc3bb = 0x0; _0x4cc3bb < _0x1c6355._howls.length; _0x4cc3bb++) if (_0x1c6355._howls[_0x4cc3bb]._webAudio) {
            for (var _0x7b16f8 = 0x0; _0x7b16f8 < _0x1c6355._howls[_0x4cc3bb]._sounds.length; _0x7b16f8++) if (!_0x1c6355._howls[_0x4cc3bb]._sounds[_0x7b16f8]._paused) return _0x1c6355;
          }
          return _0x1c6355._suspendTimer && clearTimeout(_0x1c6355._suspendTimer), _0x1c6355._suspendTimer = setTimeout(function () {
            if (_0x1c6355.autoSuspend) {
              _0x1c6355._suspendTimer = null, _0x1c6355.state = 'suspending';
              var _0xd604d1 = function () {
                _0x1c6355.state = 'suspended', _0x1c6355._resumeAfterSuspend && (delete _0x1c6355._resumeAfterSuspend, _0x1c6355._autoResume());
              };
              _0x1c6355.ctx.suspend().then(_0xd604d1, _0xd604d1);
            }
          }, 0x7530), _0x1c6355;
        }
      },
      '_autoResume': function () {
        var _0x1d7db2 = this;
        if (_0x1d7db2.ctx && 'undefined' !== typeof _0x1d7db2.ctx.resume && _0x40784d.usingWebAudio) return 'running' === _0x1d7db2.state && 'interrupted' !== _0x1d7db2.ctx.state && _0x1d7db2._suspendTimer ? (clearTimeout(_0x1d7db2._suspendTimer), _0x1d7db2._suspendTimer = null) : 'suspended' === _0x1d7db2.state || 'running' === _0x1d7db2.state && 'interrupted' === _0x1d7db2.ctx.state ? (_0x1d7db2.ctx.resume().then(function () {
          _0x1d7db2.state = 'running';
          for (var _0x10fcdf = 0x0; _0x10fcdf < _0x1d7db2._howls.length; _0x10fcdf++) _0x1d7db2._howls[_0x10fcdf]._emit('resume');
        }), _0x1d7db2._suspendTimer && (clearTimeout(_0x1d7db2._suspendTimer), _0x1d7db2._suspendTimer = null)) : 'suspending' === _0x1d7db2.state && (_0x1d7db2._resumeAfterSuspend = !0x0), _0x1d7db2;
      }
    };
    var _0x40784d = new _0x4fc4af(),
      _0x3172ba = function (_0x22d7c8) {
        !_0x22d7c8.src || 0x0 === _0x22d7c8.src.length ? console.error("An array of source files must be passed with any new Howl.") : this.init(_0x22d7c8);
      };
    _0x3172ba.prototype = {
      'init': function (_0x3f86db) {
        var _0x3ef641 = this;
        return _0x40784d.ctx || _0x1f87d9(), _0x3ef641._autoplay = _0x3f86db.autoplay || !0x1, _0x3ef641._format = 'string' !== typeof _0x3f86db.format ? _0x3f86db.format : [_0x3f86db.format], _0x3ef641._html5 = _0x3f86db.html5 || !0x1, _0x3ef641._muted = _0x3f86db.mute || !0x1, _0x3ef641._loop = _0x3f86db.loop || !0x1, _0x3ef641._pool = _0x3f86db.pool || 0x5, _0x3ef641._preload = 'boolean' === typeof _0x3f86db.preload || 'metadata' === _0x3f86db.preload ? _0x3f86db.preload : !0x0, _0x3ef641._rate = _0x3f86db.rate || 0x1, _0x3ef641._sprite = _0x3f86db.sprite || {}, _0x3ef641._src = 'string' !== typeof _0x3f86db.src ? _0x3f86db.src : [_0x3f86db.src], _0x3ef641._volume = void 0x0 !== _0x3f86db.volume ? _0x3f86db.volume : 0x1, _0x3ef641._xhr = {
          'method': _0x3f86db.xhr && _0x3f86db.xhr.method ? _0x3f86db.xhr.method : 'GET',
          'headers': _0x3f86db.xhr && _0x3f86db.xhr.headers ? _0x3f86db.xhr.headers : null,
          'withCredentials': _0x3f86db.xhr && _0x3f86db.xhr.withCredentials ? _0x3f86db.xhr.withCredentials : !0x1
        }, _0x3ef641._duration = 0x0, _0x3ef641._state = 'unloaded', _0x3ef641._sounds = [], _0x3ef641._endTimers = {}, _0x3ef641._queue = [], _0x3ef641._playLock = !0x1, _0x3ef641._onend = _0x3f86db.onend ? [{
          'fn': _0x3f86db.onend
        }] : [], _0x3ef641._onfade = _0x3f86db.onfade ? [{
          'fn': _0x3f86db.onfade
        }] : [], _0x3ef641._onload = _0x3f86db.onload ? [{
          'fn': _0x3f86db.onload
        }] : [], _0x3ef641._onloaderror = _0x3f86db.onloaderror ? [{
          'fn': _0x3f86db.onloaderror
        }] : [], _0x3ef641._onplayerror = _0x3f86db.onplayerror ? [{
          'fn': _0x3f86db.onplayerror
        }] : [], _0x3ef641._onpause = _0x3f86db.onpause ? [{
          'fn': _0x3f86db.onpause
        }] : [], _0x3ef641._onplay = _0x3f86db.onplay ? [{
          'fn': _0x3f86db.onplay
        }] : [], _0x3ef641._onstop = _0x3f86db.onstop ? [{
          'fn': _0x3f86db.onstop
        }] : [], _0x3ef641._onmute = _0x3f86db.onmute ? [{
          'fn': _0x3f86db.onmute
        }] : [], _0x3ef641._onvolume = _0x3f86db.onvolume ? [{
          'fn': _0x3f86db.onvolume
        }] : [], _0x3ef641._onrate = _0x3f86db.onrate ? [{
          'fn': _0x3f86db.onrate
        }] : [], _0x3ef641._onseek = _0x3f86db.onseek ? [{
          'fn': _0x3f86db.onseek
        }] : [], _0x3ef641._onunlock = _0x3f86db.onunlock ? [{
          'fn': _0x3f86db.onunlock
        }] : [], _0x3ef641._onresume = [], _0x3ef641._webAudio = _0x40784d.usingWebAudio && !_0x3ef641._html5, 'undefined' !== typeof _0x40784d.ctx && _0x40784d.ctx && _0x40784d.autoUnlock && _0x40784d._unlockAudio(), _0x40784d._howls.push(_0x3ef641), _0x3ef641._autoplay && _0x3ef641._queue.push({
          'event': 'play',
          'action': function () {
            _0x3ef641.play();
          }
        }), _0x3ef641._preload && 'none' !== _0x3ef641._preload && _0x3ef641.load(), _0x3ef641;
      },
      'load': function () {
        var _0x3e8aec = null;
        if (_0x40784d.noAudio) this._emit('loaderror', null, "No audio support.");else {
          'string' === typeof this._src && (this._src = [this._src]);
          for (var _0x5cf55b = 0x0; _0x5cf55b < this._src.length; _0x5cf55b++) {
            var _0x384086, _0x102829;
            if (this._format && this._format[_0x5cf55b]) _0x384086 = this._format[_0x5cf55b];else {
              _0x102829 = this._src[_0x5cf55b];
              if ('string' !== typeof _0x102829) {
                this._emit('loaderror', null, "Non-string found in selected audio sources - ignoring.");
                continue;
              }
              (_0x384086 = /^data:audio\/([^;,]+);/i.exec(_0x102829)) || (_0x384086 = /\.([^.]+)$/.exec(_0x102829.split('?', 0x1)[0x0])), _0x384086 && (_0x384086 = _0x384086[0x1].toLowerCase());
            }
            _0x384086 || console.warn("No file extension was found. Consider using the \"format\" property or specify an extension.");
            if (_0x384086 && _0x40784d.codecs(_0x384086)) {
              _0x3e8aec = this._src[_0x5cf55b];
              break;
            }
          }
          if (_0x3e8aec) {
            this._src = _0x3e8aec, this._state = 'loading', 'https:' === window.location.protocol && 'http:' === _0x3e8aec.slice(0x0, 0x5) && (this._html5 = !0x0, this._webAudio = !0x1), new _0x3832f2(this);
            if (this._webAudio) {
              var _0x226833 = this,
                _0x5469a6 = _0x226833._src;
              if (_0x3a0e92[_0x5469a6]) _0x226833._duration = _0x3a0e92[_0x5469a6].duration, _0x4b0315(_0x226833);else {
                if (/^data:[^;]+;base64,/.test(_0x5469a6)) {
                  _0x3e8aec = atob(_0x5469a6.split(',')[0x1]), _0x5cf55b = new Uint8Array(_0x3e8aec.length);
                  for (_0x384086 = 0x0; _0x384086 < _0x3e8aec.length; ++_0x384086) _0x5cf55b[_0x384086] = _0x3e8aec.charCodeAt(_0x384086);
                  _0x31c9fd(_0x5cf55b.buffer, _0x226833);
                } else {
                  var _0x218e29 = new XMLHttpRequest();
                  _0x218e29.open(_0x226833._xhr.method, _0x5469a6, !0x0), _0x218e29.withCredentials = _0x226833._xhr.withCredentials, _0x218e29.responseType = 'arraybuffer', _0x226833._xhr.headers && Object.keys(_0x226833._xhr.headers).forEach(function (_0x5254f3) {
                    _0x218e29.setRequestHeader(_0x5254f3, _0x226833._xhr.headers[_0x5254f3]);
                  }), _0x218e29.onload = function () {
                    var _0x1da88e = (_0x218e29.status + '')[0x0];
                    '0' !== _0x1da88e && '2' !== _0x1da88e && '3' !== _0x1da88e ? _0x226833._emit('loaderror', null, "Failed loading audio file with status: " + _0x218e29.status + '.') : _0x31c9fd(_0x218e29.response, _0x226833);
                  }, _0x218e29.onerror = function () {
                    _0x226833._webAudio && (_0x226833._html5 = !0x0, _0x226833._webAudio = !0x1, _0x226833._sounds = [], delete _0x3a0e92[_0x5469a6], _0x226833.load());
                  };
                  try {
                    _0x218e29.send();
                  } catch (_0x8b8fe9) {
                    _0x218e29.onerror();
                  }
                }
              }
            }
            return this;
          }
          this._emit('loaderror', null, "No codec support for selected audio sources.");
        }
      },
      'play': function (_0x1801c9, _0x4c7fd8) {
        var _0x4689a0 = this,
          _0x113978 = null;
        if ('number' === typeof _0x1801c9) _0x113978 = _0x1801c9, _0x1801c9 = null;else {
          if ('string' === typeof _0x1801c9 && 'loaded' === _0x4689a0._state && !_0x4689a0._sprite[_0x1801c9]) return null;
          if ('undefined' === typeof _0x1801c9 && (_0x1801c9 = '__default', !_0x4689a0._playLock)) {
            for (var _0x2830e6 = 0x0, _0x238278 = 0x0; _0x238278 < _0x4689a0._sounds.length; _0x238278++) _0x4689a0._sounds[_0x238278]._paused && !_0x4689a0._sounds[_0x238278]._ended && (_0x2830e6++, _0x113978 = _0x4689a0._sounds[_0x238278]._id);
            0x1 === _0x2830e6 ? _0x1801c9 = null : _0x113978 = null;
          }
        }
        var _0x40da7a = _0x113978 ? _0x4689a0._soundById(_0x113978) : _0x4689a0._inactiveSound();
        if (!_0x40da7a) return null;
        _0x113978 && !_0x1801c9 && (_0x1801c9 = _0x40da7a._sprite || '__default');
        if ('loaded' !== _0x4689a0._state) {
          _0x40da7a._sprite = _0x1801c9, _0x40da7a._ended = !0x1;
          var _0x423a66 = _0x40da7a._id;
          return _0x4689a0._queue.push({
            'event': 'play',
            'action': function () {
              _0x4689a0.play(_0x423a66);
            }
          }), _0x423a66;
        }
        if (_0x113978 && !_0x40da7a._paused) return _0x4c7fd8 || _0x4689a0._loadQueue('play'), _0x40da7a._id;
        _0x4689a0._webAudio && _0x40784d._autoResume();
        var _0x53484b = Math.max(0x0, 0x0 < _0x40da7a._seek ? _0x40da7a._seek : _0x4689a0._sprite[_0x1801c9][0x0] / 0x3e8),
          _0x352c6f = Math.max(0x0, (_0x4689a0._sprite[_0x1801c9][0x0] + _0x4689a0._sprite[_0x1801c9][0x1]) / 0x3e8 - _0x53484b),
          _0x25ae83 = 0x3e8 * _0x352c6f / Math.abs(_0x40da7a._rate),
          _0x298acb = _0x4689a0._sprite[_0x1801c9][0x0] / 0x3e8,
          _0x42b661 = (_0x4689a0._sprite[_0x1801c9][0x0] + _0x4689a0._sprite[_0x1801c9][0x1]) / 0x3e8;
        _0x40da7a._sprite = _0x1801c9, _0x40da7a._ended = !0x1;
        var _0x405633 = function () {
          _0x40da7a._paused = !0x1, _0x40da7a._seek = _0x53484b, _0x40da7a._start = _0x298acb, _0x40da7a._stop = _0x42b661, _0x40da7a._loop = !(!_0x40da7a._loop && !_0x4689a0._sprite[_0x1801c9][0x2]);
        };
        if (_0x53484b >= _0x42b661) _0x4689a0._ended(_0x40da7a);else {
          var _0x2ae9dc = _0x40da7a._node;
          if (_0x4689a0._webAudio) _0x113978 = function () {
            _0x4689a0._playLock = !0x1, _0x405633(), _0x4689a0._refreshBuffer(_0x40da7a), _0x2ae9dc.gain.setValueAtTime(_0x40da7a._muted || _0x4689a0._muted ? 0x0 : _0x40da7a._volume, _0x40784d.ctx.currentTime), _0x40da7a._playStart = _0x40784d.ctx.currentTime, 'undefined' === typeof _0x2ae9dc.bufferSource.start ? _0x40da7a._loop ? _0x2ae9dc.bufferSource.noteGrainOn(0x0, _0x53484b, 0x15180) : _0x2ae9dc.bufferSource.noteGrainOn(0x0, _0x53484b, _0x352c6f) : _0x40da7a._loop ? _0x2ae9dc.bufferSource.start(0x0, _0x53484b, 0x15180) : _0x2ae9dc.bufferSource.start(0x0, _0x53484b, _0x352c6f), Infinity !== _0x25ae83 && (_0x4689a0._endTimers[_0x40da7a._id] = setTimeout(_0x4689a0._ended.bind(_0x4689a0, _0x40da7a), _0x25ae83)), _0x4c7fd8 || setTimeout(function () {
              _0x4689a0._emit('play', _0x40da7a._id), _0x4689a0._loadQueue();
            }, 0x0);
          }, 'running' === _0x40784d.state && 'interrupted' !== _0x40784d.ctx.state ? _0x113978() : (_0x4689a0._playLock = !0x0, _0x4689a0.once('resume', _0x113978), _0x4689a0._clearTimer(_0x40da7a._id));else {
            var _0x18a162 = function () {
              _0x2ae9dc.currentTime = _0x53484b, _0x2ae9dc.muted = _0x40da7a._muted || _0x4689a0._muted || _0x40784d._muted || _0x2ae9dc.muted, _0x2ae9dc.volume = _0x40da7a._volume * _0x40784d.volume(), _0x2ae9dc.playbackRate = _0x40da7a._rate;
              try {
                var _0x1ca61f = _0x2ae9dc.play();
                _0x1ca61f && 'undefined' !== typeof Promise && (_0x1ca61f instanceof Promise || 'function' === typeof _0x1ca61f.then) ? (_0x4689a0._playLock = !0x0, _0x405633(), _0x1ca61f.then(function () {
                  _0x4689a0._playLock = !0x1, _0x2ae9dc._unlocked = !0x0, _0x4c7fd8 ? _0x4689a0._loadQueue() : _0x4689a0._emit('play', _0x40da7a._id);
                })['catch'](function () {
                  _0x4689a0._playLock = !0x1, _0x4689a0._emit('playerror', _0x40da7a._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction."), _0x40da7a._ended = !0x0, _0x40da7a._paused = !0x0;
                })) : _0x4c7fd8 || (_0x4689a0._playLock = !0x1, _0x405633(), _0x4689a0._emit('play', _0x40da7a._id)), _0x2ae9dc.playbackRate = _0x40da7a._rate, _0x2ae9dc.paused ? _0x4689a0._emit('playerror', _0x40da7a._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.") : '__default' !== _0x1801c9 || _0x40da7a._loop ? _0x4689a0._endTimers[_0x40da7a._id] = setTimeout(_0x4689a0._ended.bind(_0x4689a0, _0x40da7a), _0x25ae83) : (_0x4689a0._endTimers[_0x40da7a._id] = function () {
                  _0x4689a0._ended(_0x40da7a), _0x2ae9dc.removeEventListener('ended', _0x4689a0._endTimers[_0x40da7a._id], !0x1);
                }, _0x2ae9dc.addEventListener('ended', _0x4689a0._endTimers[_0x40da7a._id], !0x1));
              } catch (_0x150095) {
                _0x4689a0._emit('playerror', _0x40da7a._id, _0x150095);
              }
            };
            'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA' === _0x2ae9dc.src && (_0x2ae9dc.src = _0x4689a0._src, _0x2ae9dc.load()), _0x113978 = window && window.ejecta || !_0x2ae9dc.readyState && _0x40784d._navigator.isCocoonJS;
            if (0x3 <= _0x2ae9dc.readyState || _0x113978) _0x18a162();else {
              _0x4689a0._playLock = !0x0, _0x4689a0._state = 'loading';
              var _0xc93b14 = function () {
                _0x4689a0._state = 'loaded', _0x18a162(), _0x2ae9dc.removeEventListener(_0x40784d._canPlayEvent, _0xc93b14, !0x1);
              };
              _0x2ae9dc.addEventListener(_0x40784d._canPlayEvent, _0xc93b14, !0x1), _0x4689a0._clearTimer(_0x40da7a._id);
            }
          }
          return _0x40da7a._id;
        }
      },
      'pause': function (_0x4a3750, _0x90a2aa) {
        var _0x58cb17 = this;
        if ('loaded' !== _0x58cb17._state || _0x58cb17._playLock) return _0x58cb17._queue.push({
          'event': 'pause',
          'action': function () {
            _0x58cb17.pause(_0x4a3750);
          }
        }), _0x58cb17;
        for (var _0x4ffd74 = _0x58cb17._getSoundIds(_0x4a3750), _0xccaf0b = 0x0; _0xccaf0b < _0x4ffd74.length; _0xccaf0b++) {
          _0x58cb17._clearTimer(_0x4ffd74[_0xccaf0b]);
          var _0x59d095 = _0x58cb17._soundById(_0x4ffd74[_0xccaf0b]);
          if (_0x59d095 && !_0x59d095._paused && (_0x59d095._seek = _0x58cb17.seek(_0x4ffd74[_0xccaf0b]), _0x59d095._rateSeek = 0x0, _0x59d095._paused = !0x0, _0x58cb17._stopFade(_0x4ffd74[_0xccaf0b]), _0x59d095._node)) {
            if (_0x58cb17._webAudio) {
              if (!_0x59d095._node.bufferSource) continue;
              'undefined' === typeof _0x59d095._node.bufferSource.stop ? _0x59d095._node.bufferSource.noteOff(0x0) : _0x59d095._node.bufferSource.stop(0x0), _0x58cb17._cleanBuffer(_0x59d095._node);
            } else (!isNaN(_0x59d095._node.duration) || Infinity === _0x59d095._node.duration) && _0x59d095._node.pause();
          }
          _0x90a2aa || _0x58cb17._emit('pause', _0x59d095 ? _0x59d095._id : null);
        }
        return _0x58cb17;
      },
      'stop': function (_0x46d57b, _0x14aa7f) {
        var _0x54512e = this;
        if ('loaded' !== _0x54512e._state || _0x54512e._playLock) return _0x54512e._queue.push({
          'event': 'stop',
          'action': function () {
            _0x54512e.stop(_0x46d57b);
          }
        }), _0x54512e;
        for (var _0x2f7f25 = _0x54512e._getSoundIds(_0x46d57b), _0x42b8a2 = 0x0; _0x42b8a2 < _0x2f7f25.length; _0x42b8a2++) {
          _0x54512e._clearTimer(_0x2f7f25[_0x42b8a2]);
          var _0x3e853e = _0x54512e._soundById(_0x2f7f25[_0x42b8a2]);
          if (_0x3e853e) {
            _0x3e853e._seek = _0x3e853e._start || 0x0, _0x3e853e._rateSeek = 0x0, _0x3e853e._paused = !0x0, _0x3e853e._ended = !0x0, _0x54512e._stopFade(_0x2f7f25[_0x42b8a2]);
            if (_0x3e853e._node) {
              if (_0x54512e._webAudio) _0x3e853e._node.bufferSource && ('undefined' === typeof _0x3e853e._node.bufferSource.stop ? _0x3e853e._node.bufferSource.noteOff(0x0) : _0x3e853e._node.bufferSource.stop(0x0), _0x54512e._cleanBuffer(_0x3e853e._node));else {
                if (!isNaN(_0x3e853e._node.duration) || Infinity === _0x3e853e._node.duration) _0x3e853e._node.currentTime = _0x3e853e._start || 0x0, _0x3e853e._node.pause(), Infinity === _0x3e853e._node.duration && _0x54512e._clearSound(_0x3e853e._node);
              }
            }
            _0x14aa7f || _0x54512e._emit('stop', _0x3e853e._id);
          }
        }
        return _0x54512e;
      },
      'mute': function (_0x1ca566, _0x1f11cf) {
        var _0x25c71e = this;
        if ('loaded' !== _0x25c71e._state || _0x25c71e._playLock) return _0x25c71e._queue.push({
          'event': 'mute',
          'action': function () {
            _0x25c71e.mute(_0x1ca566, _0x1f11cf);
          }
        }), _0x25c71e;
        if ('undefined' === typeof _0x1f11cf) {
          if ('boolean' === typeof _0x1ca566) _0x25c71e._muted = _0x1ca566;else return _0x25c71e._muted;
        }
        for (var _0x2f4787 = _0x25c71e._getSoundIds(_0x1f11cf), _0x5bb415 = 0x0; _0x5bb415 < _0x2f4787.length; _0x5bb415++) {
          var _0x269041 = _0x25c71e._soundById(_0x2f4787[_0x5bb415]);
          _0x269041 && (_0x269041._muted = _0x1ca566, _0x269041._interval && _0x25c71e._stopFade(_0x269041._id), _0x25c71e._webAudio && _0x269041._node ? _0x269041._node.gain.setValueAtTime(_0x1ca566 ? 0x0 : _0x269041._volume, _0x40784d.ctx.currentTime) : _0x269041._node && (_0x269041._node.muted = _0x40784d._muted ? !0x0 : _0x1ca566), _0x25c71e._emit('mute', _0x269041._id));
        }
        return _0x25c71e;
      },
      'volume': function () {
        var _0x44807e = this,
          _0x5abdbf = arguments,
          _0x201000,
          _0xb4f68c;
        if (0x0 === _0x5abdbf.length) return _0x44807e._volume;
        0x1 === _0x5abdbf.length || 0x2 === _0x5abdbf.length && 'undefined' === typeof _0x5abdbf[0x1] ? 0x0 <= _0x44807e._getSoundIds().indexOf(_0x5abdbf[0x0]) ? _0xb4f68c = parseInt(_0x5abdbf[0x0], 0xa) : _0x201000 = parseFloat(_0x5abdbf[0x0]) : 0x2 <= _0x5abdbf.length && (_0x201000 = parseFloat(_0x5abdbf[0x0]), _0xb4f68c = parseInt(_0x5abdbf[0x1], 0xa));
        var _0x2011fa;
        if ('undefined' !== typeof _0x201000 && 0x0 <= _0x201000 && 0x1 >= _0x201000) {
          if ('loaded' !== _0x44807e._state || _0x44807e._playLock) return _0x44807e._queue.push({
            'event': 'volume',
            'action': function () {
              _0x44807e.volume.apply(_0x44807e, _0x5abdbf);
            }
          }), _0x44807e;
          'undefined' === typeof _0xb4f68c && (_0x44807e._volume = _0x201000), _0xb4f68c = _0x44807e._getSoundIds(_0xb4f68c);
          for (var _0x5a08b6 = 0x0; _0x5a08b6 < _0xb4f68c.length; _0x5a08b6++) if (_0x2011fa = _0x44807e._soundById(_0xb4f68c[_0x5a08b6])) _0x2011fa._volume = _0x201000, _0x5abdbf[0x2] || _0x44807e._stopFade(_0xb4f68c[_0x5a08b6]), _0x44807e._webAudio && _0x2011fa._node && !_0x2011fa._muted ? _0x2011fa._node.gain.setValueAtTime(_0x201000, _0x40784d.ctx.currentTime) : _0x2011fa._node && !_0x2011fa._muted && (_0x2011fa._node.volume = _0x201000 * _0x40784d.volume()), _0x44807e._emit('volume', _0x2011fa._id);
        } else return (_0x2011fa = _0xb4f68c ? _0x44807e._soundById(_0xb4f68c) : _0x44807e._sounds[0x0]) ? _0x2011fa._volume : 0x0;
        return _0x44807e;
      },
      'fade': function (_0x1b6189, _0x3006e3, _0x42893b, _0x502514) {
        var _0x5d42d2 = this;
        if ('loaded' !== _0x5d42d2._state || _0x5d42d2._playLock) return _0x5d42d2._queue.push({
          'event': 'fade',
          'action': function () {
            _0x5d42d2.fade(_0x1b6189, _0x3006e3, _0x42893b, _0x502514);
          }
        }), _0x5d42d2;
        _0x1b6189 = Math.min(Math.max(0x0, parseFloat(_0x1b6189)), 0x1), _0x3006e3 = Math.min(Math.max(0x0, parseFloat(_0x3006e3)), 0x1), _0x42893b = parseFloat(_0x42893b), _0x5d42d2.volume(_0x1b6189, _0x502514);
        for (var _0x1c7acd = _0x5d42d2._getSoundIds(_0x502514), _0x2bbcff = 0x0; _0x2bbcff < _0x1c7acd.length; _0x2bbcff++) {
          var _0x18d180 = _0x5d42d2._soundById(_0x1c7acd[_0x2bbcff]);
          if (_0x18d180) {
            _0x502514 || _0x5d42d2._stopFade(_0x1c7acd[_0x2bbcff]);
            if (_0x5d42d2._webAudio && !_0x18d180._muted) {
              var _0x3bd168 = _0x40784d.ctx.currentTime,
                _0x19d7a3 = _0x3bd168 + _0x42893b / 0x3e8;
              _0x18d180._volume = _0x1b6189, _0x18d180._node.gain.setValueAtTime(_0x1b6189, _0x3bd168), _0x18d180._node.gain.linearRampToValueAtTime(_0x3006e3, _0x19d7a3);
            }
            _0x5d42d2._startFadeInterval(_0x18d180, _0x1b6189, _0x3006e3, _0x42893b, _0x1c7acd[_0x2bbcff], 'undefined' === typeof _0x502514);
          }
        }
        return _0x5d42d2;
      },
      '_startFadeInterval': function (_0x33239c, _0x5620b7, _0x19bc0e, _0x2b4444, _0x1634fb, _0x555401) {
        var _0x42ab51 = this,
          _0x5790ca = _0x5620b7,
          _0x32ec1d = _0x19bc0e - _0x5620b7;
        _0x1634fb = Math.abs(_0x32ec1d / 0.01), _0x1634fb = Math.max(0x4, 0x0 < _0x1634fb ? _0x2b4444 / _0x1634fb : _0x2b4444);
        var _0x3e51f0 = Date.now();
        _0x33239c._fadeTo = _0x19bc0e, _0x33239c._interval = setInterval(function () {
          var _0x63d04e = (Date.now() - _0x3e51f0) / _0x2b4444;
          _0x3e51f0 = Date.now(), _0x5790ca += _0x32ec1d * _0x63d04e, _0x5790ca = Math.round(0x64 * _0x5790ca) / 0x64, _0x5790ca = 0x0 > _0x32ec1d ? Math.max(_0x19bc0e, _0x5790ca) : Math.min(_0x19bc0e, _0x5790ca), _0x42ab51._webAudio ? _0x33239c._volume = _0x5790ca : _0x42ab51.volume(_0x5790ca, _0x33239c._id, !0x0), _0x555401 && (_0x42ab51._volume = _0x5790ca);
          if (_0x19bc0e < _0x5620b7 && _0x5790ca <= _0x19bc0e || _0x19bc0e > _0x5620b7 && _0x5790ca >= _0x19bc0e) clearInterval(_0x33239c._interval), _0x33239c._interval = null, _0x33239c._fadeTo = null, _0x42ab51.volume(_0x19bc0e, _0x33239c._id), _0x42ab51._emit('fade', _0x33239c._id);
        }, _0x1634fb);
      },
      '_stopFade': function (_0x4953a8) {
        var _0x1a4f38 = this._soundById(_0x4953a8);
        return _0x1a4f38 && _0x1a4f38._interval && (this._webAudio && _0x1a4f38._node.gain.cancelScheduledValues(_0x40784d.ctx.currentTime), clearInterval(_0x1a4f38._interval), _0x1a4f38._interval = null, this.volume(_0x1a4f38._fadeTo, _0x4953a8), _0x1a4f38._fadeTo = null, this._emit('fade', _0x4953a8)), this;
      },
      'loop': function () {
        var _0x58d634 = arguments,
          _0x5a0993,
          _0x177751;
        if (0x0 === _0x58d634.length) return this._loop;
        if (0x1 === _0x58d634.length) {
          if ('boolean' === typeof _0x58d634[0x0]) this._loop = _0x5a0993 = _0x58d634[0x0];else return (_0x58d634 = this._soundById(parseInt(_0x58d634[0x0], 0xa))) ? _0x58d634._loop : !0x1;
        } else 0x2 === _0x58d634.length && (_0x5a0993 = _0x58d634[0x0], _0x177751 = parseInt(_0x58d634[0x1], 0xa));
        _0x177751 = this._getSoundIds(_0x177751);
        for (var _0x2da1fd = 0x0; _0x2da1fd < _0x177751.length; _0x2da1fd++) if (_0x58d634 = this._soundById(_0x177751[_0x2da1fd])) {
          if (_0x58d634._loop = _0x5a0993, this._webAudio && _0x58d634._node && _0x58d634._node.bufferSource && (_0x58d634._node.bufferSource.loop = _0x5a0993)) _0x58d634._node.bufferSource.loopStart = _0x58d634._start || 0x0, _0x58d634._node.bufferSource.loopEnd = _0x58d634._stop, this.playing(_0x177751[_0x2da1fd]) && (this.pause(_0x177751[_0x2da1fd], !0x0), this.play(_0x177751[_0x2da1fd], !0x0));
        }
        return this;
      },
      'rate': function () {
        var _0x28dc3a = this,
          _0x463901 = arguments,
          _0x34dcac,
          _0xbcb749;
        0x0 === _0x463901.length ? _0xbcb749 = _0x28dc3a._sounds[0x0]._id : 0x1 === _0x463901.length ? 0x0 <= _0x28dc3a._getSoundIds().indexOf(_0x463901[0x0]) ? _0xbcb749 = parseInt(_0x463901[0x0], 0xa) : _0x34dcac = parseFloat(_0x463901[0x0]) : 0x2 === _0x463901.length && (_0x34dcac = parseFloat(_0x463901[0x0]), _0xbcb749 = parseInt(_0x463901[0x1], 0xa));
        var _0x271129;
        if ('number' === typeof _0x34dcac) {
          if ('loaded' !== _0x28dc3a._state || _0x28dc3a._playLock) return _0x28dc3a._queue.push({
            'event': 'rate',
            'action': function () {
              _0x28dc3a.rate.apply(_0x28dc3a, _0x463901);
            }
          }), _0x28dc3a;
          'undefined' === typeof _0xbcb749 && (_0x28dc3a._rate = _0x34dcac), _0xbcb749 = _0x28dc3a._getSoundIds(_0xbcb749);
          for (var _0x1c8905 = 0x0; _0x1c8905 < _0xbcb749.length; _0x1c8905++) if (_0x271129 = _0x28dc3a._soundById(_0xbcb749[_0x1c8905])) {
            _0x28dc3a.playing(_0xbcb749[_0x1c8905]) && (_0x271129._rateSeek = _0x28dc3a.seek(_0xbcb749[_0x1c8905]), _0x271129._playStart = _0x28dc3a._webAudio ? _0x40784d.ctx.currentTime : _0x271129._playStart), _0x271129._rate = _0x34dcac, _0x28dc3a._webAudio && _0x271129._node && _0x271129._node.bufferSource ? _0x271129._node.bufferSource.playbackRate.setValueAtTime(_0x34dcac, _0x40784d.ctx.currentTime) : _0x271129._node && (_0x271129._node.playbackRate = _0x34dcac);
            var _0x4de4cc = _0x28dc3a.seek(_0xbcb749[_0x1c8905]),
              _0x4de4cc = 0x3e8 * ((_0x28dc3a._sprite[_0x271129._sprite][0x0] + _0x28dc3a._sprite[_0x271129._sprite][0x1]) / 0x3e8 - _0x4de4cc) / Math.abs(_0x271129._rate);
            if (_0x28dc3a._endTimers[_0xbcb749[_0x1c8905]] || !_0x271129._paused) _0x28dc3a._clearTimer(_0xbcb749[_0x1c8905]), _0x28dc3a._endTimers[_0xbcb749[_0x1c8905]] = setTimeout(_0x28dc3a._ended.bind(_0x28dc3a, _0x271129), _0x4de4cc);
            _0x28dc3a._emit('rate', _0x271129._id);
          }
        } else return (_0x271129 = _0x28dc3a._soundById(_0xbcb749)) ? _0x271129._rate : _0x28dc3a._rate;
        return _0x28dc3a;
      },
      'seek': function () {
        var _0x2776a9 = this,
          _0x319b1f = arguments,
          _0x45d532,
          _0x5c1c4d;
        0x0 === _0x319b1f.length ? _0x2776a9._sounds.length && (_0x5c1c4d = _0x2776a9._sounds[0x0]._id) : 0x1 === _0x319b1f.length ? 0x0 <= _0x2776a9._getSoundIds().indexOf(_0x319b1f[0x0]) ? _0x5c1c4d = parseInt(_0x319b1f[0x0], 0xa) : _0x2776a9._sounds.length && (_0x5c1c4d = _0x2776a9._sounds[0x0]._id, _0x45d532 = parseFloat(_0x319b1f[0x0])) : 0x2 === _0x319b1f.length && (_0x45d532 = parseFloat(_0x319b1f[0x0]), _0x5c1c4d = parseInt(_0x319b1f[0x1], 0xa));
        if ('undefined' === typeof _0x5c1c4d) return 0x0;
        if ('number' === typeof _0x45d532 && ('loaded' !== _0x2776a9._state || _0x2776a9._playLock)) return _0x2776a9._queue.push({
          'event': 'seek',
          'action': function () {
            _0x2776a9.seek.apply(_0x2776a9, _0x319b1f);
          }
        }), _0x2776a9;
        var _0x2e346d = _0x2776a9._soundById(_0x5c1c4d);
        if (_0x2e346d) {
          if ('number' === typeof _0x45d532 && 0x0 <= _0x45d532) {
            var _0x259e89 = _0x2776a9.playing(_0x5c1c4d);
            _0x259e89 && _0x2776a9.pause(_0x5c1c4d, !0x0), _0x2e346d._seek = _0x45d532, _0x2e346d._ended = !0x1, _0x2776a9._clearTimer(_0x5c1c4d), !_0x2776a9._webAudio && _0x2e346d._node && !isNaN(_0x2e346d._node.duration) && (_0x2e346d._node.currentTime = _0x45d532);
            var _0x42f9b1 = function () {
              _0x259e89 && _0x2776a9.play(_0x5c1c4d, !0x0), _0x2776a9._emit('seek', _0x5c1c4d);
            };
            if (_0x259e89 && !_0x2776a9._webAudio) {
              var _0x7db1f3 = function () {
                _0x2776a9._playLock ? setTimeout(_0x7db1f3, 0x0) : _0x42f9b1();
              };
              setTimeout(_0x7db1f3, 0x0);
            } else _0x42f9b1();
          } else return _0x2776a9._webAudio ? (_0x45d532 = _0x2776a9.playing(_0x5c1c4d) ? _0x40784d.ctx.currentTime - _0x2e346d._playStart : 0x0, _0x2e346d._seek + ((_0x2e346d._rateSeek ? _0x2e346d._rateSeek - _0x2e346d._seek : 0x0) + _0x45d532 * Math.abs(_0x2e346d._rate))) : _0x2e346d._node.currentTime;
        }
        return _0x2776a9;
      },
      'playing': function (_0x52164b) {
        if ('number' === typeof _0x52164b) return (_0x52164b = this._soundById(_0x52164b)) ? !_0x52164b._paused : !0x1;
        for (_0x52164b = 0x0; _0x52164b < this._sounds.length; _0x52164b++) if (!this._sounds[_0x52164b]._paused) return !0x0;
        return !0x1;
      },
      'duration': function (_0x52a2bd) {
        var _0x7ed7e6 = this._duration;
        return (_0x52a2bd = this._soundById(_0x52a2bd)) && (_0x7ed7e6 = this._sprite[_0x52a2bd._sprite][0x1] / 0x3e8), _0x7ed7e6;
      },
      'state': function () {
        return this._state;
      },
      'unload': function () {
        for (var _0x4af9a3 = this._sounds, _0x57f498 = 0x0; _0x57f498 < _0x4af9a3.length; _0x57f498++) _0x4af9a3[_0x57f498]._paused || this.stop(_0x4af9a3[_0x57f498]._id), this._webAudio || (this._clearSound(_0x4af9a3[_0x57f498]._node), _0x4af9a3[_0x57f498]._node.removeEventListener('error', _0x4af9a3[_0x57f498]._errorFn, !0x1), _0x4af9a3[_0x57f498]._node.removeEventListener(_0x40784d._canPlayEvent, _0x4af9a3[_0x57f498]._loadFn, !0x1), _0x4af9a3[_0x57f498]._node.removeEventListener('ended', _0x4af9a3[_0x57f498]._endFn, !0x1), _0x40784d._releaseHtml5Audio(_0x4af9a3[_0x57f498]._node)), delete _0x4af9a3[_0x57f498]._node, this._clearTimer(_0x4af9a3[_0x57f498]._id);
        _0x57f498 = _0x40784d._howls.indexOf(this), 0x0 <= _0x57f498 && _0x40784d._howls.splice(_0x57f498, 0x1), _0x4af9a3 = !0x0;
        for (_0x57f498 = 0x0; _0x57f498 < _0x40784d._howls.length; _0x57f498++) if (_0x40784d._howls[_0x57f498]._src === this._src || 0x0 <= this._src.indexOf(_0x40784d._howls[_0x57f498]._src)) {
          _0x4af9a3 = !0x1;
          break;
        }
        return _0x3a0e92 && _0x4af9a3 && delete _0x3a0e92[this._src], _0x40784d.noAudio = !0x1, this._state = 'unloaded', this._sounds = [], null;
      },
      'on': function (_0x19d6fb, _0x4db6aa, _0x1ca706, _0xedc5fe) {
        return _0x19d6fb = this['_on' + _0x19d6fb], 'function' === typeof _0x4db6aa && _0x19d6fb.push(_0xedc5fe ? {
          'id': _0x1ca706,
          'fn': _0x4db6aa,
          'once': _0xedc5fe
        } : {
          'id': _0x1ca706,
          'fn': _0x4db6aa
        }), this;
      },
      'off': function (_0x1f2019, _0x44b2a5, _0x56c5c7) {
        var _0x185367 = this['_on' + _0x1f2019],
          _0x3ee165 = 0x0;
        'number' === typeof _0x44b2a5 && (_0x56c5c7 = _0x44b2a5, _0x44b2a5 = null);
        if (_0x44b2a5 || _0x56c5c7) for (_0x3ee165 = 0x0; _0x3ee165 < _0x185367.length; _0x3ee165++) {
          if (_0x1f2019 = _0x56c5c7 === _0x185367[_0x3ee165].id, _0x44b2a5 === _0x185367[_0x3ee165].fn && _0x1f2019 || !_0x44b2a5 && _0x1f2019) {
            _0x185367.splice(_0x3ee165, 0x1);
            break;
          }
        } else {
          if (_0x1f2019) this['_on' + _0x1f2019] = [];else {
            _0x44b2a5 = Object.keys(this);
            for (_0x3ee165 = 0x0; _0x3ee165 < _0x44b2a5.length; _0x3ee165++) 0x0 === _0x44b2a5[_0x3ee165].indexOf('_on') && Array.isArray(this[_0x44b2a5[_0x3ee165]]) && (this[_0x44b2a5[_0x3ee165]] = []);
          }
        }
        return this;
      },
      'once': function (_0x24384e, _0x57c518, _0x1db7f1) {
        return this.on(_0x24384e, _0x57c518, _0x1db7f1, 0x1), this;
      },
      '_emit': function (_0x7c13d2, _0x4999af, _0x26f1e7) {
        for (var _0x28bea8 = this['_on' + _0x7c13d2], _0x2337e9 = _0x28bea8.length - 0x1; 0x0 <= _0x2337e9; _0x2337e9--) if (!_0x28bea8[_0x2337e9].id || _0x28bea8[_0x2337e9].id === _0x4999af || 'load' === _0x7c13d2) setTimeout(function (_0xff2dfc) {
          _0xff2dfc.call(this, _0x4999af, _0x26f1e7);
        }.bind(this, _0x28bea8[_0x2337e9].fn), 0x0), _0x28bea8[_0x2337e9].once && this.off(_0x7c13d2, _0x28bea8[_0x2337e9].fn, _0x28bea8[_0x2337e9].id);
        return this._loadQueue(_0x7c13d2), this;
      },
      '_loadQueue': function (_0x5ba508) {
        if (0x0 < this._queue.length) {
          var _0xd728b3 = this._queue[0x0];
          _0xd728b3.event === _0x5ba508 && (this._queue.shift(), this._loadQueue()), _0x5ba508 || _0xd728b3.action();
        }
        return this;
      },
      '_ended': function (_0x540c24) {
        var _0x2bbef9 = _0x540c24._sprite;
        if (!this._webAudio && _0x540c24._node && !_0x540c24._node.paused && !_0x540c24._node.ended && _0x540c24._node.currentTime < _0x540c24._stop) return setTimeout(this._ended.bind(this, _0x540c24), 0x64), this;
        _0x2bbef9 = !(!_0x540c24._loop && !this._sprite[_0x2bbef9][0x2]), this._emit('end', _0x540c24._id), !this._webAudio && _0x2bbef9 && this.stop(_0x540c24._id, !0x0).play(_0x540c24._id);
        if (this._webAudio && _0x2bbef9) {
          this._emit('play', _0x540c24._id), _0x540c24._seek = _0x540c24._start || 0x0, _0x540c24._rateSeek = 0x0, _0x540c24._playStart = _0x40784d.ctx.currentTime;
          var _0x3534b0 = 0x3e8 * (_0x540c24._stop - _0x540c24._start) / Math.abs(_0x540c24._rate);
          this._endTimers[_0x540c24._id] = setTimeout(this._ended.bind(this, _0x540c24), _0x3534b0);
        }
        return this._webAudio && !_0x2bbef9 && (_0x540c24._paused = !0x0, _0x540c24._ended = !0x0, _0x540c24._seek = _0x540c24._start || 0x0, _0x540c24._rateSeek = 0x0, this._clearTimer(_0x540c24._id), this._cleanBuffer(_0x540c24._node), _0x40784d._autoSuspend()), !this._webAudio && !_0x2bbef9 && this.stop(_0x540c24._id, !0x0), this;
      },
      '_clearTimer': function (_0xf09c78) {
        if (this._endTimers[_0xf09c78]) {
          if ('function' !== typeof this._endTimers[_0xf09c78]) clearTimeout(this._endTimers[_0xf09c78]);else {
            var _0x1614df = this._soundById(_0xf09c78);
            _0x1614df && _0x1614df._node && _0x1614df._node.removeEventListener('ended', this._endTimers[_0xf09c78], !0x1);
          }
          delete this._endTimers[_0xf09c78];
        }
        return this;
      },
      '_soundById': function (_0x4b89f8) {
        for (var _0x18073d = 0x0; _0x18073d < this._sounds.length; _0x18073d++) if (_0x4b89f8 === this._sounds[_0x18073d]._id) return this._sounds[_0x18073d];
        return null;
      },
      '_inactiveSound': function () {
        this._drain();
        for (var _0x51490f = 0x0; _0x51490f < this._sounds.length; _0x51490f++) if (this._sounds[_0x51490f]._ended) return this._sounds[_0x51490f].reset();
        return new _0x3832f2(this);
      },
      '_drain': function () {
        var _0x2858cf = this._pool,
          _0x28eaab = 0x0,
          _0xc131de = 0x0;
        if (!(this._sounds.length < _0x2858cf)) {
          for (_0xc131de = 0x0; _0xc131de < this._sounds.length; _0xc131de++) this._sounds[_0xc131de]._ended && _0x28eaab++;
          for (_0xc131de = this._sounds.length - 0x1; 0x0 <= _0xc131de && !(_0x28eaab <= _0x2858cf); _0xc131de--) this._sounds[_0xc131de]._ended && (this._webAudio && this._sounds[_0xc131de]._node && this._sounds[_0xc131de]._node.disconnect(0x0), this._sounds.splice(_0xc131de, 0x1), _0x28eaab--);
        }
      },
      '_getSoundIds': function (_0x36cfff) {
        if ('undefined' === typeof _0x36cfff) {
          _0x36cfff = [];
          for (var _0xe827d5 = 0x0; _0xe827d5 < this._sounds.length; _0xe827d5++) _0x36cfff.push(this._sounds[_0xe827d5]._id);
          return _0x36cfff;
        }
        return [_0x36cfff];
      },
      '_refreshBuffer': function (_0x3abb2a) {
        _0x3abb2a._node.bufferSource = _0x40784d.ctx.createBufferSource(), _0x3abb2a._node.bufferSource.buffer = _0x3a0e92[this._src], _0x3abb2a._panner ? _0x3abb2a._node.bufferSource.connect(_0x3abb2a._panner) : _0x3abb2a._node.bufferSource.connect(_0x3abb2a._node);
        if (_0x3abb2a._node.bufferSource.loop = _0x3abb2a._loop) _0x3abb2a._node.bufferSource.loopStart = _0x3abb2a._start || 0x0, _0x3abb2a._node.bufferSource.loopEnd = _0x3abb2a._stop || 0x0;
        return _0x3abb2a._node.bufferSource.playbackRate.setValueAtTime(_0x3abb2a._rate, _0x40784d.ctx.currentTime), this;
      },
      '_cleanBuffer': function (_0x50e2ac) {
        var _0x2ed34d = _0x40784d._navigator && 0x0 <= _0x40784d._navigator.vendor.indexOf('Apple');
        if (!_0x50e2ac.bufferSource) return this;
        if (_0x40784d._scratchBuffer && _0x50e2ac.bufferSource && (_0x50e2ac.bufferSource.onended = null, _0x50e2ac.bufferSource.disconnect(0x0), _0x2ed34d)) try {
          _0x50e2ac.bufferSource.buffer = _0x40784d._scratchBuffer;
        } catch (_0x5e631d) {}
        return _0x50e2ac.bufferSource = null, this;
      },
      '_clearSound': function (_0xe49e16) {
        /MSIE |Trident\//.test(_0x40784d._navigator && _0x40784d._navigator.userAgent) || (_0xe49e16.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA');
      }
    };
    var _0x3832f2 = function (_0x41d9c5) {
      this._parent = _0x41d9c5, this.init();
    };
    _0x3832f2.prototype = {
      'init': function () {
        var _0xbb1fb7 = this._parent;
        return this._muted = _0xbb1fb7._muted, this._loop = _0xbb1fb7._loop, this._volume = _0xbb1fb7._volume, this._rate = _0xbb1fb7._rate, this._seek = 0x0, this._ended = this._paused = !0x0, this._sprite = '__default', this._id = ++_0x40784d._counter, _0xbb1fb7._sounds.push(this), this.create(), this;
      },
      'create': function () {
        var _0x2127d2 = this._parent,
          _0x1bc6e6 = _0x40784d._muted || this._muted || this._parent._muted ? 0x0 : this._volume;
        return _0x2127d2._webAudio ? (this._node = 'undefined' === typeof _0x40784d.ctx.createGain ? _0x40784d.ctx.createGainNode() : _0x40784d.ctx.createGain(), this._node.gain.setValueAtTime(_0x1bc6e6, _0x40784d.ctx.currentTime), this._node.paused = !0x0, this._node.connect(_0x40784d.masterGain)) : _0x40784d.noAudio || (this._node = _0x40784d._obtainHtml5Audio(), this._errorFn = this._errorListener.bind(this), this._node.addEventListener('error', this._errorFn, !0x1), this._loadFn = this._loadListener.bind(this), this._node.addEventListener(_0x40784d._canPlayEvent, this._loadFn, !0x1), this._endFn = this._endListener.bind(this), this._node.addEventListener('ended', this._endFn, !0x1), this._node.src = _0x2127d2._src, this._node.preload = !0x0 === _0x2127d2._preload ? 'auto' : _0x2127d2._preload, this._node.volume = _0x1bc6e6 * _0x40784d.volume(), this._node.load()), this;
      },
      'reset': function () {
        var _0x3ce6e2 = this._parent;
        return this._muted = _0x3ce6e2._muted, this._loop = _0x3ce6e2._loop, this._volume = _0x3ce6e2._volume, this._rate = _0x3ce6e2._rate, this._rateSeek = this._seek = 0x0, this._ended = this._paused = !0x0, this._sprite = '__default', this._id = ++_0x40784d._counter, this;
      },
      '_errorListener': function () {
        this._parent._emit('loaderror', this._id, this._node.error ? this._node.error.code : 0x0), this._node.removeEventListener('error', this._errorFn, !0x1);
      },
      '_loadListener': function () {
        var _0x1a9779 = this._parent;
        _0x1a9779._duration = Math.ceil(0xa * this._node.duration) / 0xa, 0x0 === Object.keys(_0x1a9779._sprite).length && (_0x1a9779._sprite = {
          '__default': [0x0, 0x3e8 * _0x1a9779._duration]
        }), 'loaded' !== _0x1a9779._state && (_0x1a9779._state = 'loaded', _0x1a9779._emit('load'), _0x1a9779._loadQueue()), this._node.removeEventListener(_0x40784d._canPlayEvent, this._loadFn, !0x1);
      },
      '_endListener': function () {
        var _0x548ef6 = this._parent;
        Infinity === _0x548ef6._duration && (_0x548ef6._duration = Math.ceil(0xa * this._node.duration) / 0xa, Infinity === _0x548ef6._sprite.__default[0x1] && (_0x548ef6._sprite.__default[0x1] = 0x3e8 * _0x548ef6._duration), _0x548ef6._ended(this)), this._node.removeEventListener('ended', this._endFn, !0x1);
      }
    };
    var _0x3a0e92 = {},
      _0x31c9fd = function (_0x5a94dc, _0x4bb100) {
        var _0x31d5d4 = function () {
            _0x4bb100._emit('loaderror', null, "Decoding audio data failed.");
          },
          _0x5a463d = function (_0x339fa1) {
            _0x339fa1 && 0x0 < _0x4bb100._sounds.length ? (_0x3a0e92[_0x4bb100._src] = _0x339fa1, _0x4b0315(_0x4bb100, _0x339fa1)) : _0x31d5d4();
          };
        'undefined' !== typeof Promise && 0x1 === _0x40784d.ctx.decodeAudioData.length ? _0x40784d.ctx.decodeAudioData(_0x5a94dc).then(_0x5a463d)['catch'](_0x31d5d4) : _0x40784d.ctx.decodeAudioData(_0x5a94dc, _0x5a463d, _0x31d5d4);
      },
      _0x4b0315 = function (_0xc49e60, _0x31585c) {
        _0x31585c && !_0xc49e60._duration && (_0xc49e60._duration = _0x31585c.duration), 0x0 === Object.keys(_0xc49e60._sprite).length && (_0xc49e60._sprite = {
          '__default': [0x0, 0x3e8 * _0xc49e60._duration]
        }), 'loaded' !== _0xc49e60._state && (_0xc49e60._state = 'loaded', _0xc49e60._emit('load'), _0xc49e60._loadQueue());
      },
      _0x1f87d9 = function () {
        if (_0x40784d.usingWebAudio) {
          try {
            'undefined' !== typeof AudioContext ? _0x40784d.ctx = new AudioContext() : 'undefined' !== typeof webkitAudioContext ? _0x40784d.ctx = new webkitAudioContext() : _0x40784d.usingWebAudio = !0x1;
          } catch (_0x13c8c0) {
            _0x40784d.usingWebAudio = !0x1;
          }
          _0x40784d.ctx || (_0x40784d.usingWebAudio = !0x1);
          var _0x199294 = /iP(hone|od|ad)/.test(_0x40784d._navigator && _0x40784d._navigator.platform),
            _0x4c4637 = _0x40784d._navigator && _0x40784d._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/),
            _0x4c4637 = _0x4c4637 ? parseInt(_0x4c4637[0x1], 0xa) : null;
          _0x199294 && _0x4c4637 && 0x9 > _0x4c4637 && (_0x199294 = /safari/.test(_0x40784d._navigator && _0x40784d._navigator.userAgent.toLowerCase()), _0x40784d._navigator && !_0x199294 && (_0x40784d.usingWebAudio = !0x1)), _0x40784d.usingWebAudio && (_0x40784d.masterGain = 'undefined' === typeof _0x40784d.ctx.createGain ? _0x40784d.ctx.createGainNode() : _0x40784d.ctx.createGain(), _0x40784d.masterGain.gain.setValueAtTime(_0x40784d._muted ? 0x0 : _0x40784d._volume, _0x40784d.ctx.currentTime), _0x40784d.masterGain.connect(_0x40784d.ctx.destination)), _0x40784d._setup();
        }
      };
    'function' === typeof define && define.amd && define([], function () {
      return {
        'Howler': _0x40784d,
        'Howl': _0x3172ba
      };
    }), 'undefined' !== typeof exports && (exports.Howler = _0x40784d, exports.Howl = _0x3172ba), 'undefined' !== typeof global ? (global.HowlerGlobal = _0x4fc4af, global.Howler = _0x40784d, global.Howl = _0x3172ba, global.Sound = _0x3832f2) : 'undefined' !== typeof window && (window.HowlerGlobal = _0x4fc4af, window.Howler = _0x40784d, window.Howl = _0x3172ba, window.Sound = _0x3832f2);
  }(), function () {
    HowlerGlobal.prototype._pos = [0x0, 0x0, 0x0], HowlerGlobal.prototype._orientation = [0x0, 0x0, -0x1, 0x0, 0x1, 0x0], HowlerGlobal.prototype.stereo = function (_0x5b37ce) {
      if (!this.ctx || !this.ctx.listener) return this;
      for (var _0x1b5af9 = this._howls.length - 0x1; 0x0 <= _0x1b5af9; _0x1b5af9--) this._howls[_0x1b5af9].stereo(_0x5b37ce);
      return this;
    }, HowlerGlobal.prototype.pos = function (_0x4d8e5c, _0x525897, _0x2f20ab) {
      if (!this.ctx || !this.ctx.listener) return this;
      _0x525897 = 'number' !== typeof _0x525897 ? this._pos[0x1] : _0x525897, _0x2f20ab = 'number' !== typeof _0x2f20ab ? this._pos[0x2] : _0x2f20ab;
      if ('number' === typeof _0x4d8e5c) this._pos = [_0x4d8e5c, _0x525897, _0x2f20ab], 'undefined' !== typeof this.ctx.listener.positionX ? (this.ctx.listener.positionX.setTargetAtTime(this._pos[0x0], Howler.ctx.currentTime, 0.1), this.ctx.listener.positionY.setTargetAtTime(this._pos[0x1], Howler.ctx.currentTime, 0.1), this.ctx.listener.positionZ.setTargetAtTime(this._pos[0x2], Howler.ctx.currentTime, 0.1)) : this.ctx.listener.setPosition(this._pos[0x0], this._pos[0x1], this._pos[0x2]);else return this._pos;
      return this;
    }, HowlerGlobal.prototype.orientation = function (_0x3a8109, _0xbbfeac, _0x4698ba, _0x1bbd4a, _0x542c46, _0x2f0c0a) {
      if (!this.ctx || !this.ctx.listener) return this;
      var _0x195560 = this._orientation;
      _0xbbfeac = 'number' !== typeof _0xbbfeac ? _0x195560[0x1] : _0xbbfeac, _0x4698ba = 'number' !== typeof _0x4698ba ? _0x195560[0x2] : _0x4698ba, _0x1bbd4a = 'number' !== typeof _0x1bbd4a ? _0x195560[0x3] : _0x1bbd4a, _0x542c46 = 'number' !== typeof _0x542c46 ? _0x195560[0x4] : _0x542c46, _0x2f0c0a = 'number' !== typeof _0x2f0c0a ? _0x195560[0x5] : _0x2f0c0a;
      if ('number' === typeof _0x3a8109) this._orientation = [_0x3a8109, _0xbbfeac, _0x4698ba, _0x1bbd4a, _0x542c46, _0x2f0c0a], 'undefined' !== typeof this.ctx.listener.forwardX ? (this.ctx.listener.forwardX.setTargetAtTime(_0x3a8109, Howler.ctx.currentTime, 0.1), this.ctx.listener.forwardY.setTargetAtTime(_0xbbfeac, Howler.ctx.currentTime, 0.1), this.ctx.listener.forwardZ.setTargetAtTime(_0x4698ba, Howler.ctx.currentTime, 0.1), this.ctx.listener.upX.setTargetAtTime(_0x1bbd4a, Howler.ctx.currentTime, 0.1), this.ctx.listener.upY.setTargetAtTime(_0x542c46, Howler.ctx.currentTime, 0.1), this.ctx.listener.upZ.setTargetAtTime(_0x2f0c0a, Howler.ctx.currentTime, 0.1)) : this.ctx.listener.setOrientation(_0x3a8109, _0xbbfeac, _0x4698ba, _0x1bbd4a, _0x542c46, _0x2f0c0a);else return _0x195560;
      return this;
    };
    var _0x4f3393 = Howl.prototype.init;
    Howl.prototype.init = function (_0x511d6b) {
      return this._orientation = _0x511d6b.orientation || [0x1, 0x0, 0x0], this._stereo = _0x511d6b.stereo || null, this._pos = _0x511d6b.pos || null, this._pannerAttr = {
        'coneInnerAngle': 'undefined' !== typeof _0x511d6b.coneInnerAngle ? _0x511d6b.coneInnerAngle : 0x168,
        'coneOuterAngle': 'undefined' !== typeof _0x511d6b.coneOuterAngle ? _0x511d6b.coneOuterAngle : 0x168,
        'coneOuterGain': 'undefined' !== typeof _0x511d6b.coneOuterGain ? _0x511d6b.coneOuterGain : 0x0,
        'distanceModel': 'undefined' !== typeof _0x511d6b.distanceModel ? _0x511d6b.distanceModel : 'inverse',
        'maxDistance': 'undefined' !== typeof _0x511d6b.maxDistance ? _0x511d6b.maxDistance : 0x2710,
        'panningModel': 'undefined' !== typeof _0x511d6b.panningModel ? _0x511d6b.panningModel : 'HRTF',
        'refDistance': 'undefined' !== typeof _0x511d6b.refDistance ? _0x511d6b.refDistance : 0x1,
        'rolloffFactor': 'undefined' !== typeof _0x511d6b.rolloffFactor ? _0x511d6b.rolloffFactor : 0x1
      }, this._onstereo = _0x511d6b.onstereo ? [{
        'fn': _0x511d6b.onstereo
      }] : [], this._onpos = _0x511d6b.onpos ? [{
        'fn': _0x511d6b.onpos
      }] : [], this._onorientation = _0x511d6b.onorientation ? [{
        'fn': _0x511d6b.onorientation
      }] : [], _0x4f3393.call(this, _0x511d6b);
    }, Howl.prototype.stereo = function (_0xc6c3cf, _0x45e85c) {
      var _0x35640f = this;
      if (!_0x35640f._webAudio) return _0x35640f;
      if ('loaded' !== _0x35640f._state) return _0x35640f._queue.push({
        'event': 'stereo',
        'action': function () {
          _0x35640f.stereo(_0xc6c3cf, _0x45e85c);
        }
      }), _0x35640f;
      var _0x42683e = 'undefined' === typeof Howler.ctx.createStereoPanner ? 'spatial' : 'stereo';
      if ('undefined' === typeof _0x45e85c) {
        if ('number' === typeof _0xc6c3cf) _0x35640f._stereo = _0xc6c3cf, _0x35640f._pos = [_0xc6c3cf, 0x0, 0x0];else return _0x35640f._stereo;
      }
      for (var _0x193277 = _0x35640f._getSoundIds(_0x45e85c), _0x168a1c = 0x0; _0x168a1c < _0x193277.length; _0x168a1c++) {
        var _0x1ec454 = _0x35640f._soundById(_0x193277[_0x168a1c]);
        if (_0x1ec454) {
          if ('number' === typeof _0xc6c3cf) _0x1ec454._stereo = _0xc6c3cf, _0x1ec454._pos = [_0xc6c3cf, 0x0, 0x0], _0x1ec454._node && (_0x1ec454._pannerAttr.panningModel = 'equalpower', (!_0x1ec454._panner || !_0x1ec454._panner.pan) && _0x2476d5(_0x1ec454, _0x42683e), 'spatial' === _0x42683e ? 'undefined' !== typeof _0x1ec454._panner.positionX ? (_0x1ec454._panner.positionX.setValueAtTime(_0xc6c3cf, Howler.ctx.currentTime), _0x1ec454._panner.positionY.setValueAtTime(0x0, Howler.ctx.currentTime), _0x1ec454._panner.positionZ.setValueAtTime(0x0, Howler.ctx.currentTime)) : _0x1ec454._panner.setPosition(_0xc6c3cf, 0x0, 0x0) : _0x1ec454._panner.pan.setValueAtTime(_0xc6c3cf, Howler.ctx.currentTime)), _0x35640f._emit('stereo', _0x1ec454._id);else return _0x1ec454._stereo;
        }
      }
      return _0x35640f;
    }, Howl.prototype.pos = function (_0x579e3d, _0x348357, _0x53fc49, _0x79c94d) {
      var _0x2423fd = this;
      if (!_0x2423fd._webAudio) return _0x2423fd;
      if ('loaded' !== _0x2423fd._state) return _0x2423fd._queue.push({
        'event': 'pos',
        'action': function () {
          _0x2423fd.pos(_0x579e3d, _0x348357, _0x53fc49, _0x79c94d);
        }
      }), _0x2423fd;
      _0x348357 = 'number' !== typeof _0x348357 ? 0x0 : _0x348357, _0x53fc49 = 'number' !== typeof _0x53fc49 ? -0.5 : _0x53fc49;
      if ('undefined' === typeof _0x79c94d) {
        if ('number' === typeof _0x579e3d) _0x2423fd._pos = [_0x579e3d, _0x348357, _0x53fc49];else return _0x2423fd._pos;
      }
      for (var _0x597fca = _0x2423fd._getSoundIds(_0x79c94d), _0x445295 = 0x0; _0x445295 < _0x597fca.length; _0x445295++) {
        var _0x5f4aa3 = _0x2423fd._soundById(_0x597fca[_0x445295]);
        if (_0x5f4aa3) {
          if ('number' === typeof _0x579e3d) _0x5f4aa3._pos = [_0x579e3d, _0x348357, _0x53fc49], _0x5f4aa3._node && ((!_0x5f4aa3._panner || _0x5f4aa3._panner.pan) && _0x2476d5(_0x5f4aa3, 'spatial'), 'undefined' !== typeof _0x5f4aa3._panner.positionX ? (_0x5f4aa3._panner.positionX.setValueAtTime(_0x579e3d, Howler.ctx.currentTime), _0x5f4aa3._panner.positionY.setValueAtTime(_0x348357, Howler.ctx.currentTime), _0x5f4aa3._panner.positionZ.setValueAtTime(_0x53fc49, Howler.ctx.currentTime)) : _0x5f4aa3._panner.setPosition(_0x579e3d, _0x348357, _0x53fc49)), _0x2423fd._emit('pos', _0x5f4aa3._id);else return _0x5f4aa3._pos;
        }
      }
      return _0x2423fd;
    }, Howl.prototype.orientation = function (_0x2d9db7, _0x3b4dc1, _0x2e5652, _0x19a611) {
      var _0x4096c6 = this;
      if (!_0x4096c6._webAudio) return _0x4096c6;
      if ('loaded' !== _0x4096c6._state) return _0x4096c6._queue.push({
        'event': 'orientation',
        'action': function () {
          _0x4096c6.orientation(_0x2d9db7, _0x3b4dc1, _0x2e5652, _0x19a611);
        }
      }), _0x4096c6;
      _0x3b4dc1 = 'number' !== typeof _0x3b4dc1 ? _0x4096c6._orientation[0x1] : _0x3b4dc1, _0x2e5652 = 'number' !== typeof _0x2e5652 ? _0x4096c6._orientation[0x2] : _0x2e5652;
      if ('undefined' === typeof _0x19a611) {
        if ('number' === typeof _0x2d9db7) _0x4096c6._orientation = [_0x2d9db7, _0x3b4dc1, _0x2e5652];else return _0x4096c6._orientation;
      }
      for (var _0x556d5f = _0x4096c6._getSoundIds(_0x19a611), _0x23d27f = 0x0; _0x23d27f < _0x556d5f.length; _0x23d27f++) {
        var _0x56ff72 = _0x4096c6._soundById(_0x556d5f[_0x23d27f]);
        if (_0x56ff72) {
          if ('number' === typeof _0x2d9db7) _0x56ff72._orientation = [_0x2d9db7, _0x3b4dc1, _0x2e5652], _0x56ff72._node && (_0x56ff72._panner || (_0x56ff72._pos || (_0x56ff72._pos = _0x4096c6._pos || [0x0, 0x0, -0.5]), _0x2476d5(_0x56ff72, 'spatial')), 'undefined' !== typeof _0x56ff72._panner.orientationX ? (_0x56ff72._panner.orientationX.setValueAtTime(_0x2d9db7, Howler.ctx.currentTime), _0x56ff72._panner.orientationY.setValueAtTime(_0x3b4dc1, Howler.ctx.currentTime), _0x56ff72._panner.orientationZ.setValueAtTime(_0x2e5652, Howler.ctx.currentTime)) : _0x56ff72._panner.setOrientation(_0x2d9db7, _0x3b4dc1, _0x2e5652)), _0x4096c6._emit('orientation', _0x56ff72._id);else return _0x56ff72._orientation;
        }
      }
      return _0x4096c6;
    }, Howl.prototype.pannerAttr = function () {
      var _0x1fafde = arguments,
        _0x3b55c9,
        _0x1345da;
      if (!this._webAudio) return this;
      if (0x0 === _0x1fafde.length) return this._pannerAttr;
      if (0x1 === _0x1fafde.length) {
        if ('object' === typeof _0x1fafde[0x0]) _0x3b55c9 = _0x1fafde[0x0], 'undefined' === typeof _0x1345da && (_0x3b55c9.pannerAttr || (_0x3b55c9.pannerAttr = {
          'coneInnerAngle': _0x3b55c9.coneInnerAngle,
          'coneOuterAngle': _0x3b55c9.coneOuterAngle,
          'coneOuterGain': _0x3b55c9.coneOuterGain,
          'distanceModel': _0x3b55c9.distanceModel,
          'maxDistance': _0x3b55c9.maxDistance,
          'refDistance': _0x3b55c9.refDistance,
          'rolloffFactor': _0x3b55c9.rolloffFactor,
          'panningModel': _0x3b55c9.panningModel
        }), this._pannerAttr = {
          'coneInnerAngle': 'undefined' !== typeof _0x3b55c9.pannerAttr.coneInnerAngle ? _0x3b55c9.pannerAttr.coneInnerAngle : this._coneInnerAngle,
          'coneOuterAngle': 'undefined' !== typeof _0x3b55c9.pannerAttr.coneOuterAngle ? _0x3b55c9.pannerAttr.coneOuterAngle : this._coneOuterAngle,
          'coneOuterGain': 'undefined' !== typeof _0x3b55c9.pannerAttr.coneOuterGain ? _0x3b55c9.pannerAttr.coneOuterGain : this._coneOuterGain,
          'distanceModel': 'undefined' !== typeof _0x3b55c9.pannerAttr.distanceModel ? _0x3b55c9.pannerAttr.distanceModel : this._distanceModel,
          'maxDistance': 'undefined' !== typeof _0x3b55c9.pannerAttr.maxDistance ? _0x3b55c9.pannerAttr.maxDistance : this._maxDistance,
          'refDistance': 'undefined' !== typeof _0x3b55c9.pannerAttr.refDistance ? _0x3b55c9.pannerAttr.refDistance : this._refDistance,
          'rolloffFactor': 'undefined' !== typeof _0x3b55c9.pannerAttr.rolloffFactor ? _0x3b55c9.pannerAttr.rolloffFactor : this._rolloffFactor,
          'panningModel': 'undefined' !== typeof _0x3b55c9.pannerAttr.panningModel ? _0x3b55c9.pannerAttr.panningModel : this._panningModel
        });else return (_0x1fafde = this._soundById(parseInt(_0x1fafde[0x0], 0xa))) ? _0x1fafde._pannerAttr : this._pannerAttr;
      } else 0x2 === _0x1fafde.length && (_0x3b55c9 = _0x1fafde[0x0], _0x1345da = parseInt(_0x1fafde[0x1], 0xa));
      _0x1345da = this._getSoundIds(_0x1345da);
      for (var _0x261454 = 0x0; _0x261454 < _0x1345da.length; _0x261454++) if (_0x1fafde = this._soundById(_0x1345da[_0x261454])) {
        var _0x29dedc = _0x1fafde._pannerAttr,
          _0x29dedc = {
            'coneInnerAngle': 'undefined' !== typeof _0x3b55c9.coneInnerAngle ? _0x3b55c9.coneInnerAngle : _0x29dedc.coneInnerAngle,
            'coneOuterAngle': 'undefined' !== typeof _0x3b55c9.coneOuterAngle ? _0x3b55c9.coneOuterAngle : _0x29dedc.coneOuterAngle,
            'coneOuterGain': 'undefined' !== typeof _0x3b55c9.coneOuterGain ? _0x3b55c9.coneOuterGain : _0x29dedc.coneOuterGain,
            'distanceModel': 'undefined' !== typeof _0x3b55c9.distanceModel ? _0x3b55c9.distanceModel : _0x29dedc.distanceModel,
            'maxDistance': 'undefined' !== typeof _0x3b55c9.maxDistance ? _0x3b55c9.maxDistance : _0x29dedc.maxDistance,
            'refDistance': 'undefined' !== typeof _0x3b55c9.refDistance ? _0x3b55c9.refDistance : _0x29dedc.refDistance,
            'rolloffFactor': 'undefined' !== typeof _0x3b55c9.rolloffFactor ? _0x3b55c9.rolloffFactor : _0x29dedc.rolloffFactor,
            'panningModel': 'undefined' !== typeof _0x3b55c9.panningModel ? _0x3b55c9.panningModel : _0x29dedc.panningModel
          },
          _0x4bf6ae = _0x1fafde._panner;
        _0x4bf6ae || (_0x1fafde._pos || (_0x1fafde._pos = this._pos || [0x0, 0x0, -0.5]), _0x2476d5(_0x1fafde, 'spatial'), _0x4bf6ae = _0x1fafde._panner), _0x4bf6ae.coneInnerAngle = _0x29dedc.coneInnerAngle, _0x4bf6ae.coneOuterAngle = _0x29dedc.coneOuterAngle, _0x4bf6ae.coneOuterGain = _0x29dedc.coneOuterGain, _0x4bf6ae.distanceModel = _0x29dedc.distanceModel, _0x4bf6ae.maxDistance = _0x29dedc.maxDistance, _0x4bf6ae.refDistance = _0x29dedc.refDistance, _0x4bf6ae.rolloffFactor = _0x29dedc.rolloffFactor, _0x4bf6ae.panningModel = _0x29dedc.panningModel;
      }
      return this;
    };
    var _0x183058 = Sound.prototype.init;
    Sound.prototype.init = function () {
      var _0x222dfa = this._parent;
      this._orientation = _0x222dfa._orientation, this._stereo = _0x222dfa._stereo, this._pos = _0x222dfa._pos, this._pannerAttr = _0x222dfa._pannerAttr, _0x183058.call(this), this._stereo ? _0x222dfa.stereo(this._stereo) : this._pos && _0x222dfa.pos(this._pos[0x0], this._pos[0x1], this._pos[0x2], this._id);
    };
    var _0x313af9 = Sound.prototype.reset;
    Sound.prototype.reset = function () {
      var _0x191b09 = this._parent;
      return this._orientation = _0x191b09._orientation, this._stereo = _0x191b09._stereo, this._pos = _0x191b09._pos, this._pannerAttr = _0x191b09._pannerAttr, this._stereo ? _0x191b09.stereo(this._stereo) : this._pos ? _0x191b09.pos(this._pos[0x0], this._pos[0x1], this._pos[0x2], this._id) : this._panner && (this._panner.disconnect(0x0), this._panner = void 0x0, _0x191b09._refreshBuffer(this)), _0x313af9.call(this);
    };
    var _0x2476d5 = function (_0x248cf4, _0x4ce11f) {
      'spatial' === (_0x4ce11f || 'spatial') ? (_0x248cf4._panner = Howler.ctx.createPanner(), _0x248cf4._panner.coneInnerAngle = _0x248cf4._pannerAttr.coneInnerAngle, _0x248cf4._panner.coneOuterAngle = _0x248cf4._pannerAttr.coneOuterAngle, _0x248cf4._panner.coneOuterGain = _0x248cf4._pannerAttr.coneOuterGain, _0x248cf4._panner.distanceModel = _0x248cf4._pannerAttr.distanceModel, _0x248cf4._panner.maxDistance = _0x248cf4._pannerAttr.maxDistance, _0x248cf4._panner.refDistance = _0x248cf4._pannerAttr.refDistance, _0x248cf4._panner.rolloffFactor = _0x248cf4._pannerAttr.rolloffFactor, _0x248cf4._panner.panningModel = _0x248cf4._pannerAttr.panningModel, 'undefined' !== typeof _0x248cf4._panner.positionX ? (_0x248cf4._panner.positionX.setValueAtTime(_0x248cf4._pos[0x0], Howler.ctx.currentTime), _0x248cf4._panner.positionY.setValueAtTime(_0x248cf4._pos[0x1], Howler.ctx.currentTime), _0x248cf4._panner.positionZ.setValueAtTime(_0x248cf4._pos[0x2], Howler.ctx.currentTime)) : _0x248cf4._panner.setPosition(_0x248cf4._pos[0x0], _0x248cf4._pos[0x1], _0x248cf4._pos[0x2]), 'undefined' !== typeof _0x248cf4._panner.orientationX ? (_0x248cf4._panner.orientationX.setValueAtTime(_0x248cf4._orientation[0x0], Howler.ctx.currentTime), _0x248cf4._panner.orientationY.setValueAtTime(_0x248cf4._orientation[0x1], Howler.ctx.currentTime), _0x248cf4._panner.orientationZ.setValueAtTime(_0x248cf4._orientation[0x2], Howler.ctx.currentTime)) : _0x248cf4._panner.setOrientation(_0x248cf4._orientation[0x0], _0x248cf4._orientation[0x1], _0x248cf4._orientation[0x2])) : (_0x248cf4._panner = Howler.ctx.createStereoPanner(), _0x248cf4._panner.pan.setValueAtTime(_0x248cf4._stereo, Howler.ctx.currentTime)), _0x248cf4._panner.connect(_0x248cf4._node), _0x248cf4._paused || _0x248cf4._parent.pause(_0x248cf4._id, !0x0).play(_0x248cf4._id, !0x0);
    };
  }(), !function (_0x169122, _0x4e7d0d) {
    'object' == typeof exports && 'undefined' != typeof module ? _0x4e7d0d() : 'function' == typeof define && define.amd ? define(_0x4e7d0d) : _0x4e7d0d();
  }(0x0, function () {
    function _0x57936e(_0x127f4a) {
      var _0x2f5b80 = this.constructor;
      return this.then(function (_0x3f4dff) {
        return _0x2f5b80.resolve(_0x127f4a()).then(function () {
          return _0x3f4dff;
        });
      }, function (_0xac729b) {
        return _0x2f5b80.resolve(_0x127f4a()).then(function () {
          return _0x2f5b80.reject(_0xac729b);
        });
      });
    }
    function _0x170f10() {}
    function _0x5987ab(_0x53cf12) {
      if (!(this instanceof _0x5987ab)) throw new TypeError("Promises must be constructed via new");
      if ('function' != typeof _0x53cf12) throw new TypeError("not a function");
      this._state = 0x0, this._handled = !0x1, this._value = void 0x0, this._deferreds = [], _0x5af9fc(_0x53cf12, this);
    }
    function _0x2bd52a(_0x3c332a, _0x35d4b9) {
      for (; 0x3 === _0x3c332a._state;) _0x3c332a = _0x3c332a._value;
      0x0 !== _0x3c332a._state ? (_0x3c332a._handled = !0x0, _0x5987ab._immediateFn(function () {
        var _0x49ad74 = 0x1 === _0x3c332a._state ? _0x35d4b9.onFulfilled : _0x35d4b9.onRejected;
        if (null !== _0x49ad74) {
          var _0x4d8101;
          try {
            _0x4d8101 = _0x49ad74(_0x3c332a._value);
          } catch (_0x25e015) {
            return void _0x47422e(_0x35d4b9.promise, _0x25e015);
          }
          _0x1969ac(_0x35d4b9.promise, _0x4d8101);
        } else (0x1 === _0x3c332a._state ? _0x1969ac : _0x47422e)(_0x35d4b9.promise, _0x3c332a._value);
      })) : _0x3c332a._deferreds.push(_0x35d4b9);
    }
    function _0x1969ac(_0x3a6917, _0x1fa357) {
      try {
        if (_0x1fa357 === _0x3a6917) throw new TypeError("A promise cannot be resolved with itself.");
        if (_0x1fa357 && ('object' == typeof _0x1fa357 || 'function' == typeof _0x1fa357)) {
          var _0x39150c = _0x1fa357.then;
          if (_0x1fa357 instanceof _0x5987ab) return _0x3a6917._state = 0x3, _0x3a6917._value = _0x1fa357, void _0x289304(_0x3a6917);
          if ('function' == typeof _0x39150c) return void _0x5af9fc(function () {
            _0x39150c.apply(_0x1fa357, arguments);
          }, _0x3a6917);
        }
        _0x3a6917._state = 0x1, _0x3a6917._value = _0x1fa357, _0x289304(_0x3a6917);
      } catch (_0x43d90e) {
        _0x47422e(_0x3a6917, _0x43d90e);
      }
    }
    function _0x47422e(_0x2735d0, _0x30544d) {
      _0x2735d0._state = 0x2, _0x2735d0._value = _0x30544d, _0x289304(_0x2735d0);
    }
    function _0x289304(_0x2db0d2) {
      0x2 === _0x2db0d2._state && 0x0 === _0x2db0d2._deferreds.length && _0x5987ab._immediateFn(function () {
        _0x2db0d2._handled || _0x5987ab._unhandledRejectionFn(_0x2db0d2._value);
      });
      for (var _0x26084a = 0x0, _0x37ec98 = _0x2db0d2._deferreds.length; _0x37ec98 > _0x26084a; _0x26084a++) _0x2bd52a(_0x2db0d2, _0x2db0d2._deferreds[_0x26084a]);
      _0x2db0d2._deferreds = null;
    }
    function _0x5af9fc(_0x38d5e9, _0x2e2f89) {
      var _0x390de3 = !0x1;
      try {
        _0x38d5e9(function (_0x2eb361) {
          _0x390de3 || (_0x390de3 = !0x0, _0x1969ac(_0x2e2f89, _0x2eb361));
        }, function (_0x456a0d) {
          _0x390de3 || (_0x390de3 = !0x0, _0x47422e(_0x2e2f89, _0x456a0d));
        });
      } catch (_0x7a6dd5) {
        _0x390de3 || (_0x390de3 = !0x0, _0x47422e(_0x2e2f89, _0x7a6dd5));
      }
    }
    var _0x183ecf = setTimeout;
    _0x5987ab.prototype['catch'] = function (_0x5bb257) {
      return this.then(null, _0x5bb257);
    }, _0x5987ab.prototype.then = function (_0x1b16de, _0x4c0331) {
      var _0x660c94 = new this.constructor(_0x170f10);
      return _0x2bd52a(this, new function (_0x3348d2, _0x2b4693, _0x4a7838) {
        this.onFulfilled = 'function' == typeof _0x3348d2 ? _0x3348d2 : null, this.onRejected = 'function' == typeof _0x2b4693 ? _0x2b4693 : null, this.promise = _0x4a7838;
      }(_0x1b16de, _0x4c0331, _0x660c94)), _0x660c94;
    }, _0x5987ab.prototype['finally'] = _0x57936e, _0x5987ab.all = function (_0x2eb127) {
      return new _0x5987ab(function (_0x121a67, _0x193ec0) {
        function _0x33845b(_0x2f7eaa, _0x494707) {
          try {
            if (_0x494707 && ('object' == typeof _0x494707 || 'function' == typeof _0x494707)) {
              var _0x282f30 = _0x494707.then;
              if ('function' == typeof _0x282f30) return void _0x282f30.call(_0x494707, function (_0x2eec0a) {
                _0x33845b(_0x2f7eaa, _0x2eec0a);
              }, _0x193ec0);
            }
            _0x4f7b9d[_0x2f7eaa] = _0x494707, 0x0 == --_0x291651 && _0x121a67(_0x4f7b9d);
          } catch (_0x3eb3a0) {
            _0x193ec0(_0x3eb3a0);
          }
        }
        if (!_0x2eb127 || 'undefined' == typeof _0x2eb127.length) throw new TypeError("Promise.all accepts an array");
        var _0x4f7b9d = Array.prototype.slice.call(_0x2eb127);
        if (0x0 === _0x4f7b9d.length) return _0x121a67([]);
        for (var _0x291651 = _0x4f7b9d.length, _0x4a7574 = 0x0; _0x4f7b9d.length > _0x4a7574; _0x4a7574++) _0x33845b(_0x4a7574, _0x4f7b9d[_0x4a7574]);
      });
    }, _0x5987ab.resolve = function (_0x4d0977) {
      return _0x4d0977 && 'object' == typeof _0x4d0977 && _0x4d0977.constructor === _0x5987ab ? _0x4d0977 : new _0x5987ab(function (_0x37804) {
        _0x37804(_0x4d0977);
      });
    }, _0x5987ab.reject = function (_0x1b9792) {
      return new _0x5987ab(function (_0x2f813d, _0x60967c) {
        _0x60967c(_0x1b9792);
      });
    }, _0x5987ab.race = function (_0x4e727d) {
      return new _0x5987ab(function (_0x2803b5, _0x34f0c3) {
        for (var _0x52bf48 = 0x0, _0x5f2134 = _0x4e727d.length; _0x5f2134 > _0x52bf48; _0x52bf48++) _0x4e727d[_0x52bf48].then(_0x2803b5, _0x34f0c3);
      });
    }, _0x5987ab._immediateFn = 'function' == typeof setImmediate && function (_0x2194b9) {
      setImmediate(_0x2194b9);
    } || function (_0x292d8f) {
      _0x183ecf(_0x292d8f, 0x0);
    }, _0x5987ab._unhandledRejectionFn = function (_0xb46327) {
      void 0x0 !== console && console && console.warn("Possible Unhandled Promise Rejection:", _0xb46327);
    };
    var _0x1012e3 = function () {
      if ('undefined' != typeof self) return self;
      if ('undefined' != typeof window) return window;
      if ('undefined' != typeof global) return global;
      throw Error("unable to locate global object");
    }();
    'Promise' in _0x1012e3 ? _0x1012e3.Promise.prototype['finally'] || (_0x1012e3.Promise.prototype['finally'] = _0x57936e) : _0x1012e3.Promise = _0x5987ab;
  }), function () {
    function _0xa51ffd(_0x19f5c0, _0x217518) {
      document.addEventListener ? _0x19f5c0.addEventListener('scroll', _0x217518, !0x1) : _0x19f5c0.attachEvent('scroll', _0x217518);
    }
    function _0x1f0e2d(_0xf9d113) {
      this.a = document.createElement('div'), this.a.setAttribute('aria-hidden', 'true'), this.a.appendChild(document.createTextNode(_0xf9d113)), this.b = document.createElement('span'), this.c = document.createElement('span'), this.h = document.createElement('span'), this.f = document.createElement('span'), this.g = -0x1, this.b.style.cssText = 'max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;', this.c.style.cssText = 'max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;', this.f.style.cssText = 'max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;', this.h.style.cssText = 'display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;', this.b.appendChild(this.h), this.c.appendChild(this.f), this.a.appendChild(this.b), this.a.appendChild(this.c);
    }
    function _0x3445f8(_0xb489c7, _0x3134a8) {
      _0xb489c7.a.style.cssText = 'max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:' + _0x3134a8 + ';';
    }
    function _0x564c4f(_0x48d18b) {
      var _0x2f164c = _0x48d18b.a.offsetWidth,
        _0x39461e = _0x2f164c + 0x64;
      return _0x48d18b.f.style.width = _0x39461e + 'px', _0x48d18b.c.scrollLeft = _0x39461e, _0x48d18b.b.scrollLeft = _0x48d18b.b.scrollWidth + 0x64, _0x48d18b.g !== _0x2f164c ? (_0x48d18b.g = _0x2f164c, !0x0) : !0x1;
    }
    function _0x67534b(_0x3129ee, _0x5d5a1a) {
      function _0x4ce469() {
        var _0x131c72 = _0x1ff622;
        _0x564c4f(_0x131c72) && _0x131c72.a.parentNode && _0x5d5a1a(_0x131c72.g);
      }
      var _0x1ff622 = _0x3129ee;
      _0xa51ffd(_0x3129ee.b, _0x4ce469), _0xa51ffd(_0x3129ee.c, _0x4ce469), _0x564c4f(_0x3129ee);
    }
    function _0x410cb2(_0x440afe, _0x289906) {
      var _0x494df9 = _0x289906 || {};
      this.family = _0x440afe, this.style = _0x494df9.style || 'normal', this.weight = _0x494df9.weight || 'normal', this.stretch = _0x494df9.stretch || 'normal';
    }
    function _0x479bd1() {
      return null === _0x1df62a && (_0x1df62a = !!document.fonts), _0x1df62a;
    }
    function _0x449755() {
      if (null === _0x31baee) {
        var _0x30d903 = document.createElement('div');
        try {
          _0x30d903.style.font = "condensed 100px sans-serif";
        } catch (_0x22303a) {}
        _0x31baee = '' !== _0x30d903.style.font;
      }
      return _0x31baee;
    }
    function _0x139e37(_0x1614a3, _0x25d874) {
      return [_0x1614a3.style, _0x1614a3.weight, _0x449755() ? _0x1614a3.stretch : '', '100px', _0x25d874].join(" ");
    }
    var _0x1d1e39 = null,
      _0x14b35c = null,
      _0x31baee = null,
      _0x1df62a = null;
    _0x410cb2.prototype.load = function (_0x3561c0, _0xf1d047) {
      var _0x480c33 = this,
        _0x4114bf = _0x3561c0 || 'BESbswy',
        _0x4361f1 = 0x0,
        _0x3c5640 = _0xf1d047 || 0xbb8,
        _0x172ce6 = new Date().getTime();
      return new Promise(function (_0x140487, _0x52e36d) {
        var _0x99e599;
        if (_0x99e599 = _0x479bd1()) null === _0x14b35c && (_0x479bd1() && /Apple/.test(window.navigator.vendor) ? (_0x99e599 = /AppleWebKit\/([0-9]+)(?:\.([0-9]+))(?:\.([0-9]+))/.exec(window.navigator.userAgent), _0x14b35c = !!_0x99e599 && 0x25b > parseInt(_0x99e599[0x1], 0xa)) : _0x14b35c = !0x1), _0x99e599 = !_0x14b35c;
        if (_0x99e599) {
          _0x99e599 = new Promise(function (_0x178b87, _0x1c468a) {
            function _0x31035f() {
              new Date().getTime() - _0x172ce6 >= _0x3c5640 ? _0x1c468a(Error('' + _0x3c5640 + "ms timeout exceeded")) : document.fonts.load(_0x139e37(_0x480c33, "\"" + _0x480c33.family + "\""), _0x4114bf).then(function (_0x648dbc) {
                0x1 <= _0x648dbc.length ? _0x178b87() : setTimeout(_0x31035f, 0x19);
              }, _0x1c468a);
            }
            _0x31035f();
          });
          var _0x2a57c5 = new Promise(function (_0x4fc42e, _0x134876) {
            _0x4361f1 = setTimeout(function () {
              _0x134876(Error('' + _0x3c5640 + "ms timeout exceeded"));
            }, _0x3c5640);
          });
          Promise.race([_0x2a57c5, _0x99e599]).then(function () {
            clearTimeout(_0x4361f1), _0x140487(_0x480c33);
          }, _0x52e36d);
        } else {
          var _0x11479e = function () {
            function _0x361530() {
              var _0x3674b5;
              if (_0x3674b5 = -0x1 != _0x32a29d && -0x1 != _0x197626 || -0x1 != _0x32a29d && -0x1 != _0x3f47e6 || -0x1 != _0x197626 && -0x1 != _0x3f47e6) (_0x3674b5 = _0x32a29d != _0x197626 && _0x32a29d != _0x3f47e6 && _0x197626 != _0x3f47e6) || (null === _0x1d1e39 && (_0x3674b5 = /AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent), _0x1d1e39 = !!_0x3674b5 && (0x218 > parseInt(_0x3674b5[0x1], 0xa) || 0x218 === parseInt(_0x3674b5[0x1], 0xa) && 0xb >= parseInt(_0x3674b5[0x2], 0xa))), _0x3674b5 = _0x1d1e39 && (_0x32a29d == _0x3bad17 && _0x197626 == _0x3bad17 && _0x3f47e6 == _0x3bad17 || _0x32a29d == _0xf4ca18 && _0x197626 == _0xf4ca18 && _0x3f47e6 == _0xf4ca18 || _0x32a29d == _0x456095 && _0x197626 == _0x456095 && _0x3f47e6 == _0x456095)), _0x3674b5 = !_0x3674b5;
              _0x3674b5 && (_0x2fb0da.parentNode && _0x2fb0da.parentNode.removeChild(_0x2fb0da), clearTimeout(_0x4361f1), _0x140487(_0x480c33));
            }
            function _0x213bbd() {
              if (new Date().getTime() - _0x172ce6 >= _0x3c5640) _0x2fb0da.parentNode && _0x2fb0da.parentNode.removeChild(_0x2fb0da), _0x52e36d(Error('' + _0x3c5640 + "ms timeout exceeded"));else {
                var _0x23235b = document.hidden;
                if (!0x0 === _0x23235b || void 0x0 === _0x23235b) _0x32a29d = _0xffd41e.a.offsetWidth, _0x197626 = _0x26f3ea.a.offsetWidth, _0x3f47e6 = _0x1996a3.a.offsetWidth, _0x361530();
                _0x4361f1 = setTimeout(_0x213bbd, 0x32);
              }
            }
            var _0xffd41e = new _0x1f0e2d(_0x4114bf),
              _0x26f3ea = new _0x1f0e2d(_0x4114bf),
              _0x1996a3 = new _0x1f0e2d(_0x4114bf),
              _0x32a29d = -0x1,
              _0x197626 = -0x1,
              _0x3f47e6 = -0x1,
              _0x3bad17 = -0x1,
              _0xf4ca18 = -0x1,
              _0x456095 = -0x1,
              _0x2fb0da = document.createElement('div');
            _0x2fb0da.dir = 'ltr', _0x3445f8(_0xffd41e, _0x139e37(_0x480c33, 'sans-serif')), _0x3445f8(_0x26f3ea, _0x139e37(_0x480c33, 'serif')), _0x3445f8(_0x1996a3, _0x139e37(_0x480c33, 'monospace')), _0x2fb0da.appendChild(_0xffd41e.a), _0x2fb0da.appendChild(_0x26f3ea.a), _0x2fb0da.appendChild(_0x1996a3.a), document.body.appendChild(_0x2fb0da), _0x3bad17 = _0xffd41e.a.offsetWidth, _0xf4ca18 = _0x26f3ea.a.offsetWidth, _0x456095 = _0x1996a3.a.offsetWidth, _0x213bbd(), _0x67534b(_0xffd41e, function (_0x589b4f) {
              _0x32a29d = _0x589b4f, _0x361530();
            }), _0x3445f8(_0xffd41e, _0x139e37(_0x480c33, "\"" + _0x480c33.family + "\",sans-serif")), _0x67534b(_0x26f3ea, function (_0x1bce67) {
              _0x197626 = _0x1bce67, _0x361530();
            }), _0x3445f8(_0x26f3ea, _0x139e37(_0x480c33, "\"" + _0x480c33.family + "\",serif")), _0x67534b(_0x1996a3, function (_0x5396f5) {
              _0x3f47e6 = _0x5396f5, _0x361530();
            }), _0x3445f8(_0x1996a3, _0x139e37(_0x480c33, "\"" + _0x480c33.family + "\",monospace"));
          };
          document.body ? _0x11479e() : document.addEventListener ? document.addEventListener('DOMContentLoaded', function _0xd5b1d7() {
            document.removeEventListener('DOMContentLoaded', _0xd5b1d7), _0x11479e();
          }) : document.attachEvent('onreadystatechange', function _0x53cfe7() {
            if ('interactive' == document.readyState || 'complete' == document.readyState) document.detachEvent('onreadystatechange', _0x53cfe7), _0x11479e();
          });
        }
      });
    }, 'object' === typeof module ? module.exports = _0x410cb2 : (window.FontFaceObserver = _0x410cb2, window.FontFaceObserver.prototype.load = _0x410cb2.prototype.load);
  }(), function (_0x14379b) {
    Number.prototype.map = function (_0x1a15b0, _0x546e89, _0x225f32, _0xed5e6e) {
      return _0x225f32 + (_0xed5e6e - _0x225f32) * ((this - _0x1a15b0) / (_0x546e89 - _0x1a15b0));
    }, Number.prototype.limit = function (_0x596070, _0x9f55ec) {
      return Math.min(_0x9f55ec, Math.max(_0x596070, this));
    }, Number.prototype.round = function (_0x5d1fca) {
      return _0x5d1fca = Math.pow(0xa, _0x5d1fca || 0x0), Math.round(this * _0x5d1fca) / _0x5d1fca;
    }, Number.prototype.floor = function () {
      return Math.floor(this);
    }, Number.prototype.ceil = function () {
      return Math.ceil(this);
    }, Number.prototype.toInt = function () {
      return this | 0x0;
    }, Number.prototype.toRad = function () {
      return this / 0xb4 * Math.PI;
    }, Number.prototype.toDeg = function () {
      return 0xb4 * this / Math.PI;
    }, Object.defineProperty(Array.prototype, 'erase', {
      'value': function (_0xbae463) {
        for (var _0x5b360b = this.length; _0x5b360b--;) this[_0x5b360b] === _0xbae463 && this.splice(_0x5b360b, 0x1);
        return this;
      }
    }), Object.defineProperty(Array.prototype, 'random', {
      'value': function () {
        return this[Math.floor(Math.random() * this.length)];
      }
    }), Function.prototype.bind = Function.prototype.bind || function (_0x217e56) {
      if ('function' !== typeof this) throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");
      var _0x2a4461 = Array.prototype.slice.call(arguments, 0x1),
        _0xd266f = this,
        _0x4e7f7f = function () {},
        _0x239dd0 = function () {
          return _0xd266f.apply(this instanceof _0x4e7f7f && _0x217e56 ? this : _0x217e56, _0x2a4461.concat(Array.prototype.slice.call(arguments)));
        };
      return _0x4e7f7f.prototype = this.prototype, _0x239dd0.prototype = new _0x4e7f7f(), _0x239dd0;
    }, _0x14379b.ig = {
      'game': null,
      'debug': null,
      'version': '1.24',
      'global': _0x14379b,
      'modules': {},
      'resources': [],
      'ready': !0x1,
      'baked': !0x1,
      'nocache': '',
      'ua': {},
      'prefix': _0x14379b.ImpactPrefix || '',
      'lib': 'lib/',
      '_current': null,
      '_loadQueue': [],
      '_waitForOnload': 0x0,
      '$': function (_0x1f1d34) {
        return '#' == _0x1f1d34.charAt(0x0) ? document.getElementById(_0x1f1d34.substr(0x1)) : document.getElementsByTagName(_0x1f1d34);
      },
      '$new': function (_0x57b74b) {
        return document.createElement(_0x57b74b);
      },
      'copy': function (_0x219477) {
        if (!_0x219477 || 'object' != typeof _0x219477 || _0x219477 instanceof HTMLElement || _0x219477 instanceof ig.Class) return _0x219477;
        if (_0x219477 instanceof Array) {
          for (var _0x18f00d = [], _0x498aab = 0x0, _0x16c9ab = _0x219477.length; _0x498aab < _0x16c9ab; _0x498aab++) _0x18f00d[_0x498aab] = ig.copy(_0x219477[_0x498aab]);
        } else {
          for (_0x498aab in _0x18f00d = {}, _0x219477) _0x18f00d[_0x498aab] = ig.copy(_0x219477[_0x498aab]);
        }
        return _0x18f00d;
      },
      'merge': function (_0x586ebc, _0x4c2344) {
        for (var _0x3abf59 in _0x4c2344) {
          var _0xc9a439 = _0x4c2344[_0x3abf59];
          if ('object' != typeof _0xc9a439 || _0xc9a439 instanceof HTMLElement || _0xc9a439 instanceof ig.Class || null === _0xc9a439) _0x586ebc[_0x3abf59] = _0xc9a439;else {
            if (!_0x586ebc[_0x3abf59] || 'object' != typeof _0x586ebc[_0x3abf59]) _0x586ebc[_0x3abf59] = _0xc9a439 instanceof Array ? [] : {};
            ig.merge(_0x586ebc[_0x3abf59], _0xc9a439);
          }
        }
        return _0x586ebc;
      },
      'ksort': function (_0x575312) {
        if (!_0x575312 || 'object' != typeof _0x575312) return [];
        var _0x179832 = [],
          _0x280c11 = [],
          _0x540584;
        for (_0x540584 in _0x575312) _0x179832.push(_0x540584);
        _0x179832.sort();
        for (_0x540584 = 0x0; _0x540584 < _0x179832.length; _0x540584++) _0x280c11.push(_0x575312[_0x179832[_0x540584]]);
        return _0x280c11;
      },
      'setVendorAttribute': function (_0x143452, _0x114617, _0x28c84c) {
        var _0x220581 = _0x114617.charAt(0x0).toUpperCase() + _0x114617.substr(0x1);
        _0x143452[_0x114617] = _0x143452['ms' + _0x220581] = _0x143452['moz' + _0x220581] = _0x143452['webkit' + _0x220581] = _0x143452['o' + _0x220581] = _0x28c84c;
      },
      'getVendorAttribute': function (_0x13c196, _0x656157) {
        var _0x888fdc = _0x656157.charAt(0x0).toUpperCase() + _0x656157.substr(0x1);
        return _0x13c196[_0x656157] || _0x13c196['ms' + _0x888fdc] || _0x13c196['moz' + _0x888fdc] || _0x13c196['webkit' + _0x888fdc] || _0x13c196['o' + _0x888fdc];
      },
      'normalizeVendorAttribute': function (_0x2a6f21, _0x45f0d7) {
        var _0x4996f5 = ig.getVendorAttribute(_0x2a6f21, _0x45f0d7);
        !_0x2a6f21[_0x45f0d7] && _0x4996f5 && (_0x2a6f21[_0x45f0d7] = _0x4996f5);
      },
      'getImagePixels': function (_0x24378f, _0xcf588a, _0xf268f0, _0x5eb8ca, _0x3181cf) {
        var _0x76d740 = ig.$new('canvas');
        _0x76d740.width = _0x24378f.width, _0x76d740.height = _0x24378f.height;
        var _0x134dfe = _0x76d740.getContext('2d');
        ig.System.SCALE.CRISP(_0x76d740, _0x134dfe);
        var _0x1520f0 = ig.getVendorAttribute(_0x134dfe, 'backingStorePixelRatio') || 0x1;
        ig.normalizeVendorAttribute(_0x134dfe, 'getImageDataHD');
        var _0x462711 = _0x24378f.width / _0x1520f0,
          _0x77bed3 = _0x24378f.height / _0x1520f0;
        return _0x76d740.width = Math.ceil(_0x462711), _0x76d740.height = Math.ceil(_0x77bed3), _0x134dfe.drawImage(_0x24378f, 0x0, 0x0, _0x462711, _0x77bed3), 0x1 === _0x1520f0 ? _0x134dfe.getImageData(_0xcf588a, _0xf268f0, _0x5eb8ca, _0x3181cf) : _0x134dfe.getImageDataHD(_0xcf588a, _0xf268f0, _0x5eb8ca, _0x3181cf);
      },
      'module': function (_0x31e8fa) {
        if (ig._current) throw "Module '" + ig._current.name + "' defines nothing";
        if (ig.modules[_0x31e8fa] && ig.modules[_0x31e8fa].body) throw "Module '" + _0x31e8fa + "' is already defined";
        return ig._current = {
          'name': _0x31e8fa,
          'requires': [],
          'loaded': !0x1,
          'body': null
        }, ig.modules[_0x31e8fa] = ig._current, ig._loadQueue.push(ig._current), ig;
      },
      'requires': function () {
        return ig._current.requires = Array.prototype.slice.call(arguments), ig;
      },
      'defines': function (_0x41e6ea) {
        ig._current.body = _0x41e6ea, ig._current = null, ig._initDOMReady();
      },
      'addResource': function (_0x4fdbd0) {
        ig.resources.push(_0x4fdbd0);
      },
      'setNocache': function (_0x1a314c) {
        ig.nocache = _0x1a314c ? '?' + Date.now() : '';
      },
      'log': function () {},
      'assert': function () {},
      'show': function () {},
      'mark': function () {},
      '_loadScript': function (_0x12da5d, _0x4b733b) {
        ig.modules[_0x12da5d] = {
          'name': _0x12da5d,
          'requires': [],
          'loaded': !0x1,
          'body': null
        }, ig._waitForOnload++;
        var _0x50b636 = ig.prefix + ig.lib + _0x12da5d.replace(/\./g, '/') + '.js' + ig.nocache,
          _0x349e15 = ig.$new('script');
        _0x349e15.type = 'text/javascript', _0x349e15.src = _0x50b636, _0x349e15.onload = function () {
          ig._waitForOnload--, ig._execModules();
        }, _0x349e15.onerror = function () {
          throw "Failed to load module " + _0x12da5d + " at " + _0x50b636 + " required from " + _0x4b733b;
        }, ig.$('head')[0x0].appendChild(_0x349e15);
      },
      '_execModules': function () {
        for (var _0x3afa1a = !0x1, _0x5cac2b = 0x0; _0x5cac2b < ig._loadQueue.length; _0x5cac2b++) {
          for (var _0x5eacd5 = ig._loadQueue[_0x5cac2b], _0x56754f = !0x0, _0x21a7a5 = 0x0; _0x21a7a5 < _0x5eacd5.requires.length; _0x21a7a5++) {
            var _0x2f5567 = _0x5eacd5.requires[_0x21a7a5];
            ig.modules[_0x2f5567] ? ig.modules[_0x2f5567].loaded || (_0x56754f = !0x1) : (_0x56754f = !0x1, ig._loadScript(_0x2f5567, _0x5eacd5.name));
          }
          _0x56754f && _0x5eacd5.body && (ig._loadQueue.splice(_0x5cac2b, 0x1), _0x5eacd5.loaded = !0x0, _0x5eacd5.body(), _0x3afa1a = !0x0, _0x5cac2b--);
        }
        if (_0x3afa1a) ig._execModules();else {
          if (!ig.baked && 0x0 == ig._waitForOnload && 0x0 != ig._loadQueue.length) {
            _0x3afa1a = [];
            for (_0x5cac2b = 0x0; _0x5cac2b < ig._loadQueue.length; _0x5cac2b++) {
              _0x56754f = [], _0x2f5567 = ig._loadQueue[_0x5cac2b].requires;
              for (_0x21a7a5 = 0x0; _0x21a7a5 < _0x2f5567.length; _0x21a7a5++) _0x5eacd5 = ig.modules[_0x2f5567[_0x21a7a5]], (!_0x5eacd5 || !_0x5eacd5.loaded) && _0x56754f.push(_0x2f5567[_0x21a7a5]);
              _0x3afa1a.push(ig._loadQueue[_0x5cac2b].name + " (requires: " + _0x56754f.join(", ") + ')');
            }
            throw "Unresolved (or circular?) dependencies. Most likely there's a name/path mismatch for one of the listed modules or a previous syntax error prevents a module from loading:\n" + _0x3afa1a.join("\n");
          }
        }
      },
      '_DOMReady': function () {
        if (!ig.modules['dom.ready'].loaded) {
          if (!document.body) return setTimeout(ig._DOMReady, 0xd);
          ig.modules['dom.ready'].loaded = !0x0, ig._waitForOnload--, ig._execModules();
        }
        return 0x0;
      },
      '_boot': function () {
        document.location.href.match(/\?nocache/) && ig.setNocache(!0x0), ig.ua.pixelRatio = _0x14379b.devicePixelRatio || 0x1, ig.ua.viewport = {
          'width': _0x14379b.innerWidth,
          'height': _0x14379b.innerHeight
        }, ig.ua.screen = {
          'width': _0x14379b.screen.availWidth * ig.ua.pixelRatio,
          'height': _0x14379b.screen.availHeight * ig.ua.pixelRatio
        }, ig.ua.iPhone = /iPhone|iPod/i.test(navigator.userAgent), ig.ua.iPhone4 = ig.ua.iPhone && 0x2 == ig.ua.pixelRatio, ig.ua.iPad = /iPad/i.test(navigator.userAgent), ig.ua.android = /android/i.test(navigator.userAgent), ig.ua.winPhone = /Windows Phone/i.test(navigator.userAgent), ig.ua.iOS = ig.ua.iPhone || ig.ua.iPad, ig.ua.mobile = ig.ua.iOS || ig.ua.android || ig.ua.winPhone || /mobile/i.test(navigator.userAgent), ig.ua.touchDevice = 'ontouchstart' in _0x14379b || _0x14379b.navigator.msMaxTouchPoints;
      },
      '_initDOMReady': function () {
        ig.modules['dom.ready'] ? ig._execModules() : (ig._boot(), ig.modules['dom.ready'] = {
          'requires': [],
          'loaded': !0x1,
          'body': null
        }, ig._waitForOnload++, 'complete' === document.readyState ? ig._DOMReady() : (document.addEventListener('DOMContentLoaded', ig._DOMReady, !0x1), _0x14379b.addEventListener('load', ig._DOMReady, !0x1)));
      }
    }, ig.normalizeVendorAttribute(_0x14379b, 'requestAnimationFrame');
    if (_0x14379b.requestAnimationFrame) {
      var _0x4b7ccf = 0x1,
        _0x52d7d9 = {};
      _0x14379b.ig.setAnimation = function (_0x5ac50b) {
        var _0x58019c = _0x4b7ccf++;
        _0x52d7d9[_0x58019c] = !0x0;
        var _0x5779a6 = function () {
          _0x52d7d9[_0x58019c] && (_0x14379b.requestAnimationFrame(_0x5779a6), _0x5ac50b());
        };
        return _0x14379b.requestAnimationFrame(_0x5779a6), _0x58019c;
      }, _0x14379b.ig.clearAnimation = function (_0x568964) {
        delete _0x52d7d9[_0x568964];
      };
    } else _0x14379b.ig.setAnimation = function (_0x11cb46) {
      return _0x14379b.setInterval(_0x11cb46, 0x3e8 / 0x3c);
    }, _0x14379b.ig.clearAnimation = function (_0x2f5f18) {
      _0x14379b.clearInterval(_0x2f5f18);
    };
    var _0x58ad84 = !0x1,
      _0x37f949 = /xyz/.test(function () {
        xyz;
      }) ? /\bparent\b/ : /.*/,
      _0x227eff = 0x0;
    _0x14379b.ig.Class = function () {};
    var _0x5384dc = function (_0x2b8302) {
      var _0x5268dc = this.prototype,
        _0x1198b8 = {},
        _0xfb2496;
      for (_0xfb2496 in _0x2b8302) 'function' == typeof _0x2b8302[_0xfb2496] && 'function' == typeof _0x5268dc[_0xfb2496] && _0x37f949.test(_0x2b8302[_0xfb2496]) ? (_0x1198b8[_0xfb2496] = _0x5268dc[_0xfb2496], _0x5268dc[_0xfb2496] = function (_0x5a40d7, _0x451d2c) {
        return function () {
          var _0x492f42 = this.parent;
          this.parent = _0x1198b8[_0x5a40d7];
          var _0x5575a6 = _0x451d2c.apply(this, arguments);
          return this.parent = _0x492f42, _0x5575a6;
        };
      }(_0xfb2496, _0x2b8302[_0xfb2496])) : _0x5268dc[_0xfb2496] = _0x2b8302[_0xfb2496];
    };
    _0x14379b.ig.Class.extend = function (_0x22da15) {
      function _0x206458() {
        if (!_0x58ad84) {
          if (this.staticInstantiate) {
            var _0x2b0d7e = this.staticInstantiate.apply(this, arguments);
            if (_0x2b0d7e) return _0x2b0d7e;
          }
          for (var _0x55fa6f in this) 'object' == typeof this[_0x55fa6f] && (this[_0x55fa6f] = ig.copy(this[_0x55fa6f]));
          this.init && this.init.apply(this, arguments);
        }
        return this;
      }
      var _0x4750f0 = this.prototype;
      _0x58ad84 = !0x0;
      var _0x15496b = new this();
      _0x58ad84 = !0x1;
      for (var _0x2fe8fc in _0x22da15) _0x15496b[_0x2fe8fc] = 'function' == typeof _0x22da15[_0x2fe8fc] && 'function' == typeof _0x4750f0[_0x2fe8fc] && _0x37f949.test(_0x22da15[_0x2fe8fc]) ? function (_0x235c2a, _0x37afd4) {
        return function () {
          var _0x17f7cf = this.parent;
          this.parent = _0x4750f0[_0x235c2a];
          var _0x3c5931 = _0x37afd4.apply(this, arguments);
          return this.parent = _0x17f7cf, _0x3c5931;
        };
      }(_0x2fe8fc, _0x22da15[_0x2fe8fc]) : _0x22da15[_0x2fe8fc];
      return _0x206458.prototype = _0x15496b, _0x206458.prototype.constructor = _0x206458, _0x206458.extend = _0x14379b.ig.Class.extend, _0x206458.inject = _0x5384dc, _0x206458.classId = _0x15496b.classId = ++_0x227eff, _0x206458;
    }, _0x14379b.ImpactMixin && ig.merge(ig, _0x14379b.ImpactMixin);
  }(window), ig.baked = !0x0, ig.module('impact.image').defines(function () {
    ig.Image = ig.Class.extend({
      'data': null,
      'width': 0x0,
      'height': 0x0,
      'loaded': !0x1,
      'failed': !0x1,
      'loadCallback': null,
      'path': '',
      'staticInstantiate': function (_0x310184) {
        return ig.Image.cache[_0x310184] || null;
      },
      'init': function (_0x25a61b) {
        this.path = _0x25a61b, this.load();
      },
      'load': function (_0x1d3f95) {
        this.loaded ? _0x1d3f95 && _0x1d3f95(this.path, !0x0) : (!this.loaded && ig.ready ? (this.loadCallback = _0x1d3f95 || null, this.data = new Image(), this.data.onload = this.onload.bind(this), this.data.onerror = this.onerror.bind(this), this.data.src = ig.prefix + this.path + ig.nocache) : ig.addResource(this), ig.Image.cache[this.path] = this);
      },
      'reload': function () {
        this.loaded = !0x1, this.data = new Image(), this.data.onload = this.onload.bind(this), this.data.src = this.path + '?' + Date.now();
      },
      'onload': function () {
        this.width = this.data.width, this.height = this.data.height, this.loaded = !0x0, 0x1 != ig.system.scale && this.resize(ig.system.scale), this.loadCallback && this.loadCallback(this.path, !0x0);
      },
      'onerror': function () {
        this.failed = !0x0, this.loadCallback && this.loadCallback(this.path, !0x1);
      },
      'resize': function (_0x238ab7) {
        var _0x3e27f1 = ig.getImagePixels(this.data, 0x0, 0x0, this.width, this.height),
          _0x1a4efa = this.width * _0x238ab7,
          _0x47b134 = this.height * _0x238ab7,
          _0x538be4 = ig.$new('canvas');
        _0x538be4.width = _0x1a4efa, _0x538be4.height = _0x47b134;
        for (var _0x28a7b3 = _0x538be4.getContext('2d'), _0x600051 = _0x28a7b3.getImageData(0x0, 0x0, _0x1a4efa, _0x47b134), _0x14540c = 0x0; _0x14540c < _0x47b134; _0x14540c++) for (var _0x548cec = 0x0; _0x548cec < _0x1a4efa; _0x548cec++) {
          var _0x56aadd = 0x4 * (Math.floor(_0x14540c / _0x238ab7) * this.width + Math.floor(_0x548cec / _0x238ab7)),
            _0x1cd0ac = 0x4 * (_0x14540c * _0x1a4efa + _0x548cec);
          _0x600051.data[_0x1cd0ac] = _0x3e27f1.data[_0x56aadd], _0x600051.data[_0x1cd0ac + 0x1] = _0x3e27f1.data[_0x56aadd + 0x1], _0x600051.data[_0x1cd0ac + 0x2] = _0x3e27f1.data[_0x56aadd + 0x2], _0x600051.data[_0x1cd0ac + 0x3] = _0x3e27f1.data[_0x56aadd + 0x3];
        }
        _0x28a7b3.putImageData(_0x600051, 0x0, 0x0), this.data = _0x538be4;
      },
      'draw': function (_0x330213, _0x2c0967, _0x218451, _0x1227d0, _0x5033c3, _0x82f486) {
        if (this.loaded) {
          var _0x158bda = ig.system.scale;
          _0x5033c3 = (_0x5033c3 ? _0x5033c3 : this.width) * _0x158bda, _0x82f486 = (_0x82f486 ? _0x82f486 : this.height) * _0x158bda, ig.system.context.drawImage(this.data, _0x218451 ? _0x218451 * _0x158bda : 0x0, _0x1227d0 ? _0x1227d0 * _0x158bda : 0x0, _0x5033c3, _0x82f486, ig.system.getDrawPos(_0x330213), ig.system.getDrawPos(_0x2c0967), _0x5033c3, _0x82f486), ig.Image.drawCount++;
        }
      },
      'drawTile': function (_0x3963db, _0x4ba147, _0x3e5c0a, _0x114498, _0x1cc8a0, _0x1cc07a, _0x5b28b3) {
        _0x1cc8a0 = _0x1cc8a0 ? _0x1cc8a0 : _0x114498;
        if (this.loaded && !(_0x114498 > this.width || _0x1cc8a0 > this.height)) {
          var _0x356b1e = ig.system.scale,
            _0x3b5f59 = Math.floor(_0x114498 * _0x356b1e),
            _0x33c38e = Math.floor(_0x1cc8a0 * _0x356b1e),
            _0x21fe84 = _0x1cc07a ? -0x1 : 0x1,
            _0x1838a6 = _0x5b28b3 ? -0x1 : 0x1;
          if (_0x1cc07a || _0x5b28b3) ig.system.context.save(), ig.system.context.scale(_0x21fe84, _0x1838a6);
          ig.system.context.drawImage(this.data, Math.floor(_0x3e5c0a * _0x114498) % this.width * _0x356b1e, Math.floor(_0x3e5c0a * _0x114498 / this.width) * _0x1cc8a0 * _0x356b1e, _0x3b5f59, _0x33c38e, ig.system.getDrawPos(_0x3963db) * _0x21fe84 - (_0x1cc07a ? _0x3b5f59 : 0x0), ig.system.getDrawPos(_0x4ba147) * _0x1838a6 - (_0x5b28b3 ? _0x33c38e : 0x0), _0x3b5f59, _0x33c38e), (_0x1cc07a || _0x5b28b3) && ig.system.context.restore(), ig.Image.drawCount++;
        }
      }
    }), ig.Image.drawCount = 0x0, ig.Image.cache = {}, ig.Image.reloadCache = function () {
      for (var _0x34c323 in ig.Image.cache) ig.Image.cache[_0x34c323].reload();
    };
  }), ig.baked = !0x0, ig.module('impact.font').requires('impact.image').defines(function () {
    ig.Font = ig.Image.extend({
      'widthMap': [],
      'indices': [],
      'firstChar': 0x20,
      'alpha': 0x1,
      'letterSpacing': 0x1,
      'lineSpacing': 0x0,
      'onload': function (_0x4736fb) {
        this._loadMetrics(this.data), this.parent(_0x4736fb), this.height -= 0x2;
      },
      'widthForString': function (_0x3534b7) {
        if (-0x1 !== _0x3534b7.indexOf("\n")) {
          _0x3534b7 = _0x3534b7.split("\n");
          for (var _0x78ecf0 = 0x0, _0x1eede2 = 0x0; _0x1eede2 < _0x3534b7.length; _0x1eede2++) _0x78ecf0 = Math.max(_0x78ecf0, this._widthForLine(_0x3534b7[_0x1eede2]));
          return _0x78ecf0;
        }
        return this._widthForLine(_0x3534b7);
      },
      '_widthForLine': function (_0x320962) {
        for (var _0x328e13 = 0x0, _0x4bb18e = 0x0; _0x4bb18e < _0x320962.length; _0x4bb18e++) _0x328e13 += this.widthMap[_0x320962.charCodeAt(_0x4bb18e) - this.firstChar];
        return 0x0 < _0x320962.length && (_0x328e13 += this.letterSpacing * (_0x320962.length - 0x1)), _0x328e13;
      },
      'heightForString': function (_0x2adcf1) {
        return _0x2adcf1.split("\n").length * (this.height + this.lineSpacing);
      },
      'draw': function (_0x494509, _0xcdfc71, _0x153d73, _0x47eb83) {
        'string' != typeof _0x494509 && (_0x494509 = _0x494509.toString());
        if (-0x1 !== _0x494509.indexOf("\n")) {
          _0x494509 = _0x494509.split("\n");
          for (var _0x5eb2db = this.height + this.lineSpacing, _0x4c59a3 = 0x0; _0x4c59a3 < _0x494509.length; _0x4c59a3++) this.draw(_0x494509[_0x4c59a3], _0xcdfc71, _0x153d73 + _0x4c59a3 * _0x5eb2db, _0x47eb83);
        } else {
          if (_0x47eb83 == ig.Font.ALIGN.RIGHT || _0x47eb83 == ig.Font.ALIGN.CENTER) _0x4c59a3 = this._widthForLine(_0x494509), _0xcdfc71 -= _0x47eb83 == ig.Font.ALIGN.CENTER ? _0x4c59a3 / 0x2 : _0x4c59a3;
          0x1 !== this.alpha && (ig.system.context.globalAlpha = this.alpha);
          for (_0x4c59a3 = 0x0; _0x4c59a3 < _0x494509.length; _0x4c59a3++) _0x47eb83 = _0x494509.charCodeAt(_0x4c59a3), _0xcdfc71 += this._drawChar(_0x47eb83 - this.firstChar, _0xcdfc71, _0x153d73);
          0x1 !== this.alpha && (ig.system.context.globalAlpha = 0x1), ig.Image.drawCount += _0x494509.length;
        }
      },
      '_drawChar': function (_0x86b406, _0x5a4212, _0x3acd0a) {
        if (!this.loaded || 0x0 > _0x86b406 || _0x86b406 >= this.indices.length) return 0x0;
        var _0x156034 = ig.system.scale,
          _0x1effc0 = this.widthMap[_0x86b406] * _0x156034,
          _0x40f49e = this.height * _0x156034;
        return ig.system.context.drawImage(this.data, this.indices[_0x86b406] * _0x156034, 0x0, _0x1effc0, _0x40f49e, ig.system.getDrawPos(_0x5a4212), ig.system.getDrawPos(_0x3acd0a), _0x1effc0, _0x40f49e), this.widthMap[_0x86b406] + this.letterSpacing;
      },
      '_loadMetrics': function (_0x4e5a53) {
        this.widthMap = [], this.indices = [];
        for (var _0x51182d = ig.getImagePixels(_0x4e5a53, 0x0, _0x4e5a53.height - 0x1, _0x4e5a53.width, 0x1), _0x4b24b9 = 0x0, _0x3a4362 = 0x0; _0x3a4362 < _0x4e5a53.width; _0x3a4362++) {
          var _0x2b7834 = 0x4 * _0x3a4362 + 0x3;
          0x7f < _0x51182d.data[_0x2b7834] ? _0x4b24b9++ : 0x80 > _0x51182d.data[_0x2b7834] && _0x4b24b9 && (this.widthMap.push(_0x4b24b9), this.indices.push(_0x3a4362 - _0x4b24b9), _0x4b24b9 = 0x0);
        }
        this.widthMap.push(_0x4b24b9), this.indices.push(_0x3a4362 - _0x4b24b9);
      }
    }), ig.Font.ALIGN = {
      'LEFT': 0x0,
      'RIGHT': 0x1,
      'CENTER': 0x2
    };
  }), ig.baked = !0x0, ig.module('impact.sound').defines(function () {
    ig.SoundManager = ig.Class.extend({
      'clips': {},
      'volume': 0x1,
      'format': null,
      'init': function () {
        if (!ig.Sound.enabled || !window.Audio) ig.Sound.enabled = !0x1;else {
          for (var _0x3b4ae8 = new Audio(), _0x3a0e66 = 0x0; _0x3a0e66 < ig.Sound.use.length; _0x3a0e66++) {
            var _0x52d990 = ig.Sound.use[_0x3a0e66];
            if (_0x3b4ae8.canPlayType(_0x52d990.mime)) {
              this.format = _0x52d990;
              break;
            }
          }
          this.format || (ig.Sound.enabled = !0x1), ig.Sound.enabled && ig.Sound.useWebAudio && (this.audioContext = new AudioContext(), this.boundWebAudioUnlock = this.unlockWebAudio.bind(this), ig.system.canvas.addEventListener('touchstart', this.boundWebAudioUnlock, !0x1), ig.system.canvas.addEventListener('mousedown', this.boundWebAudioUnlock, !0x1));
        }
      },
      'unlockWebAudio': function () {
        ig.system.canvas.removeEventListener('touchstart', this.boundWebAudioUnlock, !0x1), ig.system.canvas.removeEventListener('mousedown', this.boundWebAudioUnlock, !0x1);
        var _0x211e97 = this.audioContext.createBuffer(0x1, 0x1, 0x5622),
          _0x1edb0f = this.audioContext.createBufferSource();
        _0x1edb0f.buffer = _0x211e97, _0x1edb0f.connect(this.audioContext.destination), _0x1edb0f.start(0x0);
      },
      'load': function (_0x401fe7, _0x38e9e, _0x1bee0f) {
        return _0x38e9e && ig.Sound.useWebAudio ? this.loadWebAudio(_0x401fe7, _0x38e9e, _0x1bee0f) : this.loadHTML5Audio(_0x401fe7, _0x38e9e, _0x1bee0f);
      },
      'loadWebAudio': function (_0x588b64, _0x2b9516, _0x21b652) {
        _0x2b9516 = ig.prefix + _0x588b64.replace(/[^\.]+$/, this.format.ext) + ig.nocache;
        if (this.clips[_0x588b64]) return this.clips[_0x588b64];
        var _0x34f43c = new ig.Sound.WebAudioSource();
        this.clips[_0x588b64] = _0x34f43c;
        var _0x7de257 = new XMLHttpRequest();
        _0x7de257.open('GET', _0x2b9516, !0x0), _0x7de257.responseType = 'arraybuffer';
        var _0x2f90a8 = this;
        return _0x7de257.onload = function (_0x2fc4d6) {
          _0x2f90a8.audioContext.decodeAudioData(_0x7de257.response, function (_0x5ad1b2) {
            _0x34f43c.buffer = _0x5ad1b2, _0x21b652 && _0x21b652(_0x588b64, !0x0, _0x2fc4d6);
          }, function (_0x312381) {
            _0x21b652 && _0x21b652(_0x588b64, !0x1, _0x312381);
          });
        }, _0x7de257.onerror = function (_0x3cc04c) {
          _0x21b652 && _0x21b652(_0x588b64, !0x1, _0x3cc04c);
        }, _0x7de257.send(), _0x34f43c;
      },
      'loadHTML5Audio': function (_0x4b3781, _0x1bcaae, _0x508abf) {
        var _0x58d8c0 = ig.prefix + _0x4b3781.replace(/[^\.]+$/, this.format.ext) + ig.nocache;
        if (this.clips[_0x4b3781]) {
          if (this.clips[_0x4b3781] instanceof ig.Sound.WebAudioSource) return this.clips[_0x4b3781];
          if (_0x1bcaae && this.clips[_0x4b3781].length < ig.Sound.channels) for (_0x1bcaae = this.clips[_0x4b3781].length; _0x1bcaae < ig.Sound.channels; _0x1bcaae++) {
            var _0xf3e682 = new Audio(_0x58d8c0);
            _0xf3e682.load(), this.clips[_0x4b3781].push(_0xf3e682);
          }
          return this.clips[_0x4b3781][0x0];
        }
        var _0x528f0e = new Audio(_0x58d8c0);
        _0x508abf && (ig.ua.mobile ? setTimeout(function () {
          _0x508abf(_0x4b3781, !0x0, null);
        }, 0x0) : (_0x528f0e.addEventListener('canplaythrough', function _0x2b6644(_0x37e363) {
          _0x528f0e.removeEventListener('canplaythrough', _0x2b6644, !0x1), _0x508abf(_0x4b3781, !0x0, _0x37e363);
        }, !0x1), _0x528f0e.addEventListener('error', function (_0x4c4bc5) {
          _0x508abf(_0x4b3781, !0x1, _0x4c4bc5);
        }, !0x1))), _0x528f0e.preload = 'auto', _0x528f0e.load(), this.clips[_0x4b3781] = [_0x528f0e];
        if (_0x1bcaae) {
          for (_0x1bcaae = 0x1; _0x1bcaae < ig.Sound.channels; _0x1bcaae++) _0xf3e682 = new Audio(_0x58d8c0), _0xf3e682.load(), this.clips[_0x4b3781].push(_0xf3e682);
        }
        return _0x528f0e;
      },
      'get': function (_0x17fd3a) {
        if ((_0x17fd3a = this.clips[_0x17fd3a]) && _0x17fd3a instanceof ig.Sound.WebAudioSource) return _0x17fd3a;
        for (var _0x476226 = 0x0, _0x16bb76; _0x16bb76 = _0x17fd3a[_0x476226++];) if (_0x16bb76.paused || _0x16bb76.ended) return _0x16bb76.ended && (_0x16bb76.currentTime = 0x0), _0x16bb76;
        return _0x17fd3a[0x0].pause(), _0x17fd3a[0x0].currentTime = 0x0, _0x17fd3a[0x0];
      }
    }), ig.Music = ig.Class.extend({
      'tracks': [],
      'namedTracks': {},
      'currentTrack': null,
      'currentIndex': 0x0,
      'random': !0x1,
      '_volume': 0x1,
      '_loop': !0x1,
      '_fadeInterval': 0x0,
      '_fadeTimer': null,
      '_endedCallbackBound': null,
      'init': function () {
        this._endedCallbackBound = this._endedCallback.bind(this), Object.defineProperty(this, 'volume', {
          'get': this.getVolume.bind(this),
          'set': this.setVolume.bind(this)
        }), Object.defineProperty(this, 'loop', {
          'get': this.getLooping.bind(this),
          'set': this.setLooping.bind(this)
        });
      },
      'add': function (_0x342bc4, _0x5422f8) {
        if (ig.Sound.enabled) {
          var _0x238073 = _0x342bc4 instanceof ig.Sound ? _0x342bc4.path : _0x342bc4,
            _0x2466bd = ig.soundManager.load(_0x238073, !0x1);
          if (_0x2466bd instanceof ig.Sound.WebAudioSource) throw ig.system.stopRunLoop(), "Sound '" + _0x238073 + "' loaded as Multichannel but used for Music. Set the multiChannel param to false when loading, e.g.: new ig.Sound(path, false)";
          _0x2466bd.loop = this._loop, _0x2466bd.volume = this._volume, _0x2466bd.addEventListener('ended', this._endedCallbackBound, !0x1), this.tracks.push(_0x2466bd), _0x5422f8 && (this.namedTracks[_0x5422f8] = _0x2466bd), this.currentTrack || (this.currentTrack = _0x2466bd);
        }
      },
      'next': function () {
        this.tracks.length && (this.stop(), this.currentIndex = this.random ? Math.floor(Math.random() * this.tracks.length) : (this.currentIndex + 0x1) % this.tracks.length, this.currentTrack = this.tracks[this.currentIndex], this.play());
      },
      'pause': function () {
        this.currentTrack && this.currentTrack.pause();
      },
      'stop': function () {
        this.currentTrack && (this.currentTrack.pause(), this.currentTrack.currentTime = 0x0);
      },
      'play': function (_0x338ddc) {
        if (_0x338ddc && this.namedTracks[_0x338ddc]) _0x338ddc = this.namedTracks[_0x338ddc], _0x338ddc != this.currentTrack && (this.stop(), this.currentTrack = _0x338ddc);else {
          if (!this.currentTrack) return;
        }
        this.currentTrack.play();
      },
      'getLooping': function () {
        return this._loop;
      },
      'setLooping': function (_0x4acc0d) {
        this._loop = _0x4acc0d;
        for (var _0x1f427c in this.tracks) this.tracks[_0x1f427c].loop = _0x4acc0d;
      },
      'getVolume': function () {
        return this._volume;
      },
      'setVolume': function (_0x8cbef9) {
        this._volume = _0x8cbef9.limit(0x0, 0x1);
        for (var _0x3a9795 in this.tracks) this.tracks[_0x3a9795].volume = this._volume;
      },
      'fadeOut': function (_0x4120cc) {
        this.currentTrack && (clearInterval(this._fadeInterval), this._fadeTimer = new ig.Timer(_0x4120cc), this._fadeInterval = setInterval(this._fadeStep.bind(this), 0x32));
      },
      '_fadeStep': function () {
        var _0x5a0f78 = this._fadeTimer.delta().map(-this._fadeTimer.target, 0x0, 0x1, 0x0).limit(0x0, 0x1) * this._volume;
        0.01 >= _0x5a0f78 ? (this.stop(), this.currentTrack.volume = this._volume, clearInterval(this._fadeInterval)) : this.currentTrack.volume = _0x5a0f78;
      },
      '_endedCallback': function () {
        this._loop ? this.play() : this.next();
      }
    }), ig.Sound = ig.Class.extend({
      'path': '',
      'volume': 0x1,
      'currentClip': null,
      'multiChannel': !0x0,
      '_loop': !0x1,
      'init': function (_0x3fef97, _0x3d19d5) {
        this.path = _0x3fef97, this.multiChannel = !0x1 !== _0x3d19d5, Object.defineProperty(this, 'loop', {
          'get': this.getLooping.bind(this),
          'set': this.setLooping.bind(this)
        }), this.load();
      },
      'getLooping': function () {
        return this._loop;
      },
      'setLooping': function (_0x17bb53) {
        this._loop = _0x17bb53, this.currentClip && (this.currentClip.loop = _0x17bb53);
      },
      'load': function (_0x5d63a0) {
        ig.Sound.enabled ? ig.ready ? ig.soundManager.load(this.path, this.multiChannel, _0x5d63a0) : ig.addResource(this) : _0x5d63a0 && _0x5d63a0(this.path, !0x0);
      },
      'play': function () {
        ig.Sound.enabled && (this.currentClip = ig.soundManager.get(this.path), this.currentClip.loop = this._loop, this.currentClip.volume = ig.soundManager.volume * this.volume, this.currentClip.play());
      },
      'stop': function () {
        this.currentClip && (this.currentClip.pause(), this.currentClip.currentTime = 0x0);
      }
    }), ig.Sound.WebAudioSource = ig.Class.extend({
      'sources': [],
      'gain': null,
      'buffer': null,
      '_loop': !0x1,
      'init': function () {
        this.gain = ig.soundManager.audioContext.createGain(), this.gain.connect(ig.soundManager.audioContext.destination), Object.defineProperty(this, 'loop', {
          'get': this.getLooping.bind(this),
          'set': this.setLooping.bind(this)
        }), Object.defineProperty(this, 'volume', {
          'get': this.getVolume.bind(this),
          'set': this.setVolume.bind(this)
        });
      },
      'play': function () {
        if (this.buffer) {
          var _0xe2e5ca = ig.soundManager.audioContext.createBufferSource();
          _0xe2e5ca.buffer = this.buffer, _0xe2e5ca.connect(this.gain), _0xe2e5ca.loop = this._loop;
          var _0x3ddd3b = this;
          this.sources.push(_0xe2e5ca), _0xe2e5ca.onended = function () {
            _0x3ddd3b.sources.erase(_0xe2e5ca);
          }, _0xe2e5ca.start(0x0);
        }
      },
      'pause': function () {
        for (var _0x34e0f0 = 0x0; _0x34e0f0 < this.sources.length; _0x34e0f0++) try {
          this.sources[_0x34e0f0].stop();
        } catch (_0x1ccc00) {}
      },
      'getLooping': function () {
        return this._loop;
      },
      'setLooping': function (_0x5a37fc) {
        this._loop = _0x5a37fc;
        for (var _0x59e17e = 0x0; _0x59e17e < this.sources.length; _0x59e17e++) this.sources[_0x59e17e].loop = _0x5a37fc;
      },
      'getVolume': function () {
        return this.gain.gain.value;
      },
      'setVolume': function (_0x4e7664) {
        this.gain.gain.value = _0x4e7664;
      }
    }), ig.Sound.FORMAT = {
      'MP3': {
        'ext': 'mp3',
        'mime': 'audio/mpeg'
      },
      'M4A': {
        'ext': 'm4a',
        'mime': "audio/mp4; codecs=mp4a.40.2"
      },
      'OGG': {
        'ext': 'ogg',
        'mime': "audio/ogg; codecs=vorbis"
      },
      'WEBM': {
        'ext': 'webm',
        'mime': "audio/webm; codecs=vorbis"
      },
      'CAF': {
        'ext': 'caf',
        'mime': 'audio/x-caf'
      }
    }, ig.Sound.use = [ig.Sound.FORMAT.OGG, ig.Sound.FORMAT.MP3], ig.Sound.channels = 0x4, ig.Sound.enabled = !0x0, ig.normalizeVendorAttribute(window, 'AudioContext'), ig.Sound.useWebAudio = !!window.AudioContext;
  }), ig.baked = !0x0, ig.module('impact.loader').requires('impact.image', 'impact.font', 'impact.sound').defines(function () {
    ig.Loader = ig.Class.extend({
      'resources': [],
      'gameClass': null,
      'status': 0x0,
      'done': !0x1,
      '_unloaded': [],
      '_drawStatus': 0x0,
      '_intervalId': 0x0,
      '_loadCallbackBound': null,
      'init': function (_0x51e4e2, _0x2dad19) {
        this.gameClass = _0x51e4e2, this.resources = _0x2dad19, this._loadCallbackBound = this._loadCallback.bind(this);
        for (var _0xed6958 = 0x0; _0xed6958 < this.resources.length; _0xed6958++) this._unloaded.push(this.resources[_0xed6958].path);
      },
      'load': function () {
        ig.system.clear('#000');
        if (this.resources.length) {
          for (var _0xb6f72d = 0x0; _0xb6f72d < this.resources.length; _0xb6f72d++) this.loadResource(this.resources[_0xb6f72d]);
          this._intervalId = setInterval(this.draw.bind(this), 0x10);
        } else this.end();
      },
      'loadResource': function (_0x1ee4c2) {
        _0x1ee4c2.load(this._loadCallbackBound);
      },
      'end': function () {
        this.done || (this.done = !0x0, clearInterval(this._intervalId), ig.system.setGame(this.gameClass));
      },
      'draw': function () {
        this._drawStatus += (this.status - this._drawStatus) / 0x5;
        var _0x47c088 = ig.system.scale,
          _0x21e327 = (0.6 * ig.system.width).floor(),
          _0x1771b2 = (0.1 * ig.system.height).floor(),
          _0xd3f2c5 = (0.5 * ig.system.width - _0x21e327 / 0x2).floor(),
          _0x56abd6 = (0.5 * ig.system.height - _0x1771b2 / 0x2).floor();
        ig.system.context.fillStyle = '#000', ig.system.context.fillRect(0x0, 0x0, ig.system.width, ig.system.height), ig.system.context.fillStyle = '#fff', ig.system.context.fillRect(_0xd3f2c5 * _0x47c088, _0x56abd6 * _0x47c088, _0x21e327 * _0x47c088, _0x1771b2 * _0x47c088), ig.system.context.fillStyle = '#000', ig.system.context.fillRect(_0xd3f2c5 * _0x47c088 + _0x47c088, _0x56abd6 * _0x47c088 + _0x47c088, _0x21e327 * _0x47c088 - _0x47c088 - _0x47c088, _0x1771b2 * _0x47c088 - _0x47c088 - _0x47c088), ig.system.context.fillStyle = '#fff', ig.system.context.fillRect(_0xd3f2c5 * _0x47c088, _0x56abd6 * _0x47c088, _0x21e327 * _0x47c088 * this._drawStatus, _0x1771b2 * _0x47c088);
      },
      '_loadCallback': function (_0x401b21, _0x10a723) {
        if (_0x10a723) this._unloaded.erase(_0x401b21);else throw "Failed to load resource: " + _0x401b21;
        this.status = 0x1 - this._unloaded.length / this.resources.length, 0x0 == this._unloaded.length && setTimeout(this.end.bind(this), 0xfa);
      }
    });
  }), ig.baked = !0x0, ig.module('impact.timer').defines(function () {
    ig.Timer = ig.Class.extend({
      'target': 0x0,
      'base': 0x0,
      'last': 0x0,
      'pausedAt': 0x0,
      'init': function (_0x34248d) {
        this.last = this.base = ig.Timer.time, this.target = _0x34248d || 0x0;
      },
      'set': function (_0x50ce5f) {
        this.target = _0x50ce5f || 0x0, this.base = ig.Timer.time, this.pausedAt = 0x0;
      },
      'reset': function () {
        this.base = ig.Timer.time, this.pausedAt = 0x0;
      },
      'tick': function () {
        var _0x3d0b7d = ig.Timer.time - this.last;
        return this.last = ig.Timer.time, this.pausedAt ? 0x0 : _0x3d0b7d;
      },
      'delta': function () {
        return (this.pausedAt || ig.Timer.time) - this.base - this.target;
      },
      'pause': function () {
        this.pausedAt || (this.pausedAt = ig.Timer.time);
      },
      'unpause': function () {
        this.pausedAt && (this.base += ig.Timer.time - this.pausedAt, this.pausedAt = 0x0);
      }
    }), ig.Timer._last = 0x0, ig.Timer.time = Number.MIN_VALUE, ig.Timer.timeScale = 0x1, ig.Timer.maxStep = 0.05, ig.Timer.step = function () {
      var _0x5ea426 = Date.now();
      ig.Timer.time += Math.min((_0x5ea426 - ig.Timer._last) / 0x3e8, ig.Timer.maxStep) * ig.Timer.timeScale, ig.Timer._last = _0x5ea426;
    };
  }), ig.baked = !0x0, ig.module('impact.system').requires('impact.timer', 'impact.image').defines(function () {
    ig.System = ig.Class.extend({
      'fps': 0x1e,
      'width': 0x140,
      'height': 0xf0,
      'realWidth': 0x140,
      'realHeight': 0xf0,
      'scale': 0x1,
      'tick': 0x0,
      'animationId': 0x0,
      'newGameClass': null,
      'running': !0x1,
      'delegate': null,
      'clock': null,
      'canvas': null,
      'context': null,
      'init': function (_0x1909d1, _0x25a024, _0x2b6c44, _0x44530f, _0x269e3a) {
        this.fps = _0x25a024, this.clock = new ig.Timer(), this.canvas = ig.$(_0x1909d1), this.resize(_0x2b6c44, _0x44530f, _0x269e3a), this.context = this.canvas.getContext('2d'), this.getDrawPos = ig.System.drawMode, 0x1 != this.scale && (ig.System.scaleMode = ig.System.SCALE.CRISP), ig.System.scaleMode(this.canvas, this.context);
      },
      'resize': function (_0x4acbc3, _0x5afbdf, _0x298717) {
        this.width = _0x4acbc3, this.height = _0x5afbdf, this.scale = _0x298717 || this.scale, this.realWidth = this.width * this.scale, this.realHeight = this.height * this.scale, this.canvas.width = this.realWidth, this.canvas.height = this.realHeight;
      },
      'setGame': function (_0x49e570) {
        this.running ? this.newGameClass = _0x49e570 : this.setGameNow(_0x49e570);
      },
      'setGameNow': function (_0x13b69d) {
        ig.game = new _0x13b69d(), ig.system.setDelegate(ig.game);
      },
      'setDelegate': function (_0x58586d) {
        if ('function' == typeof _0x58586d.run) this.delegate = _0x58586d, this.startRunLoop();else throw "System.setDelegate: No run() function in object";
      },
      'stopRunLoop': function () {
        ig.clearAnimation(this.animationId), this.running = !0x1;
      },
      'startRunLoop': function () {
        this.stopRunLoop(), this.animationId = ig.setAnimation(this.run.bind(this)), this.running = !0x0;
      },
      'clear': function (_0x14aa19) {
        this.context.fillStyle = _0x14aa19, this.context.fillRect(0x0, 0x0, this.realWidth, this.realHeight);
      },
      'run': function () {
        ig.Timer.step(), this.tick = this.clock.tick(), this.delegate.run(), ig.input.clearPressed(), this.newGameClass && (this.setGameNow(this.newGameClass), this.newGameClass = null);
      },
      'getDrawPos': null
    }), ig.System.DRAW = {
      'AUTHENTIC': function (_0x2ed817) {
        return Math.round(_0x2ed817) * this.scale;
      },
      'SMOOTH': function (_0x3f8a54) {
        return Math.round(_0x3f8a54 * this.scale);
      },
      'SUBPIXEL': function (_0x53a201) {
        return _0x53a201 * this.scale;
      }
    }, ig.System.drawMode = ig.System.DRAW.SMOOTH, ig.System.SCALE = {
      'CRISP': function (_0x96049d, _0x3647bb) {
        ig.setVendorAttribute(_0x3647bb, 'imageSmoothingEnabled', !0x1), _0x96049d.style.imageRendering = '-moz-crisp-edges', _0x96049d.style.imageRendering = '-o-crisp-edges', _0x96049d.style.imageRendering = '-webkit-optimize-contrast', _0x96049d.style.imageRendering = 'crisp-edges', _0x96049d.style.msInterpolationMode = 'nearest-neighbor';
      },
      'SMOOTH': function (_0x1fbf30, _0x1d1056) {
        ig.setVendorAttribute(_0x1d1056, 'imageSmoothingEnabled', !0x0), _0x1fbf30.style.imageRendering = '', _0x1fbf30.style.msInterpolationMode = '';
      }
    }, ig.System.scaleMode = ig.System.SCALE.SMOOTH;
  }), ig.baked = !0x0, ig.module('impact.input').defines(function () {
    ig.KEY = {
      'MOUSE1': -0x1,
      'MOUSE2': -0x3,
      'MWHEEL_UP': -0x4,
      'MWHEEL_DOWN': -0x5,
      'BACKSPACE': 0x8,
      'TAB': 0x9,
      'ENTER': 0xd,
      'PAUSE': 0x13,
      'CAPS': 0x14,
      'ESC': 0x1b,
      'SPACE': 0x20,
      'PAGE_UP': 0x21,
      'PAGE_DOWN': 0x22,
      'END': 0x23,
      'HOME': 0x24,
      'LEFT_ARROW': 0x25,
      'UP_ARROW': 0x26,
      'RIGHT_ARROW': 0x27,
      'DOWN_ARROW': 0x28,
      'INSERT': 0x2d,
      'DELETE': 0x2e,
      '_0': 0x30,
      '_1': 0x31,
      '_2': 0x32,
      '_3': 0x33,
      '_4': 0x34,
      '_5': 0x35,
      '_6': 0x36,
      '_7': 0x37,
      '_8': 0x38,
      '_9': 0x39,
      'A': 0x41,
      'B': 0x42,
      'C': 0x43,
      'D': 0x44,
      'E': 0x45,
      'F': 0x46,
      'G': 0x47,
      'H': 0x48,
      'I': 0x49,
      'J': 0x4a,
      'K': 0x4b,
      'L': 0x4c,
      'M': 0x4d,
      'N': 0x4e,
      'O': 0x4f,
      'P': 0x50,
      'Q': 0x51,
      'R': 0x52,
      'S': 0x53,
      'T': 0x54,
      'U': 0x55,
      'V': 0x56,
      'W': 0x57,
      'X': 0x58,
      'Y': 0x59,
      'Z': 0x5a,
      'NUMPAD_0': 0x60,
      'NUMPAD_1': 0x61,
      'NUMPAD_2': 0x62,
      'NUMPAD_3': 0x63,
      'NUMPAD_4': 0x64,
      'NUMPAD_5': 0x65,
      'NUMPAD_6': 0x66,
      'NUMPAD_7': 0x67,
      'NUMPAD_8': 0x68,
      'NUMPAD_9': 0x69,
      'MULTIPLY': 0x6a,
      'ADD': 0x6b,
      'SUBSTRACT': 0x6d,
      'DECIMAL': 0x6e,
      'DIVIDE': 0x6f,
      'F1': 0x70,
      'F2': 0x71,
      'F3': 0x72,
      'F4': 0x73,
      'F5': 0x74,
      'F6': 0x75,
      'F7': 0x76,
      'F8': 0x77,
      'F9': 0x78,
      'F10': 0x79,
      'F11': 0x7a,
      'F12': 0x7b,
      'SHIFT': 0x10,
      'CTRL': 0x11,
      'ALT': 0x12,
      'PLUS': 0xbb,
      'COMMA': 0xbc,
      'MINUS': 0xbd,
      'PERIOD': 0xbe
    }, ig.Input = ig.Class.extend({
      'bindings': {},
      'actions': {},
      'presses': {},
      'locks': {},
      'delayedKeyup': {},
      'isUsingMouse': !0x1,
      'isUsingKeyboard': !0x1,
      'isUsingAccelerometer': !0x1,
      'mouse': {
        'x': 0x0,
        'y': 0x0
      },
      'accel': {
        'x': 0x0,
        'y': 0x0,
        'z': 0x0
      },
      'initMouse': function () {
        this.isUsingMouse || (this.isUsingMouse = !0x0, ig.system.canvas.addEventListener('wheel', this.mousewheel.bind(this), !0x1), ig.system.canvas.addEventListener('contextmenu', this.contextmenu.bind(this), !0x1), ig.system.canvas.addEventListener('mousedown', this.keydown.bind(this), !0x1), ig.system.canvas.addEventListener('mouseup', this.keyup.bind(this), !0x1), ig.system.canvas.addEventListener('mousemove', this.mousemove.bind(this), !0x1), ig.ua.touchDevice && (ig.system.canvas.addEventListener('touchstart', this.keydown.bind(this), !0x1), ig.system.canvas.addEventListener('touchend', this.keyup.bind(this), !0x1), ig.system.canvas.addEventListener('touchcancel', this.keyup.bind(this), !0x1), ig.system.canvas.addEventListener('touchmove', this.mousemove.bind(this), !0x1), ig.system.canvas.addEventListener('MSPointerDown', this.keydown.bind(this), !0x1), ig.system.canvas.addEventListener('MSPointerUp', this.keyup.bind(this), !0x1), ig.system.canvas.addEventListener('MSPointerMove', this.mousemove.bind(this), !0x1), ig.system.canvas.style.msTouchAction = 'none'));
      },
      'initKeyboard': function () {
        this.isUsingKeyboard || (this.isUsingKeyboard = !0x0, window.addEventListener('keydown', this.keydown.bind(this), !0x1), window.addEventListener('keyup', this.keyup.bind(this), !0x1));
      },
      'initAccelerometer': function () {
        this.isUsingAccelerometer || (this.isUsingAccelerometer = !0x0, window.addEventListener('devicemotion', this.devicemotion.bind(this), !0x1));
      },
      'mousewheel': function (_0x335fb5) {
        var _0x1f0d6b = this.bindings[0x0 > _0x335fb5.deltaY ? ig.KEY.MWHEEL_UP : ig.KEY.MWHEEL_DOWN];
        _0x1f0d6b && (this.actions[_0x1f0d6b] = !0x0, this.presses[_0x1f0d6b] = !0x0, this.delayedKeyup[_0x1f0d6b] = !0x0, _0x335fb5.stopPropagation(), _0x335fb5.preventDefault());
      },
      'mousemove': function (_0x3e2319) {
        var _0x1ce097 = ig.system.scale * ((ig.system.canvas.offsetWidth || ig.system.realWidth) / ig.system.realWidth),
          _0x3c1214 = {
            'left': 0x0,
            'top': 0x0
          };
        ig.system.canvas.getBoundingClientRect && (_0x3c1214 = ig.system.canvas.getBoundingClientRect()), _0x3e2319 = _0x3e2319.touches ? _0x3e2319.touches[0x0] : _0x3e2319, this.mouse.x = (_0x3e2319.clientX - _0x3c1214.left) / _0x1ce097, this.mouse.y = (_0x3e2319.clientY - _0x3c1214.top) / _0x1ce097;
      },
      'contextmenu': function (_0x1429f3) {
        this.bindings[ig.KEY.MOUSE2] && (_0x1429f3.stopPropagation(), _0x1429f3.preventDefault());
      },
      'keydown': function (_0x52be12) {
        var _0x2225ab = _0x52be12.target.tagName;
        if (!('INPUT' == _0x2225ab || 'TEXTAREA' == _0x2225ab)) {
          if (_0x2225ab = 'keydown' == _0x52be12.type ? _0x52be12.keyCode : 0x2 == _0x52be12.button ? ig.KEY.MOUSE2 : ig.KEY.MOUSE1, 0x0 > _0x2225ab && !ig.ua.mobile && window.focus(), ('touchstart' == _0x52be12.type || 'mousedown' == _0x52be12.type) && this.mousemove(_0x52be12), _0x2225ab = this.bindings[_0x2225ab]) this.actions[_0x2225ab] = !0x0, this.locks[_0x2225ab] || (this.presses[_0x2225ab] = !0x0, this.locks[_0x2225ab] = !0x0), _0x52be12.preventDefault();
        }
      },
      'keyup': function (_0x5191fa) {
        var _0x3d9717 = _0x5191fa.target.tagName;
        if (!('INPUT' == _0x3d9717 || 'TEXTAREA' == _0x3d9717)) {
          if (_0x3d9717 = this.bindings['keyup' == _0x5191fa.type ? _0x5191fa.keyCode : 0x2 == _0x5191fa.button ? ig.KEY.MOUSE2 : ig.KEY.MOUSE1]) this.delayedKeyup[_0x3d9717] = !0x0, _0x5191fa.preventDefault();
        }
      },
      'devicemotion': function (_0xc45378) {
        this.accel = _0xc45378.accelerationIncludingGravity;
      },
      'bind': function (_0x2f1946, _0x194591) {
        0x0 > _0x2f1946 ? this.initMouse() : 0x0 < _0x2f1946 && this.initKeyboard(), this.bindings[_0x2f1946] = _0x194591;
      },
      'bindTouch': function (_0xa0ed5a, _0xe91c7b) {
        var _0x3bde75 = ig.$(_0xa0ed5a),
          _0x526224 = this;
        _0x3bde75.addEventListener('touchstart', function (_0x301e94) {
          _0x526224.touchStart(_0x301e94, _0xe91c7b);
        }, !0x1), _0x3bde75.addEventListener('touchend', function (_0x11904b) {
          _0x526224.touchEnd(_0x11904b, _0xe91c7b);
        }, !0x1), _0x3bde75.addEventListener('MSPointerDown', function (_0x2b972b) {
          _0x526224.touchStart(_0x2b972b, _0xe91c7b);
        }, !0x1), _0x3bde75.addEventListener('MSPointerUp', function (_0x2365db) {
          _0x526224.touchEnd(_0x2365db, _0xe91c7b);
        }, !0x1);
      },
      'unbind': function (_0x253b7d) {
        this.delayedKeyup[this.bindings[_0x253b7d]] = !0x0, this.bindings[_0x253b7d] = null;
      },
      'unbindAll': function () {
        this.bindings = {}, this.actions = {}, this.presses = {}, this.locks = {}, this.delayedKeyup = {};
      },
      'state': function (_0x2b67e5) {
        return this.actions[_0x2b67e5];
      },
      'pressed': function (_0x4c59bf) {
        return this.presses[_0x4c59bf];
      },
      'released': function (_0x43fd9a) {
        return !!this.delayedKeyup[_0x43fd9a];
      },
      'clearPressed': function () {
        for (var _0x310c75 in this.delayedKeyup) this.actions[_0x310c75] = !0x1, this.locks[_0x310c75] = !0x1;
        this.delayedKeyup = {}, this.presses = {};
      },
      'touchStart': function (_0x10c496, _0x32d420) {
        return this.actions[_0x32d420] = !0x0, this.presses[_0x32d420] = !0x0, _0x10c496.stopPropagation(), _0x10c496.preventDefault(), !0x1;
      },
      'touchEnd': function (_0x5df0bf, _0x4673f4) {
        return this.delayedKeyup[_0x4673f4] = !0x0, _0x5df0bf.stopPropagation(), _0x5df0bf.preventDefault(), !0x1;
      }
    });
  }), ig.baked = !0x0, ig.module('impact.impact').requires('dom.ready', 'impact.loader', 'impact.system', 'impact.input', 'impact.sound').defines(function () {
    ig.main = function (_0x4c2fe0, _0xd83ba6, _0x35f2ec, _0x32f2d9, _0x51677c, _0x47a95f, _0x399ea5) {
      ig.system = new ig.System(_0x4c2fe0, _0x35f2ec, _0x32f2d9, _0x51677c, _0x47a95f || 0x1), ig.input = new ig.Input(), ig.soundManager = new ig.SoundManager(), ig.music = new ig.Music(), ig.ready = !0x0, new (_0x399ea5 || ig.Loader)(_0xd83ba6, ig.resources).load();
    };
  }), ig.baked = !0x0, ig.module('impact.animation').requires('impact.timer', 'impact.image').defines(function () {
    ig.AnimationSheet = ig.Class.extend({
      'width': 0x8,
      'height': 0x8,
      'image': null,
      'init': function (_0x41e358, _0x5f481c, _0x47aab4) {
        this.width = _0x5f481c, this.height = _0x47aab4, this.image = new ig.Image(_0x41e358);
      }
    }), ig.Animation = ig.Class.extend({
      'sheet': null,
      'timer': null,
      'sequence': [],
      'flip': {
        'x': !0x1,
        'y': !0x1
      },
      'pivot': {
        'x': 0x0,
        'y': 0x0
      },
      'frameTime': 0x0,
      'frame': 0x0,
      'tile': 0x0,
      'stop': !0x1,
      'loopCount': 0x0,
      'alpha': 0x1,
      'angle': 0x0,
      'init': function (_0x20db2f, _0x46a12b, _0x2a5d81, _0x2eb26) {
        this.sheet = _0x20db2f, this.pivot = {
          'x': _0x20db2f.width / 0x2,
          'y': _0x20db2f.height / 0x2
        }, this.timer = new ig.Timer(), this.frameTime = _0x46a12b, this.sequence = _0x2a5d81, this.stop = !!_0x2eb26, this.tile = this.sequence[0x0];
      },
      'rewind': function () {
        return this.timer.set(), this.frame = this.loopCount = 0x0, this.tile = this.sequence[0x0], this;
      },
      'gotoFrame': function (_0x45ad22) {
        this.timer.set(this.frameTime * -_0x45ad22 - 0.0001), this.update();
      },
      'gotoRandomFrame': function () {
        this.gotoFrame(Math.floor(Math.random() * this.sequence.length));
      },
      'update': function () {
        var _0x1e334d = Math.floor(this.timer.delta() / this.frameTime);
        this.loopCount = Math.floor(_0x1e334d / this.sequence.length), this.frame = this.stop && 0x0 < this.loopCount ? this.sequence.length - 0x1 : _0x1e334d % this.sequence.length, this.tile = this.sequence[this.frame];
      },
      'draw': function (_0x420c3d, _0x2b3643) {
        var _0x2be42b = Math.max(this.sheet.width, this.sheet.height);
        _0x420c3d > ig.system.width || _0x2b3643 > ig.system.height || 0x0 > _0x420c3d + _0x2be42b || 0x0 > _0x2b3643 + _0x2be42b || (0x1 != this.alpha && (ig.system.context.globalAlpha = this.alpha), 0x0 == this.angle ? this.sheet.image.drawTile(_0x420c3d, _0x2b3643, this.tile, this.sheet.width, this.sheet.height, this.flip.x, this.flip.y) : (ig.system.context.save(), ig.system.context.translate(ig.system.getDrawPos(_0x420c3d + this.pivot.x), ig.system.getDrawPos(_0x2b3643 + this.pivot.y)), ig.system.context.rotate(this.angle), this.sheet.image.drawTile(-this.pivot.x, -this.pivot.y, this.tile, this.sheet.width, this.sheet.height, this.flip.x, this.flip.y), ig.system.context.restore()), 0x1 != this.alpha && (ig.system.context.globalAlpha = 0x1));
      }
    });
  }), ig.baked = !0x0, ig.module('impact.entity').requires('impact.animation', 'impact.impact').defines(function () {
    ig.Entity = ig.Class.extend({
      'id': 0x0,
      'settings': {},
      'size': {
        'x': 0x10,
        'y': 0x10
      },
      'offset': {
        'x': 0x0,
        'y': 0x0
      },
      'pos': {
        'x': 0x0,
        'y': 0x0
      },
      'last': {
        'x': 0x0,
        'y': 0x0
      },
      'vel': {
        'x': 0x0,
        'y': 0x0
      },
      'accel': {
        'x': 0x0,
        'y': 0x0
      },
      'friction': {
        'x': 0x0,
        'y': 0x0
      },
      'maxVel': {
        'x': 0x64,
        'y': 0x64
      },
      'zIndex': 0x0,
      'gravityFactor': 0x1,
      'standing': !0x1,
      'bounciness': 0x0,
      'minBounceVelocity': 0x28,
      'anims': {},
      'animSheet': null,
      'currentAnim': null,
      'health': 0xa,
      'type': 0x0,
      'checkAgainst': 0x0,
      'collides': 0x0,
      '_killed': !0x1,
      'slopeStanding': {
        'min': 0x2c.toRad(),
        'max': 0x88.toRad()
      },
      'init': function (_0x496c00, _0x20e5c3, _0x40ebf4) {
        this.id = ++ig.Entity._lastId, this.pos.x = this.last.x = _0x496c00, this.pos.y = this.last.y = _0x20e5c3, ig.merge(this, _0x40ebf4);
      },
      'reset': function (_0x53c63f, _0xb04ca4, _0x44b503) {
        var _0x240705 = this.constructor.prototype;
        this.pos.x = _0x53c63f, this.pos.y = _0xb04ca4, this.last.x = _0x53c63f, this.last.y = _0xb04ca4, this.vel.x = _0x240705.vel.x, this.vel.y = _0x240705.vel.y, this.accel.x = _0x240705.accel.x, this.accel.y = _0x240705.accel.y, this.health = _0x240705.health, this._killed = _0x240705._killed, this.standing = _0x240705.standing, this.type = _0x240705.type, this.checkAgainst = _0x240705.checkAgainst, this.collides = _0x240705.collides, ig.merge(this, _0x44b503);
      },
      'addAnim': function (_0x309e6f, _0x55a349, _0x441f3c, _0x574041) {
        if (!this.animSheet) throw "No animSheet to add the animation " + _0x309e6f + " to.";
        return _0x55a349 = new ig.Animation(this.animSheet, _0x55a349, _0x441f3c, _0x574041), this.anims[_0x309e6f] = _0x55a349, this.currentAnim || (this.currentAnim = _0x55a349), _0x55a349;
      },
      'update': function () {
        this.last.x = this.pos.x, this.last.y = this.pos.y, this.vel.y += ig.game.gravity * ig.system.tick * this.gravityFactor, this.vel.x = this.getNewVelocity(this.vel.x, this.accel.x, this.friction.x, this.maxVel.x), this.vel.y = this.getNewVelocity(this.vel.y, this.accel.y, this.friction.y, this.maxVel.y);
        var _0x5858ac = ig.game.collisionMap.trace(this.pos.x, this.pos.y, this.vel.x * ig.system.tick, this.vel.y * ig.system.tick, this.size.x, this.size.y);
        this.handleMovementTrace(_0x5858ac), this.currentAnim && this.currentAnim.update();
      },
      'getNewVelocity': function (_0x4e85a8, _0x1ea0e8, _0x40af65, _0x2d7f5e) {
        return _0x1ea0e8 ? (_0x4e85a8 + _0x1ea0e8 * ig.system.tick).limit(-_0x2d7f5e, _0x2d7f5e) : _0x40af65 ? (_0x1ea0e8 = _0x40af65 * ig.system.tick, 0x0 < _0x4e85a8 - _0x1ea0e8 ? _0x4e85a8 - _0x1ea0e8 : 0x0 > _0x4e85a8 + _0x1ea0e8 ? _0x4e85a8 + _0x1ea0e8 : 0x0) : _0x4e85a8.limit(-_0x2d7f5e, _0x2d7f5e);
      },
      'handleMovementTrace': function (_0x4dc6f8) {
        this.standing = !0x1, _0x4dc6f8.collision.y && (0x0 < this.bounciness && Math.abs(this.vel.y) > this.minBounceVelocity ? this.vel.y *= -this.bounciness : (0x0 < this.vel.y && (this.standing = !0x0), this.vel.y = 0x0)), _0x4dc6f8.collision.x && (this.vel.x = 0x0 < this.bounciness && Math.abs(this.vel.x) > this.minBounceVelocity ? this.vel.x * -this.bounciness : 0x0);
        if (_0x4dc6f8.collision.slope) {
          var _0x26b7ec = _0x4dc6f8.collision.slope;
          if (0x0 < this.bounciness) {
            var _0xb501d2 = this.vel.x * _0x26b7ec.nx + this.vel.y * _0x26b7ec.ny;
            this.vel.x = (this.vel.x - 0x2 * _0x26b7ec.nx * _0xb501d2) * this.bounciness, this.vel.y = (this.vel.y - 0x2 * _0x26b7ec.ny * _0xb501d2) * this.bounciness;
          } else _0xb501d2 = (this.vel.x * _0x26b7ec.x + this.vel.y * _0x26b7ec.y) / (_0x26b7ec.x * _0x26b7ec.x + _0x26b7ec.y * _0x26b7ec.y), this.vel.x = _0x26b7ec.x * _0xb501d2, this.vel.y = _0x26b7ec.y * _0xb501d2, _0x26b7ec = Math.atan2(_0x26b7ec.x, _0x26b7ec.y), _0x26b7ec > this.slopeStanding.min && _0x26b7ec < this.slopeStanding.max && (this.standing = !0x0);
        }
        this.pos = _0x4dc6f8.pos;
      },
      'draw': function () {
        this.currentAnim && this.currentAnim.draw(this.pos.x - this.offset.x - ig.game._rscreen.x, this.pos.y - this.offset.y - ig.game._rscreen.y);
      },
      'kill': function () {
        ig.game.removeEntity(this);
      },
      'receiveDamage': function (_0x5cee37) {
        this.health -= _0x5cee37, 0x0 >= this.health && this.kill();
      },
      'touches': function (_0x3a4528) {
        return !(this.pos.x >= _0x3a4528.pos.x + _0x3a4528.size.x || this.pos.x + this.size.x <= _0x3a4528.pos.x || this.pos.y >= _0x3a4528.pos.y + _0x3a4528.size.y || this.pos.y + this.size.y <= _0x3a4528.pos.y);
      },
      'distanceTo': function (_0x2108d0) {
        var _0x38e640 = this.pos.x + this.size.x / 0x2 - (_0x2108d0.pos.x + _0x2108d0.size.x / 0x2);
        return _0x2108d0 = this.pos.y + this.size.y / 0x2 - (_0x2108d0.pos.y + _0x2108d0.size.y / 0x2), Math.sqrt(_0x38e640 * _0x38e640 + _0x2108d0 * _0x2108d0);
      },
      'angleTo': function (_0x11d9bc) {
        return Math.atan2(_0x11d9bc.pos.y + _0x11d9bc.size.y / 0x2 - (this.pos.y + this.size.y / 0x2), _0x11d9bc.pos.x + _0x11d9bc.size.x / 0x2 - (this.pos.x + this.size.x / 0x2));
      },
      'check': function () {},
      'collideWith': function () {},
      'ready': function () {},
      'erase': function () {}
    }), ig.Entity._lastId = 0x0, ig.Entity.COLLIDES = {
      'NEVER': 0x0,
      'LITE': 0x1,
      'PASSIVE': 0x2,
      'ACTIVE': 0x4,
      'FIXED': 0x8
    }, ig.Entity.TYPE = {
      'NONE': 0x0,
      'A': 0x1,
      'B': 0x2,
      'BOTH': 0x3
    }, ig.Entity.checkPair = function (_0x398697, _0x24738d) {
      _0x398697.checkAgainst & _0x24738d.type && _0x398697.check(_0x24738d), _0x24738d.checkAgainst & _0x398697.type && _0x24738d.check(_0x398697), _0x398697.collides && _0x24738d.collides && _0x398697.collides + _0x24738d.collides > ig.Entity.COLLIDES.ACTIVE && ig.Entity.solveCollision(_0x398697, _0x24738d);
    }, ig.Entity.solveCollision = function (_0x1ecc0e, _0x41b9ec) {
      var _0x3a5f75 = null;
      if (_0x1ecc0e.collides == ig.Entity.COLLIDES.LITE || _0x41b9ec.collides == ig.Entity.COLLIDES.FIXED) _0x3a5f75 = _0x1ecc0e;else {
        if (_0x41b9ec.collides == ig.Entity.COLLIDES.LITE || _0x1ecc0e.collides == ig.Entity.COLLIDES.FIXED) _0x3a5f75 = _0x41b9ec;
      }
      _0x1ecc0e.last.x + _0x1ecc0e.size.x > _0x41b9ec.last.x && _0x1ecc0e.last.x < _0x41b9ec.last.x + _0x41b9ec.size.x ? (_0x1ecc0e.last.y < _0x41b9ec.last.y ? ig.Entity.seperateOnYAxis(_0x1ecc0e, _0x41b9ec, _0x3a5f75) : ig.Entity.seperateOnYAxis(_0x41b9ec, _0x1ecc0e, _0x3a5f75), _0x1ecc0e.collideWith(_0x41b9ec, 'y'), _0x41b9ec.collideWith(_0x1ecc0e, 'y')) : _0x1ecc0e.last.y + _0x1ecc0e.size.y > _0x41b9ec.last.y && _0x1ecc0e.last.y < _0x41b9ec.last.y + _0x41b9ec.size.y && (_0x1ecc0e.last.x < _0x41b9ec.last.x ? ig.Entity.seperateOnXAxis(_0x1ecc0e, _0x41b9ec, _0x3a5f75) : ig.Entity.seperateOnXAxis(_0x41b9ec, _0x1ecc0e, _0x3a5f75), _0x1ecc0e.collideWith(_0x41b9ec, 'x'), _0x41b9ec.collideWith(_0x1ecc0e, 'x'));
    }, ig.Entity.seperateOnXAxis = function (_0x4d6f74, _0x4e4595, _0x3cb825) {
      var _0x53d54a = _0x4d6f74.pos.x + _0x4d6f74.size.x - _0x4e4595.pos.x;
      _0x3cb825 ? (_0x3cb825.vel.x = -_0x3cb825.vel.x * _0x3cb825.bounciness + (_0x4d6f74 === _0x3cb825 ? _0x4e4595 : _0x4d6f74).vel.x, _0x4e4595 = ig.game.collisionMap.trace(_0x3cb825.pos.x, _0x3cb825.pos.y, _0x3cb825 == _0x4d6f74 ? -_0x53d54a : _0x53d54a, 0x0, _0x3cb825.size.x, _0x3cb825.size.y), _0x3cb825.pos.x = _0x4e4595.pos.x) : (_0x3cb825 = (_0x4d6f74.vel.x - _0x4e4595.vel.x) / 0x2, _0x4d6f74.vel.x = -_0x3cb825, _0x4e4595.vel.x = _0x3cb825, _0x3cb825 = ig.game.collisionMap.trace(_0x4d6f74.pos.x, _0x4d6f74.pos.y, -_0x53d54a / 0x2, 0x0, _0x4d6f74.size.x, _0x4d6f74.size.y), _0x4d6f74.pos.x = Math.floor(_0x3cb825.pos.x), _0x4d6f74 = ig.game.collisionMap.trace(_0x4e4595.pos.x, _0x4e4595.pos.y, _0x53d54a / 0x2, 0x0, _0x4e4595.size.x, _0x4e4595.size.y), _0x4e4595.pos.x = Math.ceil(_0x4d6f74.pos.x));
    }, ig.Entity.seperateOnYAxis = function (_0x4fcad4, _0xc1dcd4, _0x338192) {
      var _0x1f7782 = _0x4fcad4.pos.y + _0x4fcad4.size.y - _0xc1dcd4.pos.y;
      if (_0x338192) {
        _0xc1dcd4 = _0x4fcad4 === _0x338192 ? _0xc1dcd4 : _0x4fcad4, _0x338192.vel.y = -_0x338192.vel.y * _0x338192.bounciness + _0xc1dcd4.vel.y;
        var _0x650a3a = 0x0;
        _0x338192 == _0x4fcad4 && Math.abs(_0x338192.vel.y - _0xc1dcd4.vel.y) < _0x338192.minBounceVelocity && (_0x338192.standing = !0x0, _0x650a3a = _0xc1dcd4.vel.x * ig.system.tick), _0x4fcad4 = ig.game.collisionMap.trace(_0x338192.pos.x, _0x338192.pos.y, _0x650a3a, _0x338192 == _0x4fcad4 ? -_0x1f7782 : _0x1f7782, _0x338192.size.x, _0x338192.size.y), _0x338192.pos.y = _0x4fcad4.pos.y, _0x338192.pos.x = _0x4fcad4.pos.x;
      } else ig.game.gravity && (_0xc1dcd4.standing || 0x0 < _0x4fcad4.vel.y) ? (_0x338192 = ig.game.collisionMap.trace(_0x4fcad4.pos.x, _0x4fcad4.pos.y, 0x0, -(_0x4fcad4.pos.y + _0x4fcad4.size.y - _0xc1dcd4.pos.y), _0x4fcad4.size.x, _0x4fcad4.size.y), _0x4fcad4.pos.y = _0x338192.pos.y, 0x0 < _0x4fcad4.bounciness && _0x4fcad4.vel.y > _0x4fcad4.minBounceVelocity ? _0x4fcad4.vel.y *= -_0x4fcad4.bounciness : (_0x4fcad4.standing = !0x0, _0x4fcad4.vel.y = 0x0)) : (_0x338192 = (_0x4fcad4.vel.y - _0xc1dcd4.vel.y) / 0x2, _0x4fcad4.vel.y = -_0x338192, _0xc1dcd4.vel.y = _0x338192, _0x650a3a = _0xc1dcd4.vel.x * ig.system.tick, _0x338192 = ig.game.collisionMap.trace(_0x4fcad4.pos.x, _0x4fcad4.pos.y, _0x650a3a, -_0x1f7782 / 0x2, _0x4fcad4.size.x, _0x4fcad4.size.y), _0x4fcad4.pos.y = _0x338192.pos.y, _0x4fcad4 = ig.game.collisionMap.trace(_0xc1dcd4.pos.x, _0xc1dcd4.pos.y, 0x0, _0x1f7782 / 0x2, _0xc1dcd4.size.x, _0xc1dcd4.size.y), _0xc1dcd4.pos.y = _0x4fcad4.pos.y);
    };
  }), ig.baked = !0x0, ig.module('impact.map').defines(function () {
    ig.Map = ig.Class.extend({
      'tilesize': 0x8,
      'width': 0x1,
      'height': 0x1,
      'pxWidth': 0x1,
      'pxHeight': 0x1,
      'data': [[]],
      'name': null,
      'init': function (_0x421854, _0x54dc4c) {
        this.tilesize = _0x421854, this.data = _0x54dc4c, this.height = _0x54dc4c.length, this.width = _0x54dc4c[0x0].length, this.pxWidth = this.width * this.tilesize, this.pxHeight = this.height * this.tilesize;
      },
      'getTile': function (_0x3aa6d1, _0x6ccd3a) {
        var _0xcf0838 = Math.floor(_0x3aa6d1 / this.tilesize),
          _0x2603c9 = Math.floor(_0x6ccd3a / this.tilesize);
        return 0x0 <= _0xcf0838 && _0xcf0838 < this.width && 0x0 <= _0x2603c9 && _0x2603c9 < this.height ? this.data[_0x2603c9][_0xcf0838] : 0x0;
      },
      'setTile': function (_0x201093, _0x70f6db, _0x31af2b) {
        _0x201093 = Math.floor(_0x201093 / this.tilesize), _0x70f6db = Math.floor(_0x70f6db / this.tilesize), 0x0 <= _0x201093 && _0x201093 < this.width && 0x0 <= _0x70f6db && _0x70f6db < this.height && (this.data[_0x70f6db][_0x201093] = _0x31af2b);
      }
    });
  }), ig.baked = !0x0, ig.module('impact.collision-map').requires('impact.map').defines(function () {
    ig.CollisionMap = ig.Map.extend({
      'lastSlope': 0x1,
      'tiledef': null,
      'init': function (_0x5c746d, _0x4b450a, _0x254857) {
        this.parent(_0x5c746d, _0x4b450a), this.tiledef = _0x254857 || ig.CollisionMap.defaultTileDef;
        for (var _0x126302 in this.tiledef) _0x126302 | 0x0 > this.lastSlope && (this.lastSlope = _0x126302 | 0x0);
      },
      'trace': function (_0x50c80f, _0x158674, _0x23040b, _0xba80e2, _0x4fbc5b, _0x2de559) {
        var _0x14d385 = {
            'collision': {
              'x': !0x1,
              'y': !0x1,
              'slope': !0x1
            },
            'pos': {
              'x': _0x50c80f,
              'y': _0x158674
            },
            'tile': {
              'x': 0x0,
              'y': 0x0
            }
          },
          _0x2ebdb6 = Math.ceil((Math.max(Math.abs(_0x23040b), Math.abs(_0xba80e2)) + 0.1) / this.tilesize);
        if (0x1 < _0x2ebdb6) {
          for (var _0x506c48 = _0x23040b / _0x2ebdb6, _0x16c93d = _0xba80e2 / _0x2ebdb6, _0x522da2 = 0x0; _0x522da2 < _0x2ebdb6 && (_0x506c48 || _0x16c93d) && !(this._traceStep(_0x14d385, _0x50c80f, _0x158674, _0x506c48, _0x16c93d, _0x4fbc5b, _0x2de559, _0x23040b, _0xba80e2, _0x522da2), _0x50c80f = _0x14d385.pos.x, _0x158674 = _0x14d385.pos.y, _0x14d385.collision.x && (_0x23040b = _0x506c48 = 0x0), _0x14d385.collision.y && (_0xba80e2 = _0x16c93d = 0x0), _0x14d385.collision.slope); _0x522da2++);
        } else this._traceStep(_0x14d385, _0x50c80f, _0x158674, _0x23040b, _0xba80e2, _0x4fbc5b, _0x2de559, _0x23040b, _0xba80e2, 0x0);
        return _0x14d385;
      },
      '_traceStep': function (_0x25cc39, _0x387fdc, _0x515a1f, _0x5d1967, _0x5ab9d3, _0x38dd9f, _0x28b390, _0x50fc7a, _0x5285f2, _0x43939c) {
        _0x25cc39.pos.x += _0x5d1967, _0x25cc39.pos.y += _0x5ab9d3;
        var _0x47e7ea = 0x0;
        if (_0x5d1967) {
          var _0x503018 = 0x0 < _0x5d1967 ? _0x38dd9f : 0x0,
            _0x4eea57 = 0x0 > _0x5d1967 ? this.tilesize : 0x0,
            _0x47e7ea = Math.max(Math.floor(_0x515a1f / this.tilesize), 0x0),
            _0x5e3f3e = Math.min(Math.ceil((_0x515a1f + _0x28b390) / this.tilesize), this.height);
          _0x5d1967 = Math.floor((_0x25cc39.pos.x + _0x503018) / this.tilesize);
          var _0x399bd0 = Math.floor((_0x387fdc + _0x503018) / this.tilesize);
          if (0x0 < _0x43939c || _0x5d1967 == _0x399bd0 || 0x0 > _0x399bd0 || _0x399bd0 >= this.width) _0x399bd0 = -0x1;
          if (0x0 <= _0x5d1967 && _0x5d1967 < this.width) {
            for (var _0x4fbc5c = _0x47e7ea; _0x4fbc5c < _0x5e3f3e && !(-0x1 != _0x399bd0 && (_0x47e7ea = this.data[_0x4fbc5c][_0x399bd0], 0x1 < _0x47e7ea && _0x47e7ea <= this.lastSlope && this._checkTileDef(_0x25cc39, _0x47e7ea, _0x387fdc, _0x515a1f, _0x50fc7a, _0x5285f2, _0x38dd9f, _0x28b390, _0x399bd0, _0x4fbc5c))); _0x4fbc5c++) if (_0x47e7ea = this.data[_0x4fbc5c][_0x5d1967], 0x1 == _0x47e7ea || _0x47e7ea > this.lastSlope || 0x1 < _0x47e7ea && this._checkTileDef(_0x25cc39, _0x47e7ea, _0x387fdc, _0x515a1f, _0x50fc7a, _0x5285f2, _0x38dd9f, _0x28b390, _0x5d1967, _0x4fbc5c)) {
              if (0x1 < _0x47e7ea && _0x47e7ea <= this.lastSlope && _0x25cc39.collision.slope) break;
              _0x25cc39.collision.x = !0x0, _0x25cc39.tile.x = _0x47e7ea, _0x387fdc = _0x25cc39.pos.x = _0x5d1967 * this.tilesize - _0x503018 + _0x4eea57, _0x50fc7a = 0x0;
              break;
            }
          }
        }
        if (_0x5ab9d3) {
          _0x503018 = 0x0 < _0x5ab9d3 ? _0x28b390 : 0x0, _0x5ab9d3 = 0x0 > _0x5ab9d3 ? this.tilesize : 0x0, _0x47e7ea = Math.max(Math.floor(_0x25cc39.pos.x / this.tilesize), 0x0), _0x4eea57 = Math.min(Math.ceil((_0x25cc39.pos.x + _0x38dd9f) / this.tilesize), this.width), _0x4fbc5c = Math.floor((_0x25cc39.pos.y + _0x503018) / this.tilesize), _0x5e3f3e = Math.floor((_0x515a1f + _0x503018) / this.tilesize);
          if (0x0 < _0x43939c || _0x4fbc5c == _0x5e3f3e || 0x0 > _0x5e3f3e || _0x5e3f3e >= this.height) _0x5e3f3e = -0x1;
          if (0x0 <= _0x4fbc5c && _0x4fbc5c < this.height) {
            for (_0x5d1967 = _0x47e7ea; _0x5d1967 < _0x4eea57 && !(-0x1 != _0x5e3f3e && (_0x47e7ea = this.data[_0x5e3f3e][_0x5d1967], 0x1 < _0x47e7ea && _0x47e7ea <= this.lastSlope && this._checkTileDef(_0x25cc39, _0x47e7ea, _0x387fdc, _0x515a1f, _0x50fc7a, _0x5285f2, _0x38dd9f, _0x28b390, _0x5d1967, _0x5e3f3e))); _0x5d1967++) if (_0x47e7ea = this.data[_0x4fbc5c][_0x5d1967], 0x1 == _0x47e7ea || _0x47e7ea > this.lastSlope || 0x1 < _0x47e7ea && this._checkTileDef(_0x25cc39, _0x47e7ea, _0x387fdc, _0x515a1f, _0x50fc7a, _0x5285f2, _0x38dd9f, _0x28b390, _0x5d1967, _0x4fbc5c)) {
              if (0x1 < _0x47e7ea && _0x47e7ea <= this.lastSlope && _0x25cc39.collision.slope) break;
              _0x25cc39.collision.y = !0x0, _0x25cc39.tile.y = _0x47e7ea, _0x25cc39.pos.y = _0x4fbc5c * this.tilesize - _0x503018 + _0x5ab9d3;
              break;
            }
          }
        }
      },
      '_checkTileDef': function (_0x3d2789, _0x1542aa, _0x1d643b, _0x5def71, _0xf9ff1b, _0x2c05fc, _0xa46c4, _0x5221f9, _0x44220c, _0x55aa7c) {
        var _0x3774b5 = this.tiledef[_0x1542aa];
        if (!_0x3774b5) return !0x1;
        _0x1542aa = (_0x3774b5[0x2] - _0x3774b5[0x0]) * this.tilesize;
        var _0x276e33 = (_0x3774b5[0x3] - _0x3774b5[0x1]) * this.tilesize,
          _0x390d40 = _0x3774b5[0x4];
        _0xa46c4 = _0x1d643b + _0xf9ff1b + (0x0 > _0x276e33 ? _0xa46c4 : 0x0) - (_0x44220c + _0x3774b5[0x0]) * this.tilesize, _0x5221f9 = _0x5def71 + _0x2c05fc + (0x0 < _0x1542aa ? _0x5221f9 : 0x0) - (_0x55aa7c + _0x3774b5[0x1]) * this.tilesize;
        if (0x0 < _0x1542aa * _0x5221f9 - _0x276e33 * _0xa46c4) {
          if (0x0 > _0xf9ff1b * -_0x276e33 + _0x2c05fc * _0x1542aa) return _0x390d40;
          _0x44220c = Math.sqrt(_0x1542aa * _0x1542aa + _0x276e33 * _0x276e33), _0x55aa7c = _0x276e33 / _0x44220c, _0x44220c = -_0x1542aa / _0x44220c;
          var _0x337bd4 = _0xa46c4 * _0x55aa7c + _0x5221f9 * _0x44220c,
            _0x3774b5 = _0x55aa7c * _0x337bd4,
            _0x337bd4 = _0x44220c * _0x337bd4;
          if (_0x3774b5 * _0x3774b5 + _0x337bd4 * _0x337bd4 >= _0xf9ff1b * _0xf9ff1b + _0x2c05fc * _0x2c05fc) return _0x390d40 || 0.5 > _0x1542aa * (_0x5221f9 - _0x2c05fc) - _0x276e33 * (_0xa46c4 - _0xf9ff1b);
          return _0x3d2789.pos.x = _0x1d643b + _0xf9ff1b - _0x3774b5, _0x3d2789.pos.y = _0x5def71 + _0x2c05fc - _0x337bd4, _0x3d2789.collision.slope = {
            'x': _0x1542aa,
            'y': _0x276e33,
            'nx': _0x55aa7c,
            'ny': _0x44220c
          }, !0x0;
        }
        return !0x1;
      }
    });
    var _0x17c750 = 0x1 / 0x3,
      _0x4e82a0 = 0x2 / 0x3;
    ig.CollisionMap.defaultTileDef = {
      0x5: [0x0, 0x1, 0x1, _0x4e82a0, !0x0],
      0x6: [0x0, _0x4e82a0, 0x1, _0x17c750, !0x0],
      0x7: [0x0, _0x17c750, 0x1, 0x0, !0x0],
      0x3: [0x0, 0x1, 0x1, 0.5, !0x0],
      0x4: [0x0, 0.5, 0x1, 0x0, !0x0],
      0x2: [0x0, 0x1, 0x1, 0x0, !0x0],
      0xa: [0.5, 0x1, 0x1, 0x0, !0x0],
      0x15: [0x0, 0x1, 0.5, 0x0, !0x0],
      0x20: [_0x4e82a0, 0x1, 0x1, 0x0, !0x0],
      0x2b: [_0x17c750, 0x1, _0x4e82a0, 0x0, !0x0],
      0x36: [0x0, 0x1, _0x17c750, 0x0, !0x0],
      0x1b: [0x0, 0x0, 0x1, _0x17c750, !0x0],
      0x1c: [0x0, _0x17c750, 0x1, _0x4e82a0, !0x0],
      0x1d: [0x0, _0x4e82a0, 0x1, 0x1, !0x0],
      0x19: [0x0, 0x0, 0x1, 0.5, !0x0],
      0x1a: [0x0, 0.5, 0x1, 0x1, !0x0],
      0x18: [0x0, 0x0, 0x1, 0x1, !0x0],
      0xb: [0x0, 0x0, 0.5, 0x1, !0x0],
      0x16: [0.5, 0x0, 0x1, 0x1, !0x0],
      0x21: [0x0, 0x0, _0x17c750, 0x1, !0x0],
      0x2c: [_0x17c750, 0x0, _0x4e82a0, 0x1, !0x0],
      0x37: [_0x4e82a0, 0x0, 0x1, 0x1, !0x0],
      0x10: [0x1, _0x17c750, 0x0, 0x0, !0x0],
      0x11: [0x1, _0x4e82a0, 0x0, _0x17c750, !0x0],
      0x12: [0x1, 0x1, 0x0, _0x4e82a0, !0x0],
      0xe: [0x1, 0.5, 0x0, 0x0, !0x0],
      0xf: [0x1, 0x1, 0x0, 0.5, !0x0],
      0xd: [0x1, 0x1, 0x0, 0x0, !0x0],
      0x8: [0.5, 0x1, 0x0, 0x0, !0x0],
      0x13: [0x1, 0x1, 0.5, 0x0, !0x0],
      0x1e: [_0x17c750, 0x1, 0x0, 0x0, !0x0],
      0x29: [_0x4e82a0, 0x1, _0x17c750, 0x0, !0x0],
      0x34: [0x1, 0x1, _0x4e82a0, 0x0, !0x0],
      0x26: [0x1, _0x4e82a0, 0x0, 0x1, !0x0],
      0x27: [0x1, _0x17c750, 0x0, _0x4e82a0, !0x0],
      0x28: [0x1, 0x0, 0x0, _0x17c750, !0x0],
      0x24: [0x1, 0.5, 0x0, 0x1, !0x0],
      0x25: [0x1, 0x0, 0x0, 0.5, !0x0],
      0x23: [0x1, 0x0, 0x0, 0x1, !0x0],
      0x9: [0x1, 0x0, 0.5, 0x1, !0x0],
      0x14: [0.5, 0x0, 0x0, 0x1, !0x0],
      0x1f: [0x1, 0x0, _0x4e82a0, 0x1, !0x0],
      0x2a: [_0x4e82a0, 0x0, _0x17c750, 0x1, !0x0],
      0x35: [_0x17c750, 0x0, 0x0, 0x1, !0x0],
      0xc: [0x0, 0x0, 0x1, 0x0, !0x1],
      0x17: [0x1, 0x1, 0x0, 0x1, !0x1],
      0x22: [0x1, 0x0, 0x1, 0x1, !0x1],
      0x2d: [0x0, 0x1, 0x0, 0x0, !0x1]
    }, ig.CollisionMap.staticNoCollision = {
      'trace': function (_0xd63c2b, _0x3732c7, _0x26903e, _0x708b97) {
        return {
          'collision': {
            'x': !0x1,
            'y': !0x1,
            'slope': !0x1
          },
          'pos': {
            'x': _0xd63c2b + _0x26903e,
            'y': _0x3732c7 + _0x708b97
          },
          'tile': {
            'x': 0x0,
            'y': 0x0
          }
        };
      }
    };
  }), ig.baked = !0x0, ig.module('impact.background-map').requires('impact.map', 'impact.image').defines(function () {
    ig.BackgroundMap = ig.Map.extend({
      'tiles': null,
      'scroll': {
        'x': 0x0,
        'y': 0x0
      },
      'distance': 0x1,
      'repeat': !0x1,
      'tilesetName': '',
      'foreground': !0x1,
      'enabled': !0x0,
      'preRender': !0x1,
      'preRenderedChunks': null,
      'chunkSize': 0x200,
      'debugChunks': !0x1,
      'anims': {},
      'init': function (_0x5139e9, _0x546559, _0x24ad0d) {
        this.parent(_0x5139e9, _0x546559), this.setTileset(_0x24ad0d);
      },
      'setTileset': function (_0x26f45e) {
        this.tilesetName = _0x26f45e instanceof ig.Image ? _0x26f45e.path : _0x26f45e, this.tiles = new ig.Image(this.tilesetName), this.preRenderedChunks = null;
      },
      'setScreenPos': function (_0x22193, _0x13b62c) {
        this.scroll.x = _0x22193 / this.distance, this.scroll.y = _0x13b62c / this.distance;
      },
      'preRenderMapToChunks': function () {
        var _0x71a7b1 = this.width * this.tilesize * ig.system.scale,
          _0xa462ad = this.height * this.tilesize * ig.system.scale;
        this.chunkSize = Math.min(Math.max(_0x71a7b1, _0xa462ad), this.chunkSize);
        var _0x14571e = Math.ceil(_0x71a7b1 / this.chunkSize),
          _0x22c09f = Math.ceil(_0xa462ad / this.chunkSize);
        this.preRenderedChunks = [];
        for (var _0x566e02 = 0x0; _0x566e02 < _0x22c09f; _0x566e02++) {
          this.preRenderedChunks[_0x566e02] = [];
          for (var _0x1cfdcf = 0x0; _0x1cfdcf < _0x14571e; _0x1cfdcf++) this.preRenderedChunks[_0x566e02][_0x1cfdcf] = this.preRenderChunk(_0x1cfdcf, _0x566e02, _0x1cfdcf == _0x14571e - 0x1 ? _0x71a7b1 - _0x1cfdcf * this.chunkSize : this.chunkSize, _0x566e02 == _0x22c09f - 0x1 ? _0xa462ad - _0x566e02 * this.chunkSize : this.chunkSize);
        }
      },
      'preRenderChunk': function (_0x2fc38c, _0x4ba3ef, _0x1b372c, _0x312e3b) {
        var _0x54a0ae = _0x1b372c / this.tilesize / ig.system.scale + 0x1,
          _0x5193c8 = _0x312e3b / this.tilesize / ig.system.scale + 0x1,
          _0x2b92be = _0x2fc38c * this.chunkSize / ig.system.scale % this.tilesize,
          _0x162a9 = _0x4ba3ef * this.chunkSize / ig.system.scale % this.tilesize;
        _0x2fc38c = Math.floor(_0x2fc38c * this.chunkSize / this.tilesize / ig.system.scale);
        var _0x520bc4 = Math.floor(_0x4ba3ef * this.chunkSize / this.tilesize / ig.system.scale);
        _0x4ba3ef = ig.$new('canvas'), _0x4ba3ef.width = _0x1b372c, _0x4ba3ef.height = _0x312e3b, _0x4ba3ef.retinaResolutionEnabled = !0x1, _0x312e3b = _0x4ba3ef.getContext('2d'), ig.System.scaleMode(_0x4ba3ef, _0x312e3b), _0x1b372c = ig.system.context, ig.system.context = _0x312e3b;
        for (_0x312e3b = 0x0; _0x312e3b < _0x54a0ae; _0x312e3b++) for (var _0x5a0141 = 0x0; _0x5a0141 < _0x5193c8; _0x5a0141++) if (_0x312e3b + _0x2fc38c < this.width && _0x5a0141 + _0x520bc4 < this.height) {
          var _0xacbbbc = this.data[_0x5a0141 + _0x520bc4][_0x312e3b + _0x2fc38c];
          _0xacbbbc && this.tiles.drawTile(_0x312e3b * this.tilesize - _0x2b92be, _0x5a0141 * this.tilesize - _0x162a9, _0xacbbbc - 0x1, this.tilesize);
        }
        return ig.system.context = _0x1b372c, _0x54a0ae = new Image(), _0x54a0ae.src = _0x4ba3ef.toDataURL(), _0x54a0ae.width = _0x4ba3ef.width, _0x54a0ae.height = _0x4ba3ef.height, _0x54a0ae;
      },
      'draw': function () {
        this.tiles.loaded && this.enabled && (this.preRender ? this.drawPreRendered() : this.drawTiled());
      },
      'drawPreRendered': function () {
        this.preRenderedChunks || this.preRenderMapToChunks();
        var _0x5c257c = ig.system.getDrawPos(this.scroll.x),
          _0x3a88e5 = ig.system.getDrawPos(this.scroll.y);
        if (this.repeat) var _0x15ee80 = this.width * this.tilesize * ig.system.scale,
          _0x5c257c = (_0x5c257c % _0x15ee80 + _0x15ee80) % _0x15ee80,
          _0x15ee80 = this.height * this.tilesize * ig.system.scale,
          _0x3a88e5 = (_0x3a88e5 % _0x15ee80 + _0x15ee80) % _0x15ee80;
        var _0x15ee80 = Math.max(Math.floor(_0x5c257c / this.chunkSize), 0x0),
          _0x35d6d9 = Math.max(Math.floor(_0x3a88e5 / this.chunkSize), 0x0),
          _0x4778db = Math.ceil((_0x5c257c + ig.system.realWidth) / this.chunkSize),
          _0x793106 = Math.ceil((_0x3a88e5 + ig.system.realHeight) / this.chunkSize),
          _0x4a53ba = this.preRenderedChunks[0x0].length,
          _0x254a29 = this.preRenderedChunks.length;
        this.repeat || (_0x4778db = Math.min(_0x4778db, _0x4a53ba), _0x793106 = Math.min(_0x793106, _0x254a29));
        for (var _0x200050 = 0x0, _0x403a7d = _0x35d6d9; _0x403a7d < _0x793106; _0x403a7d++) {
          for (var _0x5b933c = 0x0, _0x52d78d = _0x15ee80; _0x52d78d < _0x4778db; _0x52d78d++) {
            var _0x1cc16c = this.preRenderedChunks[_0x403a7d % _0x254a29][_0x52d78d % _0x4a53ba],
              _0x12c2ec = -_0x5c257c + _0x52d78d * this.chunkSize - _0x5b933c,
              _0x56b166 = -_0x3a88e5 + _0x403a7d * this.chunkSize - _0x200050;
            ig.system.context.drawImage(_0x1cc16c, _0x12c2ec, _0x56b166), ig.Image.drawCount++, this.debugChunks && (ig.system.context.strokeStyle = '#f0f', ig.system.context.strokeRect(_0x12c2ec, _0x56b166, this.chunkSize, this.chunkSize)), this.repeat && _0x1cc16c.width < this.chunkSize && _0x12c2ec + _0x1cc16c.width < ig.system.realWidth && (_0x5b933c += this.chunkSize - _0x1cc16c.width, _0x403a7d == _0x35d6d9 && _0x4778db++);
          }
          this.repeat && _0x1cc16c.height < this.chunkSize && _0x56b166 + _0x1cc16c.height < ig.system.realHeight && (_0x200050 += this.chunkSize - _0x1cc16c.height, _0x793106++);
        }
      },
      'drawTiled': function () {
        for (var _0x27c228 = 0x0, _0x5a87db = null, _0x276f9e = (this.scroll.x / this.tilesize).toInt(), _0x5c096e = (this.scroll.y / this.tilesize).toInt(), _0x5df72f = this.scroll.x % this.tilesize, _0xf19f15 = this.scroll.y % this.tilesize, _0x52d13 = -_0x5df72f - this.tilesize, _0x5df72f = ig.system.width + this.tilesize - _0x5df72f, _0x3e1523 = ig.system.height + this.tilesize - _0xf19f15, _0x6314b9 = -0x1, _0xf19f15 = -_0xf19f15 - this.tilesize; _0xf19f15 < _0x3e1523; _0x6314b9++, _0xf19f15 += this.tilesize) {
          var _0x1f7b9d = _0x6314b9 + _0x5c096e;
          if (_0x1f7b9d >= this.height || 0x0 > _0x1f7b9d) {
            if (!this.repeat) continue;
            _0x1f7b9d = (_0x1f7b9d % this.height + this.height) % this.height;
          }
          for (var _0x5831dc = -0x1, _0x3f04d0 = _0x52d13; _0x3f04d0 < _0x5df72f; _0x5831dc++, _0x3f04d0 += this.tilesize) {
            _0x27c228 = _0x5831dc + _0x276f9e;
            if (_0x27c228 >= this.width || 0x0 > _0x27c228) {
              if (!this.repeat) continue;
              _0x27c228 = (_0x27c228 % this.width + this.width) % this.width;
            }
            if (_0x27c228 = this.data[_0x1f7b9d][_0x27c228]) (_0x5a87db = this.anims[_0x27c228 - 0x1]) ? _0x5a87db.draw(_0x3f04d0, _0xf19f15) : this.tiles.drawTile(_0x3f04d0, _0xf19f15, _0x27c228 - 0x1, this.tilesize);
          }
        }
      }
    });
  }), ig.baked = !0x0, ig.module('impact.game').requires('impact.impact', 'impact.entity', 'impact.collision-map', 'impact.background-map').defines(function () {
    ig.Game = ig.Class.extend({
      'clearColor': '#000000',
      'gravity': 0x0,
      'screen': {
        'x': 0x0,
        'y': 0x0
      },
      '_rscreen': {
        'x': 0x0,
        'y': 0x0
      },
      'entities': [],
      'namedEntities': {},
      'collisionMap': ig.CollisionMap.staticNoCollision,
      'backgroundMaps': [],
      'backgroundAnims': {},
      'autoSort': !0x1,
      'sortBy': null,
      'cellSize': 0x40,
      '_deferredKill': [],
      '_levelToLoad': null,
      '_doSortEntities': !0x1,
      'staticInstantiate': function () {
        return this.sortBy = this.sortBy || ig.Game.SORT.Z_INDEX, ig.game = this, null;
      },
      'loadLevel': function (_0x321c92) {
        this.screen = {
          'x': 0x0,
          'y': 0x0
        }, this.entities = [], this.namedEntities = {};
        for (var _0x5ab6d0 = 0x0; _0x5ab6d0 < _0x321c92.entities.length; _0x5ab6d0++) {
          var _0x4fbc90 = _0x321c92.entities[_0x5ab6d0];
          this.spawnEntity(_0x4fbc90.type, _0x4fbc90.x, _0x4fbc90.y, _0x4fbc90.settings);
        }
        this.sortEntities(), this.collisionMap = ig.CollisionMap.staticNoCollision, this.backgroundMaps = [];
        for (_0x5ab6d0 = 0x0; _0x5ab6d0 < _0x321c92.layer.length; _0x5ab6d0++) if (_0x4fbc90 = _0x321c92.layer[_0x5ab6d0], 'collision' == _0x4fbc90.name) this.collisionMap = new ig.CollisionMap(_0x4fbc90.tilesize, _0x4fbc90.data);else {
          var _0x1f03f2 = new ig.BackgroundMap(_0x4fbc90.tilesize, _0x4fbc90.data, _0x4fbc90.tilesetName);
          _0x1f03f2.anims = this.backgroundAnims[_0x4fbc90.tilesetName] || {}, _0x1f03f2.repeat = _0x4fbc90.repeat, _0x1f03f2.distance = _0x4fbc90.distance, _0x1f03f2.foreground = !!_0x4fbc90.foreground, _0x1f03f2.preRender = !!_0x4fbc90.preRender, _0x1f03f2.name = _0x4fbc90.name, this.backgroundMaps.push(_0x1f03f2);
        }
        for (_0x5ab6d0 = 0x0; _0x5ab6d0 < this.entities.length; _0x5ab6d0++) this.entities[_0x5ab6d0].ready();
      },
      'loadLevelDeferred': function (_0xc3534a) {
        this._levelToLoad = _0xc3534a;
      },
      'getMapByName': function (_0x196caf) {
        if ('collision' == _0x196caf) return this.collisionMap;
        for (var _0x46609f = 0x0; _0x46609f < this.backgroundMaps.length; _0x46609f++) if (this.backgroundMaps[_0x46609f].name == _0x196caf) return this.backgroundMaps[_0x46609f];
        return null;
      },
      'getEntityByName': function (_0x325293) {
        return this.namedEntities[_0x325293];
      },
      'getEntitiesByType': function (_0x463887) {
        _0x463887 = 'string' === typeof _0x463887 ? ig.global[_0x463887] : _0x463887;
        for (var _0x599b48 = [], _0x2c92bc = 0x0; _0x2c92bc < this.entities.length; _0x2c92bc++) {
          var _0x2bb130 = this.entities[_0x2c92bc];
          _0x2bb130 instanceof _0x463887 && !_0x2bb130._killed && _0x599b48.push(_0x2bb130);
        }
        return _0x599b48;
      },
      'spawnEntity': function (_0x23c035, _0x180943, _0x1a4324, _0x4e0402) {
        var _0x17e834 = 'string' === typeof _0x23c035 ? ig.global[_0x23c035] : _0x23c035;
        if (!_0x17e834) throw "Can't spawn entity of type " + _0x23c035;
        return _0x23c035 = new _0x17e834(_0x180943, _0x1a4324, _0x4e0402 || {}), this.entities.push(_0x23c035), _0x23c035.name && (this.namedEntities[_0x23c035.name] = _0x23c035), _0x23c035;
      },
      'sortEntities': function () {
        this.entities.sort(this.sortBy);
      },
      'sortEntitiesDeferred': function () {
        this._doSortEntities = !0x0;
      },
      'removeEntity': function (_0x183842) {
        _0x183842.name && delete this.namedEntities[_0x183842.name], _0x183842._killed = !0x0, _0x183842.type = ig.Entity.TYPE.NONE, _0x183842.checkAgainst = ig.Entity.TYPE.NONE, _0x183842.collides = ig.Entity.COLLIDES.NEVER, this._deferredKill.push(_0x183842);
      },
      'run': function () {
        this.update(), this.draw();
      },
      'update': function () {
        this._levelToLoad && (this.loadLevel(this._levelToLoad), this._levelToLoad = null), this.updateEntities(), this.checkEntities();
        for (var _0x4e7fc5 = 0x0; _0x4e7fc5 < this._deferredKill.length; _0x4e7fc5++) this._deferredKill[_0x4e7fc5].erase(), this.entities.erase(this._deferredKill[_0x4e7fc5]);
        this._deferredKill = [];
        if (this._doSortEntities || this.autoSort) this.sortEntities(), this._doSortEntities = !0x1;
        for (var _0x213705 in this.backgroundAnims) {
          var _0x4e7fc5 = this.backgroundAnims[_0x213705],
            _0x24330b;
          for (_0x24330b in _0x4e7fc5) _0x4e7fc5[_0x24330b].update();
        }
      },
      'updateEntities': function () {
        for (var _0x25ae62 = 0x0; _0x25ae62 < this.entities.length; _0x25ae62++) {
          var _0x52d889 = this.entities[_0x25ae62];
          _0x52d889._killed || _0x52d889.update();
        }
      },
      'draw': function () {
        this.clearColor && ig.system.clear(this.clearColor), this._rscreen.x = ig.system.getDrawPos(this.screen.x) / ig.system.scale, this._rscreen.y = ig.system.getDrawPos(this.screen.y) / ig.system.scale;
        var _0x2d8840;
        for (_0x2d8840 = 0x0; _0x2d8840 < this.backgroundMaps.length; _0x2d8840++) {
          var _0x46b5da = this.backgroundMaps[_0x2d8840];
          if (_0x46b5da.foreground) break;
          _0x46b5da.setScreenPos(this.screen.x, this.screen.y), _0x46b5da.draw();
        }
        this.drawEntities();
        for (_0x2d8840; _0x2d8840 < this.backgroundMaps.length; _0x2d8840++) _0x46b5da = this.backgroundMaps[_0x2d8840], _0x46b5da.setScreenPos(this.screen.x, this.screen.y), _0x46b5da.draw();
      },
      'drawEntities': function () {
        for (var _0x25e547 = 0x0; _0x25e547 < this.entities.length; _0x25e547++) this.entities[_0x25e547].draw();
      },
      'checkEntities': function () {
        for (var _0x523dde = {}, _0x78684a = 0x0; _0x78684a < this.entities.length; _0x78684a++) {
          var _0x263054 = this.entities[_0x78684a];
          if (!(_0x263054.type == ig.Entity.TYPE.NONE && _0x263054.checkAgainst == ig.Entity.TYPE.NONE && _0x263054.collides == ig.Entity.COLLIDES.NEVER)) {
            for (var _0x1039b7 = {}, _0x5a2c62 = Math.floor(_0x263054.pos.y / this.cellSize), _0x1cae2c = Math.floor((_0x263054.pos.x + _0x263054.size.x) / this.cellSize) + 0x1, _0x22a612 = Math.floor((_0x263054.pos.y + _0x263054.size.y) / this.cellSize) + 0x1, _0xc973f = Math.floor(_0x263054.pos.x / this.cellSize); _0xc973f < _0x1cae2c; _0xc973f++) for (var _0x3d30fd = _0x5a2c62; _0x3d30fd < _0x22a612; _0x3d30fd++) if (_0x523dde[_0xc973f]) {
              if (_0x523dde[_0xc973f][_0x3d30fd]) {
                for (var _0x10473e = _0x523dde[_0xc973f][_0x3d30fd], _0x285be6 = 0x0; _0x285be6 < _0x10473e.length; _0x285be6++) _0x263054.touches(_0x10473e[_0x285be6]) && !_0x1039b7[_0x10473e[_0x285be6].id] && (_0x1039b7[_0x10473e[_0x285be6].id] = !0x0, ig.Entity.checkPair(_0x263054, _0x10473e[_0x285be6]));
                _0x10473e.push(_0x263054);
              } else _0x523dde[_0xc973f][_0x3d30fd] = [_0x263054];
            } else _0x523dde[_0xc973f] = {}, _0x523dde[_0xc973f][_0x3d30fd] = [_0x263054];
          }
        }
      }
    }), ig.Game.SORT = {
      'Z_INDEX': function (_0x35aea2, _0x2e0d91) {
        return _0x35aea2.zIndex - _0x2e0d91.zIndex;
      },
      'POS_X': function (_0x63dac2, _0x4bcf5e) {
        return _0x63dac2.pos.x + _0x63dac2.size.x - (_0x4bcf5e.pos.x + _0x4bcf5e.size.x);
      },
      'POS_Y': function (_0x5eac19, _0x201040) {
        return _0x5eac19.pos.y + _0x5eac19.size.y - (_0x201040.pos.y + _0x201040.size.y);
      }
    };
  }), ig.baked = !0x0, ig.module('plugins.addon.random-generator').defines(function () {
    ig.RandomGenerator = ig.Class.extend({
      'init': function (_0x563aa7) {
        'undefined' === typeof _0x563aa7 && (_0x563aa7 = []), this.c = 0x1, this.s2 = this.s1 = this.s0 = 0x0, this.sow(_0x563aa7);
      },
      'sow': function (_0x161cef) {
        this.s0 = this.hash(" "), this.s1 = this.hash(this.s0), this.s2 = this.hash(this.s1), this.c = 0x1;
        if (_0x161cef) for (var _0x3cbb70 = 0x0; _0x3cbb70 < _0x161cef.length && null != _0x161cef[_0x3cbb70]; _0x3cbb70++) {
          var _0x1efbbf = _0x161cef[_0x3cbb70];
          this.s0 -= this.hash(_0x1efbbf), this.s0 += ~~(0x0 > this.s0), this.s1 -= this.hash(_0x1efbbf), this.s1 += ~~(0x0 > this.s1), this.s2 -= this.hash(_0x1efbbf), this.s2 += ~~(0x0 > this.s2);
        }
      },
      'rnd': function () {
        var _0x55827f = 0x1fea77 * this.s0 + 2.3283064365386963e-10 * this.c;
        return this.c = _0x55827f | 0x0, this.s0 = this.s1, this.s1 = this.s2, this.s2 = _0x55827f - this.c;
      },
      'hash': function (_0x15a28a) {
        var _0x52ba46, _0x543de4, _0x337ecf;
        _0x337ecf = 0xefc8249d, _0x15a28a = _0x15a28a.toString();
        for (_0x543de4 = 0x0; _0x543de4 < _0x15a28a.length; _0x543de4++) _0x337ecf += _0x15a28a.charCodeAt(_0x543de4), _0x52ba46 = 0.02519603282416938 * _0x337ecf, _0x337ecf = _0x52ba46 >>> 0x0, _0x52ba46 -= _0x337ecf, _0x52ba46 *= _0x337ecf, _0x337ecf = _0x52ba46 >>> 0x0, _0x52ba46 -= _0x337ecf, _0x337ecf += 0x100000000 * _0x52ba46;
        return 2.3283064365386963e-10 * (_0x337ecf >>> 0x0);
      },
      'frac': function () {
        return this.rnd.apply(this) + 1.1102230246251565e-16 * (0x200000 * this.rnd.apply(this) | 0x0);
      },
      'realInRange': function (_0xc181ec, _0x24426b) {
        return this.frac() * (_0x24426b - _0xc181ec) + _0xc181ec;
      },
      'integerInRange': function (_0x59d050, _0x39b8b3) {
        return Math.floor(this.realInRange(0x0, _0x39b8b3 - _0x59d050 + 0x1) + _0x59d050);
      },
      'pick': function (_0x3299e6) {
        var _0x56df49 = this.integerInRange(0x0, _0x3299e6.length - 0x1);
        return _0x3299e6[_0x56df49];
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.addon.math-collection').defines(function () {
    ig.MathCollection = ig.Class.extend({
      'DEG_TO_RAD': Math.PI / 0xb4,
      'RAD_TO_DEG': 0xb4 / Math.PI,
      'degToRad': function (_0x139efd) {
        return _0x139efd * this.DEG_TO_RAD;
      },
      'radToDeg': function (_0x1a4bc5) {
        return _0x1a4bc5 * this.RAD_TO_DEG;
      },
      'angleBetween': function (_0x31126e, _0x18a6ba, _0x49cccd, _0x473f6e) {
        return Math.atan2(_0x473f6e - _0x18a6ba, _0x49cccd - _0x31126e);
      },
      'angleBetweenPoints': function (_0x14a587, _0x390a6a) {
        return this.angleBetween(_0x14a587.x, _0x14a587.y, _0x390a6a.x, _0x390a6a.y);
      },
      'distance': function (_0x5dc17c, _0x4006c7, _0x603daa, _0x39f473) {
        return _0x5dc17c -= _0x603daa, _0x4006c7 -= _0x39f473, Math.sqrt(_0x5dc17c * _0x5dc17c + _0x4006c7 * _0x4006c7);
      },
      'rectContains': function (_0x233186, _0x1ec2bd, _0x198591) {
        return 0x0 >= _0x233186.width || 0x0 >= _0x233186.height ? !0x1 : _0x1ec2bd >= _0x233186.x && _0x1ec2bd < _0x233186.right && _0x198591 >= _0x233186.y && _0x198591 < _0x233186.bottom;
      },
      'rectIntersects': function (_0x4e4235, _0x4ef4c9) {
        return 0x0 >= _0x4e4235.width || 0x0 >= _0x4e4235.height || 0x0 >= _0x4ef4c9.width || 0x0 >= _0x4ef4c9.height ? !0x1 : !(_0x4e4235.right < _0x4ef4c9.x || _0x4e4235.bottom < _0x4ef4c9.y || _0x4e4235.x > _0x4ef4c9.right || _0x4e4235.y > _0x4ef4c9.bottom);
      },
      'polygonContains': function (_0xdef7f8, _0x199b74, _0x5ba641) {
        for (var _0x2e233c = !0x1, _0x5b4d5c = -0x1, _0x3d0722 = _0xdef7f8.points.length - 0x1; ++_0x5b4d5c < _0xdef7f8.points.length; _0x3d0722 = _0x5b4d5c) {
          var _0x2978c9 = _0xdef7f8.points[_0x5b4d5c].x,
            _0xdf6a37 = _0xdef7f8.points[_0x5b4d5c].y,
            _0xe1ba62 = _0xdef7f8.points[_0x3d0722].x,
            _0x3d0722 = _0xdef7f8.points[_0x3d0722].y;
          if ((_0xdf6a37 <= _0x5ba641 && _0x5ba641 < _0x3d0722 || _0x3d0722 <= _0x5ba641 && _0x5ba641 < _0xdf6a37) && _0x199b74 < (_0xe1ba62 - _0x2978c9) * (_0x5ba641 - _0xdf6a37) / (_0x3d0722 - _0xdf6a37) + _0x2978c9) _0x2e233c = !_0x2e233c;
        }
        return _0x2e233c;
      },
      'circleContains': function (_0x22abe0, _0x4b41f8, _0x19af26) {
        return 0x0 < _0x22abe0.radius && _0x4b41f8 >= _0x22abe0.left && _0x4b41f8 <= _0x22abe0.right && _0x19af26 >= _0x22abe0.top && _0x19af26 <= _0x22abe0.bottom ? (_0x22abe0.x - _0x4b41f8) * (_0x22abe0.x - _0x4b41f8) + (_0x22abe0.y - _0x19af26) * (_0x22abe0.y - _0x19af26) <= _0x22abe0.radius * _0x22abe0.radius : !0x1;
      },
      'catmullRom': function (_0x3a15e5, _0x4749bf, _0x485283, _0x2a6ee1, _0x57bfd1) {
        _0x3a15e5 = 0.5 * (_0x485283 - _0x3a15e5), _0x2a6ee1 = 0.5 * (_0x2a6ee1 - _0x4749bf);
        var _0x3f8540 = _0x57bfd1 * _0x57bfd1;
        return (0x2 * _0x4749bf - 0x2 * _0x485283 + _0x3a15e5 + _0x2a6ee1) * _0x57bfd1 * _0x3f8540 + (-0x3 * _0x4749bf + 0x3 * _0x485283 - 0x2 * _0x3a15e5 - _0x2a6ee1) * _0x3f8540 + _0x3a15e5 * _0x57bfd1 + _0x4749bf;
      },
      'catmullRomInterpolation': function (_0x24f724, _0x7f088) {
        var _0x5b5065 = _0x24f724.length - 0x1,
          _0x562fb5 = _0x5b5065 * _0x7f088,
          _0x18b6a8 = Math.floor(_0x562fb5);
        return _0x24f724[0x0] === _0x24f724[_0x5b5065] ? (0x0 > _0x7f088 && (_0x18b6a8 = Math.floor(_0x562fb5 = _0x5b5065 * (0x1 + _0x7f088))), this.catmullRom(_0x24f724[(_0x18b6a8 - 0x1 + _0x5b5065) % _0x5b5065], _0x24f724[_0x18b6a8], _0x24f724[(_0x18b6a8 + 0x1) % _0x5b5065], _0x24f724[(_0x18b6a8 + 0x2) % _0x5b5065], _0x562fb5 - _0x18b6a8)) : 0x0 > _0x7f088 ? _0x24f724[0x0] - (this.catmullRom(_0x24f724[0x0], _0x24f724[0x0], _0x24f724[0x1], _0x24f724[0x1], -_0x562fb5) - _0x24f724[0x0]) : 0x1 < _0x7f088 ? _0x24f724[_0x5b5065] - (this.catmullRom(_0x24f724[_0x5b5065], _0x24f724[_0x5b5065], _0x24f724[_0x5b5065 - 0x1], _0x24f724[_0x5b5065 - 0x1], _0x562fb5 - _0x5b5065) - _0x24f724[_0x5b5065]) : this.catmullRom(_0x24f724[_0x18b6a8 ? _0x18b6a8 - 0x1 : 0x0], _0x24f724[_0x18b6a8], _0x24f724[_0x5b5065 < _0x18b6a8 + 0x1 ? _0x5b5065 : _0x18b6a8 + 0x1], _0x24f724[_0x5b5065 < _0x18b6a8 + 0x2 ? _0x5b5065 : _0x18b6a8 + 0x2], _0x562fb5 - _0x18b6a8);
      },
      'factorial': function (_0x11d372) {
        if (0x0 === _0x11d372) return 0x1;
        for (var _0x3dbfd3 = _0x11d372; --_0x11d372;) _0x3dbfd3 *= _0x11d372;
        return _0x3dbfd3;
      },
      'bernstein': function (_0x58158f, _0x41d31e) {
        return this.factorial(_0x58158f) / this.factorial(_0x41d31e) / this.factorial(_0x58158f - _0x41d31e);
      },
      'bezierInterpolation': function (_0x9830a9, _0x17d587) {
        for (var _0x24d3bf = 0x0, _0x281ba6 = _0x9830a9.length - 0x1, _0x86bf9a = 0x0; _0x86bf9a <= _0x281ba6; _0x86bf9a++) _0x24d3bf += Math.pow(0x1 - _0x17d587, _0x281ba6 - _0x86bf9a) * Math.pow(_0x17d587, _0x86bf9a) * _0x9830a9[_0x86bf9a] * this.bernstein(_0x281ba6, _0x86bf9a);
        return _0x24d3bf;
      },
      'linear': function (_0x541ec1, _0x4493ed, _0x14f0ef) {
        return (_0x4493ed - _0x541ec1) * _0x14f0ef + _0x541ec1;
      },
      'linearInterpolation': function (_0x15a84b, _0x95ec49) {
        var _0xb8944a = _0x15a84b.length - 0x1,
          _0x453678 = _0xb8944a * _0x95ec49,
          _0x17b643 = Math.floor(_0x453678);
        return 0x0 > _0x95ec49 ? this.linear(_0x15a84b[0x0], _0x15a84b[0x1], _0x453678) : 0x1 < _0x95ec49 ? this.linear(_0x15a84b[_0xb8944a], _0x15a84b[_0xb8944a - 0x1], _0xb8944a - _0x453678) : this.linear(_0x15a84b[_0x17b643], _0x15a84b[_0x17b643 + 0x1 > _0xb8944a ? _0xb8944a : _0x17b643 + 0x1], _0x453678 - _0x17b643);
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.addon.custom-debug').defines(function () {
    ig.CustomDebug = ig.Class.extend({
      'init': function () {},
      'rect': function (_0x47ff4e, _0x1b61d4, _0x125e0a, _0x3ab674, _0x3d2741) {
        _0x3d2741 = _0x3d2741 ? _0x3d2741 : ig.system.context, _0x3d2741.save(), _0x3d2741.globalAlpha = _0x125e0a, _0x3ab674 && (_0x3d2741.strokeStyle = _0x3ab674.strokeStyle, _0x3d2741.lineWidth = _0x3ab674.lineWidth, _0x3d2741.strokeRect(_0x47ff4e.x, _0x47ff4e.y, _0x47ff4e.width, _0x47ff4e.height)), _0x3d2741.fillStyle = _0x1b61d4, _0x3d2741.fillRect(_0x47ff4e.x, _0x47ff4e.y, _0x47ff4e.width, _0x47ff4e.height), _0x3d2741.restore();
      },
      'circle': function (_0x5c4619, _0x578a7d, _0x13b007, _0x470bfe, _0x1fd1bb) {
        _0x1fd1bb = _0x1fd1bb ? _0x1fd1bb : ig.system.context, _0x1fd1bb.save(), _0x1fd1bb.globalAlpha = _0x13b007, _0x1fd1bb.beginPath(), _0x1fd1bb.arc(_0x5c4619.x, _0x5c4619.y, _0x5c4619.radius, 0x0, 0x2 * Math.PI, !0x1), _0x470bfe && (ctx.strokeStyle = _0x470bfe.strokeStyle, ctx.lineWidth = _0x470bfe.lineWidth, ctx.stroke()), _0x1fd1bb.fillStyle = _0x578a7d, _0x1fd1bb.fill(), _0x1fd1bb.restore();
      },
      'polygon': function (_0x340e05, _0x261c54, _0xacc86f, _0x20030a, _0x510f67) {
        if (_0x340e05.points && 0x0 != _0x340e05.points.length) {
          _0x510f67 = _0x510f67 ? _0x510f67 : ig.system.context, _0x510f67.save(), _0x510f67.globalAlpha = _0xacc86f, _0x510f67.beginPath(), _0xacc86f = _0x340e05.points[0x0], _0x510f67.moveTo(_0xacc86f.x, _0xacc86f.y), _0x340e05 = _0x340e05.points;
          for (var _0x57be98 = 0x1; _0x57be98 < _0x340e05.length; _0x57be98++) _0xacc86f = _0x340e05[_0x57be98], _0x510f67.lineTo(_0xacc86f.x, _0xacc86f.y);
          _0x510f67.closePath(), _0x20030a && (_0x510f67.strokeStyle = _0x20030a.strokeStyle, _0x510f67.lineWidth = _0x20030a.lineWidth, _0x510f67.stroke()), _0x510f67.fillStyle = _0x261c54, _0x510f67.fill(), _0x510f67.restore();
        }
      },
      'satPolygon': function (_0x4aee21, _0x450a5c, _0x59b6fa, _0x49d05f, _0x43390c) {
        _0x43390c = _0x43390c ? _0x43390c : ig.system.context, _0x43390c.save(), _0x43390c.globalAlpha = _0x59b6fa, _0x43390c.beginPath(), _0x59b6fa = _0x4aee21.pointList[0x0], _0x43390c.moveTo(_0x59b6fa.x, _0x59b6fa.y), _0x4aee21 = _0x4aee21.pointList;
        for (var _0x28801d = 0x1; _0x28801d < _0x4aee21.length; _0x28801d++) _0x59b6fa = _0x4aee21[_0x28801d], _0x43390c.lineTo(_0x59b6fa.x, _0x59b6fa.y);
        _0x43390c.closePath(), _0x49d05f && (_0x43390c.strokeStyle = _0x49d05f.strokeStyle, _0x43390c.lineWidth = _0x49d05f.lineWidth, _0x43390c.stroke()), _0x43390c.fillStyle = _0x450a5c, _0x43390c.fill(), _0x43390c.restore();
      },
      'satCircle': function (_0x4c7656, _0x57647f, _0x4e0f20, _0x1b7336, _0xd670f7) {
        _0xd670f7 = _0xd670f7 ? _0xd670f7 : ig.system.context, _0xd670f7.save(), _0xd670f7.globalAlpha = _0x4e0f20, _0xd670f7.beginPath(), _0xd670f7.arc(_0x4c7656.center.x, _0x4c7656.center.y, _0x4c7656.radius, 0x0, 0x2 * Math.PI, !0x1), _0x1b7336 && (ctx.strokeStyle = _0x1b7336.strokeStyle, ctx.lineWidth = _0x1b7336.lineWidth, ctx.stroke()), _0xd670f7.fillStyle = _0x57647f, _0xd670f7.fill(), _0xd670f7.restore();
      },
      'roundRect': function (_0x35be55, _0x2287e0, _0x16d9e9, _0x5a30bf, _0x24361c) {
        _0x24361c = _0x24361c ? _0x24361c : ig.system.context, _0x24361c.save(), _0x24361c.beginPath(), _0x24361c.moveTo(_0x35be55.x + _0x35be55.radius, _0x35be55.y), _0x24361c.lineTo(_0x35be55.x + _0x35be55.width - _0x35be55.radius, _0x35be55.y), _0x24361c.quadraticCurveTo(_0x35be55.x + _0x35be55.width, _0x35be55.y, _0x35be55.x + _0x35be55.width, _0x35be55.y + _0x35be55.radius), _0x24361c.lineTo(_0x35be55.x + _0x35be55.width, _0x35be55.y + _0x35be55.height - _0x35be55.radius), _0x24361c.quadraticCurveTo(_0x35be55.x + _0x35be55.width, _0x35be55.y + _0x35be55.height, _0x35be55.x + _0x35be55.width - _0x35be55.radius, _0x35be55.y + _0x35be55.height), _0x24361c.lineTo(_0x35be55.x + _0x35be55.radius, _0x35be55.y + _0x35be55.height), _0x24361c.quadraticCurveTo(_0x35be55.x, _0x35be55.y + _0x35be55.height, _0x35be55.x, _0x35be55.y + _0x35be55.height - _0x35be55.radius), _0x24361c.lineTo(_0x35be55.x, _0x35be55.y + _0x35be55.radius), _0x24361c.quadraticCurveTo(_0x35be55.x, _0x35be55.y, _0x35be55.x + _0x35be55.radius, _0x35be55.y), _0x24361c.closePath(), _0x24361c.globalAlpha = _0x16d9e9, _0x5a30bf && (_0x24361c.strokeStyle = _0x5a30bf.strokeStyle, _0x24361c.lineWidth = _0x5a30bf.lineWidth, _0x24361c.stroke()), _0x24361c.fillStyle = _0x2287e0, _0x24361c.fill(), _0x24361c.restore();
      },
      'halfCircleRect': function (_0xe9577c, _0x20d23f, _0x3263e9, _0x430209, _0x436ab1) {
        _0x436ab1 = _0x436ab1 ? _0x436ab1 : ig.system.context, _0x436ab1.save(), _0x436ab1.beginPath();
        var _0x12d072 = _0xe9577c.x + _0xe9577c.radius + _0xe9577c.tipRad,
          _0x5d9714 = _0xe9577c.width - 0x2 * _0xe9577c.radius - 0x2 * _0xe9577c.tipRad;
        _0x436ab1.moveTo(_0x12d072, _0xe9577c.y), _0x436ab1.lineTo(_0x12d072 + _0x5d9714, _0xe9577c.y);
        var _0x18b12c = _0xe9577c.x + _0xe9577c.width,
          _0x4bafd3 = _0xe9577c.y + _0xe9577c.height / 0x2,
          _0x45d905 = _0x12d072 + _0x5d9714 + _0xe9577c.tipRad,
          _0x493cd5 = _0xe9577c.y,
          _0x353975 = ig.game.math.angleBetween(_0x45d905, _0x493cd5, _0x18b12c, _0x4bafd3),
          _0x2a0403 = _0x45d905 + Math.cos(_0x353975) * _0xe9577c.tipRad,
          _0x353975 = _0x493cd5 + Math.sin(_0x353975) * _0xe9577c.tipRad;
        _0x436ab1.quadraticCurveTo(_0x45d905, _0x493cd5, _0x2a0403, _0x353975), _0x493cd5 = _0xe9577c.y + _0xe9577c.height, _0x353975 = ig.game.math.angleBetween(_0x45d905, _0x493cd5, _0x18b12c, _0x4bafd3), _0x2a0403 = _0x45d905 + Math.cos(_0x353975) * _0xe9577c.tipRad, _0x353975 = _0x493cd5 + Math.sin(_0x353975) * _0xe9577c.tipRad, _0x436ab1.quadraticCurveTo(_0x18b12c, _0x4bafd3, _0x2a0403, _0x353975), _0x436ab1.quadraticCurveTo(_0x45d905, _0x493cd5, _0x12d072 + _0x5d9714, _0xe9577c.y + _0xe9577c.height), _0x18b12c = _0xe9577c.y + _0xe9577c.height, _0x436ab1.lineTo(_0x12d072, _0x18b12c), _0x5d9714 = _0x12d072 - _0xe9577c.tipRad, _0x493cd5 = ig.game.math.angleBetween(_0x5d9714, _0x18b12c, _0xe9577c.x, _0x4bafd3), _0x45d905 = _0x5d9714 + Math.cos(_0x493cd5) * _0xe9577c.tipRad, _0x493cd5 = _0x18b12c + Math.sin(_0x493cd5) * _0xe9577c.tipRad, _0x436ab1.quadraticCurveTo(_0x5d9714, _0x18b12c, _0x45d905, _0x493cd5), _0x18b12c = _0xe9577c.y, _0x493cd5 = ig.game.math.angleBetween(_0x5d9714, _0x18b12c, _0xe9577c.x, _0x4bafd3), _0x45d905 = _0x5d9714 + Math.cos(_0x493cd5) * _0xe9577c.tipRad, _0x493cd5 = _0x18b12c + Math.sin(_0x493cd5) * _0xe9577c.tipRad, _0x436ab1.quadraticCurveTo(_0xe9577c.x, _0x4bafd3, _0x45d905, _0x493cd5), _0x436ab1.quadraticCurveTo(_0x5d9714, _0x18b12c, _0x12d072, _0xe9577c.y), _0x436ab1.globalAlpha = _0x3263e9, _0x430209 && (_0x436ab1.strokeStyle = _0x430209.strokeStyle, _0x436ab1.lineWidth = _0x430209.lineWidth, _0x436ab1.stroke()), _0x436ab1.fillStyle = _0x20d23f, _0x436ab1.fill(), _0x436ab1.restore();
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.addon.add-signal').defines(function () {
    ig.AddSignal = ig.Class.extend({
      'init': function (_0x239ae9) {
        this.events = [], this.bindObject = _0x239ae9;
      },
      'add': function (_0xa72746, _0x1022fb) {
        if ('function' !== typeof _0xa72746) throw "Argument not a function";
        this.events.push(_0xa72746.bind(_0x1022fb));
      },
      'dispatch': function () {
        for (var _0x361d95 = 0x0; _0x361d95 < this.events.length; _0x361d95++) (0x0, this.events[_0x361d95])(this.bindObject);
      },
      'removeAll': function () {
        this.events = [];
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.addon.time-event').requires('plugins.addon.add-signal').defines(function () {
    ig.CustomTime = ig.Class.extend({
      'init': function () {
        this._desiredFps = 0x3c, this.physicsElapsed = 0x1 / 0x3c, this.physicsElapsedMS = 0x3e8 * this.physicsElapsed;
      },
      'setTime': function (_0x4df65f) {
        this._desiredFps = _0x4df65f, this.physicsElapsed = 0x1 / _0x4df65f, this.physicsElapsedMS = 0x3e8 * this.physicsElapsed;
      },
      'update': function () {
        var _0x2b8b0c = 0x1 / ig.system.tick;
        _0x2b8b0c != this._desiredFps && this.setTime(_0x2b8b0c);
      }
    }), ig.TimeEvent = ig.Class.extend({
      'events': [],
      'add': function (_0x5f2d65, _0x23c5fa, _0x16308f, _0x5239d1) {
        return _0x5f2d65 = {
          'curTime': 0x0,
          'duration': _0x5f2d65,
          'callFunction': _0x23c5fa,
          'bindObject': null,
          'isLooping': _0x5239d1 ? _0x5239d1 : !0x1,
          'timer': new ig.Timer(),
          'loopCount': 0x0,
          'isPaused': !0x1
        }, _0x5f2d65.callFunction = new ig.AddSignal(_0x5f2d65), _0x5f2d65.callFunction.add(_0x23c5fa, _0x16308f), _0x5f2d65.bindObject = _0x16308f, this.events.push(_0x5f2d65), _0x5f2d65;
      },
      'pauseAll': function () {
        for (var _0x32dfb0 = 0x0; _0x32dfb0 < this.events.length; _0x32dfb0++) this.events[_0x32dfb0].isPaused = !0x0;
      },
      'resumeAll': function () {
        for (var _0x24e768 = 0x0; _0x24e768 < this.events.length; _0x24e768++) {
          var _0x1d13d1 = this.events[_0x24e768];
          _0x1d13d1.timer = new ig.Timer(), _0x1d13d1.isPaused = !0x1;
        }
      },
      'pause': function (_0x243c78) {
        _0x243c78.isPaused = !0x0;
      },
      'resume': function (_0x3efa4c) {
        _0x3efa4c.timer = new ig.Timer(), _0x3efa4c.isPaused = !0x1;
      },
      'remove': function (_0x21c324) {
        _0x21c324 = this.events.indexOf(_0x21c324), 0x0 > _0x21c324 || this.events.splice(_0x21c324, 0x1);
      },
      'removeAll': function () {
        this.events = [];
      },
      'updateEvent': function (_0x14f52e) {
        !_0x14f52e.isPaused && _0x14f52e.curTime < _0x14f52e.duration && (_0x14f52e.curTime += 0.001 * ig.game.customTime.physicsElapsedMS, _0x14f52e.curTime >= _0x14f52e.duration && (_0x14f52e.callFunction.dispatch(), _0x14f52e.isLooping ? (_0x14f52e.curTime = 0x0, _0x14f52e.loopCount++) : this.remove(_0x14f52e)));
      },
      'update': function () {
        for (var _0x3bb445 = 0x0; _0x3bb445 < this.events.length; _0x3bb445++) this.updateEvent(this.events[_0x3bb445]);
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.addon.geometry').defines(function () {
    ig.Geometry = ig.Class.extend({
      'rectangle': function (_0xee35ac, _0x3320e1, _0x7f5030, _0x2a08ce) {
        var _0x1ded09 = {};
        return _0x1ded09.x = _0xee35ac, _0x1ded09.y = _0x3320e1, _0x1ded09.width = _0x7f5030, _0x1ded09.height = _0x2a08ce, _0x1ded09.right = _0xee35ac + _0x7f5030, _0x1ded09.bottom = _0x3320e1 + _0x2a08ce, _0x1ded09.halfWidth = 0.5 * _0x7f5030, _0x1ded09.halfHeight = 0.5 * _0x2a08ce, _0x1ded09.centerX = _0x1ded09.x + _0x1ded09.halfWidth, _0x1ded09.centerY = _0x1ded09.y + _0x1ded09.halfHeight, _0x1ded09;
      },
      'roundRect': function (_0x31c6d3, _0x171b13, _0x2b58b5, _0x16858b, _0x137da2) {
        return _0x31c6d3 = this.rectangle(_0x31c6d3, _0x171b13, _0x2b58b5, _0x16858b), _0x31c6d3.radius = _0x137da2, _0x31c6d3;
      },
      'halfCircleRect': function (_0x54294f, _0x31d60f, _0x43ac79, _0x141947, _0x6d23ed, _0x1d3bea) {
        return _0x54294f = this.rectangle(_0x54294f, _0x31d60f, _0x43ac79, _0x141947), _0x54294f.radius = _0x6d23ed, _0x54294f.tipRad = _0x1d3bea, _0x54294f;
      },
      'circle': function (_0x4091c6, _0x451209, _0x1d04ee) {
        var _0x55e3c8 = {
          'x': 0x0,
          'y': 0x0,
          'diameter': 0x0,
          'radius': 0x0,
          'right': 0x0,
          'left': 0x0,
          'top': 0x0,
          'bottom': 0x0
        };
        return _0x55e3c8.x = _0x4091c6, _0x55e3c8.y = _0x451209, _0x55e3c8.diameter = _0x1d04ee, _0x55e3c8.radius = 0.5 * _0x1d04ee, _0x55e3c8.left = _0x4091c6 - _0x55e3c8.radius, _0x55e3c8.right = _0x4091c6 + _0x55e3c8.radius, _0x55e3c8.top = _0x451209 - _0x55e3c8.radius, _0x55e3c8.bottom = _0x451209 + _0x55e3c8.radius, _0x55e3c8;
      },
      'polygon': function (_0x3343e8) {
        var _0x5adcea = {
          'points': [],
          'closed': !0x0
        };
        return _0x5adcea.points = _0x3343e8, _0x5adcea;
      }
    }), ig.Polygon = ig.Class.extend({
      'points': [],
      'closed': !0x0,
      'init': function (_0x57ec25) {
        this.points = _0x57ec25;
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.addon.world').defines(function () {
    ig.World = {}, ig.World.globalPos = function (_0x4d285f) {
      var _0x24eca1 = _0x4d285f.x,
        _0x4d6e82 = _0x4d285f.y;
      return _0x4d285f.groupParent ? ig.World.parentPos(_0x4d285f.groupParent, _0x24eca1, _0x4d6e82) : {
        'x': _0x24eca1,
        'y': _0x4d6e82
      };
    }, ig.World.parentPos = function (_0x44c147, _0x33f7af, _0x33295b) {
      _0x33f7af = {
        'x': _0x33f7af ? _0x33f7af : 0x0,
        'y': _0x33295b ? _0x33295b : 0x0
      };
      for (_0x33295b = !0x1; !_0x33295b;) _0x33f7af = ig.World.countPos(_0x44c147, _0x33f7af), _0x44c147.groupParent ? _0x44c147 = _0x44c147.groupParent : _0x33295b = !0x0;
      return _0x33f7af;
    }, ig.World.countPos = function (_0x40a943, _0x37f06f) {
      return _0x37f06f.x = _0x37f06f.x * _0x40a943.scale.x + _0x40a943.x, _0x37f06f.y = _0x37f06f.y * _0x40a943.scale.y + _0x40a943.y, ig.World.checkPointRotate(_0x40a943, _0x40a943._rotation, _0x37f06f);
    }, ig.World.checkPointRotate = function (_0x20cf91, _0x5b76a9, _0x44e53a) {
      var _0x7ee71c = _0x20cf91.x;
      _0x20cf91 = _0x20cf91.y;
      var _0x477f41 = _0x44e53a.x,
        _0x6831b0 = _0x44e53a.y;
      return _0x44e53a = ig.game.math.distance(_0x7ee71c, _0x20cf91, _0x477f41, _0x6831b0), _0x477f41 = ig.game.math.angleBetween(_0x7ee71c, _0x20cf91, _0x477f41, _0x6831b0), _0x6831b0 = {
        'x': 0x0,
        'y': 0x0
      }, _0x6831b0.x = _0x7ee71c + _0x44e53a * Math.cos(_0x5b76a9 + _0x477f41), _0x6831b0.y = _0x20cf91 + _0x44e53a * Math.sin(_0x5b76a9 + _0x477f41), _0x6831b0;
    }, ig.World.getBounds = function (_0x72ac78) {
      for (var _0x5ef991 = _0x72ac78[0x0], _0x4bee75 = _0x5ef991.x, _0x48df54 = _0x5ef991.x, _0x3d2885 = _0x5ef991.y, _0x5ef991 = _0x5ef991.y, _0x411b83 = 0x0; _0x411b83 < _0x72ac78.length; _0x411b83++) {
        var _0x4e9e78 = _0x72ac78[_0x411b83];
        _0x4e9e78.x < _0x4bee75 && (_0x4bee75 = _0x4e9e78.x), _0x4e9e78.x > _0x48df54 && (_0x48df54 = _0x4e9e78.x), _0x4e9e78.y < _0x3d2885 && (_0x3d2885 = _0x4e9e78.y), _0x4e9e78.y > _0x5ef991 && (_0x5ef991 = _0x4e9e78.y);
      }
      return ig.game.geom.rectangle(_0x4bee75, _0x3d2885, _0x48df54 - _0x4bee75, _0x5ef991 - _0x3d2885);
    };
  }), ig.baked = !0x0, ig.module('plugins.addon.asset-reader').requires('impact.image').defines(function () {
    ig.Asset = {}, ig.Asset.image = function (_0x17bd14, _0x98edfe, _0x4df389) {
      imgCache[_0x17bd14] ? imgCache[_0x17bd14].path.img = _0x98edfe : imgCache[_0x17bd14] = {
        'path': {
          'img': _0x98edfe,
          'json': ''
        }
      }, (_0x17bd14 = ig.Image.cache[_0x98edfe]) || (_0x17bd14 = new ig.Image(_0x98edfe), ig.Image.cache[_0x98edfe] = _0x17bd14), _0x17bd14.load(_0x4df389);
    }, ig.Asset.json = function (_0xb2ea90, _0x2380e6, _0xb73179) {
      _0x2380e6 = _SPRITESHEET[_0xb2ea90], imgCache[_0xb2ea90] || (imgCache[_0xb2ea90] = {
        'path': {
          'img': '',
          'json': ''
        }
      }), ig.Asset.getJsonDataByKey(_0xb2ea90) ? console.log("json data exists") : jsonCache[_0xb2ea90] = _0x2380e6, _0xb73179 && _0xb73179(_0x2380e6, _0xb2ea90);
    }, ig.Asset.scml = function (_0x2f1e2f, _0x1e7fec, _0x1a25c5) {
      spriterCache[_0x2f1e2f] ? spriterCache[_0x2f1e2f].path = _0x1e7fec : spriterCache[_0x2f1e2f] = {
        'path': _0x1e7fec
      }, _0x2f1e2f = SpriterScml.cache[_0x1e7fec], (_0x2f1e2f ? _0x2f1e2f : new SpriterScml(_0x1e7fec)).load(_0x1a25c5);
    }, ig.Asset.getJsonDataByKey = function (_0x47f0b7) {
      var _0x2ccfc0 = null;
      return (_0x47f0b7 = jsonCache[_0x47f0b7]) && (_0x2ccfc0 = _0x47f0b7), _0x2ccfc0;
    }, ig.Asset.getJsonDataByImageName = function (_0x5b6945) {
      var _0x23345c = null,
        _0x302e90;
      for (_0x302e90 in jsonCache) {
        var _0x8c866a = jsonCache[_0x302e90];
        _0x8c866a.meta.image == _0x5b6945 && (_0x23345c = _0x8c866a);
      }
      return _0x23345c;
    }, ig.Asset.tmx = function (_0x22073f, _0x16e8a4, _0x54c1dc) {
      var _0x2ee819 = new ig.TileMap(),
        _0x4654aa = {
          'dir': _0x16e8a4.split('/').slice(0x0, -0x1).join('/') || '.'
        },
        _0x4da0bd = [];
      $.get(_0x16e8a4, {}, null, 'xml').done(function (_0x207b69) {
        _0x2ee819.fromXML(_0x207b69, _0x4654aa).done(function (_0x281ada) {
          $.each(_0x281ada.layers, function (_0x380651, _0x32bb87) {
            var _0x3f43e2 = [],
              _0x2f0a5e = 0x0,
              _0x471caa = 0x0,
              _0x136db9 = 0x0;
            $.each(_0x32bb87.cells, function (_0x5584ce, _0x101967) {
              var _0x3c33c4 = Math.floor(0.55 * _0x281ada.tileInfo.h);
              tileMapCache.tileSurfaceHeight || (tileMapCache.tileSurfaceHeight = _0x3c33c4), tileMapCache.tileTopGap || (tileMapCache.tileTopGap = 0x1e), 0x0 < _0x2f0a5e && 0x0 == _0x2f0a5e % _0x281ada.bounds.w && (_0x2f0a5e = 0x0, _0x471caa++, _0x136db9 += _0x3c33c4), _0x2f0a5e++;
              if (!_0x101967) return !0x0;
              var _0x3c33c4 = (_0x2f0a5e - 0x1) * _0x101967.tile.bounds.w,
                _0x1bc4f0 = _0x136db9;
              0x0 != _0x471caa % 0x2 && (_0x3c33c4 += Math.floor(_0x281ada.tileInfo.w / 0x2)), _0x3f43e2.push({
                'x': _0x3c33c4,
                'y': _0x1bc4f0,
                'tId': _0x101967.tile.id,
                'tWidth': _0x101967.tile.bounds.w,
                'tHeight': _0x101967.tile.bounds.h,
                'hexSideLength': _0x281ada.hexSideLength
              });
            }), _0x4da0bd.push(_0x3f43e2);
          }), tileMapCache[_0x22073f] = {
            'path': _0x16e8a4,
            'layers': _0x4da0bd
          }, _0x54c1dc(_0x16e8a4, !0x0);
        });
      }.bind(this)).fail(function () {
        _0x54c1dc(_0x16e8a4, !0x1, null);
      }.bind(this));
    };
  }), ig.baked = !0x0, ig.module('plugins.addon.call-asset').defines(function () {
    ig.CallAsset = {}, ig.CallAsset.checkJson = function (_0x531692) {
      var _0x3d000d = [],
        _0x5ddf1e;
      for (_0x5ddf1e in jsonCache) for (var _0x113eca = jsonCache[_0x5ddf1e], _0x55d933 = 0x0; _0x55d933 < _0x113eca.frames.length; _0x55d933++) if (_0x113eca.frames[_0x55d933].filename == _0x531692) {
        _0x3d000d.push(_0x5ddf1e), _0x3d000d.push(_0x531692);
        break;
      }
      return _0x3d000d;
    }, ig.CallAsset.searchSpriteData = function (_0x10eb48) {
      var _0x29ca20 = _0x10eb48.split('/')[0x0],
        _0x992ab8 = null;
      if (!jsonCache[_0x29ca20]) return _0x992ab8;
      for (var _0x29ca20 = jsonCache[_0x29ca20].frames, _0x4b0eb6 = 0x0; _0x4b0eb6 < _0x29ca20.length; _0x4b0eb6++) {
        var _0x209ebc = _0x29ca20[_0x4b0eb6];
        if (_0x209ebc.filename == _0x10eb48) {
          _0x992ab8 = _0x209ebc;
          break;
        }
      }
      return _0x992ab8;
    }, ig.CallAsset.addImage = function (_0x563e40, _0x204d53, _0x591604, _0x19d9a1, _0x4d17f2) {
      var _0x4a5555 = '';
      if (0x1 < _0x591604.split('.').length) _0x4a5555 = _0x591604;else {
        if (_0x4a5555 = imgCache[_0x591604]) _0x4a5555 = _0x4a5555.path.img;else throw "Image is not found " + _0x591604;
      }
      return _0x19d9a1 = _0x19d9a1 ? _0x19d9a1 : {}, _0x4d17f2 = _0x4d17f2 ? _0x4d17f2 : 'ig.AddImage', 'string' == typeof _0x4d17f2 && (_0x4d17f2 = stringToFunction(_0x4d17f2)), new _0x4d17f2(_0x563e40, _0x204d53, _0x4a5555, _0x19d9a1);
    }, ig.CallAsset.addFrameImage = function (_0x2db74b, _0x340127, _0x35aad5, _0xcc4546, _0x3520f2) {
      var _0xde7d16 = ig.CallAsset.checkJson(_0x35aad5);
      if (0x2 > _0xde7d16.length) throw "not a frame in image", _0x35aad5;
      if (_0x2db74b = ig.CallAsset.addImage(_0x2db74b, _0x340127, _0xde7d16[0x0], _0xcc4546, _0x3520f2)) _0x2db74b.frameName = _0x35aad5, _0x2db74b.setFrame(), _0x2db74b.setProperty();
      return _0x2db74b;
    }, ig.CallAsset.addSprite = function (_0x2e7ecc, _0x29bbdb, _0x5c2a6a, _0x14f242, _0x4e3c34) {
      var _0x125301 = '';
      if (0x1 < _0x5c2a6a.split('.').length) _0x125301 = _0x5c2a6a;else {
        if (_0x125301 = imgCache[_0x5c2a6a]) _0x125301 = _0x125301.path.img;else throw "Image is not found", _0x5c2a6a;
      }
      return _0x14f242 = _0x14f242 ? _0x14f242 : {}, _0x4e3c34 = _0x4e3c34 ? _0x4e3c34 : EntitySprite, _0x2e7ecc = ig.game.spawnEntity(_0x4e3c34, _0x2e7ecc, _0x29bbdb, _0x14f242), _0x2e7ecc.setProperties(_0x125301), _0x2e7ecc;
    }, ig.CallAsset.addFrame = function (_0x11c775, _0x194570, _0xdbdd5b, _0x41d1cd, _0x782070) {
      var _0x54d2f7 = ig.CallAsset.checkJson(_0xdbdd5b);
      if (0x2 > _0x54d2f7.length) throw "not a frame in image";
      if (_0x11c775 = ig.CallAsset.addSprite(_0x11c775, _0x194570, _0x54d2f7[0x0], _0x41d1cd, _0x782070)) _0x11c775.frameName = _0xdbdd5b, _0x11c775.setFrame(), _0x11c775.setProperty();
      return _0x11c775;
    }, ig.CallAsset.addSpriter = function (_0x17afac, _0x41a7dd, _0x23add4, _0x5cafc9, _0x2b4492) {
      if (_0x23add4 = SpriterScml.cache[spriterCache[_0x23add4].path]) return _0x5cafc9 = _0x5cafc9 ? _0x5cafc9 : {}, _0x2b4492 = _0x2b4492 ? _0x2b4492 : EntitySpriterSprite, _0x5cafc9.scml = _0x23add4, ig.game.addGroup(_0x17afac, _0x41a7dd, _0x5cafc9, _0x2b4492);
    }, ig.CallAsset.hexagonMap = function (_0xc42e9a) {
      if (!tileMapCache[_0xc42e9a]) throw "Map data does not exists : " + _0xc42e9a;
      return [];
    };
  }), ig.baked = !0x0, ig.module('plugins.addon.custom-image').defines(function () {
    ig.CustomImage = ig.Class.extend({
      'x': 0x0,
      'y': 0x0,
      'children': [],
      'groupParent': null,
      'visible': !0x0,
      'canvasPos': {
        'x': 0x0,
        'y': 0x0
      },
      'setPosition': function (_0x1d928f, _0x37cdd1) {
        this.x = _0x1d928f, this.y = _0x37cdd1;
      },
      'pos': {
        'x': 0x0,
        'y': 0x0,
        'setTo': function (_0x3c3fb2, _0xdec087) {
          this.x = _0x3c3fb2, this.y = _0xdec087;
        }
      },
      'size': {
        'x': 0x0,
        'y': 0x0
      },
      'anchor': {
        'x': 0x0,
        'y': 0x0,
        'setTo': function (_0xee7c1a, _0x291c36) {
          this.x = _0xee7c1a, this.y = 0x0 == _0x291c36 ? _0x291c36 : _0x291c36 ? _0x291c36 : this.x;
        }
      },
      'scale': {
        'x': 0x1,
        'y': 0x1,
        'setTo': function (_0x3451d6, _0x38e850) {
          this.x = _0x3451d6, this.y = 0x0 == _0x38e850 ? _0x38e850 : _0x38e850 ? _0x38e850 : this.x;
        }
      },
      '_scale': {
        'x': 0x1,
        'y': 0x1,
        'setTo': function (_0x52d29f, _0x17c2e8) {
          this.x = _0x52d29f * ig.system.scale, this.y = 0x0 == _0x17c2e8 ? _0x17c2e8 : _0x17c2e8 ? _0x17c2e8 * ig.system.scale : this.x;
        }
      },
      'lastScale': {
        'x': 0x0,
        'y': 0x0,
        'setTo': function (_0x1a9901, _0xe185e8) {
          this.x = _0x1a9901, this.y = 0x0 == _0xe185e8 ? 0x0 : _0xe185e8 ? _0xe185e8 : this.x;
        }
      },
      'inputEnabled': !0x1,
      'frameName': '',
      'alpha': 0x1,
      'currentPlay': 'idle',
      'angle': 0x0,
      '_angle': 0x0,
      'rotation': 0x0,
      '_rotation': 0x0,
      'exists': !0x0,
      'alive': !0x0,
      '_alive': !0x0,
      'data': null,
      'image': null,
      'loaded': !0x1,
      'width': 0x0,
      'height': 0x0,
      'init': function (_0x4c8013) {
        this.path = _0x4c8013;
        if (_0x4c8013 = ig.Image.cache[_0x4c8013]) this.image = _0x4c8013, this.loaded = !0x0;
      },
      'ghostMode': function () {
        this._alive = !0x1, this.ghosting();
      },
      'ghosting': function () {
        this.alive = !0x1;
        for (var _0x3ca26a = 0x0; _0x3ca26a < this.children.length; _0x3ca26a++) this.children[_0x3ca26a].ghosting();
      },
      'revive': function () {
        this._alive = this.alive = !0x0;
        for (var _0x191adf = 0x0; _0x191adf < this.children.length; _0x191adf++) {
          var _0x5d0313 = this.children[_0x191adf];
          _0x5d0313._alive && _0x5d0313.revive();
        }
      },
      'sorting': function () {
        for (var _0x130b89 = [], _0x50a44a = 0x0; _0x50a44a < this.children.length; _0x50a44a++) {
          var _0x16452f = this.children[_0x50a44a];
          _0x16452f && _0x16452f.exists && _0x130b89.push(_0x16452f);
        }
        this.children = [];
        for (_0x50a44a = 0x0; _0x50a44a < _0x130b89.length; _0x50a44a++) this.children.push(_0x130b89[_0x50a44a]);
      },
      'update': function () {
        this.sorting();
      },
      'draw': function (_0x5507b8, _0x4617aa, _0x448cf6, _0x203e00, _0x23d3b6, _0xf4b287) {
        if (this.loaded && this.visible) {
          _0x448cf6 = _0x448cf6 ? _0x448cf6 : 0x0, _0x203e00 = _0x203e00 ? _0x203e00 : 0x0, _0x23d3b6 = _0x23d3b6 ? _0x23d3b6 : this.width, _0xf4b287 = _0xf4b287 ? _0xf4b287 : this.height;
          var _0xc3e567 = 0x0,
            _0x23e21e = 0x0,
            _0x367a07 = _0x23d3b6,
            _0x5b795a = _0xf4b287,
            _0x12cdc8 = _0x23d3b6,
            _0x262acc = _0xf4b287;
          if (this.curFrameData) {
            this.curFrameData.trimmed && (_0xc3e567 = this.curFrameData.spriteSourceSize.x, _0x23e21e = this.curFrameData.spriteSourceSize.y);
            var _0x12cdc8 = this.curFrameData.frame.w,
              _0x262acc = this.curFrameData.frame.h,
              _0x367a07 = _0xc3e567 + _0x12cdc8,
              _0x2b6601 = _0x23e21e + _0x262acc,
              _0x1c2e21 = 0x0,
              _0x5b795a = 0x0;
            _0x23d3b6 < _0x367a07 && (_0x1c2e21 = _0x367a07 - _0x23d3b6), _0xf4b287 < _0x2b6601 && (_0x5b795a = _0x2b6601 - _0xf4b287), _0x367a07 = _0x12cdc8 - _0x1c2e21, _0x5b795a = _0x262acc - _0x5b795a;
            if (0x0 >= _0x367a07 || 0x0 >= _0x5b795a) return;
          }
          _0x5507b8 += _0xc3e567, _0x4617aa += _0x23e21e, ig.system.context.save(), this.image.draw(_0x5507b8, _0x4617aa, _0x448cf6, _0x203e00, _0x367a07, _0x5b795a), ig.system.context.restore(), ig.Image.drawCount++;
        }
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.addon.raw-image').requires('plugins.addon.custom-image').defines(function () {
    ig.RawImage = ig.CustomImage.extend({
      'name': "Raw Image",
      'sourceX': 0x0,
      'sourceY': 0x0,
      'spriteData': null,
      'isReady': !0x1,
      'frameName': '',
      '_frameName': '',
      'imgWidth': 0x0,
      'imgHeight': 0x0,
      'curFrameData': null,
      'drawSize': {
        'x': 0x0,
        'y': 0x0
      },
      'fullSize': {
        'x': 0x0,
        'y': 0x0
      },
      'init': function (_0x389dea, _0x241f46) {
        ig.merge(this, _0x241f46), this.imgName = '';
        for (var _0x51bf2c in imgCache) imgCache[_0x51bf2c].path.img == _0x389dea && (this.imgName = _0x51bf2c);
        this.parent(_0x389dea), this.checkProperties();
      },
      'checkProperties': function () {
        var _0x3c5894 = ig.Image.cache[this.path],
          _0x113641 = this.imgName.split('.'),
          _0x113641 = jsonCache[_0x113641[0x0]];
        if (_0x3c5894) this.width = _0x3c5894.width, this.height = _0x3c5894.height;else throw "image hasn't been loaded", this.imgName;
        _0x113641 && (this.spriteData = _0x113641), this.size.x = this.width, this.size.y = this.height, this.fullSize.x = this.size.x, this.fullSize.y = this.size.y, this.drawSize.x = this.width, this.drawSize.y = this.height;
      },
      'setFrame': function () {
        if (this.spriteData) {
          if (0x0 == this.frameName.length) this.curFrameData = null, this.sourceY = this.sourceX = 0x0, this.width = this.image.width, this.height = this.image.height, this.size.x = this.width, this.size.y = this.height, this.fullSize.x = this.size.x, this.fullSize.y = this.size.y, this.drawSize.x = this.size.x, this.drawSize.y = this.size.y;else {
            var _0x1071fe = ig.CallAsset.searchSpriteData(this.frameName);
            if (_0x1071fe) this.sourceX = _0x1071fe.frame.x, this.sourceY = _0x1071fe.frame.y, this.width = _0x1071fe.sourceSize.w, this.height = _0x1071fe.sourceSize.h, this.size.x = _0x1071fe.sourceSize.w, this.size.y = _0x1071fe.sourceSize.h, this.fullSize.x = this.size.x, this.fullSize.y = this.size.y, this.drawSize.x = this.size.x, this.drawSize.y = this.size.y, this.curFrameData = _0x1071fe;else throw "wrong frame name", this.frameName;
          }
          this._frameName = this.frameName;
        } else this.frameName = this._frameName;
      },
      'update': function () {
        this.parent(), this._frameName != this.frameName && this.setFrame();
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.addon.sprite-animation').requires('plugins.addon.raw-image').defines(function () {
    ig.SpriteAnimationSheet = ig.RawImage.extend({
      'init': function (_0x243933, _0x31e113, _0x3731bd, _0x101b2a) {
        this.parent(_0x3731bd, _0x101b2a), this.x = _0x243933, this.y = _0x31e113;
      },
      'draw': function (_0xa5d6bb, _0x399f66) {
        0x1 > this.size.x || 0x1 > this.size.y ? (this.checkProperties(), this.setFrame(), this.spriteParent.width = this.width, this.spriteParent.height = this.height, this.spriteParent.size.x = this.width, this.spriteParent.size.y = this.height) : 0x1 > this.drawSize.x || 0x1 > this.drawSize.y || (_0xa5d6bb = !isNaN(_0xa5d6bb) ? _0xa5d6bb : 0x0, _0x399f66 = !isNaN(_0x399f66) ? _0x399f66 : 0x0, this.parent(_0xa5d6bb, _0x399f66, this.sourceX, this.sourceY, this.drawSize.x, this.drawSize.y));
      }
    }), ig.SpriteAnimation = ig.Class.extend({
      'timer': null,
      'sequence': [],
      'frame': 0x0,
      'tile': 0x0,
      'loopCount': 0x0,
      'isPlaying': !0x1,
      'init': function (_0x1ab108, _0x4e9cca, _0x1acf89, _0x616149, _0x50dc91) {
        this.spriteParent = _0x50dc91, this.sheet = _0x1ab108, this.pivot = {
          'x': _0x1ab108.width / 0x2,
          'y': _0x1ab108.height / 0x2
        }, this.timer = new ig.Timer(), this.frameTime = _0x4e9cca, this.sequence = _0x1acf89, this.stop = !!_0x616149, this.tile = this.sequence[0x0], this.onComplete = new ig.AddSignal(_0x50dc91), this.onLoop = new ig.AddSignal(_0x50dc91), this.onEnterFrame = new ig.AddSignal(_0x50dc91), this.onStart = new ig.AddSignal(_0x50dc91), this.isStarting = this.isLooping = this.isComplete = !0x1, this.prevFrame = this.frame, this.isPaused = !0x1;
      },
      'setFrame': function () {
        this.sheet.frameName = this.tile, this.sheet.setFrame(), this.sheet.frameName == this.tile && (this.spriteParent.frameName = this.tile, this.spriteParent._frameName = this.spriteParent.frameName, this.spriteParent.width = this.sheet.width, this.spriteParent.height = this.sheet.height, this.spriteParent.setScale(this.spriteParent.scale.x, this.spriteParent.scale.y));
      },
      'rewind': function () {
        return this.timer.set(), this.frame = this.loopCount = 0x0, this.tile = this.sequence[0x0], this.setFrame(), this;
      },
      'gotoFrame': function (_0x561223) {
        this.timer.set(this.frameTime * -_0x561223 - 0.0001), this.update();
      },
      'gotoRandomFrame': function () {
        this.gotoFrame(Math.floor(Math.random() * this.sequence.length));
      },
      'pause': function () {
        this.isPaused = !0x0;
      },
      'resume': function () {
        this.timer = new ig.Timer(), this.isPaused = !0x1;
      },
      'update': function () {
        if (!this.isPaused) {
          var _0x29a0f8 = Math.floor(this.timer.delta() / this.frameTime);
          this.loopCount = Math.floor(_0x29a0f8 / this.sequence.length), this.frame = this.stop && 0x0 < this.loopCount ? this.sequence.length - 0x1 : _0x29a0f8 % this.sequence.length, this.tile = this.sequence[this.frame], 0x0 == this.frame && 0x0 == this.loopCount ? this.isStarting || (this.isStarting = !0x0, this.onStart.dispatch()) : this.isStarting = !0x1, 0x0 == this.frame && 0x0 < this.loopCount ? this.isLooping || (this.isLooping = !0x0, this.onLoop.dispatch()) : this.isLooping && (this.isLooping = !0x1), this.prevFrame != this.frame && (this.prevFrame = this.frame, this.setFrame(), this.onEnterFrame.dispatch()), this.stop && 0x0 < this.loopCount ? this.isComplete || (this.isComplete = !0x0, this.isPlaying = !0x1, this.onComplete.dispatch()) : this.isComplete = !0x1;
        }
      }
    }), ig.GenerateFrameNames = function (_0x25c276, _0x221c6f, _0x3e3867, _0x176920, _0x4fa8a2) {
      void 0x0 === _0x176920 && (_0x176920 = '');
      var _0x850120 = [],
        _0x2463ea = '';
      if (_0x221c6f < _0x3e3867) for (; _0x221c6f <= _0x3e3867; _0x221c6f++) {
        _0x2463ea = '';
        if ('number' === typeof _0x4fa8a2) {
          var _0x401794 = _0x221c6f.toString();
          if (_0x401794.length < _0x4fa8a2) {
            for (var _0x44f742 = _0x4fa8a2 - _0x401794.length, _0x4e9b45 = 0x0; _0x4e9b45 < _0x44f742; _0x4e9b45++) _0x2463ea += '0';
          }
          _0x2463ea += _0x401794;
        } else _0x2463ea = _0x221c6f.toString();
        _0x2463ea = _0x25c276 + _0x2463ea + _0x176920, _0x850120.push(_0x2463ea);
      } else for (; _0x221c6f >= _0x3e3867; _0x221c6f--) {
        if ('number' === typeof _0x4fa8a2) {
          _0x401794 = _0x221c6f.toString();
          if (_0x401794.length < _0x4fa8a2) {
            _0x44f742 = _0x4fa8a2 - _0x401794.length;
            for (_0x4e9b45 = 0x0; _0x4e9b45 < _0x44f742; _0x4e9b45++) _0x2463ea += '0';
          }
          _0x2463ea += _0x401794;
        } else _0x2463ea = _0x221c6f.toString();
        _0x2463ea = _0x25c276 + _0x2463ea + _0x176920, _0x850120.push(_0x2463ea);
      }
      return _0x850120;
    };
  }), ig.baked = !0x0, ig.module('plugins.splash-loader').requires('impact.loader', 'impact.animation').defines(function () {
    ig.SplashLoader = ig.Loader.extend({
      'tapToStartDivId': 'tap-to-start',
      'customResources': [new ig.Image('media/graphics/backgrounds/bg.png'), new ig.Image('media/graphics/backgrounds/clouds.png'), new ig.Image('media/graphics/sprites/ingame.png'), new ig.Image('media/graphics/sprites/bg-popup.png'), new ig.Image('media/graphics/sprites/panel-reset.png'), new ig.Image('media/graphics/sprites/bg-finish.png'), new ig.Image('media/graphics/sprites/bg-reward.png'), new ig.Image('media/graphics/sprites/title.png')],
      'loadAssets': [{
        'type': 'tmx',
        'name': 'area1',
        'path': 'media/graphics/tiles/area1.tmx'
      }, {
        'type': 'json',
        'name': 'ingame'
      }],
      'init': function (_0x10d9cb, _0x2ab3d3) {
        this.parent(_0x10d9cb, _0x2ab3d3), ig.apiHandler.run('MJSPreroll');
      },
      'end': function () {
        this._endParent = this.parent, this._drawStatus = 0x1, this.draw(), _SETTINGS.TapToStartAudioUnlock.Enabled ? this.tapToStartDiv(function () {
          this._endParent(), ('undefined' === typeof ig.game || null == ig.game) && ig.system.setGame(this.gameClass);
        }.bind(this)) : (this._endParent(), ('undefined' === typeof ig.game || null == ig.game) && ig.system.setGame(this.gameClass));
      },
      'tapToStartDiv': function (_0x562953) {
        this.desktopCoverDIV = document.getElementById(this.tapToStartDivId);
        if (!this.desktopCoverDIV) {
          this.desktopCoverDIV = document.createElement('div'), this.desktopCoverDIV.id = this.tapToStartDivId, this.desktopCoverDIV.setAttribute('class', 'play'), this.desktopCoverDIV.setAttribute('style', "position: absolute; display: block; z-index: 999999; background-color: rgba(23, 32, 53, 0.7); visibility: visible; font-size: 10vmin; text-align: center; vertical-align: middle; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;"), this.desktopCoverDIV.innerHTML = "<div style='color:white;background-color: rgba(255, 255, 255, 0.3); border: 2px solid #fff; font-size:20px; border-radius: 5px; position: relative; float: left; top: 50%; left: 50%; transform: translate(-50%, -50%);'><div style='padding:20px 50px; font-family: montserrat;'>" + _STRINGS.Splash.TapToStart + '</div></div>', (document.getElementById('play').parentNode || document.getElementById('ajaxbar')).appendChild(this.desktopCoverDIV);
          try {
            'undefined' !== typeof ig.sizeHandler ? 'undefined' !== typeof ig.sizeHandler.coreDivsToResize && (ig.sizeHandler.coreDivsToResize.push('#' + this.tapToStartDivId), 'function' === typeof ig.sizeHandler.reorient && ig.sizeHandler.reorient()) : 'undefined' !== typeof coreDivsToResize && (coreDivsToResize.push(this.tapToStartDivId), 'function' === typeof sizeHandler && sizeHandler());
          } catch (_0x4ccade) {
            console.log(_0x4ccade);
          }
          this.desktopCoverDIV.addEventListener('click', function () {
            ig.soundHandler.unlockWebAudio(), this.setAttribute('style', "visibility: hidden;"), 'function' === typeof _0x562953 && _0x562953();
          });
        }
      },
      'setupCustomAnimation': function () {
        this.animHeight = this.customAnim.height, this.animWidth = this.customAnim.width, this.customAnim = new ig.Animation(this.customAnim, 0.025, [0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7]);
      },
      'animate': function () {
        ig.Timer.step(), this.customAnim.update();
      },
      'drawCheck': 0x0,
      'draw': function () {
        this._drawStatus += (this.status - this._drawStatus) / 0x5, 0x1 === this.drawCheck && console.log("Font should be loaded before loader draw loop"), 0x2 > this.drawCheck && this.drawCheck++, ig.system.context.fillStyle = '#000', ig.system.context.fillRect(0x0, 0x0, ig.system.width, ig.system.height);
        var _0x23e7b6 = imgCache.ingame,
          _0x4542af = imgCache.bg,
          _0xd137cc = imgCache.clouds;
        if (_0x23e7b6 && _0x4542af && _0xd137cc) {
          var _0x159f9c = ig.system.context;
          _0x159f9c.save();
          var _0x5920a3 = ig.system.width,
            _0x3bcab3 = ig.system.height,
            _0x2329b6 = _0x5920a3 / 0x2,
            _0x23e7b6 = ig.Image.cache[_0x23e7b6.path.img],
            _0x4542af = ig.Image.cache[_0x4542af.path.img],
            _0x5ae9c6 = _0x5920a3 / _0x4542af.width,
            _0x419d80 = _0x3bcab3 / _0x4542af.height;
          _0x159f9c.save(), _0x159f9c.scale(_0x5ae9c6, _0x419d80), _0x4542af.draw(0x0, 0x0), _0x159f9c.restore(), _0xd137cc = ig.Image.cache[_0xd137cc.path.img], _0xd137cc.draw((_0x5920a3 - _0xd137cc.width) / 0x2, (_0x3bcab3 - _0xd137cc.height) / 0x2), _0xd137cc = ig.Image.cache[imgCache.title.path.img], _0xd137cc.draw((_0x5920a3 - _0xd137cc.width) / 0x2, 0.2 * _0x3bcab3), _0xd137cc = ig.CallAsset.searchSpriteData('ingame/ui/loading-slider-bg'), _0x4542af = _0xd137cc.frame.w, _0x3bcab3 = _0xd137cc.frame.h, _0x5920a3 = 0.8 * ig.system.height, _0x23e7b6.draw((ig.system.width - _0x4542af) / 0x2, _0x5920a3, _0xd137cc.frame.x, _0xd137cc.frame.y, _0x4542af, _0x3bcab3), _0xd137cc = ig.CallAsset.searchSpriteData('ingame/ui/loading-slider'), _0x4542af = _0xd137cc.frame.w, _0x5ae9c6 = _0xd137cc.frame.h, _0x23e7b6.draw((ig.system.width - _0x4542af) / 0x2, _0x5920a3 + (_0x3bcab3 - _0x5ae9c6) / 0x2, _0xd137cc.frame.x, _0xd137cc.frame.y, _0x4542af * this._drawStatus, _0x5ae9c6), _0x23e7b6 = _STRINGS.Splash.Loading, 0.9 <= this._drawStatus && (_0x23e7b6 = _STRINGS.Splash.LoadImages), _0x5920a3 -= 0x14, _0x159f9c.font = "60px " + fonts.font1, _0x159f9c.textAlign = 'center', _0x159f9c.fillStyle = 'white', _0x159f9c.lineWidth = 0x3, _0x159f9c.strokeStyle = 'black', _0x159f9c.strokeText(_0x23e7b6, _0x2329b6, _0x5920a3), _0x159f9c.fillText(_0x23e7b6, _0x2329b6, _0x5920a3), _0x159f9c.restore(), this.drawVersion();
        }
      },
      'drawVersion': function () {
        if ('undefined' !== typeof _SETTINGS.Versioning && null !== _SETTINGS.Versioning && _SETTINGS.Versioning.DrawVersion) {
          var _0x51e83d = ig.system.context;
          fontSize = _SETTINGS.Versioning.FontSize, fontFamily = _SETTINGS.Versioning.FontFamily, fillStyle = _SETTINGS.Versioning.FillStyle, _0x51e83d.save(), _0x51e83d.textBaseline = 'bottom', _0x51e83d.textAlign = 'left', _0x51e83d.font = fontSize + " " + fontFamily || "10px Arial", _0x51e83d.fillStyle = fillStyle || '#ffffff', _0x51e83d.fillText('v' + _SETTINGS.Versioning.Version + '+build.' + _SETTINGS.Versioning.Build, 0xa, ig.system.height - 0xa), _0x51e83d.restore();
        }
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.addon.custom-splashloader').requires('plugins.splash-loader').defines(function () {
    ig.SplashLoader.inject({
      '_unloadedAtlas': [],
      '_unloadedCustomResources': [],
      '_unloadedExtraCanvas': [],
      'unloadedExtraCanvas': [],
      'isExists': !0x0,
      'load': function () {
        ig.system.clear('#000');
        if (!this.resources.length && !this.loadAssets.length && !this.customResources.length) this.end();else {
          if (this.customResources.length) {
            for (var _0x142308 = 0x0; _0x142308 < this.customResources.length; _0x142308++) this._unloadedCustomResources.push(this.customResources[_0x142308].path);
          }
          if (this.loadAssets.length) for (_0x142308 = 0x0; _0x142308 < this.loadAssets.length; _0x142308++) {
            var _0x377c0c = this.loadAssets[_0x142308];
            _0x377c0c.loaded = !0x1, this._unloadedAtlas.push(_0x377c0c);
          }
          ig.TileController.prepareTileCache();
          for (var _0x3ce616 in tileImgCache) this._unloadedExtraCanvas.push(_0x3ce616), this.unloadedExtraCanvas.push(_0x3ce616);
          for (_0x3ce616 in processorImgCache) this._unloadedExtraCanvas.push(_0x3ce616), this.unloadedExtraCanvas.push(_0x3ce616);
          for (_0x3ce616 in resourceImgCache) this._unloadedExtraCanvas.push(_0x3ce616), this.unloadedExtraCanvas.push(_0x3ce616);
          this.resources.length || (this.customResources.length ? this.loadCustomResource() : this.loadingAssets());
          for (_0x142308 = 0x0; _0x142308 < this.resources.length; _0x142308++) this.loadResource(this.resources[_0x142308]);
          this._intervalId = setInterval(this.draw.bind(this), 0x10);
        }
      },
      '_loadCallback': function (_0x160bc3, _0x156641) {
        if (_0x156641) this._unloaded.erase(_0x160bc3);else throw "Failed to load resource: " + _0x160bc3;
        this.status = 0x1 - (this._unloaded.length + this._unloadedAtlas.length + this._unloadedCustomResources.length) / (this.resources.length + this.loadAssets.length + this.customResources.length), 0x0 == this._unloaded.length && (this.customResources.length ? this.loadCustomResource() : this.loadAssets.length ? this.loadingAssets() : setTimeout(this.end.bind(this), 0xfa));
      },
      'loadCustomResource': function () {
        for (var _0x50e922 = 0x0; _0x50e922 < this.customResources.length; _0x50e922++) this.customResources[_0x50e922].load(this._loadCustomCallback.bind(this));
      },
      '_loadCustomCallback': function (_0x307552, _0x3da526) {
        if (_0x3da526) this.storeImgPathFromResources(_0x307552), this._unloadedCustomResources.erase(_0x307552);else throw "Failed to load resource: " + _0x307552;
        this.status = 0x1 - (this._unloaded.length + this._unloadedAtlas.length + this._unloadedCustomResources.length) / (this.resources.length + this.loadAssets.length + this.customResources.length), 0x0 == this._unloadedCustomResources.length && (this.loadAssets.length ? this.loadingAssets() : setTimeout(this.end.bind(this), 0xfa));
      },
      'storeImgPathFromResources': function (_0x30e5d5) {
        for (var _0x506667 = _0x30e5d5.split('.'), _0x4c9952 = '', _0x554b5a = 0x0; _0x554b5a < _0x506667.length - 0x1; _0x554b5a++) _0x4c9952 += _0x506667[_0x554b5a];
        _0x4c9952 = _0x4c9952.split('/'), _0x4c9952 = _0x4c9952[_0x4c9952.length - 0x1], imgCache[_0x4c9952] || (imgCache[_0x4c9952] = {
          'path': {
            'img': '',
            'json': ''
          }
        }), _0x554b5a = _0x506667[_0x506667.length - 0x1], 'png' == _0x554b5a || 'PNG' == _0x554b5a || 'jpg' == _0x554b5a || 'JPG' == _0x554b5a ? imgCache[_0x4c9952].path.img = _0x30e5d5 : 'scml' == _0x554b5a ? spriterCache[_0x4c9952] ? spriterCache[_0x4c9952].path = _0x30e5d5 : spriterCache[_0x4c9952] = {
          'path': _0x30e5d5
        } : imgCache[_0x4c9952].path[_0x506667[_0x506667.length - 0x1]] = _0x30e5d5;
      },
      'loadingAssets': function () {
        for (var _0x542fcf = 0x0; _0x542fcf < this.loadAssets.length; _0x542fcf++) {
          var _0x1d2ee8 = this.loadAssets[_0x542fcf],
            _0x237c02 = null;
          'image' == _0x1d2ee8.type ? _0x237c02 = this.imgLoaded.bind(this) : 'json' == _0x1d2ee8.type ? (_0x1d2ee8.path = '', _0x237c02 = this.jsonLoaded.bind(this)) : 'scml' == _0x1d2ee8.type ? _0x237c02 = this.spriterLoaded.bind(this) : 'tmx' == _0x1d2ee8.type && (_0x237c02 = this.tmxLoaded.bind(this)), ig.Asset[_0x1d2ee8.type](_0x1d2ee8.name, _0x1d2ee8.path, _0x237c02), console.log(_0x1d2ee8.type);
        }
        this.loadAssets.length || setTimeout(this.end.bind(this), 0xfa);
      },
      'spriterLoaded': function (_0x4b80a9, _0x10e39d) {
        if (_0x10e39d) for (var _0x32c216 = 0x0; _0x32c216 < this._unloadedAtlas.length; _0x32c216++) {
          var _0x4befd5 = this._unloadedAtlas[_0x32c216];
          _0x4befd5.path == _0x4b80a9 && 'scml' == _0x4befd5.type && (this._unloadedAtlas[_0x32c216].loaded = !0x0);
        } else throw "Failed to load scml: " + _0x4b80a9;
        this.checkUnloadedAtlas();
      },
      'jsonLoaded': function (_0xf21ee6, _0x557719) {
        if (_0xf21ee6) {
          for (var _0xae6fb = 0x0; _0xae6fb < this._unloadedAtlas.length; _0xae6fb++) _0xf21ee6 = this._unloadedAtlas[_0xae6fb], _0xf21ee6.name == _0x557719 && 'json' == _0xf21ee6.type && (this._unloadedAtlas[_0xae6fb].loaded = !0x0);
          console.log("Json Loaded");
        } else throw "Failed to load atlas: " + _0x557719;
        this.checkUnloadedAtlas();
      },
      'imgLoaded': function (_0x19ccba, _0x4b6845) {
        if (_0x4b6845) for (var _0xb85a5a = 0x0; _0xb85a5a < this._unloadedAtlas.length; _0xb85a5a++) {
          var _0x471be0 = this._unloadedAtlas[_0xb85a5a];
          _0x471be0.path == _0x19ccba && 'image' == _0x471be0.type && (this._unloadedAtlas[_0xb85a5a].loaded = !0x0);
        } else throw "Failed to load image: " + _0x19ccba;
        this.checkUnloadedAtlas();
      },
      'tmxLoaded': function (_0x5713e6, _0x5ffc) {
        if (_0x5ffc) for (var _0x8b07fd = 0x0; _0x8b07fd < this._unloadedAtlas.length; _0x8b07fd++) {
          var _0x351cd2 = this._unloadedAtlas[_0x8b07fd];
          _0x351cd2.path == _0x5713e6 && 'tmx' == _0x351cd2.type && (this._unloadedAtlas[_0x8b07fd].loaded = !0x0);
        } else throw "Failed to load tmx file: " + _0x5713e6;
        this.checkUnloadedAtlas();
      },
      'checkUnloadedAtlas': function () {
        for (var _0x58c9e5 = 0x0, _0x42d002 = 0x0; _0x42d002 < this._unloadedAtlas.length; _0x42d002++) this._unloadedAtlas[_0x42d002].loaded && _0x58c9e5++;
        this.status = 0x1 - (this._unloaded.length + (this._unloadedAtlas.length - _0x58c9e5) + this._unloadedCustomResources.length + this._unloadedExtraCanvas.length) / (this.resources.length + this.loadAssets.length + this.customResources.length + this.unloadedExtraCanvas.length), _0x58c9e5 == this.loadAssets.length && this.loadTileCanvas();
      },
      'loadTileCanvas': function () {
        ig.TileController.createTileCache(this.tileLoaded.bind(this));
      },
      'tileLoaded': function (_0x3c4169, _0x4e360e) {
        0x9 <= _0x4e360e && this._unloadedExtraCanvas.erase(_0x3c4169);
        var _0x2022b3 = 0x0;
        for (_0x3c4169 in tileImgCache) _0x2022b3++;
        var _0x1b761b = this.unloadedExtraCanvas.length - this._unloadedExtraCanvas.length;
        this.status = 0x1 - (this._unloaded.length + this._unloadedCustomResources.length + this._unloadedExtraCanvas.length) / (this.resources.length + this.loadAssets.length + this.customResources.length + this.unloadedExtraCanvas.length), _0x1b761b == _0x2022b3 && this.loadFactoryCanvas();
      },
      'loadFactoryCanvas': function () {
        ig.TileController.createFactoryImgCache(this.factoryLoaded.bind(this));
      },
      'factoryLoaded': function (_0x4a398d) {
        this._unloadedExtraCanvas.erase(_0x4a398d), this.status = 0x1 - (this._unloaded.length + this._unloadedCustomResources.length + this._unloadedExtraCanvas.length) / (this.resources.length + this.loadAssets.length + this.customResources.length + this.unloadedExtraCanvas.length), 0x0 == this._unloadedExtraCanvas.length && setTimeout(this.end.bind(this), 0xfa);
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.addon.entity-debug').defines(function () {
    ig.EntityDebug = ig.Class.extend({
      'colors': {
        'names': '#fff',
        'velocities': '#0f0',
        'boxes': '#f00'
      },
      'drawDebugBoxes': function () {
        if (ig.game.entities.length) {
          var _0x44ac9d = ig.system.context;
          _0x44ac9d.save(), _0x44ac9d.strokeStyle = this.colors.boxes, _0x44ac9d.lineWidth = 0x1, ig.game.getEntitiesByType(EntityGroup);
          for (var _0x26f839 = 0x0; _0x26f839 < ig.game.entities.length; _0x26f839++) {
            var _0x16c8bc = ig.game.entities[_0x26f839];
            _0x16c8bc instanceof EntityGroup || _0x44ac9d.strokeRect(ig.system.getDrawPos(_0x16c8bc.pos.x.round()) - 0.5, ig.system.getDrawPos(_0x16c8bc.pos.y.round()) - 0.5, _0x16c8bc.size.x * ig.system.scale, _0x16c8bc.size.y * ig.system.scale);
          }
          _0x44ac9d.restore();
        }
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.addon.text-plugin').defines(function () {
    ig.TextPlugin = ig.Class.extend({
      'textSettings': {
        'fontSize': 0x14,
        'fontType': 'Arial',
        'wordWrap': !0x1,
        'wordWrapWidth': 0x64,
        'letterSpacing': 0x0,
        'lineSpacing': 0x0,
        'separator': " ",
        'align': 'left',
        'fill': 'black',
        'miterLimit': 0x2,
        'strokeStyle': 'black',
        'strokeThickness': 0x3,
        'stroke': !0x1
      },
      'init': function (_0x12929e) {
        this.setTextSettings(_0x12929e);
      },
      'setTextSettings': function (_0x1d5881) {
        ig.merge(this.textSettings, _0x1d5881);
      },
      'getDimension': function (_0x560808, _0x63a682) {
        var _0x389084 = this.textSettings;
        _0x63a682 = _0x63a682 ? _0x63a682 : ig.system.context;
        var _0x4373a3 = _0x389084.fontSize,
          _0x5bf157 = _0x4373a3 + "px " + _0x389084.fontType;
        _0x63a682.save(), _0x63a682.font = _0x5bf157;
        for (var _0x4373a3 = _0x560808.length * _0x4373a3 + (_0x560808.length - 0x1) * _0x389084.lineSpacing, _0x3c7784 = _0x5bf157 = 0x0; _0x3c7784 < _0x560808.length; _0x3c7784++) {
          var _0x39a01d = _0x560808[_0x3c7784],
            _0x39a01d = _0x63a682.measureText(_0x39a01d).width + (_0x39a01d.length - 0x1) * _0x389084.letterSpacing;
          _0x39a01d > _0x5bf157 && (_0x5bf157 = _0x39a01d);
        }
        return _0x63a682.restore(), {
          'width': _0x5bf157,
          'height': _0x4373a3
        };
      },
      'wordWrapText': function (_0x5fee2a, _0x2e84e6) {
        var _0x2b252d = this.textSettings,
          _0x5aa120 = '';
        try {
          var _0x1a0195 = _0x5fee2a.split("\n");
        } catch (_0x137cf8) {
          throw "text not detected";
        }
        if (!this.textSettings.wordWrap) return _0x5fee2a.split("\n");
        _0x2e84e6 = _0x2e84e6 ? _0x2e84e6 : ig.system.context;
        var _0x46c15c = _0x2b252d.fontSize + "px " + _0x2b252d.fontType;
        _0x2e84e6.save(), _0x2e84e6.font = _0x46c15c;
        for (_0x46c15c = 0x0; _0x46c15c < _0x1a0195.length; _0x46c15c++) {
          for (var _0x1025e1 = _0x1a0195[_0x46c15c].split(_0x2b252d.separator), _0x3c6f71 = 0x0, _0x2a08e9 = 0x0; _0x2a08e9 < _0x1025e1.length; _0x2a08e9++) {
            var _0x3753de = _0x1025e1[_0x2a08e9],
              _0x5ef942 = '';
            0x0 < _0x2a08e9 && (_0x5ef942 = _0x2b252d.separator);
            var _0x5ef942 = _0x5ef942 + _0x3753de,
              _0x54073c = _0x2e84e6.measureText(_0x5ef942).width,
              _0x54073c = _0x3c6f71 + _0x54073c + (_0x5ef942.length - 0x1) * _0x2b252d.letterSpacing;
            _0x54073c >= _0x2b252d.wordWrapWidth && 0x0 < _0x3c6f71 ? (_0x5ef942 = "\n" + _0x3753de, _0x3c6f71 = _0x2e84e6.measureText(_0x3753de).width) : _0x3c6f71 = _0x54073c, _0x5aa120 += _0x5ef942;
          }
          _0x46c15c < _0x1a0195.length - 0x1 && (_0x5aa120 += "\n");
        }
        return _0x2e84e6.restore(), _0x5aa120.split("\n");
      },
      'drawWrappedText': function (_0x361909, _0x2b5bc3, _0x3577bd, _0x2d6616) {
        var _0x333348 = this.textSettings;
        _0x2d6616 = _0x2d6616 ? _0x2d6616 : ig.system.context, _0x2d6616.save(), _0x2d6616.font = _0x333348.fontSize + "px " + _0x333348.fontType, _0x2d6616.fillStyle = _0x333348.fill, _0x2d6616.textBaseline = 'alphabetic', _0x2d6616.textAlign = 'left', _0x2d6616.miterLimit = _0x333348.miterLimit, _0x333348.stroke && (_0x2d6616.lineWidth = _0x333348.strokeThickness, _0x2d6616.strokeStyle = _0x333348.strokeStyle, this.drawStroke(_0x361909, _0x2b5bc3, _0x3577bd, _0x2d6616)), this.drawText(_0x361909, _0x2b5bc3, _0x3577bd, _0x2d6616), _0x2d6616.restore();
      },
      'drawStroke': function (_0x2b2c02, _0x5e4ab9, _0x5645ac, _0x229617) {
        for (var _0x53476f = this.textSettings, _0x25a10a = _0x53476f.fontSize, _0x706819 = 0x0; _0x706819 < _0x2b2c02.length; _0x706819++) {
          var _0x13ffba = _0x2b2c02[_0x706819],
            _0x4019f5 = _0x13ffba.length,
            _0x46854d = _0x53476f.fontSize + _0x53476f.lineSpacing,
            _0x564760 = _0x229617.measureText(_0x13ffba).width + (_0x4019f5 - 0x1) * _0x53476f.letterSpacing,
            _0x46854d = _0x5645ac + 0.8 * _0x25a10a + _0x706819 * _0x46854d,
            _0x278e7c = 0x0;
          if ('left' == _0x53476f.align || 'center' == _0x53476f.align) for (var _0x5303ab = 0x0; _0x5303ab < _0x4019f5; _0x5303ab++) {
            var _0x2d01c7 = _0x13ffba[_0x5303ab],
              _0xcbcf95 = _0x229617.measureText(_0x2d01c7).width,
              _0x144c35 = _0xcbcf95 + _0x53476f.letterSpacing,
              _0xcbcf95 = _0x5e4ab9 + _0x278e7c;
            'center' == _0x53476f.align && (_0xcbcf95 = _0x5e4ab9 - _0x564760 / 0x2 + _0x278e7c), _0x229617.strokeText(_0x2d01c7, _0xcbcf95, _0x46854d), _0x278e7c += _0x144c35;
          } else {
            if ('right' == _0x53476f.align) {
              for (_0x5303ab = _0x4019f5 - 0x1; 0x0 <= _0x5303ab; _0x5303ab--) _0x2d01c7 = _0x13ffba[_0x5303ab], _0xcbcf95 = _0x229617.measureText(_0x2d01c7).width, _0x144c35 = _0xcbcf95 + _0x53476f.letterSpacing, _0xcbcf95 = _0x5e4ab9 - _0x278e7c - _0xcbcf95, _0x229617.strokeText(_0x2d01c7, _0xcbcf95, _0x46854d), _0x278e7c += _0x144c35;
            }
          }
        }
      },
      'drawText': function (_0x6a454c, _0x56ed2a, _0x50be2b, _0x2ee6ee) {
        for (var _0x53202a = this.textSettings, _0x58315a = _0x53202a.fontSize, _0x59a077 = 0x0; _0x59a077 < _0x6a454c.length; _0x59a077++) {
          var _0x3cedec = _0x6a454c[_0x59a077],
            _0x2ad956 = _0x3cedec.length,
            _0x43fb10 = _0x53202a.fontSize + _0x53202a.lineSpacing,
            _0x819213 = _0x2ee6ee.measureText(_0x3cedec).width + (_0x2ad956 - 0x1) * _0x53202a.letterSpacing,
            _0x43fb10 = _0x50be2b + 0.8 * _0x58315a + _0x59a077 * _0x43fb10,
            _0x1b4df7 = 0x0;
          if ('left' == _0x53202a.align || 'center' == _0x53202a.align) for (var _0x142642 = 0x0; _0x142642 < _0x2ad956; _0x142642++) {
            var _0x585dbf = _0x3cedec[_0x142642],
              _0x5964ab = _0x2ee6ee.measureText(_0x585dbf).width,
              _0x101b4f = _0x5964ab + _0x53202a.letterSpacing,
              _0x5964ab = _0x56ed2a + _0x1b4df7;
            'center' == _0x53202a.align && (_0x5964ab = _0x56ed2a - _0x819213 / 0x2 + _0x1b4df7), _0x2ee6ee.fillText(_0x585dbf, _0x5964ab, _0x43fb10), _0x1b4df7 += _0x101b4f;
          } else {
            if ('right' == _0x53202a.align) {
              for (_0x142642 = _0x2ad956 - 0x1; 0x0 <= _0x142642; _0x142642--) _0x585dbf = _0x3cedec[_0x142642], _0x5964ab = _0x2ee6ee.measureText(_0x585dbf).width, _0x101b4f = _0x5964ab + _0x53202a.letterSpacing, _0x5964ab = _0x56ed2a - _0x1b4df7 - _0x5964ab, _0x2ee6ee.fillText(_0x585dbf, _0x5964ab, _0x43fb10), _0x1b4df7 += _0x101b4f;
            }
          }
        }
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.addon.custom-entity').requires('impact.entity').defines(function () {
    EntityPos = ig.Class.extend({
      'x': 0x0,
      'y': 0x0,
      'init': function (_0x53b91c) {
        this.parentObj = _0x53b91c, this.x = _0x53b91c.x, this.y = _0x53b91c.y;
      },
      'setTo': function (_0x575c59, _0xfb6cd7) {
        this.x = _0x575c59 ? _0x575c59 : this.x, this.y = _0xfb6cd7 ? _0xfb6cd7 : this.y, this.parentObj.x = this.x, this.parentObj.y = this.y;
      }
    }), EntityCustomEntity = ig.Entity.extend({
      'name': 'Entity',
      'exists': !0x0,
      'alive': !0x0,
      '_alive': !0x0,
      'visible': !0x0,
      '_visible': !0x0,
      'zIndex': -0x1,
      'isResponsive': !0x0,
      'useCustomEntity': !0x0,
      'x': 0x0,
      'y': 0x0,
      'canvasPos': {
        'x': 0x0,
        'y': 0x0
      },
      'setPosition': function (_0x5194ae, _0x12a52e) {
        this.x = _0x5194ae ? _0x5194ae : this.x, this.y = _0x12a52e ? _0x12a52e : this.x;
      },
      'children': [],
      'groupParent': null,
      'anchor': {
        'x': 0x0,
        'y': 0x0,
        'setTo': function (_0x2ad13c, _0x2c5d1f) {
          this.x = _0x2ad13c, this.y = 0x0 == _0x2c5d1f ? 0x0 : _0x2c5d1f ? _0x2c5d1f : this.x;
        }
      },
      'scale': {
        'x': 0x1,
        'y': 0x1,
        'setTo': function (_0x2bfdcc, _0x4fb2b7) {
          this.x = _0x2bfdcc, this.y = 0x0 == _0x4fb2b7 ? 0x0 : _0x4fb2b7 ? _0x4fb2b7 : this.x;
        }
      },
      '_scale': {
        'x': 0x1,
        'y': 0x1,
        'setTo': function (_0x464cde, _0x1ff0c2) {
          this.x = Math.abs(_0x464cde) * ig.system.scale, this.y = 0x0 == _0x1ff0c2 ? 0x0 : _0x1ff0c2 ? Math.abs(_0x1ff0c2) * ig.system.scale : this.x;
        }
      },
      'inputEnabled': !0x1,
      'frameName': '',
      'alpha': 0x1,
      'currentPlay': 'idle',
      'width': 0x0,
      'height': 0x0,
      'angle': 0x0,
      '_angle': 0x0,
      'rotation': 0x0,
      '_rotation': 0x0,
      'isClicked': !0x1,
      'lastScale': {
        'x': 0x0,
        'y': 0x0,
        'setTo': function (_0x24aff0, _0x44dfc5) {
          this.x = _0x24aff0, this.y = 0x0 == _0x44dfc5 ? 0x0 : _0x44dfc5 ? _0x44dfc5 : this.x;
        }
      },
      'gravityFactor': 0x0,
      'forseenVisible': !0x1,
      'isCameraLock': !0x1,
      'init': function (_0x57ef24, _0x17836d, _0x332f3c) {
        this.parent(_0x57ef24, _0x17836d, _0x332f3c), this.position = new EntityPos(this);
      },
      'setProperty': function () {},
      'setRotation': function (_0x3c6e71) {
        this._rotation = _0x3c6e71, this.angle = this.rotation.toDeg();
      },
      'setAngle': function (_0x1830eb) {
        this._angle = _0x1830eb, this.rotation = this.angle.toRad();
      },
      'getBounds': function (_0x4b3559, _0x22ee1d, _0x22c985, _0x1f0618) {
        for (var _0x137212 = 0x0; _0x137212 < this.children.length; _0x137212++) {
          var _0x971b21 = this.children[_0x137212];
          _0x971b21 && _0x971b21.exists && _0x971b21.getBounds && (_0x971b21 = _0x971b21.getBounds(), null == _0x4b3559 ? _0x4b3559 = _0x971b21.x : _0x971b21.x < _0x4b3559 && (_0x4b3559 = _0x971b21.x), null == _0x22ee1d ? _0x22ee1d = _0x971b21.right : _0x971b21.right > _0x22ee1d && (_0x22ee1d = _0x971b21.right), null == _0x22c985 ? _0x22c985 = _0x971b21.y : _0x971b21.y < _0x22c985 && (_0x22c985 = _0x971b21.y), null == _0x1f0618 ? _0x1f0618 = _0x971b21.bottom : _0x971b21.bottom > _0x1f0618 && (_0x1f0618 = _0x971b21.bottom));
        }
        return ig.game.geom.rectangle(_0x4b3559, _0x22c985, _0x22ee1d - _0x4b3559, _0x1f0618 - _0x22c985);
      },
      'toLocal': function (_0x218df9, _0x158794) {
        return new Vector2(_0x218df9 - this.pos.x, _0x158794 - this.pos.y);
      },
      'toGlobal': function (_0x269abc, _0xa7235) {
        return ig.World.parentPos(this, _0x269abc, _0xa7235);
      },
      'updateOtherEntities': function () {
        if (!(!this instanceof ig.Entity)) for (var _0x5a6b9c = ig.game.entities.indexOf(this), _0x3956eb = 0x0; _0x3956eb < _0x5a6b9c; _0x3956eb++) {
          var _0x3cb936 = ig.game.entities[_0x3956eb],
            _0x586e33 = ig.game.checkedOtherEntities.indexOf(_0x3cb936);
          !_0x3cb936.useCustomEntity && 0x0 > _0x586e33 && (_0x3cb936.update(), ig.game.checkedOtherEntities.push(_0x3cb936));
        }
      },
      'drawOtherEntities': function () {
        if (!(!this instanceof ig.Entity)) {
          var _0x3201de = ig.system.context;
          _0x3201de.save(), _0x3201de.setTransform(0x1, 0x0, 0x0, 0x1, 0x0, 0x0);
          for (var _0xe89b7f = ig.game.entities.indexOf(this), _0x5d8fd4 = 0x0; _0x5d8fd4 < _0xe89b7f; _0x5d8fd4++) {
            var _0x1132a9 = ig.game.entities[_0x5d8fd4],
              _0x5f4ab5 = ig.game.drawedOtherEntities.indexOf(_0x1132a9);
            !_0x1132a9.useCustomEntity && 0x0 > _0x5f4ab5 && (_0x1132a9.draw(), ig.game.drawedOtherEntities.push(_0x1132a9));
          }
          _0x3201de.restore();
        }
      },
      'updateChildren': function () {
        for (var _0x4c06b9 = 0x0; _0x4c06b9 < this.children.length; _0x4c06b9++) {
          var _0x17f66e = this.children[_0x4c06b9];
          _0x17f66e && _0x17f66e.exists && _0x17f66e.alive && _0x17f66e.update && _0x17f66e.update();
        }
        this.visible != this._visible && (this._visible = this.visible);
      },
      'drawChildren': function () {
        for (var _0x10cead = 0x0; _0x10cead < this.children.length; _0x10cead++) {
          var _0x3411e3 = this.children[_0x10cead];
          _0x3411e3 && _0x3411e3.exists && _0x3411e3.alive && _0x3411e3.draw && _0x3411e3.draw();
        }
      },
      'ghostMode': function () {
        this._alive = !0x1, this.ghosting();
      },
      'ghosting': function () {
        this.alive = !0x1;
        for (var _0xbc7f75 = 0x0; _0xbc7f75 < this.children.length; _0xbc7f75++) this.children[_0xbc7f75].ghosting();
      },
      'revive': function () {
        this._alive = this.alive = !0x0;
        for (var _0x259775 = 0x0; _0x259775 < this.children.length; _0x259775++) {
          var _0x2746cf = this.children[_0x259775];
          _0x2746cf._alive && _0x2746cf.revive();
        }
      },
      'sorting': function () {
        for (var _0x588557 = [], _0x50cd4d = 0x0; _0x50cd4d < this.children.length; _0x50cd4d++) {
          var _0x938790 = this.children[_0x50cd4d];
          _0x938790 && _0x938790.exists && _0x588557.push(_0x938790);
        }
        this.children = [];
        for (_0x50cd4d = 0x0; _0x50cd4d < _0x588557.length; _0x50cd4d++) this.children.push(_0x588557[_0x50cd4d]);
      },
      'kill': function () {
        this.exists = !0x1;
        for (var _0x2b9bf9 = 0x0; _0x2b9bf9 < this.children.length; _0x2b9bf9++) this.children[_0x2b9bf9].kill();
        ig.game.checkZIndexGroups(), this.clearContext(), this.parent();
      },
      'clearContext': function () {
        var _0x169336 = ig.system.context;
        _0x169336.save(), _0x169336.clearRect(this.pos.x, this.pos.y, this.width, this.height), _0x169336.restore();
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.addon.custom-animation').requires('impact.animation', 'plugins.addon.raw-image', 'plugins.addon.add-signal').defines(function () {
    ig.CustomAnimSheet = ig.AnimationSheet.extend({
      'init': function (_0x2ab689, _0x12df68, _0x5d4c14) {
        this.image = new ig.RawImage(_0x2ab689), this.width = _0x12df68 ? _0x12df68 : this.image.size.x, this.height = _0x5d4c14 ? _0x5d4c14 : this.image.size.y;
      }
    }), ig.CustomAnimation = ig.Animation.extend({
      'init': function (_0x275ee8, _0x3ac641, _0x2bccab, _0x3c78ce, _0x7655a7) {
        this.parent(_0x275ee8, _0x3ac641, _0x2bccab, _0x3c78ce), this.onComplete = new ig.AddSignal(_0x7655a7), this.onLoop = new ig.AddSignal(_0x7655a7), this.onEnterFrame = new ig.AddSignal(_0x7655a7), this.onStart = new ig.AddSignal(_0x7655a7), this.isStarting = this.isLooping = this.isComplete = !0x1, this.prevFrame = this.frame, this.isPaused = !0x1;
      },
      'update': function () {
        this.isPaused || (this.parent(), this.sheet.image.update(), 0x0 == this.frame && 0x0 == this.loopCount ? this.isStarting || (this.isStarting = !0x0, this.onStart.dispatch()) : this.isStarting = !0x1, 0x0 == this.frame && 0x0 < this.loopCount ? this.isLooping || (this.isLooping = !0x0, this.onLoop.dispatch()) : this.isLooping && (this.isLooping = !0x1), this.prevFrame != this.frame && (this.prevFrame = this.frame, this.onEnterFrame.dispatch()), this.stop && 0x0 < this.loopCount ? this.isComplete || (this.isComplete = !0x0, this.onComplete.dispatch()) : this.isComplete = !0x1);
      },
      'draw': function (_0x171cb2, _0x5e286e) {
        var _0x50c2aa = Math.max(this.sheet.width, this.sheet.height);
        _0x171cb2 > ig.system.width || _0x5e286e > ig.system.height || 0x0 > _0x171cb2 + _0x50c2aa || 0x0 > _0x5e286e + _0x50c2aa || 0x1 > this.sheet.width || 0x1 > this.sheet.height || this.sheet.image.drawTile(_0x171cb2, _0x5e286e, this.tile, this.sheet.width, this.sheet.height, this.flip.x, this.flip.y);
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.addon.sprite').requires('game.entities.addon.custom-entity', 'plugins.addon.raw-image', 'plugins.addon.custom-animation', 'plugins.addon.sprite-animation', 'plugins.addon.add-signal').defines(function () {
    EntitySprite = EntityCustomEntity.extend({
      'name': 'Sprite',
      'type': ig.Entity.TYPE.A,
      'setAnimSheet': {},
      'setAnims': {},
      'typeSprite': 0x0,
      'init': function (_0x362f59, _0xfef52b, _0x154543) {
        this.x = _0x362f59, this.y = _0xfef52b, this.onClick = new ig.AddSignal(this), this.onRelease = new ig.AddSignal(this), this.parent(_0x362f59, _0xfef52b, _0x154543);
      },
      'setProperties': function (_0x342ca5) {
        this._frameName = this.frameName = '', this.anims = {}, this.currentAnim = null, this.imgName = '';
        for (var _0x5b5e9b in imgCache) imgCache[_0x5b5e9b].path.img == _0x342ca5 && (this.imgName = _0x5b5e9b);
        this.path = _0x342ca5, this.animSheet = ig.CallAsset.addImage(0x0, 0x0, this.imgName, {
          'spriteParent': this
        }, 'ig.SpriteAnimationSheet'), this.width = this.animSheet.width, this.height = this.animSheet.height, this.size.x = this.width, this.size.y = this.height;
      },
      'addAnim': function (_0x56b532, _0x22bb64, _0x5b40f1, _0x3b070d) {
        if (!this.animSheet) throw "No animSheet to add the animation " + _0x56b532 + " to.";
        return _0x22bb64 = new ig.SpriteAnimation(this.animSheet, _0x22bb64, _0x5b40f1, _0x3b070d, this), this.anims[_0x56b532] = _0x22bb64;
      },
      'playAnim': function (_0x305a2f) {
        var _0x50e246 = this.anims[_0x305a2f];
        _0x50e246 && (this.currentPlay = _0x305a2f, this.currentAnim = _0x50e246, this.currentAnim.isPlaying = !0x0, this.currentAnim.rewind());
      },
      'stopAnim': function (_0x597d99) {
        if (_0x597d99 = this.anims[_0x597d99]) this.currentAnim.isPlaying = !0x1, this.currentPlay = '', this.currentAnim = null, _0x597d99.rewind();
      },
      'addChild': function (_0x489f67) {
        _0x489f67.groupParent = this, this.children.push(_0x489f67), ig.game.checkZIndexGroups(), _0x489f67.setProperty && _0x489f67.setProperty();
      },
      'removeChild': function (_0x3ccd27) {
        var _0x1a0ac0 = this.children.indexOf(_0x3ccd27);
        this.children.splice(_0x1a0ac0, 0x1), _0x3ccd27.zIndex = -0x1, _0x3ccd27.groupParent = null, ig.game.checkZIndexGroups();
      },
      'setScale': function (_0x5d955b, _0x1fab84) {
        this.scale.setTo(_0x5d955b, _0x1fab84), this.lastScale.setTo(_0x5d955b, _0x1fab84), this._scale.setTo(Math.abs(_0x5d955b), Math.abs(_0x1fab84));
      },
      'getBounds': function () {
        var _0xd59499 = ig.game.geom.rectangle(this.pos.x, this.pos.y, this.size.x, this.size.y);
        return this.parent(_0xd59499.x, _0xd59499.right, _0xd59499.y, _0xd59499.bottom);
      },
      'setProperty': function () {
        var _0x3563ab = this.width,
          _0x54bee1 = this.height,
          _0x30bf75 = -(_0x3563ab * this.anchor.x),
          _0x2b21c3 = -(_0x54bee1 * this.anchor.y),
          _0x2aee5a = ig.game.screen.x,
          _0x181f91 = ig.game.screen.y;
        this.isCameraLock && (_0x181f91 = _0x2aee5a = 0x0), _0x54bee1 = ig.game.geom.rectangle(_0x30bf75, _0x2b21c3, _0x3563ab, _0x54bee1), _0x3563ab = [], _0x3563ab[0x0] = {
          'x': _0x54bee1.x,
          'y': _0x54bee1.y
        }, _0x3563ab[0x1] = {
          'x': _0x54bee1.right,
          'y': _0x54bee1.y
        }, _0x3563ab[0x2] = {
          'x': _0x54bee1.right,
          'y': _0x54bee1.bottom
        }, _0x3563ab[0x3] = {
          'x': _0x54bee1.x,
          'y': _0x54bee1.bottom
        };
        for (_0x54bee1 = 0x0; _0x54bee1 < _0x3563ab.length; _0x54bee1++) _0x30bf75 = ig.World.parentPos(this, _0x3563ab[_0x54bee1].x, _0x3563ab[_0x54bee1].y), _0x3563ab[_0x54bee1] = {
          'x': _0x30bf75.x,
          'y': _0x30bf75.y
        };
        _0x3563ab = ig.World.getBounds(_0x3563ab), this.pos.x = _0x3563ab.x - _0x2aee5a, this.pos.y = _0x3563ab.y - _0x181f91, ig.game.useResponsive && this.isResponsive && (_0x2aee5a = ig.responsive.toAnchor(this.pos.x, this.pos.y, ig.game.anchorType), this.pos.x = _0x2aee5a.x, this.pos.y = _0x2aee5a.y), this.size.x = _0x3563ab.width, this.size.y = _0x3563ab.height, _0x2aee5a = this.lastScale.y, _0x181f91 = this.scale.y;
        if (this.scale.x != this.lastScale.x || _0x181f91 != _0x2aee5a) this.scale.x = parseFloat(this.scale.x.toFixed(0x3)), this.scale.y = parseFloat(this.scale.y.toFixed(0x3)), this.setScale(this.scale.x, this.scale.y);
        (this.position.x != this.x || this.position.y != this.y) && this.position.setTo(this.x, this.y), this.angle != this._angle && this.setAngle(this.angle), this.rotation != this._rotation && this.setRotation(this.rotation);
      },
      'update': function () {
        this.updateOtherEntities(), this.exists && !(0x0 > this.zIndex) && (this._frameName != this.frameName && this.setFrame(), this.updateVel(), this.setProperty(), this.sorting(), this.currentAnim && this.currentAnim.update(), this.updateChildren(), this.isClicked && (ig.input.state('click') || this.released()));
      },
      'setFrame': function () {
        this.animSheet.frameName = this.frameName, this.animSheet.setFrame(), this.animSheet.frameName == this.frameName && (this._frameName = this.frameName, this.width = this.animSheet.width, this.height = this.animSheet.height);
      },
      'draw': function () {
        this.drawOtherEntities();
        if (this.exists && !(ig.game.addOnReady && 0x0 > this.zIndex) && this.visible) {
          var _0x49c8b0 = ig.game.screen.x,
            _0x570e71 = ig.game.screen.y;
          this.isCameraLock && (_0x570e71 = _0x49c8b0 = 0x0);
          var _0xded921 = this.groupParent ? ig.game.parentPos(this.groupParent) : {
              'x': 0x0,
              'y': 0x0
            },
            _0x49c8b0 = _0xded921.x + this.x - _0x49c8b0,
            _0x570e71 = _0xded921.y + this.y - _0x570e71;
          curState(), ig.game.useResponsive && this.isResponsive && (_0x570e71 = ig.responsive.toAnchor(_0x49c8b0, _0x570e71, ig.game.anchorType), _0x49c8b0 = _0x570e71.x, _0x570e71 = _0x570e71.y);
          var _0x56ada2 = _0xded921 = 0x1;
          0x0 > this.scale.x && (_0xded921 = -0x1), 0x0 > this.scale.y && (_0x56ada2 = -0x1);
          var _0x19755d = ig.system.context;
          _0x19755d.save(), 0x1 != this.alpha && (ig.system.context.globalAlpha *= this.alpha), _0x19755d.translate(ig.system.getDrawPos(_0x49c8b0), ig.system.getDrawPos(_0x570e71)), _0x19755d.rotate(this.rotation), _0x19755d.scale(this._scale.x, this._scale.y);
          if (0x0 > _0xded921 || 0x0 > _0x56ada2) _0x19755d.save(), _0x19755d.scale(_0xded921, _0x56ada2);
          this.animSheet.draw(-(this.width * this.anchor.x), -(this.height * this.anchor.y)), _0x19755d.translate(ig.system.getDrawPos(-_0x49c8b0), ig.system.getDrawPos(-_0x570e71)), this.drawChildren(), (0x0 > _0xded921 || 0x0 > _0x56ada2) && _0x19755d.restore(), _0x19755d.restore();
        }
      },
      'clicked': function () {
        this.isClicked || (this.isClicked = !0x0, this.onClick.dispatch(this));
      },
      'released': function () {
        this.isClicked && (this.isClicked = !0x1, this.onRelease.dispatch(this));
      },
      'updateVel': function () {
        this.last.x = this.x, this.last.y = this.y, this.vel.y += ig.game.gravity * ig.system.tick * this.gravityFactor, this.vel.x = this.getNewVelocity(this.vel.x, this.accel.x, this.friction.x, this.maxVel.x), this.vel.y = this.getNewVelocity(this.vel.y, this.accel.y, this.friction.y, this.maxVel.y);
        var _0x5e1c96 = ig.game.collisionMap.trace(this.x, this.y, this.vel.x * ig.system.tick, this.vel.y * ig.system.tick, this.size.x, this.size.y);
        this.handleMovementTrace(_0x5e1c96);
      },
      'handleMovementTrace': function (_0x49163b) {
        this.standing = !0x1, _0x49163b.collision.y && (0x0 < this.bounciness && Math.abs(this.vel.y) > this.minBounceVelocity ? this.vel.y *= -this.bounciness : (0x0 < this.vel.y && (this.standing = !0x0), this.vel.y = 0x0)), _0x49163b.collision.x && (this.vel.x = 0x0 < this.bounciness && Math.abs(this.vel.x) > this.minBounceVelocity ? this.vel.x * -this.bounciness : 0x0);
        if (_0x49163b.collision.slope) {
          var _0x5d7d02 = _0x49163b.collision.slope;
          if (0x0 < this.bounciness) {
            var _0x5ed3f8 = this.vel.x * _0x5d7d02.nx + this.vel.y * _0x5d7d02.ny;
            this.vel.x = (this.vel.x - 0x2 * _0x5d7d02.nx * _0x5ed3f8) * this.bounciness, this.vel.y = (this.vel.y - 0x2 * _0x5d7d02.ny * _0x5ed3f8) * this.bounciness;
          } else _0x5ed3f8 = (this.vel.x * _0x5d7d02.x + this.vel.y * _0x5d7d02.y) / (_0x5d7d02.x * _0x5d7d02.x + _0x5d7d02.y * _0x5d7d02.y), this.vel.x = _0x5d7d02.x * _0x5ed3f8, this.vel.y = _0x5d7d02.y * _0x5ed3f8, _0x5d7d02 = Math.atan2(_0x5d7d02.x, _0x5d7d02.y), _0x5d7d02 > this.slopeStanding.min && _0x5d7d02 < this.slopeStanding.max && (this.standing = !0x0);
        }
        this.x = _0x49163b.pos.x, this.y = _0x49163b.pos.y;
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.addon.group').requires('game.entities.addon.custom-entity').defines(function () {
    EntityGroup = EntityCustomEntity.extend({
      'name': 'Group',
      'init': function (_0xd2a838, _0x4a370e, _0x4f6857) {
        this.x = _0xd2a838 ? _0xd2a838 : 0x0, this.y = _0x4a370e ? _0x4a370e : 0x0, this.parent(_0xd2a838, _0x4a370e, _0x4f6857);
      },
      'add': function (_0x27735b) {
        _0x27735b.groupParent = this, this.children.push(_0x27735b), ig.game.checkZIndexGroups(), _0x27735b.setProperty && _0x27735b.setProperty(), this.setLength();
      },
      'remove': function (_0x55b3c9) {
        var _0x12af1b = this.children.indexOf(_0x55b3c9);
        this.children.splice(_0x12af1b, 0x1), _0x55b3c9.zIndex = -0x1, _0x55b3c9.groupParent = null, ig.game.checkZIndexGroups(), _0x55b3c9.setProperty && _0x55b3c9.setProperty(), this.setLength();
      },
      'removeAll': function () {
        for (var _0x4a884a = 0x0; _0x4a884a < this.children.length; _0x4a884a++) {
          var _0x3c3d47 = this.children[_0x4a884a];
          _0x3c3d47.zIndex = -0x1, _0x3c3d47.groupParent = null;
        }
        this.children = [], ig.game.checkZIndexGroups(), this.setProperty(), this.setLength();
      },
      'bringToTop': function (_0x2dda01) {
        var _0x5eb8b6 = this.children.indexOf(_0x2dda01);
        0x0 > _0x5eb8b6 || (this.children.splice(_0x5eb8b6, 0x1), this.children.push(_0x2dda01), ig.game.checkZIndexGroups());
      },
      'sendToBack': function (_0x115cb0) {
        var _0x23f325 = this.children.indexOf(_0x115cb0);
        0x0 > _0x23f325 || (this.children.splice(_0x23f325, 0x1), this.children.splice(0x0, 0x0, _0x115cb0), ig.game.checkZIndexGroups());
      },
      'getBounds': function () {
        return this.parent(this.pos.x, this.pos.x, this.pos.y, this.pos.y);
      },
      'setProperty': function () {
        var _0xe4d0dc = this.groupParent ? ig.World.parentPos(this.groupParent, this.x, this.y) : {
            'x': this.x,
            'y': this.y
          },
          _0x36d17b = _0xe4d0dc.x,
          _0xe4d0dc = _0xe4d0dc.y,
          _0x47e9df = ig.game.screen.x,
          _0x80f46d = ig.game.screen.y;
        this.isCameraLock && (_0x80f46d = _0x47e9df = 0x0), this.pos.x = _0x36d17b - _0x47e9df, this.pos.y = _0xe4d0dc - _0x80f46d, ig.game.useResponsive && this.isResponsive && (_0x36d17b = ig.responsive.toAnchor(this.pos.x, this.pos.y, ig.game.anchorType), this.pos.x = _0x36d17b.x, this.pos.y = _0x36d17b.y), _0x36d17b = this.lastScale.y, _0xe4d0dc = this.scale.y;
        if (this.scale.x != this.lastScale.x || _0xe4d0dc != _0x36d17b) this.scale.x = parseFloat(this.scale.x.toFixed(0x2)), this.scale.y = parseFloat(this.scale.y.toFixed(0x2)), this.setScale(this.scale.x, this.scale.y);
        (this.position.x != this.x || this.position.y != this.y) && this.position.setTo(this.x, this.y), this.angle != this._angle && this.setAngle(this.angle), this.rotation != this._rotation && this.setRotation(this.rotation), this.anchor.setTo(0x0);
      },
      'setScale': function (_0x1df0f3, _0x5bf0fd) {
        this.scale.setTo(_0x1df0f3, _0x5bf0fd), this.lastScale.setTo(_0x1df0f3, _0x5bf0fd), this._scale.setTo(_0x1df0f3, _0x5bf0fd);
      },
      'setLength': function () {
        var _0x2e3690 = this.getBounds();
        this.width = _0x2e3690.width, this.height = _0x2e3690.height, this.size.x = this.width, this.size.y = this.height;
      },
      'sortByYAscending': function () {
        for (var _0x3399c5 = []; _0x3399c5.length < this.children.length;) {
          for (var _0x18c0d3 = null, _0x480eb5 = 0x0; _0x480eb5 < this.children.length; _0x480eb5++) {
            var _0x327886 = this.children[_0x480eb5];
            if (!(0x0 <= _0x3399c5.indexOf(_0x327886))) {
              if (_0x18c0d3) {
                var _0x56daad = _0x327886.getBounds(),
                  _0x56daad = _0x56daad.y + _0x56daad.height,
                  _0x23fe04 = _0x18c0d3.getBounds();
                _0x56daad < _0x23fe04.y + _0x23fe04.height && (_0x18c0d3 = _0x327886);
              } else _0x18c0d3 = _0x327886;
            }
          }
          _0x3399c5.push(_0x18c0d3);
        }
        this.children = [];
        for (_0x480eb5 = 0x0; _0x480eb5 < _0x3399c5.length; _0x480eb5++) _0x327886 = _0x3399c5[_0x480eb5], this.children.push(_0x327886);
        ig.game.checkZIndexGroups(), this.setLength();
      },
      'update': function () {
        this.updateOtherEntities(), this.exists && !(ig.game.addOnReady && 0x0 > this.zIndex) && (this.sorting(), this.updateChildren(), this.setLength(), this.setProperty());
      },
      'draw': function () {
        this.drawOtherEntities();
        if (this.exists && !(ig.game.addOnReady && 0x0 > this.zIndex) && this.visible) {
          var _0x2d4362 = ig.game.screen.x,
            _0x549155 = ig.game.screen.y;
          this.isCameraLock && (_0x549155 = _0x2d4362 = 0x0);
          var _0x500484 = this.groupParent ? ig.game.parentPos(this.groupParent) : {
              'x': 0x0,
              'y': 0x0
            },
            _0x2d4362 = _0x500484.x + this.x - _0x2d4362,
            _0x549155 = _0x500484.y + this.y - _0x549155;
          ig.game.useResponsive && this.isResponsive && (_0x549155 = ig.responsive.toAnchor(_0x2d4362, _0x549155, ig.game.anchorType), _0x2d4362 = _0x549155.x, _0x549155 = _0x549155.y);
          var _0x1d4ba6 = _0x500484 = 0x1;
          0x0 > this.scale.x && (_0x500484 = -0x1), 0x0 > this.scale.y && (_0x1d4ba6 = -0x1);
          var _0x3f9230 = ig.system.context;
          _0x3f9230.save(), 0x1 != this.alpha && (ig.system.context.globalAlpha *= this.alpha), _0x3f9230.translate(ig.system.getDrawPos(_0x2d4362), ig.system.getDrawPos(_0x549155)), _0x3f9230.rotate(this.rotation), _0x3f9230.scale(this._scale.x, this._scale.y);
          if (0x0 > _0x500484 || 0x0 > _0x1d4ba6) _0x3f9230.save(), _0x3f9230.scale(_0x500484, _0x1d4ba6);
          _0x3f9230.translate(ig.system.getDrawPos(-_0x2d4362), ig.system.getDrawPos(-_0x549155)), this.drawChildren(), (0x0 > _0x500484 || 0x0 > _0x1d4ba6) && _0x3f9230.restore(), _0x3f9230.restore();
        }
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.addon.locked-group').requires('game.entities.addon.group').defines(function () {
    EntityLockedGroup = EntityGroup.extend({
      'add': function (_0x450c56) {
        _0x450c56.isResponsive = this.isResponsive, _0x450c56.isCameraLock = this.isCameraLock, Array.isArray(_0x450c56.children) && this.checkChildren(_0x450c56), this.parent(_0x450c56);
      },
      'checkChildren': function (_0x4f3861) {
        if (0x0 < _0x4f3861.children.length) for (var _0x1d5712 = 0x0; _0x1d5712 < _0x4f3861.children.length; _0x1d5712++) {
          var _0x556b88 = _0x4f3861.children[_0x1d5712];
          _0x556b88.isResponsive = this.isResponsive, _0x556b88.isCameraLock = this.isCameraLock, Array.isArray(_0x556b88.children) && this.checkChildren(_0x556b88);
        }
      },
      'updateChildren': function () {
        this.parent();
        for (var _0x5eb1c4 = 0x0; _0x5eb1c4 < this.children.length; _0x5eb1c4++) {
          var _0x45cee2 = this.children[_0x5eb1c4];
          _0x45cee2 && _0x45cee2.exists && _0x45cee2.alive && this.checkChildren(_0x45cee2);
        }
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.addon.add-image').requires('plugins.addon.raw-image').defines(function () {
    ig.ImagePosition = ig.Class.extend({
      'x': 0x0,
      'y': 0x0,
      'init': function (_0x5b7a0b) {
        this.parentObj = _0x5b7a0b, this.x = _0x5b7a0b.x, this.y = _0x5b7a0b.y;
      },
      'setTo': function (_0x2f53dc, _0x55077e) {
        this.x = _0x2f53dc ? _0x2f53dc : this.x, this.y = _0x55077e ? _0x55077e : this.y, this.parentObj.x = this.x, this.parentObj.y = this.y;
      }
    }), ig.AddImage = ig.RawImage.extend({
      'name': 'Image',
      'sourceX': 0x0,
      'sourceY': 0x0,
      'spriteData': null,
      'isReady': !0x1,
      'isResponsive': !0x0,
      'isCameraLock': !0x1,
      'init': function (_0x4349c3, _0x27a7e5, _0x3cb628, _0x5abc5b) {
        this.parent(_0x3cb628, _0x5abc5b), this.x = _0x4349c3, this.y = _0x27a7e5, this.position = new ig.ImagePosition(this);
      },
      'addChild': function (_0x240b9f) {
        _0x240b9f.groupParent = this, this.children.push(_0x240b9f), ig.game.checkZIndexGroups();
      },
      'removeChild': function (_0x37cc24) {
        var _0x581a12 = this.children.indexOf(_0x37cc24);
        this.children.splice(_0x581a12, 0x1), _0x37cc24.zIndex = -0x1, _0x37cc24.groupParent = null, ig.game.checkZIndexGroups();
      },
      'setProperty': function () {
        var _0x4f0270 = this.width,
          _0x300e30 = this.height,
          _0x52d5da = -(_0x4f0270 * this.anchor.x),
          _0x2a5dbc = -(_0x300e30 * this.anchor.y),
          _0x21a205 = ig.game.screen.x,
          _0x377a37 = ig.game.screen.y;
        this.isCameraLock && (_0x377a37 = _0x21a205 = 0x0), _0x300e30 = ig.game.geom.rectangle(_0x52d5da, _0x2a5dbc, _0x4f0270, _0x300e30), _0x4f0270 = [], _0x4f0270[0x0] = {
          'x': _0x300e30.x,
          'y': _0x300e30.y
        }, _0x4f0270[0x1] = {
          'x': _0x300e30.right,
          'y': _0x300e30.y
        }, _0x4f0270[0x2] = {
          'x': _0x300e30.right,
          'y': _0x300e30.bottom
        }, _0x4f0270[0x3] = {
          'x': _0x300e30.x,
          'y': _0x300e30.bottom
        };
        for (_0x300e30 = 0x0; _0x300e30 < _0x4f0270.length; _0x300e30++) _0x52d5da = ig.World.parentPos(this, _0x4f0270[_0x300e30].x, _0x4f0270[_0x300e30].y), _0x4f0270[_0x300e30] = {
          'x': _0x52d5da.x,
          'y': _0x52d5da.y
        };
        _0x4f0270 = ig.World.getBounds(_0x4f0270), this.pos.x = _0x4f0270.x - _0x21a205, this.pos.y = _0x4f0270.y - _0x377a37, ig.game.useResponsive && this.isResponsive && (_0x21a205 = ig.responsive.toAnchor(this.pos.x, this.pos.y, ig.game.anchorType), this.pos.x = _0x21a205.x, this.pos.y = _0x21a205.y), this.size.x = _0x4f0270.width, this.size.y = _0x4f0270.height, _0x21a205 = this.lastScale.y, _0x377a37 = this.scale.y;
        if (this.scale.x != this.lastScale.x || _0x377a37 != _0x21a205) this.scale.x = parseFloat(this.scale.x.toFixed(0x3)), this.scale.y = parseFloat(this.scale.y.toFixed(0x3)), this.setScale(this.scale.x, this.scale.y);
        (this.position.x != this.x || this.position.y != this.y) && this.position.setTo(this.x, this.y), this.angle != this._angle && this.setAngle(this.angle), this.rotation != this._rotation && this.setRotation(this.rotation);
      },
      'setAngle': function (_0x41ca2d) {
        this._angle = _0x41ca2d, this.rotation = this.angle.toRad();
      },
      'setRotation': function (_0x44dd36) {
        this._rotation = _0x44dd36, this.angle = this.rotation.toDeg();
      },
      'getBounds': function () {
        return ig.game.geom.rectangle(this.pos.x, this.pos.y, this.size.x, this.size.y);
      },
      'updateChildren': function () {
        for (var _0x1883a6 = 0x0; _0x1883a6 < this.children.length; _0x1883a6++) {
          var _0x361479 = this.children[_0x1883a6];
          _0x361479 && _0x361479.exists && _0x361479.alive && _0x361479.update && _0x361479.update();
        }
      },
      'drawChildren': function () {
        for (var _0x158473 = 0x0; _0x158473 < this.children.length; _0x158473++) {
          var _0x18f9f6 = this.children[_0x158473];
          _0x18f9f6 && _0x18f9f6.exists && _0x18f9f6.alive && _0x18f9f6.draw && _0x18f9f6.draw();
        }
      },
      'kill': function () {
        this.exists = !0x1;
        for (var _0x584c2a = 0x0; _0x584c2a < this.children.length; _0x584c2a++) this.children[_0x584c2a].kill();
        ig.game.checkZIndexGroups(), _0x584c2a = ig.system.context, _0x584c2a.save(), _0x584c2a.clearRect(this.pos.x, this.pos.y, this.width, this.height), _0x584c2a.restore();
      },
      'setScale': function (_0x36df1b, _0x33c437) {
        this.scale.setTo(_0x36df1b, _0x33c437), this.lastScale.setTo(_0x36df1b, _0x33c437), this._scale.setTo(Math.abs(_0x36df1b), Math.abs(_0x33c437));
      },
      'update': function () {
        this.parent(), this.setProperty(), this.updateChildren();
      },
      'draw': function () {
        if (this.exists && this.visible && this.alive) {
          if (0x1 > this.size.x || 0x1 > this.size.y) this.checkProperties(), this.setFrame();else {
            if (!(0x1 > this.drawSize.x || 0x1 > this.drawSize.y)) {
              var _0x18e53e = this.groupParent ? ig.game.parentPos(this.groupParent) : {
                  'x': 0x0,
                  'y': 0x0
                },
                _0x29f5b6 = _0x18e53e.x,
                _0x18e53e = _0x18e53e.y,
                _0x5f1338 = ig.game.screen.x,
                _0x400315 = ig.game.screen.y;
              this.isCameraLock && (_0x400315 = _0x5f1338 = 0x0), _0x29f5b6 = _0x29f5b6 + this.x - _0x5f1338, _0x18e53e = _0x18e53e + this.y - _0x400315, ig.game.useResponsive && this.isResponsive && (_0x18e53e = ig.responsive.toAnchor(_0x29f5b6, _0x18e53e, ig.game.anchorType), _0x29f5b6 = _0x18e53e.x, _0x18e53e = _0x18e53e.y);
              var _0x400315 = this.sourceX,
                _0x5f1338 = this.sourceY,
                _0x14bb37 = this.drawSize.x,
                _0x45b1f9 = this.drawSize.y,
                _0x3415d6 = 0x1,
                _0x47f87a = 0x1;
              0x0 > this.scale.x && (_0x3415d6 = -0x1), 0x0 > this.scale.y && (_0x47f87a = -0x1), this.rotation.toDeg();
              var _0x5fc4d6 = this.width * this.anchor.x,
                _0x1f1623 = this.height * this.anchor.y,
                _0x5f3152 = ig.system.context;
              _0x5f3152.save(), 0x1 != this.alpha && (_0x5f3152.globalAlpha *= this.alpha), _0x5f3152.translate(ig.system.getDrawPos(_0x29f5b6), ig.system.getDrawPos(_0x18e53e)), _0x5f3152.rotate(this.rotation), _0x5f3152.scale(this._scale.x, this._scale.y);
              if (0x0 > _0x3415d6 || 0x0 > _0x47f87a) _0x5f3152.save(), _0x5f3152.scale(_0x3415d6, _0x47f87a);
              _0x5f3152.translate(ig.system.getDrawPos(-_0x29f5b6), ig.system.getDrawPos(-_0x18e53e)), _0x5f3152.translate(ig.system.getDrawPos(_0x29f5b6 - _0x5fc4d6), ig.system.getDrawPos(_0x18e53e - _0x1f1623)), this.parent(0x0, 0x0, _0x400315, _0x5f1338, _0x14bb37, _0x45b1f9, !0x1, !0x1), _0x5f3152.translate(ig.system.getDrawPos(-_0x29f5b6 + _0x5fc4d6), ig.system.getDrawPos(-_0x18e53e + _0x1f1623)), this.drawChildren(), (0x0 > _0x3415d6 || 0x0 > _0x47f87a) && _0x5f3152.restore(), ig.system.context.restore();
            }
          }
        }
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.addon.custom-text').requires('game.entities.addon.custom-entity', 'plugins.addon.add-signal').defines(function () {
    EntityCustomText = EntityCustomEntity.extend({
      'name': 'Text',
      'fontType': '',
      'fontSize': 0xc,
      'lineSpacing': 0x0,
      'fill': '#ffffff',
      'wordWrap': !0x1,
      'wordWrapWidth': 0x0,
      'letterSpacing': 0x0,
      'isJustified': !0x1,
      'stroke': 'black',
      'strokeThickness': 0x0,
      'lines': [],
      'miterLimit': 0x2,
      'textAnchor': {
        'x': 0x0,
        'y': 0x0
      },
      'exists': !0x0,
      'separator': " ",
      'showText': '',
      'align': 'left',
      'style': {
        'enableShadow': !0x1,
        'shadowOffsetX': 0x0,
        'shadowOffsetY': 0x0,
        'shadowColor': 'black',
        'shadowBlur': 0x0,
        'shadowStroke': !0x1,
        'shadowFill': !0x1
      },
      'textReady': !0x1,
      'gradientData': {
        'enabled': !0x1,
        'colorStopper': [],
        'typeGradient': 'linear',
        'gradientPos': {
          'x1': 0x0,
          'y1': 0x0,
          'x2': 0x0,
          'y2': 0x0
        },
        'gradient': null
      },
      'canvasDimensionOffset': {
        'x': 0x0,
        'y': 0x0
      },
      'init': function (_0x284167, _0x5ebe10, _0xc6adc2) {
        this.x = _0x284167, this.y = _0x5ebe10, this.parent(_0x284167, _0x5ebe10, _0xc6adc2), this.showText = '', this.onClick = new ig.AddSignal(this), this.onRelease = new ig.AddSignal(this), this.textCanvas = ig.$new('canvas');
      },
      'inputProperty': function (_0x116432, _0x5ab64f, _0xd6c2f2) {
        this.showText = _0x116432, this.fontSize = _0x5ab64f, this.fontType = _0xd6c2f2, this.updateText();
      },
      'setShadow': function (_0x3a5c62, _0x5ec0f4, _0x31eb59, _0x37f0dc, _0x2380ab, _0x18f148) {
        return void 0x0 === _0x3a5c62 && (_0x3a5c62 = 0x0), void 0x0 === _0x5ec0f4 && (_0x5ec0f4 = 0x0), void 0x0 === _0x31eb59 && (_0x31eb59 = "rgba(0, 0, 0, 1)"), void 0x0 === _0x37f0dc && (_0x37f0dc = 0x0), void 0x0 === _0x2380ab && (_0x2380ab = !0x0), void 0x0 === _0x18f148 && (_0x18f148 = !0x0), this.style.shadowOffsetX = _0x3a5c62, this.style.shadowOffsetY = _0x5ec0f4, this.style.shadowColor = _0x31eb59, this.style.shadowBlur = _0x37f0dc, this.style.shadowStroke = _0x2380ab, this.style.shadowFill = _0x18f148, this.style.enableShadow = !0x0, this;
      },
      'checkLines': function () {
        var _0xfa4702 = '';
        try {
          var _0x2c5472 = this.showText,
            _0x427c2b = _0x2c5472.split("\n");
        } catch (_0x43c72d) {
          throw "text not detected";
        }
        _0x2c5472 = this.showText, _0x427c2b = _0x2c5472.split("\n");
        if (this.wordWrap) {
          var _0x2c5472 = this.textCanvas.getContext('2d'),
            _0x1fcefd = this.fontSize + "px " + this.fontType;
          _0x2c5472.save(), _0x2c5472.font = _0x1fcefd, 0x0 < this.strokeThickness && (_0x2c5472.strokeStyle = this.stroke, _0x2c5472.lineWidth = this.strokeThickness);
          for (_0x1fcefd = 0x0; _0x1fcefd < _0x427c2b.length; _0x1fcefd++) {
            for (var _0x111baf = _0x427c2b[_0x1fcefd].split(this.separator), _0x3c2e1f = 0x0, _0x349335 = 0x0; _0x349335 < _0x111baf.length; _0x349335++) {
              var _0x310f7a = _0x111baf[_0x349335],
                _0x50ed8e = '';
              0x0 < _0x349335 && (_0x50ed8e = this.separator);
              var _0x50ed8e = _0x50ed8e + _0x310f7a,
                _0x3aa73d = _0x2c5472.measureText(_0x50ed8e).width,
                _0x3c2e1f = _0x3c2e1f + (_0x3aa73d + (_0x50ed8e.length - 0x1) * this.letterSpacing);
              _0x3c2e1f >= this.wordWrapWidth && (_0x50ed8e = "\n" + _0x310f7a, _0x3c2e1f = _0x2c5472.measureText(_0x310f7a).width), _0xfa4702 += _0x50ed8e;
            }
            _0x1fcefd < _0x427c2b.length - 0x1 && (_0xfa4702 += "\n");
          }
          return _0x2c5472.restore(), _0xfa4702;
        }
        return _0x2c5472;
      },
      'updateText': function () {
        this.lines = [];
        for (var _0x3aa22e = this.checkLines().split("\n"), _0x2b14a2 = 0x0; _0x2b14a2 < _0x3aa22e.length; _0x2b14a2++) this.lines.push(_0x3aa22e[_0x2b14a2]);
        this.textAnchor.x = 0x0;
        switch (this.align) {
          case 'right':
            this.textAnchor.x = 0x1;
            break;
          case 'center':
            this.textAnchor.x = 0.5;
            break;
          case 'left':
            this.textAnchor.x = 0x0;
        }
        this.getDimension();
      },
      'getDimension': function () {
        var _0x16bae8 = this.textCanvas.getContext('2d'),
          _0x2d0b9b = this.fontSize + "px " + this.fontType;
        _0x16bae8.save(), _0x16bae8.font = _0x2d0b9b;
        for (var _0x2d0b9b = null, _0x1addbc = 0x0, _0x31c475 = 0x0; _0x31c475 < this.lines.length; _0x31c475++) {
          for (var _0x2b7a0f = this.lines[_0x31c475], _0x269402 = 0x0, _0x181c55 = 0x0; _0x181c55 < _0x2b7a0f.length; _0x181c55++) var _0x3abf78 = _0x16bae8.measureText(_0x2b7a0f[_0x181c55]).width, _0x269402 = _0x269402 + _0x3abf78;
          _0x269402 += (_0x2b7a0f.length - 0x1) * this.letterSpacing, _0x2d0b9b ? _0x269402 > _0x2d0b9b && (_0x2d0b9b = _0x269402) : _0x2d0b9b = _0x269402, _0x2b7a0f = 0x0, _0x31c475 < this.lines.length - 0x1 && (_0x2b7a0f = this.lineSpacing), _0x1addbc += this.fontSize + _0x2b7a0f;
        }
        _0x16bae8.restore(), this.width = _0x2d0b9b + this.strokeThickness + this.canvasDimensionOffset.x, this.height = _0x1addbc + this.strokeThickness + this.canvasDimensionOffset.y, this.textCanvas.width = this.width, this.textCanvas.height = this.height;
      },
      'setLength': function () {
        var _0x1fd911 = this._scale.x * this.width,
          _0x3d5c7f = this._scale.y * this.height,
          _0x1fd911 = this.groupParent ? ig.World.getGlobalDimension(this.groupParent, _0x1fd911, _0x3d5c7f) : {
            'width': _0x1fd911,
            'height': _0x3d5c7f
          };
        return {
          'x': _0x1fd911.width,
          'y': _0x1fd911.height
        };
      },
      'setScale': function (_0x5f5c3c, _0x56c99f) {
        this.scale.setTo(_0x5f5c3c, _0x56c99f), this.lastScale.setTo(_0x5f5c3c, _0x56c99f), this._scale.setTo(Math.abs(_0x5f5c3c), Math.abs(_0x56c99f));
      },
      'setText': function (_0x11d8d5) {
        this.showText = _0x11d8d5 + '';
      },
      'getBounds': function () {
        var _0x679b3 = ig.game.geom.rectangle(this.pos.x, this.pos.y, this.size.x, this.size.y);
        return this.parent(_0x679b3.x, _0x679b3.right, _0x679b3.y, _0x679b3.bottom);
      },
      'setProperty': function () {
        var _0x40489a = this.width,
          _0x54569a = this.height,
          _0x54569a = ig.game.geom.rectangle(-(_0x40489a * this.anchor.x), -(_0x54569a * this.anchor.y), _0x40489a, _0x54569a),
          _0x40489a = [];
        _0x40489a[0x0] = {
          'x': _0x54569a.x,
          'y': _0x54569a.y
        }, _0x40489a[0x1] = {
          'x': _0x54569a.right,
          'y': _0x54569a.y
        }, _0x40489a[0x2] = {
          'x': _0x54569a.right,
          'y': _0x54569a.bottom
        }, _0x40489a[0x3] = {
          'x': _0x54569a.x,
          'y': _0x54569a.bottom
        };
        for (_0x54569a = 0x0; _0x54569a < _0x40489a.length; _0x54569a++) {
          var _0x3d85ff = ig.World.parentPos(this, _0x40489a[_0x54569a].x, _0x40489a[_0x54569a].y);
          _0x40489a[_0x54569a] = {
            'x': _0x3d85ff.x,
            'y': _0x3d85ff.y
          };
        }
        _0x40489a = ig.World.getBounds(_0x40489a), this.pos.x = _0x40489a.x, this.pos.y = _0x40489a.y, ig.game.useResponsive && this.isResponsive && (_0x54569a = ig.responsive.toAnchor(this.pos.x, this.pos.y, ig.game.anchorType), this.pos.x = _0x54569a.x, this.pos.y = _0x54569a.y), this.size.x = _0x40489a.width, this.size.y = _0x40489a.height, _0x40489a = this.lastScale.y, _0x54569a = this.scale.y;
        if (this.scale.x != this.lastScale.x || _0x54569a != _0x40489a) this.scale.x = parseFloat(this.scale.x.toFixed(0x3)), this.scale.y = parseFloat(this.scale.y.toFixed(0x3)), this.setScale(this.scale.x, this.scale.y);
        (this.position.x != this.x || this.position.y != this.y) && this.position.setTo(this.x, this.y), this.angle != this._angle && this.setAngle(this.angle), this.rotation != this._rotation && this.setRotation(this.rotation);
      },
      'addChild': function (_0xaa0165) {
        _0xaa0165.groupParent = this, this.children.push(_0xaa0165), ig.game.checkZIndexGroups();
      },
      'removeChild': function (_0x31eb71) {
        var _0x520ee7 = this.children.indexOf(_0x31eb71);
        this.children.splice(_0x520ee7, 0x1), _0x31eb71.zIndex = -0x1, _0x31eb71.groupParent = null, ig.game.checkZIndexGroups();
      },
      'checkPointer': function () {
        if (this.inputEnabled) {
          var _0x59168c = ig.game.geom.rectangle(this.pos.x, this.pos.y, this.size.x, this.size.y),
            _0x124eaa = ig.game.pointer.pos;
          _0x124eaa.x >= _0x59168c.x && _0x124eaa.x <= _0x59168c.right && _0x124eaa.y >= _0x59168c.y && _0x124eaa.y <= _0x59168c.bottom && ig.game.pointer.check(this);
        }
      },
      'update': function () {
        this.updateOtherEntities(), this.exists && (!ig.game || !(ig.game.addOnReady && 0x0 > this.zIndex)) && (this.sorting(), this.updateText(), this.setProperty(), this.updateChildren(), this.checkPointer(), this.isClicked && (ig.input.state('click') || this.released()));
      },
      'setGradient': function (_0x23d682, _0x36040b, _0x518f6a, _0x4193ff, _0x3d2d87, _0x250048, _0x2be569, _0x22c4bf) {
        this.gradientData.enabled = !0x0, this.gradientData.gradientPos = {
          'x1': _0x23d682,
          'y1': _0x36040b,
          'x2': _0x518f6a,
          'y2': _0x4193ff,
          'r1': _0x2be569,
          'r2': _0x22c4bf
        }, this.gradientData.colorStopper = _0x3d2d87, this.gradientData.typeGradient = _0x250048 ? _0x250048 : 'linear';
      },
      'draw': function () {
        this.drawOtherEntities();
        if (this.exists && !(ig.game.addOnReady && 0x0 > this.zIndex) && this.visible && Math.floor(this.size.x) && Math.floor(this.size.y)) {
          var _0x47be49 = ig.game.screen.x,
            _0xaee716 = ig.game.screen.y;
          this.isCameraLock && (_0xaee716 = _0x47be49 = 0x0);
          var _0x7223f2 = this.groupParent ? ig.game.parentPos(this.groupParent) : {
              'x': 0x0,
              'y': 0x0
            },
            _0x47be49 = _0x7223f2.x + this.x - _0x47be49,
            _0xaee716 = _0x7223f2.y + this.y - _0xaee716;
          ig.game.useResponsive && this.isResponsive && (_0xaee716 = ig.responsive.toAnchor(_0x47be49, _0xaee716, ig.game.anchorType), _0x47be49 = _0xaee716.x, _0xaee716 = _0xaee716.y);
          var _0x4df1d5 = _0x7223f2 = 0x1;
          0x0 > this.scale.x && (_0x7223f2 = -0x1), 0x0 > this.scale.y && (_0x4df1d5 = -0x1);
          var _0x506ec9 = ig.system.context;
          _0x506ec9.save(), 0x1 != this.alpha && (ig.system.context.globalAlpha *= this.alpha), _0x506ec9.translate(ig.system.getDrawPos(_0x47be49), ig.system.getDrawPos(_0xaee716)), _0x506ec9.rotate(this.rotation), _0x506ec9.scale(this._scale.x, this._scale.y);
          if (0x0 > _0x7223f2 || 0x0 > _0x4df1d5) _0x506ec9.save(), _0x506ec9.scale(_0x7223f2, _0x4df1d5);
          var _0x5c889c = this.width * this.anchor.x,
            _0x1a9e2e = this.height * this.anchor.y;
          _0x506ec9.save(), _0x506ec9.translate(-_0x5c889c, -_0x1a9e2e), this.drawTextContext(), this.drawTextCanvas(), _0x506ec9.restore(), _0x506ec9.translate(ig.system.getDrawPos(-_0x47be49), ig.system.getDrawPos(-_0xaee716)), this.drawChildren(), (0x0 > _0x7223f2 || 0x0 > _0x4df1d5) && _0x506ec9.restore(), _0x506ec9.restore();
        }
      },
      'drawTextCanvas': function () {
        Math.floor(this.textCanvas.width) && Math.floor(this.textCanvas.height) && ig.system.context.drawImage(this.textCanvas, 0x0, 0x0, this.textCanvas.width, this.textCanvas.height, 0x0, 0x0, this.textCanvas.width, this.textCanvas.height);
      },
      'drawTextContext': function () {
        var _0x2fccda = this.textCanvas.getContext('2d');
        _0x2fccda.clearRect(0x0, 0x0, this.textCanvas.width, this.textCanvas.height), _0x2fccda.save();
        var _0x5bb503 = this.fontSize + "px " + this.fontType;
        if (this.gradientData.enabled) for (var _0x40b829 = this.gradientData.gradientPos, _0x40b829 = 'linear' == this.gradientData.typeGradient ? _0x2fccda.createLinearGradient(_0x40b829.x1, _0x40b829.y1, _0x40b829.x2, _0x40b829.y2) : _0x2fccda.createRadialGradient(_0x40b829.x1, _0x40b829.y1, _0x40b829.r1, _0x40b829.x2, _0x40b829.y2, _0x40b829.r2), _0x450257 = this.gradientData.colorStopper, _0x441ace = 0x0; _0x441ace < _0x450257.length; _0x441ace++) {
          var _0x5e40e0 = this.gradientData.colorStopper[_0x441ace];
          _0x40b829.addColorStop(_0x5e40e0.stopper, _0x5e40e0.color);
        } else _0x40b829 = this.fill;
        _0x2fccda.fillStyle = _0x40b829, _0x2fccda.textBaseline = 'alphabetic', _0x2fccda.font = _0x5bb503, _0x2fccda.textAlign = 'left', _0x2fccda.miterLimit = this.miterLimit, _0x5bb503 = this.width * this.textAnchor.x + this.strokeThickness / 0x2, _0x40b829 = 0x0 + this.strokeThickness / 0x2, this.style.enableShadow && (_0x2fccda.save(), _0x2fccda.shadowOffsetX = this.style.shadowOffsetX, _0x2fccda.shadowOffsetY = this.style.shadowOffsetY, _0x2fccda.shadowColor = this.style.shadowColor, _0x2fccda.shadowBlur = this.style.shadowBlur), this.drawText(_0x5bb503, _0x40b829, !0x0), this.style.enableShadow && 0x0 < this.strokeThickness && _0x2fccda.restore(), this.drawText(_0x5bb503, _0x40b829), this.style.enableShadow && 0x0 >= this.strokeThickness && _0x2fccda.restore(), _0x2fccda.restore();
      },
      'drawText': function (_0x1f19b4, _0x201d4b, _0x5963ad) {
        for (var _0x783e07 = this.textCanvas.getContext('2d'), _0x47a4d6 = 0x0; _0x47a4d6 < this.lines.length; _0x47a4d6++) {
          var _0x48b84e = this.lines[_0x47a4d6],
            _0x3a6a2f = _0x48b84e.length,
            _0x3a93d7 = this.fontSize + this.lineSpacing,
            _0x24a9b1 = _0x783e07.measureText(_0x48b84e).width + (_0x3a6a2f - 0x1) * this.letterSpacing,
            _0x3a93d7 = _0x201d4b + 0.8 * this.fontSize + _0x47a4d6 * _0x3a93d7,
            _0x4f601c = 0x0;
          if ('left' == this.align || 'center' == this.align) for (var _0x776755 = 0x0; _0x776755 < _0x3a6a2f; _0x776755++) {
            var _0x58ea57 = _0x48b84e[_0x776755],
              _0x3c3152 = _0x783e07.measureText(_0x58ea57).width,
              _0x2a3f87 = _0x3c3152 + this.letterSpacing,
              _0x3c3152 = _0x1f19b4 + _0x4f601c;
            'center' == this.align && (_0x3c3152 = _0x1f19b4 - _0x24a9b1 / 0x2 + _0x4f601c), _0x5963ad ? this.drawStroke(_0x3c3152, _0x3a93d7, _0x58ea57) : _0x783e07.fillText(_0x58ea57, _0x3c3152, _0x3a93d7), _0x4f601c += _0x2a3f87;
          } else {
            if ('right' == this.align) {
              for (_0x776755 = _0x3a6a2f - 0x1; 0x0 <= _0x776755; _0x776755--) _0x58ea57 = _0x48b84e[_0x776755], _0x3c3152 = _0x783e07.measureText(_0x58ea57).width, _0x2a3f87 = _0x3c3152 + this.letterSpacing, _0x3c3152 = _0x1f19b4 - _0x4f601c - _0x3c3152, _0x5963ad ? this.drawStroke(_0x3c3152, _0x3a93d7, _0x58ea57) : _0x783e07.fillText(_0x58ea57, _0x3c3152, _0x3a93d7), _0x4f601c += _0x2a3f87;
            }
          }
        }
      },
      'drawStroke': function (_0x17db23, _0x327304, _0x18055d) {
        var _0x510fe7 = this.textCanvas.getContext('2d');
        0x0 < this.strokeThickness && (_0x510fe7.strokeStyle = this.stroke, _0x510fe7.lineWidth = this.strokeThickness, _0x510fe7.strokeText(_0x18055d, _0x17db23, _0x327304));
      },
      'clicked': function () {
        this.isClicked || (this.isClicked = !0x0, this.onClick.dispatch(this));
      },
      'released': function () {
        this.isClicked && (this.isClicked = !0x1, this.onRelease.dispatch(this));
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.addon.manual-draw-entity').requires('game.entities.addon.custom-entity', 'plugins.addon.add-signal').defines(function () {
    EntityManualDrawEntity = EntityCustomEntity.extend({
      'type': ig.Entity.TYPE.A,
      'init': function (_0x157d92, _0x18cdb9, _0x554246) {
        this.x = _0x157d92, this.y = _0x18cdb9, this.onClick = new ig.AddSignal(this), this.onRelease = new ig.AddSignal(this), this.parent(_0x157d92, _0x18cdb9, _0x554246);
      },
      'setShape': function (_0x50957d, _0x40428a) {
        this.width = _0x50957d, this.height = _0x40428a, this.size.x = this.width, this.size.y = this.height;
      },
      'addChild': function (_0x54c3f2) {
        _0x54c3f2.groupParent = this, this.children.push(_0x54c3f2), ig.game.checkZIndexGroups(), _0x54c3f2.setProperty && _0x54c3f2.setProperty();
      },
      'removeChild': function (_0x200aff) {
        var _0x118909 = this.children.indexOf(_0x200aff);
        this.children.splice(_0x118909, 0x1), _0x200aff.zIndex = -0x1, _0x200aff.groupParent = null, ig.game.checkZIndexGroups();
      },
      'setScale': function (_0x3306df, _0xdd1b84) {
        this.scale.setTo(_0x3306df, _0xdd1b84), this.lastScale.setTo(_0x3306df, _0xdd1b84), this._scale.setTo(Math.abs(_0x3306df), Math.abs(_0xdd1b84));
      },
      'getBounds': function () {
        var _0xb2b76 = ig.game.geom.rectangle(this.pos.x, this.pos.y, this.size.x, this.size.y);
        return this.parent(_0xb2b76.x, _0xb2b76.right, _0xb2b76.y, _0xb2b76.bottom);
      },
      'setProperty': function () {
        var _0x26e134 = this.width,
          _0x2acfb6 = this.height,
          _0xee8466 = -(_0x26e134 * this.anchor.x),
          _0x133287 = -(_0x2acfb6 * this.anchor.y),
          _0x34c4b2 = ig.game.screen.x,
          _0x34c38e = ig.game.screen.y;
        this.isCameraLock && (_0x34c38e = _0x34c4b2 = 0x0), _0x2acfb6 = ig.game.geom.rectangle(_0xee8466, _0x133287, _0x26e134, _0x2acfb6), _0x26e134 = [], _0x26e134[0x0] = {
          'x': _0x2acfb6.x,
          'y': _0x2acfb6.y
        }, _0x26e134[0x1] = {
          'x': _0x2acfb6.right,
          'y': _0x2acfb6.y
        }, _0x26e134[0x2] = {
          'x': _0x2acfb6.right,
          'y': _0x2acfb6.bottom
        }, _0x26e134[0x3] = {
          'x': _0x2acfb6.x,
          'y': _0x2acfb6.bottom
        };
        for (_0x2acfb6 = 0x0; _0x2acfb6 < _0x26e134.length; _0x2acfb6++) _0xee8466 = ig.World.parentPos(this, _0x26e134[_0x2acfb6].x, _0x26e134[_0x2acfb6].y), _0x26e134[_0x2acfb6] = {
          'x': _0xee8466.x,
          'y': _0xee8466.y
        };
        _0x26e134 = ig.World.getBounds(_0x26e134), this.pos.x = _0x26e134.x - _0x34c4b2, this.pos.y = _0x26e134.y - _0x34c38e, ig.game.useResponsive && this.isResponsive && (_0x34c4b2 = ig.responsive.toAnchor(this.pos.x, this.pos.y, ig.game.anchorType), this.pos.x = _0x34c4b2.x, this.pos.y = _0x34c4b2.y), this.size.x = _0x26e134.width, this.size.y = _0x26e134.height, _0x34c4b2 = this.lastScale.y, _0x34c38e = this.scale.y;
        if (this.scale.x != this.lastScale.x || _0x34c38e != _0x34c4b2) this.scale.x = parseFloat(this.scale.x.toFixed(0x3)), this.scale.y = parseFloat(this.scale.y.toFixed(0x3)), this.setScale(this.scale.x, this.scale.y);
        (this.position.x != this.x || this.position.y != this.y) && this.position.setTo(this.x, this.y), this.angle != this._angle && this.setAngle(this.angle), this.rotation != this._rotation && this.setRotation(this.rotation);
      },
      'update': function () {
        this.updateOtherEntities(), this.exists && !(0x0 > this.zIndex) && (this.setProperty(), this.sorting(), this.updateChildren(), this.isClicked && (ig.input.state('click') || this.released()));
      },
      'draw': function () {
        this.drawOtherEntities();
        if (this.exists && !(ig.game.addOnReady && 0x0 > this.zIndex) && this.visible && Math.floor(this.size.x) && Math.floor(this.size.y)) {
          var _0x1a9eaf = ig.game.screen.x,
            _0x3e2438 = ig.game.screen.y;
          this.isCameraLock && (_0x3e2438 = _0x1a9eaf = 0x0);
          var _0x1d5fa9 = this.groupParent ? ig.game.parentPos(this.groupParent) : {
              'x': 0x0,
              'y': 0x0
            },
            _0x1a9eaf = _0x1d5fa9.x + this.x - _0x1a9eaf,
            _0x3e2438 = _0x1d5fa9.y + this.y - _0x3e2438;
          ig.game.useResponsive && this.isResponsive && (_0x3e2438 = ig.responsive.toAnchor(_0x1a9eaf, _0x3e2438, ig.game.anchorType), _0x1a9eaf = _0x3e2438.x, _0x3e2438 = _0x3e2438.y);
          var _0x5bd561 = _0x1d5fa9 = 0x1;
          0x0 > this.scale.x && (_0x1d5fa9 = -0x1), 0x0 > this.scale.y && (_0x5bd561 = -0x1);
          var _0x38a7fc = ig.system.context;
          _0x38a7fc.save(), 0x1 != this.alpha && (ig.system.context.globalAlpha *= this.alpha), _0x38a7fc.translate(ig.system.getDrawPos(_0x1a9eaf), ig.system.getDrawPos(_0x3e2438)), _0x38a7fc.rotate(this.rotation), _0x38a7fc.scale(this._scale.x, this._scale.y);
          if (0x0 > _0x1d5fa9 || 0x0 > _0x5bd561) _0x38a7fc.save(), _0x38a7fc.scale(_0x1d5fa9, _0x5bd561);
          var _0x1dfcf3 = this.width * this.anchor.x,
            _0x4b5948 = this.height * this.anchor.y;
          _0x38a7fc.save(), _0x38a7fc.translate(-_0x1dfcf3, -_0x4b5948), this.drawShape(), _0x38a7fc.restore(), _0x38a7fc.translate(ig.system.getDrawPos(-_0x1a9eaf), ig.system.getDrawPos(-_0x3e2438)), this.drawChildren(), (0x0 > _0x1d5fa9 || 0x0 > _0x5bd561) && _0x38a7fc.restore(), _0x38a7fc.restore();
        }
      },
      'drawShape': function () {},
      'clicked': function () {
        this.isClicked || (this.isClicked = !0x0, this.onClick.dispatch(this));
      },
      'released': function () {
        this.isClicked && (this.isClicked = !0x1, this.onRelease.dispatch(this));
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.addon.advanced-custom-text').requires('game.entities.addon.custom-text').defines(function () {
    EntityAdvancedCustomText = EntityCustomText.extend({
      'textDatas': [],
      'inputProperty': function (_0x5dbcd9, _0x4ceb02, _0x237c24) {
        if (Array.isArray(_0x5dbcd9)) {
          this.textDatas = [];
          for (var _0x6ca2ee = '', _0x388bb8 = 0x0; _0x388bb8 < _0x5dbcd9.length; _0x388bb8++) {
            var _0x2c8d71 = _0x5dbcd9[_0x388bb8],
              _0x6ca2ee = _0x6ca2ee + _0x2c8d71.text;
            this.textDatas.push(_0x2c8d71);
          }
          _0x5dbcd9 = _0x6ca2ee;
        }
        this.parent(_0x5dbcd9, _0x4ceb02, _0x237c24);
      },
      'checkLines': function () {
        if (this.textDatas) {
          try {
            var _0x20feb9 = this.showText,
              _0x3bbc76 = _0x20feb9.split("\n");
          } catch (_0x1034f9) {
            throw "text not detected";
          }
          var _0x20feb9 = [],
            _0xea788a = ig.system.context,
            _0x3bbc76 = this.fontWeight + " " + this.fontSize + "px " + this.fontType;
          _0xea788a.save(), _0xea788a.font = _0x3bbc76, 0x0 < this.strokeThickness && (_0xea788a.strokeStyle = this.stroke, _0xea788a.lineWidth = this.strokeThickness), _0x20feb9.push([]);
          for (var _0x29c180 = 0x0, _0x4b3bd8 = 0x0; _0x4b3bd8 < this.textDatas.length; _0x4b3bd8++) for (var _0x52b224 = this.textDatas[_0x4b3bd8], _0x3bbc76 = _0x52b224.text.split("\n"), _0x534996 = 0x0; _0x534996 < _0x3bbc76.length; _0x534996++) {
            var _0x55f8cc = _0x3bbc76[_0x534996].split(" ");
            0x0 < _0x534996 && (_0x29c180 = 0x0, _0x20feb9.push([]));
            for (var _0x1fa69f = _0x20feb9[_0x20feb9.length - 0x1], _0x112605 = 0x0; _0x112605 < _0x55f8cc.length; _0x112605++) {
              var _0x456b05 = _0x55f8cc[_0x112605];
              if (0x0 != _0x456b05.length) {
                var _0x36c3f7 = " ";
                _0x4b3bd8 < this.textDatas.length - 0x1 ? 0x1 < _0x3bbc76.length && _0x534996 < _0x3bbc76.length - 0x1 && _0x112605 == _0x55f8cc.length - 0x1 && (_0x36c3f7 = '') : _0x112605 == _0x55f8cc.length - 0x1 && (_0x36c3f7 = ''), _0x456b05 += _0x36c3f7, this.wordWrap && (_0x36c3f7 = _0xea788a.measureText(_0x456b05).width, _0x29c180 += _0x36c3f7, _0x29c180 >= this.wordWrapWidth && (_0x20feb9.push([]), _0x1fa69f = _0x20feb9[_0x20feb9.length - 0x1], _0x29c180 = _0x36c3f7)), _0x1fa69f.push({
                  'text': _0x456b05,
                  'fill': _0x52b224.fill
                });
              }
            }
          }
          return _0x20feb9;
        }
        return this.parent();
      },
      'updateText': function () {
        if (this.textDatas) {
          this.lines = this.checkLines(), this.textAnchor.x = 0x0;
          switch (this.align) {
            case 'right':
              this.textAnchor.x = 0x1;
              break;
            case 'center':
              this.textAnchor.x = 0.5;
              break;
            case 'left':
              this.textAnchor.x = 0x0;
          }
          this.getDimension();
        } else this.parent();
      },
      'getDimension': function () {
        if (this.textDatas) {
          var _0x5cd760 = ig.system.context,
            _0x6edd5b = this.fontWeight + " " + this.fontSize + "px " + this.fontType;
          _0x5cd760.save(), _0x5cd760.font = _0x6edd5b;
          for (var _0x6edd5b = null, _0x564500 = 0x0, _0xda142c = 0x0; _0xda142c < this.lines.length; _0xda142c++) {
            for (var _0x1fc24c = this.lines[_0xda142c], _0x30b853 = 0x0, _0x2ee975 = 0x0; _0x2ee975 < _0x1fc24c.length; _0x2ee975++) var _0x2e1606 = _0x5cd760.measureText(_0x1fc24c[_0x2ee975].text).width, _0x30b853 = _0x30b853 + _0x2e1606;
            _0x6edd5b ? _0x30b853 > _0x6edd5b && (_0x6edd5b = _0x30b853) : _0x6edd5b = _0x30b853, _0x564500 += this.fontSize + this.lineSpacing;
          }
          this.width = _0x6edd5b + this.strokeThickness, this.height = _0x564500 + this.strokeThickness, _0x5cd760.restore();
        } else this.parent();
      },
      'draw': function () {
        if (this.textDatas) {
          if (this.exists && (!ig.game || !(ig.game.addOnReady && 0x0 > this.zIndex)) && this.visible) {
            var _0x5158ae = this.groupParent ? ig.game.parentPos(this.groupParent) : {
                'x': 0x0,
                'y': 0x0
              },
              _0x6ca6ad = _0x5158ae.x + this.x,
              _0x277d0a = _0x5158ae.y + this.y,
              _0x5158ae = _0x6ca6ad - (this.width * this.anchor.x - this.width * this.textAnchor.x),
              _0x3b2ea9 = _0x277d0a - this.height * this.anchor.y;
            if (ig.game.useResponsive && this.isResponsive) var _0x561be6 = ig.responsive.toAnchor(_0x5158ae, _0x3b2ea9, ig.game.anchorType),
              _0x5158ae = _0x561be6.x,
              _0x3b2ea9 = _0x561be6.y,
              _0x561be6 = ig.responsive.toAnchor(_0x6ca6ad, _0x277d0a, ig.game.anchorType),
              _0x6ca6ad = _0x561be6.x,
              _0x277d0a = _0x561be6.y;
            var _0x224f8c = _0x561be6 = 0x1;
            0x0 > this.scale.x && (_0x561be6 = -0x1), 0x0 > this.scale.y && (_0x224f8c = -0x1);
            var _0x37b3f4 = ig.system.context,
              _0x2a6130 = this.fontWeight + " " + this.fontSize + "px " + this.fontType;
            _0x37b3f4.save(), 0x1 != this.alpha && (_0x37b3f4.globalAlpha = this.alpha), _0x37b3f4.translate(ig.system.getDrawPos(_0x6ca6ad), ig.system.getDrawPos(_0x277d0a)), _0x37b3f4.rotate(this.rotation), _0x37b3f4.scale(this._scale.x, this._scale.y);
            if (0x0 > _0x561be6 || 0x0 > _0x224f8c) _0x37b3f4.save(), _0x37b3f4.scale(_0x561be6, _0x224f8c);
            _0x37b3f4.translate(ig.system.getDrawPos(-_0x6ca6ad), ig.system.getDrawPos(-_0x277d0a)), _0x37b3f4.textBaseline = 'alphabetic', _0x37b3f4.font = _0x2a6130, _0x37b3f4.textAlign = 'left', _0x37b3f4.miterLimit = this.miterLimit, this.style.enableShadow && (_0x37b3f4.save(), _0x37b3f4.shadowOffsetX = this.style.shadowOffsetX, _0x37b3f4.shadowOffsetY = this.style.shadowOffsetY, _0x37b3f4.shadowColor = this.style.shadowColor, _0x37b3f4.shadowBlur = this.style.shadowBlur);
            for (_0x6ca6ad = 0x0; _0x6ca6ad < this.lines.length; _0x6ca6ad++) {
              for (var _0x277d0a = this.lines[_0x6ca6ad], _0x2a6130 = this.fontSize + this.lineSpacing, _0x2a6130 = _0x3b2ea9 - this.lineSpacing + 0.8 * _0x2a6130 + _0x6ca6ad * _0x2a6130, _0x141ede = 0x0, _0x42d878 = 0x0; _0x42d878 < _0x277d0a.length; _0x42d878++) var _0x873a11 = _0x277d0a[_0x42d878], _0x482094 = _0x873a11.text, _0x46d651 = _0x37b3f4.measureText(_0x482094).width, _0x141ede = _0x141ede + _0x46d651;
              for (var _0x4b0a0d = _0x5158ae - _0x141ede * this.textAnchor.x, _0x42d878 = _0x141ede = 0x0; _0x42d878 < _0x277d0a.length; _0x42d878++) {
                var _0x873a11 = _0x277d0a[_0x42d878],
                  _0x482094 = _0x873a11.text,
                  _0x46e7cd = _0x4b0a0d + _0x141ede,
                  _0x46d651 = _0x37b3f4.measureText(_0x482094).width;
                0x0 < this.strokeThickness && (_0x37b3f4.strokeStyle = this.stroke, _0x37b3f4.lineWidth = this.strokeThickness, _0x37b3f4.strokeText(_0x482094, _0x46e7cd, _0x2a6130)), _0x141ede += _0x46d651;
              }
            }
            this.style.enableShadow && 0x0 < this.strokeThickness && _0x37b3f4.restore();
            for (_0x6ca6ad = 0x0; _0x6ca6ad < this.lines.length; _0x6ca6ad++) {
              _0x277d0a = this.lines[_0x6ca6ad], _0x2a6130 = this.fontSize + this.lineSpacing, _0x2a6130 = _0x3b2ea9 - this.lineSpacing + 0.8 * _0x2a6130 + _0x6ca6ad * _0x2a6130;
              for (_0x42d878 = _0x141ede = 0x0; _0x42d878 < _0x277d0a.length; _0x42d878++) _0x873a11 = _0x277d0a[_0x42d878], _0x482094 = _0x873a11.text, _0x46d651 = _0x37b3f4.measureText(_0x482094).width, _0x141ede += _0x46d651;
              _0x4b0a0d = _0x5158ae - _0x141ede * this.textAnchor.x;
              for (_0x42d878 = _0x141ede = 0x0; _0x42d878 < _0x277d0a.length; _0x42d878++) _0x873a11 = _0x277d0a[_0x42d878], _0x482094 = _0x873a11.text, _0x46e7cd = _0x4b0a0d + _0x141ede, _0x46d651 = _0x37b3f4.measureText(_0x482094).width, _0x37b3f4.fillStyle = _0x873a11.fill, _0x37b3f4.fillText(_0x482094, _0x46e7cd, _0x2a6130), _0x141ede += _0x46d651;
            }
            this.style.enableShadow && 0x0 >= this.strokeThickness && _0x37b3f4.restore(), this.drawChildren(), (0x0 > _0x561be6 || 0x0 > _0x224f8c) && _0x37b3f4.restore(), 0x1 != this.alpha && (_0x37b3f4.globalAlpha = 0x1), _0x37b3f4.restore();
          }
        } else this.parent();
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.objects.click-btn').requires('game.entities.addon.sprite').defines(function () {
    EntityClickBtn = EntitySprite.extend({
      'name': 'click-btn',
      'btnType': 0x1,
      'clickableLayer': null,
      'setProperties': function (_0x2cd233) {
        this.parent(_0x2cd233), this.onStartClick = new ig.AddSignal(this), this.onGoing = !0x1, this.inputEnabled = !0x0, this.anchor.setTo(0.5);
      },
      'changePage': function (_0x99d770) {
        ig.game.changePage(_0x99d770);
      },
      'moreGames': function () {
        this.setProperty(), this.div_layer_name = this.name = 'more-games', _SETTINGS.MoreGames.Enabled ? (_SETTINGS.MoreGames.Link && (this.link = _SETTINGS.MoreGames.Link), _SETTINGS.MoreGames.NewWindow && (this.newWindow = _SETTINGS.MoreGames.NewWindow), this.clickableLayer = new ClickableDivLayer(this)) : this.kill();
      },
      'show': function () {
        if (this.exists && 'more-games' == this.name) {
          var _0x3611eb = ig.domHandler.getElementById('#' + this.div_layer_name);
          ig.domHandler.show(_0x3611eb);
        }
      },
      'hide': function () {
        if (this.exists && 'more-games' == this.name) {
          var _0x33ad41 = ig.domHandler.getElementById('#' + this.div_layer_name);
          ig.domHandler.hide(_0x33ad41);
        }
      },
      'tweenClick': function () {
        csound.sfxPlay('click');
        var _0x346e9b = 0.9 * this.scale.x,
          _0x111d22 = 0.9 * this.scale.y;
        new ig.TweenDef(this.scale).to({
          'x': _0x346e9b,
          'y': _0x111d22
        }, 0x41).easing(ig.Tween.Easing.Bounce.EaseInOut).repeat(0x1).yoyo(!0x0).onComplete(function () {
          this.onGoing = !0x1, this.inputEnabled = !0x0, this.onClick.dispatch(), this.released();
        }.bind(this)).start();
      },
      'checkArea': function () {},
      'clicked': function () {
        if ((!ig.game.transition || !ig.game.transition.isClosed) && !this.isClicked && !this.onGoing) this.inputEnabled = !0x1, this.onGoing = this.isClicked = !0x0, this.onStartClick.dispatch(), this.tweenClick();
      },
      'released': function () {
        this.isClicked && !this.onGoing && (this.isClicked = !0x1, this.onRelease.dispatch());
      },
      'update': function () {
        this.parent(), this.clickableLayer && this.clickableLayer.update(this.pos.x, this.pos.y, this.size.x, this.size.y);
      },
      'draw': function () {
        this.parent();
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.objects.popup.base-popup').requires('game.entities.addon.locked-group').defines(function () {
    EntityBasePopup = EntityLockedGroup.extend({
      'init': function (_0x3006a3, _0x92117, _0x18e93f) {
        this.parent(_0x3006a3, _0x92117, _0x18e93f), this.greyBg = ig.game.spawnEntity(EntityManualDrawEntity, 0x0, 0x0), this.greyBg.anchor.setTo(0.5), this.greyBg.inputEnabled = !0x0, this.greyBg.updateOnOrientationChange = function () {
          this.setShape(ig.system.width, ig.system.height);
        }.bind(this.greyBg), this.greyBg.drawShape = function () {
          var _0x4761df = ig.game.geom.rectangle(0x0, 0x0, this.width, this.height);
          ig.game.geomDebug.rect(_0x4761df, 'black', 0.5 * ig.system.context.globalAlpha);
        }.bind(this.greyBg), this.greyBg.alpha = 0x0, this.add(this.greyBg), this.greyBg.updateOnOrientationChange(), this.onAppeared = new ig.AddSignal(this), this.onDisappeared = new ig.AddSignal(this), this.scale.setTo(0.01), this.alpha = 0.1;
      },
      'appear': function () {
        if (!this.onGoing) {
          this.visible = this.isActive = this.onGoing = curState().curtainBg.visible = !0x0;
          var _0x58a8eb = [1.2, 0x1];
          new ig.TweenDef(this.greyBg).to({
            'alpha': 0x1
          }, 0x12c).start(), new ig.TweenDef(this.scale).to({
            'y': _0x58a8eb,
            'x': _0x58a8eb
          }, 0x12c).delay(0.1).onStart(function () {
            this.alpha = 0x1;
          }.bind(this)).onUpdate(function () {
            this.greyBg.scale.x = 0x1 / this.scale.x, this.greyBg.scale.y = 0x1 / this.scale.y;
          }.bind(this)).onComplete(function () {
            this.onGoing = !0x1, this.onAppeared.dispatch(), curState().curtainBg.visible = !0x1;
          }.bind(this)).start();
        }
      },
      'disappear': function () {
        if (!this.onGoing) {
          this.onGoing = !0x0, this.isActive = !0x1, curState().curtainBg.visible = !0x0, new ig.TweenDef(this.greyBg).to({
            'alpha': 0.01
          }, 0x12c).start();
          var _0x44db6c = [1.2, 0x0];
          new ig.TweenDef(this.scale).to({
            'x': _0x44db6c,
            'y': _0x44db6c
          }, 0x12c).onUpdate(function () {
            this.greyBg.scale.x = 0x1 / this.scale.x, this.greyBg.scale.y = 0x1 / this.scale.y;
          }.bind(this)).onComplete(function () {
            curState().curtainBg.visible = !0x1, this.onDisappeared.dispatch(), this.kill();
          }.bind(this)).start();
        }
      },
      'draw': function () {
        this.parent();
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.objects.popup.reset-confirm-popup').requires('game.entities.objects.popup.base-popup').defines(function () {
    EntityConfirmPopup = EntityBasePopup.extend({
      'init': function (_0x1375d9, _0x418b05, _0x2e43e6) {
        this.parent(_0x1375d9, _0x418b05, _0x2e43e6), this.bg = ig.CallAsset.addImage(0x0, 0x0, 'panel-reset'), this.bg.anchor.setTo(0.5), this.add(this.bg), this.showText = ig.game.addText(0x0, this.bg.y - 0.2 * this.bg.height, _STRINGS.Game.confirmReset, 0x32, fonts.font1, {
          'align': 'center',
          'wordWrap': !0x0,
          'wordWrapWidth': 0.8 * this.bg.width,
          'lineSpacing': 0x5
        }), this.showText.anchor.setTo(0.5), this.showText.fill = 'white', this.add(this.showText), this.yesBtn = ig.CallAsset.addFrame(0x0, this.bg.y + 0.25 * this.bg.height, 'ingame/buttons/btn-yes', {}, EntityClickBtn), this.yesBtn.x -= 0.6 * this.yesBtn.size.x, this.yesBtn.onStartClick.add(function () {
          curState().curtainBg.visible = !0x0;
        }, this), this.yesBtn.onClick.add(this.resetProgress, this), this.add(this.yesBtn), _0x1375d9 = ig.game.addText(0x0, -0x2, _STRINGS.Game.yes, Math.floor(0.5 * this.yesBtn.height), fonts.font1, {
          'strokeThickness': 0x3
        }), _0x1375d9.anchor.setTo(0.5), this.yesBtn.addChild(_0x1375d9), this.noBtn = ig.CallAsset.addFrame(this.yesBtn.x + 1.2 * this.yesBtn.width, this.yesBtn.y, 'ingame/buttons/btn-no', {}, EntityClickBtn), this.noBtn.onStartClick.add(function () {
          curState().curtainBg.visible = !0x0;
        }, this), this.noBtn.onClick.add(this.disappear, this), this.add(this.noBtn), _0x1375d9 = ig.game.addText(0x0, -0x2, _STRINGS.Game.no, _0x1375d9.fontSize, fonts.font1, {
          'strokeThickness': _0x1375d9.strokeThickness
        }), _0x1375d9.anchor.setTo(0.5), this.noBtn.addChild(_0x1375d9);
      },
      'resetProgress': function () {
        ig.GameData.isResetGame = !0x0, ig.game.changePage(LevelMainmenu);
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.buttons.base-button').requires('game.entities.addon.manual-draw-entity').defines(function () {
    EntityBaseButton = EntityManualDrawEntity.extend({
      'init': function (_0x10e70e, _0x554439, _0xba8689) {
        this.parent(_0x10e70e, _0x554439, _0xba8689), this.anchor.setTo(0.5), this.onStartClick = new ig.AddSignal(this), this.onGoing = !0x1, this.inputEnabled = !0x0;
      },
      'tweenClick': function () {
        csound.sfxPlay('click');
        var _0x337296 = 0.9 * this.scale.x,
          _0x576a9d = 0.9 * this.scale.y;
        new ig.TweenDef(this.scale).to({
          'x': _0x337296,
          'y': _0x576a9d
        }, 0x41).easing(ig.Tween.Easing.Bounce.EaseInOut).repeat(0x1).yoyo(!0x0).onComplete(function () {
          this.onGoing = !0x1, this.inputEnabled = !0x0, this.onClick.dispatch(), this.released();
        }.bind(this)).start();
      },
      'clicked': function () {
        if ((!ig.game.transition || !ig.game.transition.isClosed) && !this.isClicked && !this.onGoing) this.inputEnabled = !0x1, this.onGoing = this.isClicked = !0x0, this.onStartClick.dispatch(), this.tweenClick();
      },
      'released': function () {
        this.isClicked && !this.onGoing && (this.isClicked = !0x1, this.onRelease.dispatch());
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.buttons.button-sound').requires('game.entities.buttons.base-button').defines(function () {
    EntityButtonSound = EntityBaseButton.extend({
      'btnNames': ['bgmPlayer', 'sfxPlayer'],
      'sessionNames': ['music', 'sound'],
      'btnIdx': 0x0,
      'init': function (_0x91c3c5, _0x1ae206, _0x21e625) {
        this.parent(_0x91c3c5, _0x1ae206, _0x21e625), this.image = ig.Image.cache[imgCache.ingame.path.img], this.frameData = ig.CallAsset.searchSpriteData('ingame/buttons/audio-checkbox'), this.iconData = null, this.setFrame(), this.setShape(this.frameData.frame.w, this.frameData.frame.h);
      },
      'setFrame': function () {
        var _0x1199a9 = this.btnNames[this.btnIdx];
        ig.game.sessionData[this.sessionNames[this.btnIdx]] ? (this.iconData = ig.CallAsset.searchSpriteData('ingame/buttons/audio-check'), ig.soundHandler[_0x1199a9].unmute()) : (this.iconData = null, ig.soundHandler[_0x1199a9].mute());
      },
      'drawShape': function () {
        this.image.draw(0x0, 0x0, this.frameData.frame.x, this.frameData.frame.y, this.frameData.frame.w, this.frameData.frame.h), this.iconData && this.image.draw(this.width / 0x2 - 0.35 * this.iconData.frame.w, this.height / 0x2 - 0.6 * this.iconData.frame.h, this.iconData.frame.x, this.iconData.frame.y, this.iconData.frame.w, this.iconData.frame.h);
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.objects.options').requires('game.entities.addon.locked-group', 'plugins.addon.add-signal', 'game.entities.objects.popup.reset-confirm-popup', 'game.entities.buttons.button-sound').defines(function () {
    EntityOptions = EntityLockedGroup.extend({
      'name': 'setting-group',
      'init': function (_0x3c545b, _0x2e4804, _0x574e95) {
        this.parent(_0x3c545b, _0x2e4804, _0x574e95), this.isSfxClicked = this.isBgmClicked = this.onGoing = this.isActive = !0x1, this.onResume = new ig.AddSignal(this), this.startResume = new ig.AddSignal(this), this.onPause = new ig.AddSignal(this), this.onStartPause = new ig.AddSignal(this), this.create(), this.initPopup();
      },
      'create': function () {
        this.mode = 'setting', this.buttons = [], this.bg = ig.CallAsset.addImage(0x0, 0x0, 'bg-popup'), this.bg.anchor.setTo(0.5), this.bg.y += 0.5 * this.bg.size.y, this.add(this.bg), this.showTitle = ig.game.addText(0x0, this.bg.y - 0.38 * this.bg.size.y, _STRINGS.Game.settings, 0x69, fonts.font1, {
          'fill': '#1a1c1b'
        }), this.showTitle.anchor.setTo(0.5), this.add(this.showTitle), this.bgmBtn = ig.game.spawnEntity(EntityButtonSound, this.bg.x + 0.22 * this.bg.width, this.bg.y - 0.16 * this.bg.size.y), this.bgmBtn.onClick.add(this.bgmSetting, this), this.add(this.bgmBtn);
        var _0x271c15 = ig.game.addText(-(0.25 * this.bg.width), this.bgmBtn.y, _STRINGS.Game.bgm, 0x5a, fonts.font1, {
          'fill': '#1c1c1c'
        });
        _0x271c15.anchor.setTo(0x0, 0.5), _0x271c15.updateText(), this.add(_0x271c15), this.sfxBtn = ig.game.spawnEntity(EntityButtonSound, this.bgmBtn.x, this.bgmBtn.y + 1.5 * this.bgmBtn.size.y, {
          'btnIdx': 0x1
        }), this.sfxBtn.onClick.add(this.sfxSetting, this), this.add(this.sfxBtn), _0x271c15 = ig.game.addText(_0x271c15.x, this.sfxBtn.y, _STRINGS.Game.sfx, _0x271c15.fontSize, fonts.font1, {
          'fill': _0x271c15.fill
        }), _0x271c15.anchor.setTo(0x0, 0.5), this.add(_0x271c15), this.okBtn = ig.CallAsset.addFrame(0x0, this.bg.y + 0.32 * this.bg.size.y, 'ingame/buttons/btn-resume', {}, EntityClickBtn), this.okBtn.onStartClick.add(function () {
          this.buttonEnabled(!0x1);
        }, this), this.okBtn.onClick.add(this.disappear, this), this.add(this.okBtn), this.buttons = [this.bgmBtn, this.sfxBtn, this.okBtn], this.setAudioBtnFrameName();
      },
      'pauseMode': function () {
        this.mode = 'pause', this.homeBtn = ig.CallAsset.addFrame(this.okBtn.x - 1.2 * this.okBtn.size.x, this.okBtn.y, 'ingame/buttons/btn-home', {}, EntityClickBtn), this.homeBtn.onStartClick.add(ig.game.disableBtns, ig.game), this.homeBtn.onClick.add(function (_0x172c5f) {
          _0x172c5f.changePage(LevelMainmenu);
        }, this), this.add(this.homeBtn), this.resetBtn = ig.CallAsset.addFrame(this.okBtn.x + 1.2 * this.okBtn.size.x, this.okBtn.y, 'ingame/buttons/btn-retry', {}, EntityClickBtn), this.resetBtn.onStartClick.add(function () {
          curState().curtainBg.visible = !0x0;
        }, this), this.resetBtn.onClick.add(this.createResetPopup, this), this.add(this.resetBtn);
      },
      'createResetPopup': function () {
        this.confirmPopup = ig.game.spawnEntity(EntityConfirmPopup, curState().centerX, curState().centerY, {
          'isCameraLock': !0x0
        }), this.confirmPopup.onDisappeared.add(function () {
          this.confirmPopup = null;
        }, this), curState().gFront.add(this.confirmPopup), this.confirmPopup.appear();
      },
      'initPopup': function () {
        this.y = 1.1 * -this.bg.size.y, this.alpha = 0x0, this.visible = !0x1, curState().greyBg.alpha = 0x0;
      },
      'moreBtnSetting': function () {
        if (_SETTINGS.MoreGames.Enabled) {
          var _0x5a278f = ig.game.getEntityByName('more-games');
          _0x5a278f && (this.isActive ? _0x5a278f.hide() : _0x5a278f.show());
        }
      },
      'buttonEnabled': function (_0x5e440b) {
        for (var _0x4c0f61 = 0x0; _0x4c0f61 < this.buttons.length; _0x4c0f61++) this.buttons[_0x4c0f61].inputEnabled = _0x5e440b;
      },
      'bgmSetting': function () {
        ig.game.sessionData.music = !ig.game.sessionData.music, ig.game.save('music', ig.game.sessionData.music), ig.game.setAudioSettings(), ig.game.sessionData.music && (csound.bgmIsPlaying('background') || ig.soundHandler.bgmPlayer.play('background')), this.setAudioBtnFrameName();
      },
      'sfxSetting': function () {
        ig.game.sessionData.sound = !ig.game.sessionData.sound, ig.game.save('sound', ig.game.sessionData.sound), ig.game.setAudioSettings(), this.setAudioBtnFrameName();
      },
      'setAudioBtnFrameName': function () {
        this.bgmBtn.setFrame(), this.sfxBtn.setFrame();
      },
      'appear': function () {
        if (!this.onGoing) {
          this.onStartPause.dispatch(), this.visible = this.isActive = this.onGoing = !0x0, this.buttonEnabled(!0x1), this.moreBtnSetting(), 'pause' == this.mode && (curState().gamePaused = !0x0);
          var _0x410936 = curState().centerY - 0.5 * this.bg.size.y;
          curState().greyBg.visible = !0x0, new ig.TweenDef(curState().greyBg).to({
            'alpha': 0x1
          }, 0x12c).start(), new ig.TweenDef(this).to({
            'alpha': 0x1,
            'y': _0x410936
          }, 0x12c).onComplete(function () {
            this.onGoing = !0x1, this.buttonEnabled(!0x0), this.onPause.dispatch();
          }.bind(this)).start();
        }
      },
      'disappear': function () {
        if (!this.onGoing) {
          this.onGoing = !0x0, this.isActive = !0x1, this.startResume.dispatch(), new ig.TweenDef(curState().greyBg).to({
            'alpha': 0x0
          }, 0x12c).start();
          var _0x50d491 = 1.1 * -this.bg.size.y;
          new ig.TweenDef(this).to({
            'alpha': 0x0,
            'y': _0x50d491
          }, 0x12c).onComplete(function () {
            this.visible = this.onGoing = !0x1, curState().greyBg.visible = !0x1, 'pause' == this.mode && (curState().gamePaused = !0x1), this.moreBtnSetting(), this.onResume.dispatch();
          }.bind(this)).start();
        }
      },
      'update': function () {
        this.parent();
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.addon.game-data').defines(function () {
    InGameData = ig.Class.extend({
      'worldTilesId': [[[{
        'normalTile': 0xa,
        'resourceTile': 0x1,
        'processorTile': 0x2,
        'startTile': 0xd
      }, {
        'normalTile': 0x11,
        'resourceTile': 0x1b,
        'processorTile': 0x16
      }, {
        'normalTile': 0x7,
        'resourceTile': 0x10,
        'processorTile': 0xc
      }], [{
        'normalTile': 0x1a,
        'resourceTile': 0x9,
        'processorTile': 0x8
      }, {
        'normalTile': 0xf,
        'resourceTile': 0x14,
        'processorTile': 0xe
      }, {
        'normalTile': 0x0,
        'resourceTile': 0x5,
        'processorTile': 0x6
      }], [{
        'normalTile': 0x19,
        'resourceTile': 0x3,
        'processorTile': 0x4
      }, {
        'normalTile': 0x18,
        'resourceTile': 0x12,
        'processorTile': 0x13
      }, {
        'normalTile': 0x17,
        'resourceTile': 0xb,
        'processorTile': 0x15
      }]]],
      'tilesImgData': [[{
        'normalTile': 0x0,
        'resourceTile': '1/icon-warehouse-factory',
        'processorTile': '1/icon-warehouse',
        'productIcon': '1/truck',
        'rewardIcon': 'claim-warehouse'
      }, {
        'normalTile': 0x1,
        'resourceTile': '1/icon-airport-factory',
        'processorTile': '1/icon-airport',
        'productIcon': '1/truck',
        'rewardIcon': 'claim-airport'
      }, {
        'normalTile': 0x2,
        'resourceTile': '1/icon-train-station-factory',
        'processorTile': '1/icon-train-station',
        'productIcon': '1/truck',
        'rewardIcon': 'claim-train-station'
      }]],
      'factoryDatas': null,
      'mapStrokeLineWidth': 0x4,
      'rewardMultiplier': 0xa,
      'areaWorldsCount': [],
      'newAreaReminder': [],
      'worldCost': [0x0, 0x7530],
      'deliveryTime': 0x3e8,
      'offlineIncome': 0xa,
      'worldDatabase': [{
        'initialCost': 0x14,
        'coefficient': 0x2,
        'initialTime': 0x1,
        'initialRevenue': 0x14
      }, {
        'initialCost': 0x1770,
        'coefficient': 2.2,
        'initialTime': 0x5,
        'initialRevenue': 0xfa0
      }],
      'upgradeDatabase': [{
        'initialCost': 0x1f4,
        'coefficient': 0x2,
        'upgradeCoefficient': 0.05
      }, {
        'initialCost': 0x1f4,
        'coefficient': 0x2,
        'upgradeCoefficient': 0.05
      }, {
        'initialCost': 0x1f4,
        'coefficient': 1.1,
        'upgradeCoefficient': 0.25
      }],
      'sendingResourceTime': 0x1,
      'timerSpeed': 0x1,
      'incomeMultiplier': 0x1,
      'boostMultiplier': 0x2,
      'boostDuration': 0x3c,
      'boostTimer': [0x0, 0x0],
      'upgradeAdSession': 0x3c,
      'upgradeAdCooldown': 0x3c,
      'upgradeEnableCondition': 0x3,
      'moneyChart': "k Million Billion Trillion Allion Kallion Tallion Fallion Hallion Rallion Vallion Jallion Zallion Illion Killion Tillion Fillion Hillion Rillion Villion Jillion Zillion Kullion Tullion Fullion Hullion Rullion Vullion Jullion Zullion".split(" "),
      'letterChart': 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',
      'vowelLetter': 'AIUEO',
      'isResetGame': !0x1,
      'areaId': 0x0,
      'gapTweenTileY': 0x32
    }), ig.GameData = new InGameData();
  }), ig.baked = !0x0, ig.module('plugins.addon.game-data-formula').requires('plugins.addon.game-data').defines(function () {
    InGameData.inject({
      'generateWorldMapData': function () {
        var _0x4645b7 = ['area1'],
          _0xb96c01 = [];
        this.areaWorldsCount = [], this.newAreaReminder = [];
        for (var _0x42947e = 0x0; _0x42947e < _0x4645b7.length; _0x42947e++) {
          var _0x19a370 = tileMapCache[_0x4645b7[_0x42947e]].layers;
          this.areaWorldsCount.push(_0x19a370.length), this.newAreaReminder.push(!0x1), _0xb96c01 = _0xb96c01.concat(_0x19a370);
        }
        this.tileSeq = [], _0x4645b7 = ig.GameData.worldTilesId.length, _0xb96c01.length < _0x4645b7 && (_0x4645b7 = _0xb96c01.length);
        for (_0x42947e = 0x0; _0x42947e < _0x4645b7; _0x42947e++) for (_0x19a370 = 0x0; _0x19a370 < _0xb96c01[_0x42947e].length; _0x19a370++) {
          var _0x54f68e = _0xb96c01[_0x42947e][_0x19a370],
            _0x40b2ef = this.checkLandData(_0x42947e, _0x54f68e);
          ig.merge(_0x54f68e, _0x40b2ef), this.tileSeq.push(_0x54f68e);
        }
        this.tileDatas = [];
        for (_0x42947e = 0x0; _0x42947e < _0x4645b7; _0x42947e++) {
          this.tileDatas[_0x42947e] = [], _0xb96c01 = ig.GameData.worldTilesId[_0x42947e];
          for (_0x19a370 = 0x0; _0x19a370 < _0xb96c01.length; _0x19a370++) {
            this.tileDatas[_0x42947e][_0x19a370] = [], _0x54f68e = _0xb96c01[_0x19a370];
            for (_0x40b2ef = 0x0; _0x40b2ef < _0x54f68e.length; _0x40b2ef++) {
              var _0x439c1d = this.getTileDatas(_0x42947e, _0x19a370, _0x40b2ef, _0x54f68e[_0x40b2ef]);
              this.tileDatas[_0x42947e][_0x19a370][_0x40b2ef] = _0x439c1d;
            }
          }
        }
        _0x19a370 = _0x4645b7 = null;
        for (_0x42947e = 0x0; _0x42947e < ig.GameData.tileSeq.length; _0x42947e++) _0x54f68e = ig.GameData.tileSeq[_0x42947e], null == _0x4645b7 ? _0x4645b7 = _0x54f68e.x : _0x54f68e.x < _0x4645b7 && (_0x4645b7 = _0x54f68e.x), null == _0x19a370 ? _0x19a370 = _0x54f68e.y : _0x54f68e.y < _0x19a370 && (_0x19a370 = _0x54f68e.y);
        _0x4645b7 -= this.mapStrokeLineWidth / 0x2, _0x19a370 -= this.mapStrokeLineWidth / 0x2;
        for (_0x42947e = 0x0; _0x42947e < ig.GameData.tileSeq.length; _0x42947e++) _0x54f68e = ig.GameData.tileSeq[_0x42947e], _0x54f68e.x -= _0x4645b7, _0x54f68e.y -= _0x19a370, 0x0 == _0x54f68e.x && (_0x54f68e.x += 0.1), 0x0 == _0x54f68e.y && (_0x54f68e.y += 0.1);
        _0x54f68e = ig.GameData.tileSeq[0x0], ig.TileController.tileSize = {
          'x': _0x54f68e.tWidth,
          'y': tileMapCache.tileSurfaceHeight
        };
      },
      'checkLandData': function (_0x38ba7e, _0x26f879) {
        var _0x105893 = {};
        _0x105893.worldId = _0x38ba7e, _0x105893.onGoing = !0x1, _0x105893.resData = null;
        for (var _0x4b89e1 = ig.GameData.worldTilesId[_0x38ba7e], _0x1d095a = 0x0; _0x1d095a < _0x4b89e1.length; _0x1d095a++) {
          for (var _0x3e3484 = _0x4b89e1[_0x1d095a], _0x70a0df = 0x0; _0x70a0df < _0x3e3484.length; _0x70a0df++) {
            var _0x241bbb = _0x3e3484[_0x70a0df];
            _0x26f879.tId == _0x241bbb.normalTile ? _0x105893.tileType = 'normalTile' : _0x26f879.tId == _0x241bbb.resourceTile ? _0x105893.tileType = 'resourceTile' : _0x26f879.tId == _0x241bbb.processorTile ? _0x105893.tileType = 'processorTile' : _0x26f879.tId == _0x241bbb.startTile && (_0x105893.tileType = 'starterTile');
            if (_0x105893.tileType) {
              _0x105893.sectionId = _0x1d095a, _0x105893.blockId = _0x70a0df;
              break;
            }
          }
          if (_0x105893.tileType) break;
        }
        return _0x105893.tileImgId = ig.GameData.tilesImgData[_0x38ba7e][_0x105893.sectionId].normalTile, _0x105893;
      },
      'checkWorldArea': function () {
        for (var _0x489fea = ig.game.sessionData.onBoardData, _0x482318 = 0x0, _0x224d4f = 0x0; _0x224d4f <= _0x489fea.worldId; _0x224d4f++) var _0x28238f = ig.GameData.countTotTilesWorld(_0x224d4f), _0x482318 = _0x482318 + _0x28238f;
        return ig.GameData.countUnlockedTiles() == _0x482318;
      },
      'getTileDatas': function (_0x4d4d3b, _0x49e954, _0x42cd9f) {
        for (var _0xceeb5b = [], _0x42d302 = 0x0; _0x42d302 < this.tileSeq.length; _0x42d302++) {
          var _0x4c49aa = this.tileSeq[_0x42d302];
          _0x4c49aa.worldId == _0x4d4d3b && _0x4c49aa.sectionId == _0x49e954 && _0x4c49aa.blockId == _0x42cd9f && (_0x4c49aa.tileId = _0xceeb5b.length, _0xceeb5b.push(_0x4c49aa));
        }
        return _0xceeb5b;
      },
      'countTotTilesAllWorlds': function () {
        for (var _0xd06439 = 0x0, _0x349dc3 = 0x0; _0x349dc3 < ig.GameData.tileDatas.length; _0x349dc3++) _0xd06439 += this.countTotTilesWorld(_0x349dc3);
        return _0xd06439;
      },
      'countTotTilesWorld': function (_0x433ad1) {
        var _0x1e8e2d = 0x0;
        _0x433ad1 = ig.GameData.tileDatas[_0x433ad1];
        for (var _0x2f19e1 = 0x0; _0x2f19e1 < _0x433ad1.length; _0x2f19e1++) for (var _0x4682bf = _0x433ad1[_0x2f19e1], _0x599b54 = 0x0; _0x599b54 < _0x4682bf.length; _0x599b54++) _0x1e8e2d += _0x4682bf[_0x599b54].length;
        return _0x1e8e2d;
      },
      'countUnlockedTiles': function () {
        for (var _0x3e83b2 = 0x0, _0x9a659b = 0x0; _0x9a659b < ig.game.sessionData.unlockedSequence.length; _0x9a659b++) for (var _0x541aae = ig.game.sessionData.unlockedSequence[_0x9a659b], _0x1aa722 = 0x0; _0x1aa722 < _0x541aae.length; _0x1aa722++) for (var _0x39dbed = _0x541aae[_0x1aa722], _0x1ae0fe = 0x0; _0x1ae0fe < _0x39dbed.length; _0x1ae0fe++) _0x3e83b2 += _0x39dbed[_0x1ae0fe].tiles.length;
        return _0x3e83b2;
      },
      'countNBlocks': function (_0x43532e, _0x44c352, _0x329250) {
        for (var _0x411790 = ig.game.sessionData.unlockedSequence[_0x43532e][_0x44c352], _0x3790f7 = 0x0, _0x26318f = 0x0; _0x26318f < _0x411790.length; _0x26318f++) if (_0x411790[_0x26318f].blockId == _0x329250) {
          _0x3790f7 = _0x26318f;
          break;
        }
        _0x329250 = 0x0, _0x43532e = ig.GameData.worldTilesId[_0x43532e];
        for (_0x411790 = 0x0; _0x411790 < _0x44c352; _0x411790++) _0x329250 += _0x43532e[_0x411790].length;
        return _0x329250 + (_0x3790f7 + 0x1);
      },
      'countUnlockedBlock': function (_0x4e5ebd, _0x1caa5a, _0x2965e9) {
        for (var _0x126cc2 = ig.game.sessionData.unlockedSequence[_0x4e5ebd][_0x1caa5a], _0x2aa365 = null, _0x31bf97 = 0x0; _0x31bf97 < _0x126cc2.length; _0x31bf97++) if (_0x126cc2[_0x31bf97].blockId == _0x2965e9) {
          _0x2aa365 = _0x31bf97;
          break;
        }
        for (_0x31bf97 = _0x2965e9 = 0x0; _0x31bf97 <= _0x4e5ebd; _0x31bf97++) {
          var _0x126cc2 = ig.GameData.worldTilesId[_0x4e5ebd],
            _0x138857 = _0x126cc2.length;
          _0x31bf97 == _0x4e5ebd && (_0x138857 = _0x1caa5a);
          for (var _0x2addbf = 0x0; _0x2addbf < _0x138857; _0x2addbf++) _0x2965e9 += _0x126cc2[_0x2addbf].length;
        }
        return _0x2965e9 + (_0x2aa365 + 0x1);
      },
      'calculateTilePrice': function (_0x49b849, _0x19775a, _0x3715b6) {
        var _0x321c0f = ig.GameData.worldDatabase[_0x49b849];
        return _0x49b849 = ig.GameData.countNBlocks(_0x49b849, _0x19775a, _0x3715b6), Math.round(_0x321c0f.initialCost * Math.pow(_0x321c0f.coefficient, _0x49b849 - 0x1));
      },
      'calculateSecondaryIncome': function (_0x34e354, _0x3afe2b, _0xb9a9ec) {
        var _0x1915f2 = ig.GameData.worldDatabase[_0x34e354].initialRevenue;
        return _0x34e354 = 0x5 * ig.GameData.countNBlocks(_0x34e354, _0x3afe2b, _0xb9a9ec) * _0x1915f2, _0x3afe2b = ig.GameData.calculateUpgradePercentage(0x1), Math.round(_0x34e354 + _0x34e354 * _0x3afe2b);
      },
      'generateOnlineResIncome': function (_0x7f0cea, _0x258c3e, _0x4d8462) {
        var _0x4ad0c3 = ig.GameData.calculateResIncome(_0x7f0cea, _0x258c3e, _0x4d8462);
        return _0x7f0cea = ig.GameData.calculateTotRes(_0x7f0cea, _0x258c3e, _0x4d8462), {
          'income': parseFloat((_0x7f0cea * _0x4ad0c3 * ig.GameData.incomeMultiplier).toFixed(0x2)),
          'baseIncome': _0x4ad0c3,
          'totRes': _0x7f0cea
        };
      },
      'calculateResIncome': function (_0x214d16, _0x146791, _0x18c5b3) {
        var _0x3288ce = ig.GameData.worldDatabase[_0x214d16];
        return _0x146791 = ig.GameData.countNBlocks(_0x214d16, _0x146791, _0x18c5b3), _0x214d16 = ig.GameData.calculateUpgradePercentage(0x1), _0x3288ce = Math.round(_0x3288ce.initialRevenue * _0x146791), Math.round(_0x3288ce + _0x3288ce * _0x214d16);
      },
      'calculateUpgradePrice': function (_0x16c684) {
        var _0x31e504 = ig.GameData.upgradeDatabase[_0x16c684];
        return Math.round(_0x31e504.initialCost * Math.pow(_0x31e504.coefficient, ig.game.sessionData.upgradeLevel[_0x16c684]));
      },
      'calculateUpgradePercentage': function (_0x1e15ca) {
        return ig.game.sessionData.upgradeLevel[_0x1e15ca] * ig.GameData.upgradeDatabase[_0x1e15ca].upgradeCoefficient;
      },
      'calculateResTime': function (_0x4cdc4a) {
        return ig.GameData.worldDatabase[_0x4cdc4a].initialTime;
      },
      'calculateTotRes': function () {
        return 0x1 + ig.GameData.calculateUpgradePercentage(0x0);
      },
      'calculateOfflineIncome': function () {
        if (!(0x3 > ig.game.sessionData.unlockedSequence[0x0][0x0].length)) {
          var _0x449b4e = new Date(ig.game.sessionData.lastLogin),
            _0x1c25a2 = new Date().getTime(),
            _0x449b4e = _0x449b4e.getTime(),
            _0x1c25a2 = (_0x1c25a2 - _0x449b4e) / 0x3e8;
          0x93a80 < _0x1c25a2 && (_0x1c25a2 = 0x93a80), _0x1c25a2 = Math.floor(_0x1c25a2 / 0x3c), _0x1c25a2 = Math.floor(ig.GameData.offlineIncome * _0x1c25a2), _0x449b4e = ig.GameData.calculateUpgradePercentage(0x2), _0x1c25a2 += Math.floor(_0x449b4e * _0x1c25a2), ig.game.sessionData.lastLogin = new Date(), ig.game.save('lastLogin', ig.game.sessionData.lastLogin), 0x0 < _0x1c25a2 && (_0x449b4e = {
            'reward': _0x1c25a2,
            'titleText': _STRINGS.Game.rewardTitle[0x1],
            'iconName': 'ingame/ui/coins'
          }, this.gPopUp && this.gPopUp.exists && this.gPopUp.titleText == _0x449b4e.titleText ? (this.gPopUp.reward += _0x1c25a2, _0x1c25a2 = '+' + ig.GameData.generateMoneyChart(this.gPopUp.reward), this.gPopUp.setRewardTxt(_0x1c25a2)) : this.createRewardPopup(_0x449b4e));
        }
      },
      'checkProsReward': function (_0x2d804c, _0x6bb279, _0x3a0d61, _0x1fb6ee) {
        if (0x0 > ig.game.sessionData.unlockedProcessor[_0x2d804c].indexOf(_0x6bb279)) {
          _0x1fb6ee = {
            'worldId': _0x2d804c,
            'sectionId': _0x6bb279,
            'blockId': _0x3a0d61,
            'tileId': _0x1fb6ee
          };
          var _0x2fcb0a = 'ingame/reward-icons/' + ig.GameData.tilesImgData[_0x2d804c][_0x6bb279].rewardIcon;
          _0x2d804c = ig.GameData.generateFirstProcessorReward(_0x2d804c, _0x6bb279, _0x3a0d61), ig.GameData.createRewardPopup({
            'tileData': _0x1fb6ee,
            'iconName': _0x2fcb0a,
            'reward': _0x2d804c
          }), ig.GameData.gPopUp.onClaimReward.add(function () {
            ig.game.sessionData.unlockedProcessor[this.tileData.worldId].push(this.tileData.sectionId), ig.game.save('unlockedProcessor', ig.game.sessionData.unlockedProcessor);
          }, ig.GameData.gPopUp);
        }
      },
      'createRewardPopup': function (_0x779c2) {
        _0x779c2 = _0x779c2 ? _0x779c2 : {}, this.gPopUp = ig.game.spawnEntity(EntityRewardPopup, ig.game.centerX, ig.game.centerY, _0x779c2), curState().gFront.add(this.gPopUp), this.gPopUp.appear();
      },
      'getBaseLog': function (_0x1660c3, _0x1bab73) {
        return Math.log(_0x1bab73) / Math.log(_0x1660c3);
      },
      'generateMoneyChart': function (_0x272290) {
        if (!ig.game) return '';
        var _0x13e31f = Math.floor(this.getBaseLog(0x3e8, _0x272290));
        if (0x2710 <= _0x272290) {
          var _0x12e068 = _0x13e31f - 0x1;
          _0x272290 /= Math.pow(0x3e8, _0x13e31f), _0x272290 = parseFloat(_0x272290.toFixed(0x2)), _0x13e31f = " ";
          if (_0x12e068 < this.moneyChart.length) {
            0x0 == _0x12e068 && (_0x13e31f = '');
            var _0x5b623e = this.moneyChart[_0x12e068];
          } else {
            var _0x5b623e = _0x12e068 - this.moneyChart.length,
              _0x12e068 = this.letterChart[Math.floor(_0x5b623e / this.letterChart.length) + 0x1],
              _0x213299 = this.letterChart[_0x5b623e % this.letterChart.length],
              _0x4cc5c8 = 0x0 <= this.vowelLetter.indexOf(_0x12e068),
              _0x2c84a1 = 0x0 <= this.vowelLetter.indexOf(_0x213299),
              _0x5b623e = '';
            !_0x4cc5c8 && _0x2c84a1 ? _0x5b623e = _0x12e068 + _0x213299.toLowerCase() + 'zillion' : !_0x4cc5c8 && !_0x2c84a1 ? _0x5b623e = _0x12e068 + 'a' + _0x213299.toLowerCase() + 'azillion' : _0x4cc5c8 && _0x2c84a1 ? _0x5b623e = 'B' + _0x12e068.toLowerCase() + 'b' + _0x213299.toLowerCase() + 'zillion' : _0x4cc5c8 && !_0x2c84a1 && (_0x5b623e = _0x12e068 + _0x213299.toLowerCase() + 'azillion');
          }
        } else return ig.game.writeThousands(_0x272290);
        return _0x272290 + _0x13e31f + _0x5b623e;
      },
      'generateFirstProcessorReward': function (_0x59a4ab, _0xd3ac23, _0x2b61f8) {
        return 0xf * ig.GameData.calculateResIncome(_0x59a4ab, _0xd3ac23, _0x2b61f8);
      },
      'generateDailyReward': function (_0x3d993c) {
        var _0x53ba0e = _STRINGS.DailyRewards.comingSoon,
          _0x167f8f = 0x0;
        if (_0x3d993c.isCurrent) {
          for (_0x53ba0e = 0x0; _0x53ba0e < ig.game.sessionData.unlockedSequence.length; _0x53ba0e++) for (var _0x4ec59c = ig.game.sessionData.unlockedSequence[_0x53ba0e], _0x3f567a = 0x0; _0x3f567a < _0x4ec59c.length; _0x3f567a++) for (var _0x32f0ad = _0x4ec59c[_0x3f567a], _0x22e919 = 0x0; _0x22e919 < _0x32f0ad.length; _0x22e919++) {
            var _0x449290 = _0x32f0ad[_0x22e919].blockId,
              _0x101e65 = this.checkFactoryTiles(_0x53ba0e, _0x3f567a, _0x449290);
            if (_0x101e65.processor) {
              for (var _0x567244 = 0x0; _0x567244 < _0x101e65.resources.length; _0x567244++) var _0x5ee852 = ig.GameData.generateOnlineResIncome(_0x53ba0e, _0x3f567a, _0x449290), _0x167f8f = _0x167f8f + _0x5ee852.income;
            }
          }
          _0x167f8f *= 0x64 + 0xa * _0x3d993c.id, _0x53ba0e = ig.GameData.generateMoneyChart(_0x167f8f);
        }
        return {
          'text': _0x53ba0e,
          'reward': _0x167f8f
        };
      },
      'checkFactoryTiles': function (_0xf55dc3, _0x56b3ab, _0x51f9ea) {
        for (var _0x163e2b = {
            'processor': null,
            'resources': []
          }, _0x349da8 = ig.game.sessionData.unlockedSequence[_0xf55dc3][_0x56b3ab], _0x49b24f = [], _0x16c7bc = 0x0; _0x16c7bc < _0x349da8.length; _0x16c7bc++) {
          var _0x2f7da2 = _0x349da8[_0x16c7bc];
          if (_0x2f7da2.blockId == _0x51f9ea) {
            _0x49b24f = _0x2f7da2.tiles;
            break;
          }
        }
        for (_0x16c7bc = 0x0; _0x16c7bc < _0x49b24f.length; _0x16c7bc++) _0x349da8 = ig.GameData.tileDatas[_0xf55dc3][_0x56b3ab][_0x51f9ea][_0x49b24f[_0x16c7bc]], 'processorTile' == _0x349da8.tileType ? _0x163e2b.processor = _0x349da8 : 'resourceTile' == _0x349da8.tileType && _0x163e2b.resources.push(_0x349da8);
        return _0x163e2b;
      },
      'countWorlds': function (_0x5cf89e) {
        for (var _0x13d496 = 0x0, _0x15cd0c = 0x0; _0x15cd0c < _0x5cf89e; _0x15cd0c++) _0x13d496 += ig.GameData.areaWorldsCount[_0x15cd0c];
        return _0x13d496;
      },
      'unlockAllWorld': function (_0x5b9329) {
        ig.game.sessionData.unlockedSequence = [], ig.game.sessionData.unlockedProcessor = [];
        for (var _0x1296af = ig.game.sessionData.unlockedProcessor, _0x343188 = ig.game.sessionData.unlockedSequence, _0x3cb854 = 0x0; _0x3cb854 < ig.GameData.tileDatas.length; _0x3cb854++) {
          var _0xf64ec9 = ig.GameData.tileDatas[_0x3cb854];
          _0x1296af[_0x3cb854] = [], _0x343188[_0x3cb854] = [];
          for (var _0x5f4e55 = 0x0; _0x5f4e55 < _0xf64ec9.length; _0x5f4e55++) _0x343188[_0x3cb854][_0x5f4e55] = [];
        }
        _0x5b9329 = _0x5b9329 ? _0x5b9329 : ig.game.sessionData.unlockedSequence.length;
        for (_0x3cb854 = 0x0; _0x3cb854 < _0x5b9329; _0x3cb854++) {
          _0x1296af = ig.game.sessionData.unlockedSequence[_0x3cb854];
          for (_0x5f4e55 = 0x0; _0x5f4e55 < _0x1296af.length; _0x5f4e55++) {
            _0x343188 = _0x1296af[_0x5f4e55], _0xf64ec9 = this.tileDatas[_0x3cb854][_0x5f4e55];
            if (_0x343188.length < _0xf64ec9.length) for (var _0x4068b8 = 0x0; _0x4068b8 < _0xf64ec9.length; _0x4068b8++) {
              for (var _0x1b3d7b = !0x1, _0x44c85a = 0x0; _0x44c85a < _0x343188.length; _0x44c85a++) if (_0x343188[_0x44c85a].blockId == _0x4068b8) {
                _0x1b3d7b = !0x0;
                break;
              }
              _0x1b3d7b || (_0x1b3d7b = {
                'blockId': _0x4068b8,
                'tiles': []
              }, _0x343188.push(_0x1b3d7b));
            }
            for (_0x4068b8 = 0x0; _0x4068b8 < _0x343188.length; _0x4068b8++) {
              var _0x563ec8 = _0x343188[_0x4068b8],
                _0x1b3d7b = _0xf64ec9[_0x563ec8.blockId];
              if (_0x563ec8.tiles.length != _0x1b3d7b.length) for (_0x44c85a = 0x0; _0x44c85a < _0x1b3d7b.length; _0x44c85a++) {
                var _0x2a225d = _0x1b3d7b[_0x44c85a],
                  _0x210a4d = _0x2a225d.tileId,
                  _0x2a225d = _0x563ec8.tiles.indexOf(_0x210a4d);
                0x0 > _0x2a225d && _0x563ec8.tiles.push(_0x210a4d);
              }
            }
          }
        }
        for (_0x3cb854 = 0x0; _0x3cb854 < _0x5b9329; _0x3cb854++) {
          _0x1296af = ig.game.sessionData.unlockedProcessor[_0x3cb854], _0x343188 = this.tileDatas[_0x3cb854];
          for (_0x5f4e55 = 0x0; _0x5f4e55 < _0x343188.length; _0x5f4e55++) _0x2a225d = _0x1296af.indexOf(_0x5f4e55), 0x0 > _0x2a225d && _0x1296af.push(_0x5f4e55);
        }
        _0x3cb854 = _0x5b9329 - 0x1, _0x5f4e55 = this.tileDatas[_0x3cb854].length - 0x1, ig.game.sessionData.onBoardData = {
          'worldId': _0x3cb854,
          'sectionId': _0x5f4e55,
          'blockId': this.tileDatas[_0x3cb854][_0x5f4e55].length - 0x1
        }, ig.game.sessionData.tutorIdx = 0x4, this.generateWorldMapData(), this.factoryDatas = null, ig.game.sessionData.factoryDatas = [];
        for (_0x3cb854 = 0x0; _0x3cb854 < this.tileSeq.length; _0x3cb854++) if (_0x2a225d = this.tileSeq[_0x3cb854], !('normalTile' == _0x2a225d.tileType || 'starterTile' == _0x2a225d.tileType) && !(_0x2a225d.worldId >= _0x5b9329)) _0x5f4e55 = {
          'tileData': {
            'worldId': _0x2a225d.worldId,
            'sectionId': _0x2a225d.sectionId,
            'blockId': _0x2a225d.blockId,
            'tileId': _0x2a225d.tileId
          },
          'countdown': 0.1,
          'sending': !0x1,
          'resPos': []
        }, 'resourceTile' == _0x2a225d.tileType && (_0x5f4e55.sending = !0x0), ig.game.sessionData.factoryDatas.push(_0x5f4e55);
        ig.TileController.settingFactoryDatas();
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.addon.tile-controller').defines(function () {
    ig.TileController = {
      'prepareTileCache': function () {
        this.rnd = new ig.RandomGenerator([(Date.now() * Math.random()).toString()]), this.geomDebug = new ig.CustomDebug(), this.geom = new ig.Geometry();
        for (var _0x1fe065 = [], _0x24c0fc = [], _0x2697a5 = [], _0x5afcdb = 0x0; _0x5afcdb < ig.GameData.tilesImgData.length; _0x5afcdb++) for (var _0x12de85 = ig.GameData.tilesImgData[_0x5afcdb], _0x5c26df = 0x0; _0x5c26df < _0x12de85.length; _0x5c26df++) {
          var _0xdd085e = _0x12de85[_0x5c26df];
          _0x1fe065.push(_0xdd085e.normalTile), _0x24c0fc.push(_0xdd085e.processorTile), _0x2697a5.push(_0xdd085e.resourceTile);
        }
        for (_0x5afcdb = 0x0; _0x5afcdb < _0x1fe065.length; _0x5afcdb++) _0x12de85 = 'ingame/tiles/' + _0x1fe065[_0x5afcdb], tileImgCache[_0x12de85] = [];
        for (_0x5afcdb = 0x0; _0x5afcdb < _0x24c0fc.length; _0x5afcdb++) _0x12de85 = 'ingame/pros-tile/' + _0x24c0fc[_0x5afcdb], processorImgCache[_0x12de85] = null;
        for (_0x5afcdb = 0x0; _0x5afcdb < _0x2697a5.length; _0x5afcdb++) _0x12de85 = 'ingame/res-tile/' + _0x2697a5[_0x5afcdb], resourceImgCache[_0x12de85] = null;
      },
      'createTileCache': function (_0x1a592b) {
        console.log('createTileCache');
        var _0x11aef1 = 0x0,
          _0x502285;
        for (_0x502285 in tileImgCache) {
          for (var _0x1878f4 = 0x0; 0xa > _0x1878f4; _0x1878f4++) {
            var _0x2ee823 = this.createTintedImg(_0x502285, _0x1a592b);
            tileImgCache[_0x502285].push(_0x2ee823);
          }
          _0x11aef1++;
        }
        this.createLockedTileImg();
      },
      'createTintedImg': function (_0x5ad49d, _0x183a58) {
        var _0x1061f9 = ig.Image.cache[imgCache.ingame.path.img],
          _0x24db0c = ig.CallAsset.searchSpriteData(_0x5ad49d),
          _0x3274cf = ig.$new('canvas');
        _0x3274cf.width = _0x24db0c.sourceSize.w, _0x3274cf.height = _0x24db0c.sourceSize.h;
        var _0x12851e = _0x3274cf.getContext('2d');
        _0x1061f9.drawCtx(_0x12851e, (_0x3274cf.width - _0x24db0c.frame.w) / 0x2, (_0x3274cf.height - _0x24db0c.frame.h) / 0x2, _0x24db0c.frame.x, _0x24db0c.frame.y, _0x24db0c.frame.w, _0x24db0c.frame.h);
        for (var _0x24db0c = this.rnd.realInRange(0x1, 1.2), _0x24db0c = parseFloat(_0x24db0c.toFixed(0x2)), _0x443cf6 = _0x12851e.getImageData(0x0, 0x0, _0x3274cf.width, _0x3274cf.height), _0x1061f9 = _0x443cf6.data, _0x685b6a = 0x0; _0x685b6a < _0x1061f9.length; _0x685b6a += 0x4) {
          var _0x36e276 = _0x24db0c * _0x1061f9[_0x685b6a + 0x1],
            _0x112b9f = _0x24db0c * _0x1061f9[_0x685b6a + 0x2];
          _0x1061f9[_0x685b6a] *= _0x24db0c, _0x1061f9[_0x685b6a + 0x1] = _0x36e276, _0x1061f9[_0x685b6a + 0x2] = _0x112b9f;
        }
        _0x12851e.putImageData(_0x443cf6, 0x0, 0x0), _0x12851e = ig.$new('canvas'), _0x12851e.width = _0x3274cf.width, _0x12851e.height = _0x3274cf.height, _0x443cf6 = _0x12851e.getContext('2d'), _0x443cf6.drawImage(_0x3274cf, 0x0, 0x0, _0x3274cf.width, _0x3274cf.height, 0x0, 0x0, _0x3274cf.width, _0x3274cf.height), _0x24db0c = _0x443cf6.getImageData(0x0, 0x0, _0x12851e.width, _0x12851e.height), _0x1061f9 = _0x24db0c.data;
        for (_0x685b6a = 0x0; _0x685b6a < _0x1061f9.length; _0x685b6a += 0x4) _0x36e276 = parseInt((_0x1061f9[_0x685b6a] + _0x1061f9[_0x685b6a + 0x1] + _0x1061f9[_0x685b6a + 0x2]) / 0x3), _0x1061f9[_0x685b6a] = _0x36e276, _0x1061f9[_0x685b6a + 0x1] = _0x36e276, _0x1061f9[_0x685b6a + 0x2] = _0x36e276;
        return _0x443cf6.putImageData(_0x24db0c, 0x0, 0x0), _0x24db0c = {
          'imgOn': _0x3274cf,
          'imgOff': _0x12851e
        }, 'function' == typeof _0x183a58 && _0x183a58(_0x5ad49d, tileImgCache[_0x5ad49d].length), _0x24db0c;
      },
      'createTileImage': function (_0x24d700) {
        var _0x3d71a5 = this.rnd.pick(tileImgCache['ingame/tiles/' + _0x24d700.tileImgId]);
        return tileImages[_0x24d700.worldId][_0x24d700.sectionId][_0x24d700.blockId][_0x24d700.tileId] = _0x3d71a5;
      },
      'createLockedTileImg': function () {
        var _0x28cb71 = ig.Image.cache[imgCache.ingame.path.img],
          _0xdb7b20 = ig.CallAsset.searchSpriteData('ingame/tiles/28'),
          _0x31b655 = ig.$new('canvas');
        _0x31b655.width = _0xdb7b20.sourceSize.w, _0x31b655.height = _0xdb7b20.sourceSize.h;
        var _0x58c724 = _0x31b655.getContext('2d'),
          _0x41abae = _0xdb7b20.frame.w,
          _0x214b6a = _0xdb7b20.frame.h;
        _0x28cb71.drawCtx(_0x58c724, (_0x31b655.width - _0xdb7b20.frame.w) / 0x2, (_0x31b655.height - _0xdb7b20.frame.h) / 0x2, _0xdb7b20.frame.x, _0xdb7b20.frame.y, _0x41abae, _0x214b6a);
        var _0x41abae = _0x31b655.width,
          _0x28cb71 = 0x0 + _0x41abae / 0x2,
          _0x41abae = 0x0 + _0x41abae,
          _0x214b6a = this.gapY + this.topGap,
          _0xdb7b20 = this.topGap,
          _0x5bc298 = 0x0 + this.gapY,
          _0x214b6a = this.geom.polygon([{
            'x': 0x0,
            'y': _0xdb7b20
          }, {
            'x': _0x28cb71,
            'y': 0x0
          }, {
            'x': _0x41abae,
            'y': _0xdb7b20
          }, {
            'x': _0x41abae,
            'y': _0x5bc298
          }, {
            'x': _0x28cb71,
            'y': 0x0 + _0x214b6a
          }, {
            'x': 0x0,
            'y': _0x5bc298
          }]);
        this.geomDebug.polygon(_0x214b6a, '#333333', 0x1, null, _0x58c724), this.tileLockedImg = _0x31b655;
      },
      'createFactoryImgCache': function (_0xcc33d7) {
        for (var _0x8c1010 in processorImgCache) processorImgCache[_0x8c1010] = this.createFactoryImg(_0x8c1010, _0xcc33d7);
        for (_0x8c1010 in resourceImgCache) resourceImgCache[_0x8c1010] = this.createFactoryImg(_0x8c1010, _0xcc33d7);
      },
      'createFactoryImg': function (_0x12ddcb, _0x4044fe) {
        var _0x5a3f68 = ig.Image.cache[imgCache.ingame.path.img],
          _0x30f7c8 = ig.CallAsset.searchSpriteData(_0x12ddcb),
          _0xc845b1 = ig.$new('canvas');
        _0xc845b1.width = _0x30f7c8.sourceSize.w, _0xc845b1.height = _0x30f7c8.sourceSize.h;
        var _0x22ecd4 = _0xc845b1.getContext('2d');
        _0x5a3f68.drawCtx(_0x22ecd4, _0x30f7c8.spriteSourceSize.x, _0x30f7c8.spriteSourceSize.y, _0x30f7c8.frame.x, _0x30f7c8.frame.y, _0x30f7c8.frame.w, _0x30f7c8.frame.h), _0x5a3f68 = ig.$new('canvas'), _0x5a3f68.width = _0xc845b1.width, _0x5a3f68.height = _0xc845b1.height, _0x30f7c8 = _0x5a3f68.getContext('2d'), _0x30f7c8.drawImage(_0xc845b1, 0x0, 0x0, _0xc845b1.width, _0xc845b1.height, 0x0, 0x0, _0xc845b1.width, _0xc845b1.height);
        for (var _0x22ecd4 = _0x30f7c8.getImageData(0x0, 0x0, _0x5a3f68.width, _0x5a3f68.height), _0x3d5939 = _0x22ecd4.data, _0xb63cee = 0x0; _0xb63cee < _0x3d5939.length; _0xb63cee += 0x4) {
          var _0x14fc66 = parseInt((_0x3d5939[_0xb63cee] + _0x3d5939[_0xb63cee + 0x1] + _0x3d5939[_0xb63cee + 0x2]) / 0x3);
          _0x3d5939[_0xb63cee] = _0x14fc66, _0x3d5939[_0xb63cee + 0x1] = _0x14fc66, _0x3d5939[_0xb63cee + 0x2] = _0x14fc66;
        }
        return _0x30f7c8.putImageData(_0x22ecd4, 0x0, 0x0), _0xc845b1 = {
          'imgOn': _0xc845b1,
          'imgOff': _0x5a3f68
        }, 'function' == typeof _0x4044fe && _0x4044fe(_0x12ddcb), _0xc845b1;
      },
      'createFactoryImages': function (_0x480ee4, _0x19236a, _0x566fb1) {
        _0x480ee4 = ig.GameData.tilesImgData[_0x480ee4][_0x19236a], _0x19236a = '';
        if ('resourceTile' == _0x566fb1) {
          _0x19236a = 'res-tile/' + _0x480ee4.resourceTile;
          var _0x48abb6 = resourceImgCache['ingame/' + _0x19236a];
        } else 'processorTile' == _0x566fb1 && (_0x19236a = 'pros-tile/' + _0x480ee4.processorTile, _0x48abb6 = processorImgCache['ingame/' + _0x19236a]);
        return factoryImages[_0x19236a] = _0x48abb6;
      },
      'factoryImages': null,
      'settingFactoryDatas': function () {
        if (null == this.factoryImages) {
          this.factoryImages = [];
          for (var _0x1c3464 = 0x0; _0x1c3464 < ig.GameData.tilesImgData.length; _0x1c3464++) {
            this.factoryImages[_0x1c3464] = [];
            for (var _0x402377 = ig.GameData.tilesImgData[_0x1c3464], _0x142915 = 0x0; _0x142915 < _0x402377.length; _0x142915++) {
              var _0x3c86ba = ig.GameData.tilesImgData[_0x1c3464][_0x142915],
                _0x23b1a6 = 'res-tile/' + _0x3c86ba.resourceTile,
                _0x17ea62 = 'pros-tile/' + _0x3c86ba.processorTile,
                _0x20005f = window.factoryImages[_0x23b1a6];
              _0x20005f || (_0x20005f = this.createFactoryImages(_0x1c3464, _0x142915, 'resourceTile')), (_0x17ea62 = window.factoryImages[_0x17ea62]) || (_0x17ea62 = this.createFactoryImages(_0x1c3464, _0x142915, 'processorTile')), this.factoryImages[_0x1c3464][_0x142915] = {
                'resourceTile': _0x20005f,
                'processorTile': _0x17ea62
              };
            }
          }
        }
        if (!ig.GameData.factoryDatas) {
          ig.GameData.factoryDatas = [], Array.isArray(ig.game.sessionData.factoryDatas) || (ig.game.sessionData.factoryDatas = []), _0x20005f = _0x17ea62 = _0x142915 = _0x402377 = null;
          for (_0x1c3464 = 0x0; _0x1c3464 < ig.GameData.tileSeq.length; _0x1c3464++) {
            var _0x5dc88b = ig.GameData.tileSeq[_0x1c3464];
            if (!('normalTile' == _0x5dc88b.tileType || 'starterTile' == _0x5dc88b.tileType)) {
              var _0x2496e0 = this.factoryImages[_0x5dc88b.worldId][_0x5dc88b.sectionId][_0x5dc88b.tileType],
                _0x3b2aeb = _0x2496e0.imgOn,
                _0x23b1a6 = {
                  'x': 0.5,
                  'y': 0x1
                },
                _0x3c86ba = _0x5dc88b.x + _0x5dc88b.tWidth / 0x2 - _0x3b2aeb.width * _0x23b1a6.x,
                _0x30e658 = _0x5dc88b.y + 0.52 * _0x5dc88b.tHeight - _0x3b2aeb.height * _0x23b1a6.y,
                _0x46b4ac = _0x3c86ba + _0x3b2aeb.width,
                _0x3b2aeb = _0x30e658 + _0x3b2aeb.height;
              null == _0x402377 ? _0x402377 = _0x3c86ba : _0x3c86ba < _0x402377 && (_0x402377 = _0x3c86ba), null == _0x142915 ? _0x142915 = _0x46b4ac : _0x46b4ac > _0x142915 && (_0x142915 = _0x46b4ac), null == _0x17ea62 ? _0x17ea62 = _0x30e658 : _0x30e658 < _0x17ea62 && (_0x17ea62 = _0x30e658), null == _0x20005f ? _0x20005f = _0x3b2aeb : _0x3b2aeb > _0x20005f && (_0x20005f = _0x3b2aeb), _0x2496e0 = {
                'tileData': _0x5dc88b,
                'images': _0x2496e0,
                'x': _0x3c86ba,
                'y': _0x30e658,
                'scale': {
                  'x': 0x1,
                  'y': 0x1
                },
                'anchor': _0x23b1a6,
                'countdown': 0.1,
                'timer': 0x0,
                'resPos': [],
                'texts': [],
                'sending': !0x1,
                'totRes': 0x1,
                'onGoing': !0x1,
                'tweening': !0x1
              }, _0x3c86ba = ig.GameData.tilesImgData[_0x5dc88b.worldId][_0x5dc88b.sectionId], _0x23b1a6 = 'ingame/prod-icons/' + _0x3c86ba.productIcon, _0x2496e0.resFrameData = ig.CallAsset.searchSpriteData(_0x23b1a6);
              for (_0x23b1a6 = 0x0; _0x23b1a6 < ig.game.sessionData.factoryDatas.length; _0x23b1a6++) _0x3c86ba = ig.game.sessionData.factoryDatas[_0x23b1a6], _0x30e658 = _0x3c86ba.tileData, _0x30e658.worldId == _0x5dc88b.worldId && _0x30e658.sectionId == _0x5dc88b.sectionId && _0x30e658.blockId == _0x5dc88b.blockId && _0x30e658.tileId == _0x5dc88b.tileId && (_0x5dc88b.resData = _0x3c86ba);
              _0x5dc88b.resData && ig.merge(_0x2496e0, _0x5dc88b.resData), _0x23b1a6 = {
                'tileData': {
                  'worldId': _0x5dc88b.worldId,
                  'sectionId': _0x5dc88b.sectionId,
                  'blockId': _0x5dc88b.blockId,
                  'tileId': _0x5dc88b.tileId
                },
                'countdown': _0x2496e0.countdown,
                'sending': _0x2496e0.sending,
                'resPos': _0x2496e0.resPos
              }, ig.game.sessionData.factoryDatas[ig.GameData.factoryDatas.length] = _0x23b1a6, ig.GameData.factoryDatas.push(_0x2496e0), _0x5dc88b.resData = _0x23b1a6;
            }
          }
          this.factorySize = {
            'minX': _0x402377,
            'maxX': _0x142915,
            'minY': _0x17ea62,
            'maxY': _0x20005f
          };
        }
      },
      'tileSize': {
        'x': 0x0,
        'y': 0x0
      },
      'generateTilePosition': function (_0x3002c7) {
        var _0x23fd82 = curState().gMapDrawer,
          _0x17eacb = _0x23fd82.image,
          _0x3865e3 = _0x23fd82.image.pivot,
          _0x3aef1b = _0x23fd82.width,
          _0x23563e = _0x23fd82.height,
          _0x1d7b66 = -(_0x3aef1b * _0x23fd82.anchor.x),
          _0x23fd82 = -(_0x23563e * _0x23fd82.anchor.y),
          _0x420ee6 = _0x3002c7.x - _0x17eacb.posData.minX;
        return _0x3002c7 = _0x3002c7.y - _0x17eacb.posData.minY, _0x3aef1b = this.tileSize.x, _0x23563e = this.tileSize.y, {
          'x': _0x420ee6 + _0x1d7b66 + _0x3865e3.x + 0.5 * _0x3aef1b,
          'y': _0x3002c7 + _0x23fd82 + _0x3865e3.y + 0.5 * _0x23563e
        };
      }
    };
  }), ig.baked = !0x0, ig.module('plugins.addon.transition').defines(function () {
    ig.Transition = ig.Class.extend({
      'tweenTransition': null,
      'name': 'Transition',
      'isClosed': !0x1,
      'isRunning': !0x1,
      'tweenTime': 0x12c,
      'fill': 'white',
      'enableLoader': !0x1,
      'init': function () {},
      'create': function () {
        this.alpha = 0x1, this.isClosed = !0x0;
      },
      'update': function () {},
      'draw': function () {
        var _0x5f1ab1 = ig.system.context;
        _0x5f1ab1.save(), _0x5f1ab1.globalAlpha = this.alpha;
        var _0x408066 = _0x5f1ab1.createLinearGradient(0x0, 0x0, 0x0, 0.5 * ig.system.height);
        _0x408066.addColorStop(0x0, '#a2def9'), _0x408066.addColorStop(0x1, '#00bdf2'), _0x5f1ab1.fillStyle = _0x408066, _0x5f1ab1.fillRect(0x0, 0x0, ig.system.width, ig.system.height), _0x5f1ab1.restore(), this.drawLoader();
      },
      'drawLoader': function () {
        if (this.enableLoader && this.isClosed) {
          var _0x383003 = ig.system.context;
          _0x383003.save(), _0x383003.globalAlpha = this.alpha;
          var _0x32f2e8 = ig.Image.cache[imgCache.ingame.path.img],
            _0x43497e = ig.CallAsset.searchSpriteData('ingame/ui/loading-slider-bg'),
            _0x268095 = _0x43497e.frame.w,
            _0x2a3434 = _0x43497e.frame.h,
            _0x52bad9 = 0.8 * ig.system.height;
          _0x32f2e8.draw((ig.system.width - _0x268095) / 0x2, _0x52bad9, _0x43497e.frame.x, _0x43497e.frame.y, _0x268095, _0x2a3434);
          var _0x43497e = ig.CallAsset.searchSpriteData('ingame/ui/loading-slider'),
            _0x268095 = _0x43497e.frame.w,
            _0x577876 = _0x43497e.frame.h;
          _0x32f2e8.draw((ig.system.width - _0x268095) / 0x2, _0x52bad9 + (_0x2a3434 - _0x577876) / 0x2, _0x43497e.frame.x, _0x43497e.frame.y, _0x268095, _0x577876), _0x32f2e8 = _STRINGS.Splash.DrawImages, _0x2a3434 = ig.system.width / 0x2, _0x52bad9 -= 0x14, _0x383003.font = "45px " + fonts.font1, _0x383003.textAlign = 'center', _0x383003.fillStyle = 'white', _0x383003.lineWidth = 0x3, _0x383003.strokeStyle = 'black', _0x383003.strokeText(_0x32f2e8, _0x2a3434, _0x52bad9), _0x383003.fillText(_0x32f2e8, _0x2a3434, _0x52bad9), _0x383003.restore();
        }
      },
      'close': function (_0xd500fc) {
        !this.isRunning && !this.isClosed && (curState().curtainBg && (curState().curtainBg.visible = !0x0), this.isRunning = !0x0, this.stateIdx = _0xd500fc, new ig.TweenDef(this).to({
          'alpha': 0x1
        }, this.tweenTime).onComplete(function () {
          this.isRunning = !0x1, this.isClosed = !0x0, setTimeout(function () {
            ig.game.director.loadLevel(this.stateIdx);
          }.bind(this), 0x64);
        }.bind(this)).start());
      },
      'open': function () {
        !this.isRunning && this.isClosed && (this.isRunning = !0x0, new ig.TweenDef(this).to({
          'alpha': 0x0
        }, this.tweenTime).onComplete(function () {
          this.isClosed = this.isRunning = !0x1, curState().curtainBg && (curState().curtainBg.visible = !0x1);
        }.bind(this)).start());
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.addon.state-addon').requires('impact.game', 'plugins.addon.random-generator', 'plugins.addon.math-collection', 'plugins.addon.custom-debug', 'plugins.addon.time-event', 'plugins.addon.geometry', 'plugins.addon.world', 'plugins.addon.asset-reader', 'plugins.addon.call-asset', 'plugins.addon.sprite-animation', 'plugins.addon.custom-splashloader', 'plugins.addon.entity-debug', 'plugins.addon.text-plugin', 'game.entities.addon.custom-entity', 'plugins.addon.custom-image', 'plugins.addon.raw-image', 'game.entities.addon.sprite', 'game.entities.addon.group', 'game.entities.addon.locked-group', 'plugins.addon.add-image', 'game.entities.addon.custom-text', 'game.entities.addon.manual-draw-entity', 'game.entities.addon.advanced-custom-text', 'game.entities.objects.click-btn', 'game.entities.objects.options', 'plugins.addon.game-data', 'plugins.addon.game-data-formula', 'plugins.addon.tile-controller', 'plugins.addon.transition').defines(function () {
    ig.Game.inject({
      'groups': [],
      'addOnReady': !0x1,
      'useResponsive': !0x1,
      'anchorType': 'default',
      'lastSystemSize': {
        'x': 0x0,
        'y': 0x0
      },
      'pluginVersion': '1.0.12',
      'checkedOtherEntities': [],
      'drawedOtherEntities': [],
      'prepareGame': function () {
        this.addOnReady = !0x1, ig.responsive && (this.useResponsive = !0x0), this.gw = ig.system.width, this.gh = ig.system.height, this.useResponsive && (this.gw = ig.responsive.originalWidth, this.gh = ig.responsive.originalHeight), this.lastSystemSize.x = 0x0, this.lastSystemSize.y = 0x0, this.centerX = this.gw / 0x2, this.centerY = this.gh / 0x2, this.rnd = new ig.RandomGenerator([(Date.now() * Math.random()).toString()]), this.math = new ig.MathCollection(), this.customTime = new ig.CustomTime(), this.transition = new ig.Transition(), this.transition.create(), this.geomDebug = new ig.CustomDebug(), this.geom = new ig.Geometry(), this.entityDebug = new ig.EntityDebug();
      },
      'loadLevel': function (_0x651a6f) {
        ig.game.addOnReady = !0x1, this.parent(_0x651a6f);
      },
      'disableBtns': function () {
        for (var _0x663f97 = 0x0; _0x663f97 < ig.game.entities.length; _0x663f97++) {
          var _0x2f2ac2 = ig.game.entities[_0x663f97];
          _0x2f2ac2.inputEnabled = !0x1, _0x2f2ac2.type = ig.Entity.TYPE.NONE;
        }
        _SETTINGS.MoreGames.Enabled && (_0x663f97 = ig.game.getEntityByName('more-games')) && _0x663f97.exists && _0x663f97.hide();
      },
      'setGroupCamLock': function (_0x453f2e) {
        for (var _0x3e57fd = 0x0; _0x3e57fd < _0x453f2e.children.length; _0x3e57fd++) {
          var _0x22c520 = _0x453f2e.children[_0x3e57fd];
          _0x22c520.isCameraLock = _0x453f2e.isCameraLock, Array.isArray(_0x22c520.children) && this.setGroupCamLock(_0x22c520);
        }
      },
      'updateGroups': function () {
        for (var _0x18bab0 = 0x0; _0x18bab0 < this.groups.length; _0x18bab0++) this.groups[_0x18bab0].update();
      },
      'drawGroups': function () {
        for (var _0x30b0b8 = 0x0; _0x30b0b8 < this.groups.length; _0x30b0b8++) this.groups[_0x30b0b8].draw();
      },
      'update': function () {
        if (ig.game.addOnReady) {
          this._levelToLoad && (this.loadLevel(this._levelToLoad), this._levelToLoad = null), this.customTime && this.customTime.update(), this.checkedOtherEntities = [], this.updateGroups();
          for (var _0xece1e = 0x0; _0xece1e < this.entities.length; _0xece1e++) {
            var _0x390b11 = this.entities[_0xece1e],
              _0xc1347 = this.checkedOtherEntities.indexOf(_0x390b11);
            !_0x390b11.useCustomEntity && 0x0 > _0xc1347 && (_0x390b11.update(), this.checkedOtherEntities.push(_0x390b11));
          }
          this.transition && this.transition.update(), this.checkEntities();
          for (_0x390b11 = 0x0; _0x390b11 < this._deferredKill.length; _0x390b11++) this._deferredKill[_0x390b11].erase(), this.entities.erase(this._deferredKill[_0x390b11]);
          this._deferredKill = [];
          if (this._doSortEntities || this.autoSort) this.sortEntities(), this._doSortEntities = !0x1;
          for (var _0x392044 in this.backgroundAnims) for (_0xece1e in _0x390b11 = this.backgroundAnims[_0x392044], _0x390b11) _0x390b11[_0xece1e].update();
        } else this.parent();
        if (this.useResponsive && (this.lastSystemSize.x != ig.system.width || this.lastSystemSize.y != ig.system.height)) {
          this.isPortrait = ig.system.width < ig.system.height, this.lastSystemSize.x = ig.system.width, this.lastSystemSize.y = ig.system.height;
          for (_0xece1e = 0x0; _0xece1e < this.entities.length; _0xece1e++) _0x392044 = this.entities[_0xece1e], 'function' == typeof _0x392044.updateOnOrientationChange && _0x392044.updateOnOrientationChange();
        }
      },
      'draw': function () {
        if (ig.game.addOnReady) {
          this.clearColor && ig.system.clear(this.clearColor), this._rscreen.x = ig.system.getDrawPos(this.screen.x) / ig.system.scale, this._rscreen.y = ig.system.getDrawPos(this.screen.y) / ig.system.scale;
          var _0x34b4c0;
          for (_0x34b4c0 = 0x0; _0x34b4c0 < this.backgroundMaps.length; _0x34b4c0++) {
            var _0x41ebbc = this.backgroundMaps[_0x34b4c0];
            if (_0x41ebbc.foreground) break;
            _0x41ebbc.setScreenPos(this.screen.x, this.screen.y), _0x41ebbc.draw();
          }
          this.drawedOtherEntities = [], this.drawGroups();
          for (_0x41ebbc = 0x0; _0x41ebbc < this.entities.length; _0x41ebbc++) {
            var _0x27fe14 = this.entities[_0x41ebbc],
              _0x2dfac2 = this.drawedOtherEntities.indexOf(_0x27fe14);
            !_0x27fe14.useCustomEntity && 0x0 > _0x2dfac2 && (_0x27fe14.draw(), this.drawedOtherEntities.push(_0x27fe14));
          }
          this.transition && this.transition.draw(), ig.Entity._debugEnableChecks && ig.Entity._debugShowBoxes && this.entityDebug.drawDebugBoxes();
          for (_0x34b4c0; _0x34b4c0 < this.backgroundMaps.length; _0x34b4c0++) _0x41ebbc = this.backgroundMaps[_0x34b4c0], _0x41ebbc.setScreenPos(this.screen.x, this.screen.y), _0x41ebbc.draw();
        } else this.parent();
      },
      'parentPos': function (_0x240ce3) {
        for (var _0x3a98b1 = {
            'x': 0x0,
            'y': 0x0
          }, _0x2d6f25 = !0x1; !_0x2d6f25;) _0x3a98b1 = this.countPos(_0x240ce3, _0x3a98b1), _0x240ce3.groupParent ? _0x240ce3 = _0x240ce3.groupParent : _0x2d6f25 = !0x0;
        return _0x3a98b1;
      },
      'countPos': function (_0x35ad29, _0x49e530) {
        return _0x49e530.x += _0x35ad29.x, _0x49e530.y += _0x35ad29.y, _0x49e530;
      },
      'checkVisibility': function (_0x54712d) {
        var _0x46a507 = !0x0;
        if (_0x54712d.visible) {
          for (var _0x256113 = !0x1; !_0x256113;) _0x54712d.groupParent ? (_0x54712d = _0x54712d.groupParent, _0x54712d.visible || _0x54712d.forseenVisible || (_0x46a507 = !0x1)) : _0x256113 = !0x0;
        } else _0x54712d.forseenVisible || (_0x46a507 = !0x1);
        return _0x46a507;
      },
      'checkZIndexGroups': function () {
        for (var _0x1e91a3 = this.tempZIndex = 0x0; _0x1e91a3 < this.groups.length; _0x1e91a3++) {
          var _0x366a13 = this.groups[_0x1e91a3];
          this.sortOtherEntZIndex(), _0x366a13.zIndex = this.tempZIndex, this.tempZIndex++, _0x366a13.children && 0x0 < _0x366a13.children.length && this.checkZIndexChildren(_0x366a13);
        }
        this.sortEntities(), this.sortAllEntities();
      },
      'checkZIndexChildren': function (_0x1665bf) {
        _0x1665bf = _0x1665bf.children;
        for (var _0x2045af = 0x0; _0x2045af < _0x1665bf.length; _0x2045af++) {
          var _0x1adf78 = _0x1665bf[_0x2045af];
          this.sortOtherEntZIndex(), _0x1adf78.zIndex = this.tempZIndex, this.tempZIndex++, _0x1adf78.children && 0x0 < _0x1adf78.children.length && this.checkZIndexChildren(_0x1adf78);
        }
      },
      'sortOtherEntZIndex': function () {
        for (var _0x1bedf2 = 0x0; _0x1bedf2 < this.entities.length; _0x1bedf2++) {
          var _0x365f81 = this.entities[_0x1bedf2];
          !_0x365f81.useCustomEntity && _0x365f81.zIndex <= this.tempZIndex && (this.tempZIndex += this.tempZIndex - _0x365f81.zIndex + 0x1);
        }
      },
      'sortAllEntities': function () {
        for (var _0x4c3fea = 0x0; _0x4c3fea < this.entities.length; _0x4c3fea++) this.entities[_0x4c3fea].zIndex = _0x4c3fea;
      },
      'generateFrameNames': function (_0x273a65, _0x1e644f, _0x153cff) {
        _0x153cff = _0x153cff ? _0x153cff : [];
        for (var _0x4f376f = []; _0x273a65 <= _0x1e644f; _0x273a65++) 0x0 <= _0x153cff.indexOf(_0x273a65) || _0x4f376f.push(_0x273a65);
        return _0x4f376f;
      },
      'addGroup': function (_0x395369, _0x425b4f, _0x56c776, _0x171642) {
        return _0x171642 = _0x171642 ? _0x171642 : EntityGroup, ig.game.spawnEntity(_0x171642, _0x395369, _0x425b4f, _0x56c776);
      },
      'addText': function (_0x3acc86, _0x4eb9d0, _0x29034c, _0x1db377, _0x2d5767, _0x1c5005, _0x1e578a) {
        return _0x1e578a = _0x1e578a ? _0x1e578a : EntityCustomText, _0x3acc86 = ig.game.spawnEntity(_0x1e578a, _0x3acc86, _0x4eb9d0, _0x1c5005), _0x3acc86.inputProperty(_0x29034c, _0x1db377, _0x2d5767), _0x3acc86;
      },
      'changePage': function (_0x1d8caa) {
        ig.game.disableBtns();
        var _0xe7dbcd = isNaN(_0x1d8caa) ? ig.game.director.levels.indexOf(_0x1d8caa) : _0x1d8caa;
        ig.game.transition.enableLoader = _0x1d8caa == LevelGameplay ? !0x0 : !0x1, this.transition ? ig.game.transition.close(_0xe7dbcd) : ig.game.director.jumpTo(_0x1d8caa);
      },
      'decideHHMMSS': function (_0x5cf3ee) {
        _0x5cf3ee = this.countSec(_0x5cf3ee);
        var _0x2ed55e = parseInt(_0x5cf3ee / 0xe10),
          _0xd97233 = _0x5cf3ee - 0xe10 * _0x2ed55e;
        _0x5cf3ee = parseInt(_0xd97233 / 0x3c);
        var _0xd97233 = parseInt(_0xd97233 - 0x3c * _0x5cf3ee),
          _0xe9bbe3 = _0x2ed55e + '';
        return 0xa > _0x2ed55e && (_0xe9bbe3 = '0' + _0x2ed55e), _0x2ed55e = _0x5cf3ee + '', 0xa > _0x5cf3ee && (_0x2ed55e = '0' + _0x5cf3ee), _0x5cf3ee = _0xd97233 + '', 0xa > _0xd97233 && (_0x5cf3ee = '0' + _0xd97233), {
          'h': _0xe9bbe3,
          'm': _0x2ed55e,
          's': _0x5cf3ee
        };
      },
      'countMin': function (_0x1a06cd) {
        _0x1a06cd = this.countSec(_0x1a06cd);
        var _0x4566bc = parseInt(_0x1a06cd / 0x3c);
        _0x1a06cd = parseInt(_0x1a06cd - 0x3c * _0x4566bc);
        var _0x56a3af = _0x4566bc + '';
        return 0xa > _0x4566bc && (_0x56a3af = '0' + _0x4566bc), _0x4566bc = _0x1a06cd + '', 0xa > _0x1a06cd && (_0x4566bc = '0' + _0x1a06cd), _0x56a3af + ':' + _0x4566bc;
      },
      'countSec': function (_0x1e029e) {
        var _0x377095 = Math.floor(_0x1e029e),
          _0x564e84 = _0x377095;
        return 0x0 < _0x377095 ? 0x0 < _0x1e029e % _0x377095 && (_0x564e84 = _0x377095 + 0x1) : _0x564e84 = _0x1e029e > _0x377095 ? _0x564e84 + 0x1 : 0x0, _0x564e84;
      },
      'writeThousands': function (_0x58cb2f) {
        var _0x5e6a5c = _0x58cb2f + '';
        if (0x3e8 <= _0x58cb2f) {
          _0x58cb2f = 0x0;
          for (var _0x2c5084 = _0x5e6a5c, _0x5e6a5c = '', _0x188127 = _0x2c5084.length - 0x1; 0x0 <= _0x188127; _0x188127--) {
            var _0x524c3c = _0x2c5084[_0x188127];
            0x0 == _0x58cb2f % 0x3 && _0x188127 < _0x2c5084.length - 0x1 && (_0x524c3c += ',', _0x58cb2f = 0x0), _0x5e6a5c = _0x524c3c + _0x5e6a5c, _0x58cb2f++;
          }
        }
        return _0x5e6a5c;
      },
      'upperCase': function (_0x5612ac) {
        return _0x5612ac[0x0].toUpperCase() + _0x5612ac.slice(0x1);
      }
    });
  });
  var fontReady = !0x1,
    fonts = {
      'font1': 'gabarito-bold'
    },
    _t = function (_0x527ab6) {
      for (var _0x149a92 = _0x527ab6, _0x1369b3 = 0x1; _0x1369b3 < arguments.length; _0x1369b3++) for (var _0x2a2a04 = !0x1; !_0x2a2a04;) {
        var _0x2ba90 = _0x149a92.replace('%' + _0x1369b3, arguments[_0x1369b3]);
        _0x2ba90 != _0x149a92 ? _0x149a92 = _0x2ba90 : _0x2a2a04 = !0x0;
      }
      return _0x149a92;
    },
    curState = function () {
      return ig.game.controller;
    },
    csound = {
      'sfxPlay': function (_0x4baaa3) {
        try {
          return ig.soundHandler.sfxPlayer.play(_0x4baaa3);
        } catch (_0x4f7b97) {}
      },
      'sfxStop': function (_0x1f34f6) {
        return ig.soundHandler.sfxPlayer.soundList[_0x1f34f6].stop();
      },
      'sfxIsPlaying': function (_0x1b63d1) {
        return ig.soundHandler.sfxPlayer.soundList[_0x1b63d1].playing();
      },
      'bgmIsPlaying': function (_0x40af2c) {
        return ig.soundHandler.bgmPlayer.soundList[_0x40af2c].playing();
      },
      'sfxVol': function (_0x49addd, _0x2fe49a) {
        ig.soundHandler.sfxPlayer.soundList[_0x49addd].volume(_0x2fe49a);
      }
    },
    stringToFunction = function (_0x55126f) {
      _0x55126f = _0x55126f.split('.');
      for (var _0x13a8cc = window || this, _0x534000 = 0x0, _0x11cb32 = _0x55126f.length; _0x534000 < _0x11cb32; _0x534000++) _0x13a8cc = _0x13a8cc[_0x55126f[_0x534000]];
      if ('function' !== typeof _0x13a8cc) throw Error("function not found");
      return _0x13a8cc;
    },
    jsonCache = {},
    imgCache = {},
    spriterCache = {},
    hiddenCanvases = {},
    tileMapCache = {},
    tileImgCache = {},
    processorImgCache = {},
    resourceImgCache = {},
    tileImages = {},
    factoryImages = {},
    LZString = function () {
      function _0x2b5a0b(_0x42400b, _0x470287) {
        if (!_0x89d8a4[_0x42400b]) {
          _0x89d8a4[_0x42400b] = {};
          for (var _0x1fcb3f = 0x0; _0x1fcb3f < _0x42400b.length; _0x1fcb3f++) _0x89d8a4[_0x42400b][_0x42400b.charAt(_0x1fcb3f)] = _0x1fcb3f;
        }
        return _0x89d8a4[_0x42400b][_0x470287];
      }
      var _0x2ee3a1 = String.fromCharCode,
        _0x89d8a4 = {},
        _0x539e2e = {
          'compressToBase64': function (_0x300c30) {
            if (null == _0x300c30) return '';
            _0x300c30 = _0x539e2e._compress(_0x300c30, 0x6, function (_0x56efe9) {
              return 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='.charAt(_0x56efe9);
            });
            switch (_0x300c30.length % 0x4) {
              default:
              case 0x0:
                return _0x300c30;
              case 0x1:
                return _0x300c30 + '===';
              case 0x2:
                return _0x300c30 + '==';
              case 0x3:
                return _0x300c30 + '=';
            }
          },
          'decompressFromBase64': function (_0x42bfad) {
            return null == _0x42bfad ? '' : '' == _0x42bfad ? null : _0x539e2e._decompress(_0x42bfad.length, 0x20, function (_0x7594c) {
              return _0x2b5a0b('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=', _0x42bfad.charAt(_0x7594c));
            });
          },
          'compressToUTF16': function (_0xb1cfe1) {
            return null == _0xb1cfe1 ? '' : _0x539e2e._compress(_0xb1cfe1, 0xf, function (_0x38588b) {
              return _0x2ee3a1(_0x38588b + 0x20);
            }) + " ";
          },
          'decompressFromUTF16': function (_0x511fad) {
            return null == _0x511fad ? '' : '' == _0x511fad ? null : _0x539e2e._decompress(_0x511fad.length, 0x4000, function (_0x26e573) {
              return _0x511fad.charCodeAt(_0x26e573) - 0x20;
            });
          },
          'compressToUint8Array': function (_0x1335b3) {
            _0x1335b3 = _0x539e2e.compress(_0x1335b3);
            for (var _0x15ed36 = new Uint8Array(0x2 * _0x1335b3.length), _0x2e0962 = 0x0, _0x226ac3 = _0x1335b3.length; _0x226ac3 > _0x2e0962; _0x2e0962++) {
              var _0x5b3699 = _0x1335b3.charCodeAt(_0x2e0962);
              _0x15ed36[0x2 * _0x2e0962] = _0x5b3699 >>> 0x8, _0x15ed36[0x2 * _0x2e0962 + 0x1] = _0x5b3699 % 0x100;
            }
            return _0x15ed36;
          },
          'decompressFromUint8Array': function (_0x3a3731) {
            if (null === _0x3a3731 || void 0x0 === _0x3a3731) return _0x539e2e.decompress(_0x3a3731);
            for (var _0x7e1069 = Array(_0x3a3731.length / 0x2), _0x3716f3 = 0x0, _0x155264 = _0x7e1069.length; _0x155264 > _0x3716f3; _0x3716f3++) _0x7e1069[_0x3716f3] = 0x100 * _0x3a3731[0x2 * _0x3716f3] + _0x3a3731[0x2 * _0x3716f3 + 0x1];
            var _0x18562e = [];
            return _0x7e1069.forEach(function (_0x3c1d7b) {
              _0x18562e.push(_0x2ee3a1(_0x3c1d7b));
            }), _0x539e2e.decompress(_0x18562e.join(''));
          },
          'compressToEncodedURIComponent': function (_0x5a9824) {
            return null == _0x5a9824 ? '' : _0x539e2e._compress(_0x5a9824, 0x6, function (_0x5f0b4d) {
              return 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$'.charAt(_0x5f0b4d);
            });
          },
          'decompressFromEncodedURIComponent': function (_0x824bc9) {
            return null == _0x824bc9 ? '' : '' == _0x824bc9 ? null : (_0x824bc9 = _0x824bc9.replace(/ /g, '+'), _0x539e2e._decompress(_0x824bc9.length, 0x20, function (_0x29a67f) {
              return _0x2b5a0b('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$', _0x824bc9.charAt(_0x29a67f));
            }));
          },
          'compress': function (_0x5c2473) {
            return _0x539e2e._compress(_0x5c2473, 0x10, function (_0x18e169) {
              return _0x2ee3a1(_0x18e169);
            });
          },
          '_compress': function (_0x5acb37, _0x3ad3ef, _0xeeaa61) {
            if (null == _0x5acb37) return '';
            var _0x5f2fd4,
              _0xd9dfad,
              _0x28e3ed,
              _0x4b13d8 = {},
              _0x265772 = {},
              _0x3063c0 = '',
              _0x492bf3 = '',
              _0x468783 = '',
              _0x1fc082 = 0x2,
              _0xbd6d2f = 0x3,
              _0x53b3bf = 0x2,
              _0x3e77bb = [],
              _0x2444e2 = 0x0,
              _0xe1fdb2 = 0x0;
            for (_0x28e3ed = 0x0; _0x28e3ed < _0x5acb37.length; _0x28e3ed += 0x1) if (_0x3063c0 = _0x5acb37.charAt(_0x28e3ed), Object.prototype.hasOwnProperty.call(_0x4b13d8, _0x3063c0) || (_0x4b13d8[_0x3063c0] = _0xbd6d2f++, _0x265772[_0x3063c0] = !0x0), _0x492bf3 = _0x468783 + _0x3063c0, Object.prototype.hasOwnProperty.call(_0x4b13d8, _0x492bf3)) _0x468783 = _0x492bf3;else {
              if (Object.prototype.hasOwnProperty.call(_0x265772, _0x468783)) {
                if (0x100 > _0x468783.charCodeAt(0x0)) {
                  for (_0x5f2fd4 = 0x0; _0x53b3bf > _0x5f2fd4; _0x5f2fd4++) _0x2444e2 <<= 0x1, _0xe1fdb2 == _0x3ad3ef - 0x1 ? (_0xe1fdb2 = 0x0, _0x3e77bb.push(_0xeeaa61(_0x2444e2)), _0x2444e2 = 0x0) : _0xe1fdb2++;
                  _0xd9dfad = _0x468783.charCodeAt(0x0);
                  for (_0x5f2fd4 = 0x0; 0x8 > _0x5f2fd4; _0x5f2fd4++) _0x2444e2 = _0x2444e2 << 0x1 | 0x1 & _0xd9dfad, _0xe1fdb2 == _0x3ad3ef - 0x1 ? (_0xe1fdb2 = 0x0, _0x3e77bb.push(_0xeeaa61(_0x2444e2)), _0x2444e2 = 0x0) : _0xe1fdb2++, _0xd9dfad >>= 0x1;
                } else {
                  _0xd9dfad = 0x1;
                  for (_0x5f2fd4 = 0x0; _0x53b3bf > _0x5f2fd4; _0x5f2fd4++) _0x2444e2 = _0x2444e2 << 0x1 | _0xd9dfad, _0xe1fdb2 == _0x3ad3ef - 0x1 ? (_0xe1fdb2 = 0x0, _0x3e77bb.push(_0xeeaa61(_0x2444e2)), _0x2444e2 = 0x0) : _0xe1fdb2++, _0xd9dfad = 0x0;
                  _0xd9dfad = _0x468783.charCodeAt(0x0);
                  for (_0x5f2fd4 = 0x0; 0x10 > _0x5f2fd4; _0x5f2fd4++) _0x2444e2 = _0x2444e2 << 0x1 | 0x1 & _0xd9dfad, _0xe1fdb2 == _0x3ad3ef - 0x1 ? (_0xe1fdb2 = 0x0, _0x3e77bb.push(_0xeeaa61(_0x2444e2)), _0x2444e2 = 0x0) : _0xe1fdb2++, _0xd9dfad >>= 0x1;
                }
                _0x1fc082--, 0x0 == _0x1fc082 && (_0x1fc082 = Math.pow(0x2, _0x53b3bf), _0x53b3bf++), delete _0x265772[_0x468783];
              } else {
                _0xd9dfad = _0x4b13d8[_0x468783];
                for (_0x5f2fd4 = 0x0; _0x53b3bf > _0x5f2fd4; _0x5f2fd4++) _0x2444e2 = _0x2444e2 << 0x1 | 0x1 & _0xd9dfad, _0xe1fdb2 == _0x3ad3ef - 0x1 ? (_0xe1fdb2 = 0x0, _0x3e77bb.push(_0xeeaa61(_0x2444e2)), _0x2444e2 = 0x0) : _0xe1fdb2++, _0xd9dfad >>= 0x1;
              }
              _0x1fc082--, 0x0 == _0x1fc082 && (_0x1fc082 = Math.pow(0x2, _0x53b3bf), _0x53b3bf++), _0x4b13d8[_0x492bf3] = _0xbd6d2f++, _0x468783 = String(_0x3063c0);
            }
            if ('' !== _0x468783) {
              if (Object.prototype.hasOwnProperty.call(_0x265772, _0x468783)) {
                if (0x100 > _0x468783.charCodeAt(0x0)) {
                  for (_0x5f2fd4 = 0x0; _0x53b3bf > _0x5f2fd4; _0x5f2fd4++) _0x2444e2 <<= 0x1, _0xe1fdb2 == _0x3ad3ef - 0x1 ? (_0xe1fdb2 = 0x0, _0x3e77bb.push(_0xeeaa61(_0x2444e2)), _0x2444e2 = 0x0) : _0xe1fdb2++;
                  _0xd9dfad = _0x468783.charCodeAt(0x0);
                  for (_0x5f2fd4 = 0x0; 0x8 > _0x5f2fd4; _0x5f2fd4++) _0x2444e2 = _0x2444e2 << 0x1 | 0x1 & _0xd9dfad, _0xe1fdb2 == _0x3ad3ef - 0x1 ? (_0xe1fdb2 = 0x0, _0x3e77bb.push(_0xeeaa61(_0x2444e2)), _0x2444e2 = 0x0) : _0xe1fdb2++, _0xd9dfad >>= 0x1;
                } else {
                  _0xd9dfad = 0x1;
                  for (_0x5f2fd4 = 0x0; _0x53b3bf > _0x5f2fd4; _0x5f2fd4++) _0x2444e2 = _0x2444e2 << 0x1 | _0xd9dfad, _0xe1fdb2 == _0x3ad3ef - 0x1 ? (_0xe1fdb2 = 0x0, _0x3e77bb.push(_0xeeaa61(_0x2444e2)), _0x2444e2 = 0x0) : _0xe1fdb2++, _0xd9dfad = 0x0;
                  _0xd9dfad = _0x468783.charCodeAt(0x0);
                  for (_0x5f2fd4 = 0x0; 0x10 > _0x5f2fd4; _0x5f2fd4++) _0x2444e2 = _0x2444e2 << 0x1 | 0x1 & _0xd9dfad, _0xe1fdb2 == _0x3ad3ef - 0x1 ? (_0xe1fdb2 = 0x0, _0x3e77bb.push(_0xeeaa61(_0x2444e2)), _0x2444e2 = 0x0) : _0xe1fdb2++, _0xd9dfad >>= 0x1;
                }
                _0x1fc082--, 0x0 == _0x1fc082 && (_0x1fc082 = Math.pow(0x2, _0x53b3bf), _0x53b3bf++), delete _0x265772[_0x468783];
              } else {
                _0xd9dfad = _0x4b13d8[_0x468783];
                for (_0x5f2fd4 = 0x0; _0x53b3bf > _0x5f2fd4; _0x5f2fd4++) _0x2444e2 = _0x2444e2 << 0x1 | 0x1 & _0xd9dfad, _0xe1fdb2 == _0x3ad3ef - 0x1 ? (_0xe1fdb2 = 0x0, _0x3e77bb.push(_0xeeaa61(_0x2444e2)), _0x2444e2 = 0x0) : _0xe1fdb2++, _0xd9dfad >>= 0x1;
              }
              _0x1fc082--, 0x0 == _0x1fc082 && (Math.pow(0x2, _0x53b3bf), _0x53b3bf++);
            }
            _0xd9dfad = 0x2;
            for (_0x5f2fd4 = 0x0; _0x53b3bf > _0x5f2fd4; _0x5f2fd4++) _0x2444e2 = _0x2444e2 << 0x1 | 0x1 & _0xd9dfad, _0xe1fdb2 == _0x3ad3ef - 0x1 ? (_0xe1fdb2 = 0x0, _0x3e77bb.push(_0xeeaa61(_0x2444e2)), _0x2444e2 = 0x0) : _0xe1fdb2++, _0xd9dfad >>= 0x1;
            for (;;) {
              if (_0x2444e2 <<= 0x1, _0xe1fdb2 == _0x3ad3ef - 0x1) {
                _0x3e77bb.push(_0xeeaa61(_0x2444e2));
                break;
              }
              _0xe1fdb2++;
            }
            return _0x3e77bb.join('');
          },
          'decompress': function (_0x13962f) {
            return null == _0x13962f ? '' : '' == _0x13962f ? null : _0x539e2e._decompress(_0x13962f.length, 0x8000, function (_0x42d68c) {
              return _0x13962f.charCodeAt(_0x42d68c);
            });
          },
          '_decompress': function (_0x46f03a, _0x33ab7d, _0xd58cab) {
            var _0x1c9323,
              _0x139ed2,
              _0x1bc8ee,
              _0x58e1b6,
              _0x14fb5d,
              _0xf9f827,
              _0x5c2718 = [],
              _0x5c2669 = 0x4,
              _0x9fc54e = 0x4,
              _0xe7e46d = 0x3,
              _0x354bab = [],
              _0x4630d8 = _0xd58cab(0x0),
              _0x5cb874 = _0x33ab7d,
              _0x3fd347 = 0x1;
            for (_0x1c9323 = 0x0; 0x3 > _0x1c9323; _0x1c9323 += 0x1) _0x5c2718[_0x1c9323] = _0x1c9323;
            _0x139ed2 = 0x0, _0x58e1b6 = Math.pow(0x2, 0x2);
            for (_0x14fb5d = 0x1; _0x14fb5d != _0x58e1b6;) _0x1bc8ee = _0x4630d8 & _0x5cb874, _0x5cb874 >>= 0x1, 0x0 == _0x5cb874 && (_0x5cb874 = _0x33ab7d, _0x4630d8 = _0xd58cab(_0x3fd347++)), _0x139ed2 |= (0x0 < _0x1bc8ee ? 0x1 : 0x0) * _0x14fb5d, _0x14fb5d <<= 0x1;
            switch (_0x139ed2) {
              case 0x0:
                _0x139ed2 = 0x0, _0x58e1b6 = Math.pow(0x2, 0x8);
                for (_0x14fb5d = 0x1; _0x14fb5d != _0x58e1b6;) _0x1bc8ee = _0x4630d8 & _0x5cb874, _0x5cb874 >>= 0x1, 0x0 == _0x5cb874 && (_0x5cb874 = _0x33ab7d, _0x4630d8 = _0xd58cab(_0x3fd347++)), _0x139ed2 |= (0x0 < _0x1bc8ee ? 0x1 : 0x0) * _0x14fb5d, _0x14fb5d <<= 0x1;
                _0xf9f827 = _0x2ee3a1(_0x139ed2);
                break;
              case 0x1:
                _0x139ed2 = 0x0, _0x58e1b6 = Math.pow(0x2, 0x10);
                for (_0x14fb5d = 0x1; _0x14fb5d != _0x58e1b6;) _0x1bc8ee = _0x4630d8 & _0x5cb874, _0x5cb874 >>= 0x1, 0x0 == _0x5cb874 && (_0x5cb874 = _0x33ab7d, _0x4630d8 = _0xd58cab(_0x3fd347++)), _0x139ed2 |= (0x0 < _0x1bc8ee ? 0x1 : 0x0) * _0x14fb5d, _0x14fb5d <<= 0x1;
                _0xf9f827 = _0x2ee3a1(_0x139ed2);
                break;
              case 0x2:
                return '';
            }
            _0x1c9323 = _0x5c2718[0x3] = _0xf9f827;
            for (_0x354bab.push(_0xf9f827);;) {
              if (_0x3fd347 > _0x46f03a) return '';
              _0x139ed2 = 0x0, _0x58e1b6 = Math.pow(0x2, _0xe7e46d);
              for (_0x14fb5d = 0x1; _0x14fb5d != _0x58e1b6;) _0x1bc8ee = _0x4630d8 & _0x5cb874, _0x5cb874 >>= 0x1, 0x0 == _0x5cb874 && (_0x5cb874 = _0x33ab7d, _0x4630d8 = _0xd58cab(_0x3fd347++)), _0x139ed2 |= (0x0 < _0x1bc8ee ? 0x1 : 0x0) * _0x14fb5d, _0x14fb5d <<= 0x1;
              switch (_0xf9f827 = _0x139ed2) {
                case 0x0:
                  _0x139ed2 = 0x0, _0x58e1b6 = Math.pow(0x2, 0x8);
                  for (_0x14fb5d = 0x1; _0x14fb5d != _0x58e1b6;) _0x1bc8ee = _0x4630d8 & _0x5cb874, _0x5cb874 >>= 0x1, 0x0 == _0x5cb874 && (_0x5cb874 = _0x33ab7d, _0x4630d8 = _0xd58cab(_0x3fd347++)), _0x139ed2 |= (0x0 < _0x1bc8ee ? 0x1 : 0x0) * _0x14fb5d, _0x14fb5d <<= 0x1;
                  _0x5c2718[_0x9fc54e++] = _0x2ee3a1(_0x139ed2), _0xf9f827 = _0x9fc54e - 0x1, _0x5c2669--;
                  break;
                case 0x1:
                  _0x139ed2 = 0x0, _0x58e1b6 = Math.pow(0x2, 0x10);
                  for (_0x14fb5d = 0x1; _0x14fb5d != _0x58e1b6;) _0x1bc8ee = _0x4630d8 & _0x5cb874, _0x5cb874 >>= 0x1, 0x0 == _0x5cb874 && (_0x5cb874 = _0x33ab7d, _0x4630d8 = _0xd58cab(_0x3fd347++)), _0x139ed2 |= (0x0 < _0x1bc8ee ? 0x1 : 0x0) * _0x14fb5d, _0x14fb5d <<= 0x1;
                  _0x5c2718[_0x9fc54e++] = _0x2ee3a1(_0x139ed2), _0xf9f827 = _0x9fc54e - 0x1, _0x5c2669--;
                  break;
                case 0x2:
                  return _0x354bab.join('');
              }
              if (0x0 == _0x5c2669 && (_0x5c2669 = Math.pow(0x2, _0xe7e46d), _0xe7e46d++), _0x5c2718[_0xf9f827]) _0x139ed2 = _0x5c2718[_0xf9f827];else {
                if (_0xf9f827 !== _0x9fc54e) return null;
                _0x139ed2 = _0x1c9323 + _0x1c9323.charAt(0x0);
              }
              _0x354bab.push(_0x139ed2), _0x5c2718[_0x9fc54e++] = _0x1c9323 + _0x139ed2.charAt(0x0), _0x5c2669--, _0x1c9323 = _0x139ed2, 0x0 == _0x5c2669 && (_0x5c2669 = Math.pow(0x2, _0xe7e46d), _0xe7e46d++);
            }
          }
        };
      return _0x539e2e;
    }();
  'function' == typeof define && define.amd ? define(function () {
    return LZString;
  }) : 'undefined' != typeof module && null != module && (module.exports = LZString), ig.baked = !0x0, ig.module('plugins.packer.packer-image-injector').requires('impact.image', 'impact.animation').defines(function () {
    ig.Image.inject({
      'tintCache': {},
      'load': function (_0x301d85) {
        ig.packer && ig.packer.isImageInAtlas(this.path) ? (this.frameData = ig.packer.getFrameData(this.path), this.width = this.frameData.frame.w, this.height = this.frameData.frame.h, this.loaded = ig.packer.isImageLoadedForPath(this.path), _0x301d85 && _0x301d85(this.path, !0x0)) : this.parent(_0x301d85);
      },
      'reload': function () {
        ig.packer.isImageInAtlas(this.path) || this.parent();
      },
      'resize': function (_0x1e7353) {
        ig.packer.isImageInAtlas(this.path) ? console.warn("PACKER PLUGIN WARNING! : image.scale is not supported, \nImage path:" + this.path) : this.parent(_0x1e7353);
      },
      'draw': function (_0x15daee, _0x445bc7, _0x531f2e, _0xd91ac, _0xdfef4b, _0x1acbd6, _0x305fbf, _0x3fedb0) {
        if (ig.packer.isImageInAtlas(this.path)) {
          if (!this.atlasImage && (this.atlasImage = ig.packer.getAtlasImage(this.path), this.frameData = ig.packer.getFrameData(this.path), this.width = this.frameData.frame.w, this.height = this.frameData.frame.h, !this.atlasImage)) return;
          _0xdfef4b = _0xdfef4b ? _0xdfef4b : this.width, _0x1acbd6 = _0x1acbd6 ? _0x1acbd6 : this.height, ig.system.context.drawImage(this.atlasImage, (_0x531f2e ? _0x531f2e : 0x0) + this.frameData.frame.x, (_0xd91ac ? _0xd91ac : 0x0) + this.frameData.frame.y, _0xdfef4b, _0x1acbd6, ig.system.getDrawPos(_0x15daee), ig.system.getDrawPos(_0x445bc7), _0x305fbf ? _0x305fbf : _0xdfef4b, _0x3fedb0 ? _0x3fedb0 : _0x1acbd6);
        } else _0xdfef4b = _0xdfef4b ? _0xdfef4b : this.width, _0x1acbd6 = _0x1acbd6 ? _0x1acbd6 : this.height, ig.system.context.drawImage(this.data, _0x531f2e ? _0x531f2e : 0x0, _0xd91ac ? _0xd91ac : 0x0, _0xdfef4b, _0x1acbd6, ig.system.getDrawPos(_0x15daee), ig.system.getDrawPos(_0x445bc7), _0x305fbf ? _0x305fbf : _0xdfef4b, _0x3fedb0 ? _0x3fedb0 : _0x1acbd6);
        ig.Image.drawCount++;
      },
      'drawImage': function (_0x3d331d, _0x14d560, _0x3f71cb, _0xe5ae15, _0x2bfead, _0x4feb2a, _0x464dab, _0x3b75c7) {
        _0x3d331d = _0x3d331d ? _0x3d331d : 0x0, _0x14d560 = _0x14d560 ? _0x14d560 : 0x0, 0x2 >= arguments.length ? this.draw(_0x3d331d, _0x14d560) : 0x4 >= arguments.length ? (_0x3f71cb = _0x3f71cb ? _0x3f71cb : this.width, _0xe5ae15 = _0xe5ae15 ? _0xe5ae15 : this.height, this.draw(_0x3d331d, _0x14d560, 0x0, 0x0, this.width, this.height, _0x3f71cb, _0xe5ae15)) : (_0x3f71cb = _0x3f71cb ? _0x3f71cb : this.width, _0xe5ae15 = _0xe5ae15 ? _0xe5ae15 : this.height, _0x464dab = _0x464dab ? _0x464dab : this.width, _0x3b75c7 = _0x3b75c7 ? _0x3b75c7 : this.height, this.draw(_0x2bfead ? _0x2bfead : 0x0, _0x4feb2a ? _0x4feb2a : 0x0, _0x3d331d, _0x14d560, _0x3f71cb, _0xe5ae15, _0x464dab, _0x3b75c7));
      },
      'drawCtx': function (_0xedb791, _0x26cab5, _0x30ee81, _0x21b059, _0x51d83f, _0x43e8df, _0x16b308, _0x5d1076, _0x3fb174) {
        if (ig.packer.isImageInAtlas(this.path)) {
          if (!this.atlasImage && (this.atlasImage = ig.packer.getAtlasImage(this.path), this.frameData = ig.packer.getFrameData(this.path), this.width = this.frameData.frame.w, this.height = this.frameData.frame.h, !this.atlasImage)) return;
          _0x43e8df = _0x43e8df ? _0x43e8df : this.width, _0x16b308 = _0x16b308 ? _0x16b308 : this.height, _0xedb791.drawImage(this.atlasImage, (_0x21b059 ? _0x21b059 : 0x0) + this.frameData.frame.x, (_0x51d83f ? _0x51d83f : 0x0) + this.frameData.frame.y, _0x43e8df, _0x16b308, ig.system.getDrawPos(_0x26cab5), ig.system.getDrawPos(_0x30ee81), _0x5d1076 ? _0x5d1076 : _0x43e8df, _0x3fb174 ? _0x3fb174 : _0x16b308);
        } else _0x43e8df = _0x43e8df ? _0x43e8df : this.width, _0x16b308 = _0x16b308 ? _0x16b308 : this.height, _0xedb791.drawImage(this.data, _0x21b059 ? _0x21b059 : 0x0, _0x51d83f ? _0x51d83f : 0x0, _0x43e8df, _0x16b308, ig.system.getDrawPos(_0x26cab5), ig.system.getDrawPos(_0x30ee81), _0x5d1076 ? _0x5d1076 : _0x43e8df, _0x3fb174 ? _0x3fb174 : _0x16b308);
        ig.Image.drawCount++;
      },
      'drawImageCtx': function (_0x6c5f63, _0x477385, _0x4fa14a, _0x11067d, _0x2df095, _0xd46b91, _0x210079, _0x524dcf, _0xc10056) {
        _0x477385 = _0x477385 ? _0x477385 : 0x0, _0x4fa14a = _0x4fa14a ? _0x4fa14a : 0x0, 0x2 >= arguments.length ? this.drawCtx(_0x6c5f63, _0x477385, _0x4fa14a) : 0x5 >= arguments.length ? (_0x11067d = _0x11067d ? _0x11067d : this.width, _0x2df095 = _0x2df095 ? _0x2df095 : this.height, this.drawCtx(_0x6c5f63, _0x477385, _0x4fa14a, 0x0, 0x0, this.width, this.height, _0x11067d, _0x2df095)) : (_0x11067d = _0x11067d ? _0x11067d : this.width, _0x2df095 = _0x2df095 ? _0x2df095 : this.height, _0x524dcf = _0x524dcf ? _0x524dcf : this.width, _0xc10056 = _0xc10056 ? _0xc10056 : this.height, this.drawCtx(_0x6c5f63, _0xd46b91 ? _0xd46b91 : 0x0, _0x210079 ? _0x210079 : 0x0, _0x477385, _0x4fa14a, _0x11067d, _0x2df095, _0x524dcf, _0xc10056));
      },
      'drawTile': function (_0x11858d, _0x59417e, _0x36e044, _0x165210, _0x2dac1a, _0x2e5c94, _0x49d85d) {
        if (ig.packer.isImageInAtlas(this.path)) {
          if (this.atlasImage || !(this.atlasImage = ig.packer.getAtlasImage(this.path), this.frameData = ig.packer.getFrameData(this.path), this.width = this.frameData.frame.w, this.height = this.frameData.frame.h, !this.atlasImage)) {
            _0x2dac1a = _0x2dac1a ? _0x2dac1a : _0x165210;
            var _0x28e0de = Math.floor(_0x165210),
              _0x45e2c8 = Math.floor(_0x2dac1a),
              _0x4b3002 = _0x2e5c94 ? -0x1 : 0x1,
              _0x33c172 = _0x49d85d ? -0x1 : 0x1;
            if (_0x2e5c94 || _0x49d85d) ig.system.context.save(), ig.system.context.scale(_0x4b3002, _0x33c172);
            ig.system.context.drawImage(this.atlasImage, Math.floor(_0x36e044 * _0x165210) % this.width + this.frameData.frame.x, Math.floor(_0x36e044 * _0x165210 / this.width) * _0x2dac1a + this.frameData.frame.y, _0x28e0de, _0x45e2c8, ig.system.getDrawPos(_0x11858d) * _0x4b3002 - (_0x2e5c94 ? _0x28e0de : 0x0), ig.system.getDrawPos(_0x59417e) * _0x33c172 - (_0x49d85d ? _0x45e2c8 : 0x0), _0x28e0de, _0x45e2c8), (_0x2e5c94 || _0x49d85d) && ig.system.context.restore(), ig.Image.drawCount++;
          }
        } else this.parent(_0x11858d, _0x59417e, _0x36e044, _0x165210, _0x2dac1a, _0x2e5c94, _0x49d85d);
      },
      'drawTileTint': function (_0x4ec8bd, _0x4a1c8e, _0x5529be, _0x1ac93a, _0x5327cb, _0x28fd40, _0x38c6f9, _0x136dd9) {
        if (_0x4ec8bd = this.getTintedImageCanvas(_0x4ec8bd)) {
          if (_0x28fd40 = _0x28fd40 ? _0x28fd40 : _0x5327cb, this.loaded && !(_0x5327cb > this.width || _0x28fd40 > this.height)) {
            var _0x5e9121 = ig.system.scale,
              _0x20d584 = Math.floor(_0x5327cb * _0x5e9121),
              _0x1c37dd = Math.floor(_0x28fd40 * _0x5e9121),
              _0x55ff5a = _0x38c6f9 ? -0x1 : 0x1,
              _0x4e997b = _0x136dd9 ? -0x1 : 0x1;
            if (_0x38c6f9 || _0x136dd9) ig.system.context.save(), ig.system.context.scale(_0x55ff5a, _0x4e997b);
            ig.system.context.drawImage(_0x4ec8bd, Math.floor(_0x1ac93a * _0x5327cb) % this.width * _0x5e9121, Math.floor(_0x1ac93a * _0x5327cb / this.width) * _0x28fd40 * _0x5e9121, _0x20d584, _0x1c37dd, ig.system.getDrawPos(_0x4a1c8e) * _0x55ff5a - (_0x38c6f9 ? _0x20d584 : 0x0), ig.system.getDrawPos(_0x5529be) * _0x4e997b - (_0x136dd9 ? _0x1c37dd : 0x0), _0x20d584, _0x1c37dd), (_0x38c6f9 || _0x136dd9) && ig.system.context.restore(), ig.Image.drawCount++;
          }
        }
      },
      'drawTint': function (_0x41d7f8, _0x163ea4, _0x5a4bd8, _0x595625, _0x43bdf3, _0x240242, _0x1e3e41, _0x40cb34, _0x14b5d6) {
        if (_0x41d7f8 = this.getTintedImageCanvas(_0x41d7f8)) _0x240242 = _0x240242 ? _0x240242 : this.width, _0x1e3e41 = _0x1e3e41 ? _0x1e3e41 : this.height, ig.system.context.drawImage(_0x41d7f8, _0x595625 ? _0x595625 : 0x0, _0x43bdf3 ? _0x43bdf3 : 0x0, _0x240242, _0x1e3e41, ig.system.getDrawPos(_0x163ea4), ig.system.getDrawPos(_0x5a4bd8), _0x40cb34 ? _0x40cb34 : _0x240242, _0x14b5d6 ? _0x14b5d6 : _0x1e3e41), ig.Image.drawCount++;
      },
      'getTintedImageCanvas': function (_0x1e9577) {
        if (!this.tintCache[_0x1e9577]) {
          if (ig.packer.isImageInAtlas(this.path) && !this.atlasImage && (this.atlasImage = ig.packer.getAtlasImage(this.path), this.frameData = ig.packer.getFrameData(this.path), this.width = this.frameData.frame.w, this.height = this.frameData.frame.h, !this.atlasImage)) return;
          var _0x4de589 = ig.$new('canvas');
          _0x4de589.width = this.width, _0x4de589.height = this.height, this.atlasImage ? _0x4de589.getContext('2d').drawImage(this.atlasImage, this.frameData.frame.x, this.frameData.frame.y, this.width, this.height, 0x0, 0x0, this.width, this.height) : _0x4de589.getContext('2d').drawImage(this.data, 0x0, 0x0, this.width, this.height, 0x0, 0x0, this.width, this.height);
          for (var _0x35ed4f = _0x4de589.getContext('2d'), _0x379797 = _0x35ed4f.getImageData(0x0, 0x0, this.width, this.height), _0x249d07 = _0x379797.data, _0x428d3b, _0x4dedbd = _0x249d07.length, _0x145e18, _0x16589e, _0x517ac3, _0x36006e, _0x54c36d = parseInt(_0x1e9577.substr(0x1, 0x2), 0x10) / 0xff, _0x42df47 = parseInt(_0x1e9577.substr(0x3, 0x2), 0x10) / 0xff, _0x4200c4 = parseInt(_0x1e9577.substr(0x5, 0x2), 0x10) / 0xff, _0xe08ad9 = 0x0; _0xe08ad9 < _0x4dedbd; _0xe08ad9 += 0x4) _0x428d3b = _0x249d07[_0xe08ad9 + 0x3] / 0xff, _0x36006e = _0x428d3b + 0x1 - 0x1 * _0x428d3b, _0x145e18 = _0x249d07[_0xe08ad9] / 0xff * _0x428d3b, _0x16589e = _0x249d07[_0xe08ad9 + 0x1] / 0xff * _0x428d3b, _0x517ac3 = _0x249d07[_0xe08ad9 + 0x2] / 0xff * _0x428d3b, _0x36006e = 0xff / _0x36006e, _0x249d07[_0xe08ad9] = (_0x145e18 * _0x54c36d + _0x54c36d * (0x1 - _0x428d3b)) * _0x36006e, _0x249d07[_0xe08ad9 + 0x1] = (_0x16589e * _0x42df47 + _0x42df47 * (0x1 - _0x428d3b)) * _0x36006e, _0x249d07[_0xe08ad9 + 0x2] = (_0x517ac3 * _0x4200c4 + _0x4200c4 * (0x1 - _0x428d3b)) * _0x36006e;
          _0x35ed4f.putImageData(_0x379797, 0x0, 0x0), this.tintCache[_0x1e9577] = _0x4de589;
        }
        return this.tintCache[_0x1e9577];
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.packer.packer-animation-injector').requires('impact.image', 'impact.animation').defines(function () {
    ig.Animation.inject({
      'tint': null,
      'draw': function (_0x4cd69a, _0x2d3574) {
        if (this.tint) {
          var _0x54b307 = Math.max(this.sheet.width, this.sheet.height);
          _0x4cd69a > ig.system.width || _0x2d3574 > ig.system.height || 0x0 > _0x4cd69a + _0x54b307 || 0x0 > _0x2d3574 + _0x54b307 || (0x1 != this.alpha && (ig.system.context.globalAlpha = this.alpha), 0x0 == this.angle ? this.sheet.image.drawTileTint(this.tint, _0x4cd69a, _0x2d3574, this.tile, this.sheet.width, this.sheet.height, this.flip.x, this.flip.y) : (ig.system.context.save(), ig.system.context.translate(ig.system.getDrawPos(_0x4cd69a + this.pivot.x), ig.system.getDrawPos(_0x2d3574 + this.pivot.y)), ig.system.context.rotate(this.angle), this.sheet.image.drawTileTint(this.tint, -this.pivot.x, -this.pivot.y, this.tile, this.sheet.width, this.sheet.height, this.flip.x, this.flip.y), ig.system.context.restore()), 0x1 != this.alpha && (ig.system.context.globalAlpha = 0x1));
        } else this.parent(_0x4cd69a, _0x2d3574);
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.packer.packer-plugin').requires('plugins.packer.packer-image-injector', 'plugins.packer.packer-animation-injector').defines(function () {
    ig.AtlasImage = ig.Class.extend({
      'init': function (_0xc524d8) {
        this.path = _0xc524d8;
      },
      'load': function (_0x170643) {
        this.loadCallback = _0x170643 || null, this.data = new Image(), this.data.onload = this.onload.bind(this), this.data.onerror = this.onerror.bind(this), this.data.src = ig.prefix + this.path + ig.nocache;
      },
      'onload': function () {
        this.loaded = !0x0, ig.packer.refreshImageLoadedStatus(), this.loadCallback && this.loadCallback(this.path, !0x0);
      },
      'onerror': function () {
        this.error = !0x0, this.loadCallback && this.loadCallback(this.path, !0x1);
      }
    }), ig.packer = {
      'textureJson': [],
      'textureAtlas': [],
      'jsonLoadStatus': [],
      'atlasLoadStatus': [],
      'textureExistStatus': [],
      'pathMap': {},
      'initCallback': null,
      'initPacker': function (_0x884eea) {
        if (window.packerplugin && 0x0 < packerplugin.textures.length) {
          console.log("Packer Plugin 1.1.7 is enabled, loading " + packerplugin.textures.length + " texture atlases..."), ig.packer.initCallback = _0x884eea;
          for (_0x884eea = 0x0; _0x884eea < packerplugin.textures.length; _0x884eea++) this.textureExistStatus.push(0x1);
          this.loadAllJson();
        } else console.log("Packer Plugin 1.1.7 is disabled, loading individual images..."), _0x884eea();
      },
      'loadAllJson': function () {
        for (var _0x184023 = 0x0; _0x184023 < ig.packer.textureExistStatus.length; _0x184023++) 0x1 == ig.packer.textureExistStatus[_0x184023] && (ig.packer.textureJson.push(null), ig.packer.textureAtlas.push(null), ig.packer.jsonLoadStatus.push(0x1), ig.packer.atlasLoadStatus.push(0x0), ig.packer.textureJson[_0x184023] = JSON.parse(window.packerplugin.json[packerplugin.textures[_0x184023]]));
        ig.packer.onLoadJsonComplete();
      },
      'onLoadJsonComplete': function () {
        for (var _0x35b482 = 0x0; _0x35b482 < ig.packer.textureJson.length; _0x35b482++) {
          var _0x22f9c2 = ig.packer.textureJson[_0x35b482],
            _0x47f202;
          for (_0x47f202 in _0x22f9c2.frames) ig.packer.pathMap[_0x47f202] = {
            'path': _0x47f202,
            'textureIndex': _0x35b482
          };
          _0x22f9c2 = 'media/graphics/packed/' + packerplugin.textures[_0x35b482] + '.png', 0x0 <= packerplugin.textures[_0x35b482].indexOf('big-jpg') && (_0x22f9c2 = 'media/graphics/packed/' + packerplugin.textures[_0x35b482] + '.jpg'), _0x22f9c2 = new ig.AtlasImage(_0x22f9c2), ig.packer.textureAtlas[_0x35b482] = _0x22f9c2, ig.addResource(_0x22f9c2);
        }
        ig.packer.initCallback();
      },
      'isImageInAtlas': function (_0x5189d7) {
        return Object.hasOwnProperty.call(ig.packer.pathMap, _0x5189d7) ? !0x0 : !0x1;
      },
      'refreshImageLoadedStatus': function () {
        for (var _0x49ad71 in ig.Image.cache) if (Object.hasOwnProperty.call(ig.Image.cache, _0x49ad71)) {
          var _0x506a34 = ig.Image.cache[_0x49ad71];
          ig.packer.isImageInAtlas(_0x506a34.path) && (_0x506a34.loaded = ig.packer.isImageLoadedForPath(_0x506a34.path));
        }
      },
      'isImageLoadedForPath': function (_0x22b091) {
        return ig.packer.textureAtlas[ig.packer.pathMap[_0x22b091].textureIndex].loaded ? !0x0 : !0x1;
      },
      'getAtlasImage': function (_0x39181e) {
        return _0x39181e = ig.packer.pathMap[_0x39181e].textureIndex, !ig.packer.textureAtlas[_0x39181e].loaded ? null : ig.packer.textureAtlas[_0x39181e].data;
      },
      'getFrameData': function (_0x4b1e25) {
        return ig.packer.textureJson[ig.packer.pathMap[_0x4b1e25].textureIndex].frames[_0x4b1e25];
      }
    };
  }), ig.baked = !0x0, ig.module('plugins.patches.fps-limit-patch').requires('impact.system', 'impact.impact').defines(function () {
    ig.System.inject({
      'fps': 0x3c
    }), ig.system && (ig.system.fps = 0x3c), ig.normalizeVendorAttribute(window, 'requestAnimationFrame');
    if (window.requestAnimationFrame) {
      var _0x3af8df = 0x1,
        _0x2f5659 = {};
      window.ig.setAnimation = function (_0x436ef6, _0x357fe7) {
        var _0x2881f3 = _0x3af8df++;
        _0x2f5659[_0x2881f3] = !0x0;
        var _0x59cf3e = 0x3e8 / 0x3c,
          _0x5db8d6 = 0x3c,
          _0x343dda = 0x0,
          _0x4a8d1a = 0x0,
          _0x368ae9 = 0x0,
          _0x4f9479 = 0x0,
          _0x902056 = function () {
            _0x2f5659[_0x2881f3] && (timestamp = Date.now(), _0x4a8d1a = _0x343dda, _0x343dda = timestamp, _0x4f9479 = _0x343dda - _0x4a8d1a, _0x5db8d6 = 0.8 * _0x5db8d6 + 0.2 * (0x3e8 / _0x4f9479), 0x3c < _0x5db8d6 && 0x3f <= _0x5db8d6 ? (_0x368ae9 = Math.min(Math.max(0x2 * _0x59cf3e + _0x4a8d1a - timestamp, 0x0), _0x59cf3e), setTimeout(function () {
              window.requestAnimationFrame(_0x902056, _0x357fe7);
            }, _0x368ae9), _0x436ef6(timestamp)) : (window.requestAnimationFrame(_0x902056, _0x357fe7), _0x436ef6()));
          };
        return window.requestAnimationFrame(_0x902056, _0x357fe7), _0x2881f3;
      }, window.ig.clearAnimation = function (_0x2741cb) {
        delete _0x2f5659[_0x2741cb];
      };
    } else window.ig.setAnimation = function (_0x3f102e) {
      return window.setInterval(_0x3f102e, 0x3e8 / 0x3c);
    }, window.ig.clearAnimation = function (_0x5fb97d) {
      window.clearInterval(_0x5fb97d);
    };
  }), ig.baked = !0x0, ig.module('plugins.patches.timer-patch').requires('impact.timer').defines(function () {
    ig.Timer.step = function () {
      var _0x58722c = Date.now(),
        _0x431000 = (_0x58722c - ig.Timer._last) / 0x3e8;
      0x0 > _0x431000 && (_0x431000 = 0x0), ig.Timer.time += Math.min(_0x431000, ig.Timer.maxStep) * ig.Timer.timeScale, ig.Timer._last = _0x58722c;
    };
  }), ig.baked = !0x0, ig.module('plugins.patches.user-agent-patch').requires('impact.impact').defines(function () {
    ig.ua.is_uiwebview = /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent), ig.ua.is_safari_or_uiwebview = /(iPhone|iPod|iPad).*AppleWebKit/i.test(navigator.userAgent), ig.ua.iOS6_tag = /OS 6_/i.test(navigator.userAgent), ig.ua.iOS6 = (ig.ua.iPhone || ig.ua.iPad) && ig.ua.iOS6_tag, ig.ua.iOSgt5 = ig.ua.iOS && 0x5 < parseInt(navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/)[0x1]), ig.ua.HTCONE = /HTC_One/i.test(navigator.userAgent), ig.ua.Kindle = /Silk/i.test(navigator.userAgent), ig.ua.touchDevice = 'ontouchstart' in window || window.navigator.msMaxTouchPoints || window.navigator.maxTouchPoints, ig.ua.is_mac = 'MacIntel' === navigator.platform, ig.ua.iOS = ig.ua.touchDevice && ig.ua.is_mac || ig.ua.iOS, ig.ua.mobile = ig.ua.iOS || ig.ua.android || ig.ua.iOS6 || ig.ua.winPhone || ig.ua.Kindle || /mobile/i.test(navigator.userAgent);
  }), ig.baked = !0x0, ig.module('plugins.patches.webkit-image-smoothing-patch').defines(function () {
    ig.System && (ig.System.SCALE = {
      'CRISP': function (_0x3d5d77, _0xf16e49) {
        _0xf16e49.imageSmoothingEnabled = _0xf16e49.msImageSmoothingEnabled = _0xf16e49.mozImageSmoothingEnabled = _0xf16e49.oImageSmoothingEnabled = !0x1, _0x3d5d77.style.imageRendering = '-moz-crisp-edges', _0x3d5d77.style.imageRendering = '-o-crisp-edges', _0x3d5d77.style.imageRendering = '-webkit-optimize-contrast', _0x3d5d77.style.imageRendering = 'crisp-edges', _0x3d5d77.style.msInterpolationMode = 'nearest-neighbor';
      },
      'SMOOTH': function (_0x5e225f, _0x4cea88) {
        _0x4cea88.imageSmoothingEnabled = _0x4cea88.msImageSmoothingEnabled = _0x4cea88.oImageSmoothingEnabled = !0x0, _0x5e225f.style.imageRendering = '', _0x5e225f.style.msInterpolationMode = '';
      }
    }, ig.System.scaleMode = ig.System.SCALE.SMOOTH);
  }), ig.baked = !0x0, ig.module('plugins.patches.windowfocus-onMouseDown-patch').requires('impact.input').defines(function () {
    var _0xf7a2f1 = !0x1;
    try {
      _0xf7a2f1 = window.self !== window.top, !0x1 === _0xf7a2f1 && (_0xf7a2f1 = 0x0 < window.frames.length);
    } catch (_0x4a21d7) {
      _0xf7a2f1 = !0x0;
    }
    ig.Input.inject({
      'keydown': function (_0x7b9693) {
        var _0x46bedf = _0x7b9693.target.tagName;
        if (!('INPUT' == _0x46bedf || 'TEXTAREA' == _0x46bedf)) {
          if (_0x46bedf = 'keydown' == _0x7b9693.type ? _0x7b9693.keyCode : 0x2 == _0x7b9693.button ? ig.KEY.MOUSE2 : ig.KEY.MOUSE1, _0xf7a2f1 && 0x0 > _0x46bedf && window.focus(), ('touchstart' == _0x7b9693.type || 'mousedown' == _0x7b9693.type) && this.mousemove(_0x7b9693), _0x46bedf = this.bindings[_0x46bedf]) this.actions[_0x46bedf] = !0x0, this.locks[_0x46bedf] || (this.presses[_0x46bedf] = !0x0, this.locks[_0x46bedf] = !0x0), _0x7b9693.stopPropagation(), _0x7b9693.preventDefault();
        }
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.patches.input-patch').requires('impact.input').defines(function () {
    ig.Input.inject({
      'initMouse': function () {
        this.parent(), ig.system.canvas.addEventListener('mouseleave', this.mouseleave.bind(this), !0x1);
      },
      'mousemove': function (_0x3c0ad7) {
        this.parent(_0x3c0ad7);
        try {
          ig.soundHandler.unlockWebAudio();
        } catch (_0xbd1d36) {}
      },
      'mouseleave': function () {
        this.clearState('click');
      },
      'keyup': function (_0x4b844d) {
        this.parent(_0x4b844d);
        if (ig.visibilityHandler) ig.visibilityHandler.onChange('focus');
        try {
          ig.soundHandler.unlockWebAudio();
        } catch (_0x42fdc5) {}
      },
      'clearState': function (_0x589b22) {
        this.actions[_0x589b22] = !0x1;
      },
      'clearAllState': function () {
        for (var _0x200f2a in this.actions) this.clearState(_0x200f2a);
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.data.vector').defines(function () {
    Vector2 = function (_0x36fbb5, _0x298dff) {
      this.x = _0x36fbb5 || 0x0, this.y = _0x298dff || 0x0;
    }, Vector2.prototype = {
      'valType': 'number',
      'neg': function () {
        return this.x = -this.x, this.y = -this.y, this;
      },
      'row': function (_0x584fd9) {
        return typeof _0x584fd9 === this.valType && (this.y = _0x584fd9), this.y;
      },
      'col': function (_0x33f874) {
        return typeof _0x33f874 === this.valType && (this.x = _0x33f874), this.x;
      },
      'add': function (_0x4d9578) {
        return _0x4d9578 instanceof Vector2 ? (this.x += _0x4d9578.x, this.y += _0x4d9578.y) : (this.x += _0x4d9578, this.y += _0x4d9578), this;
      },
      'sub': function (_0xb533d8) {
        return _0xb533d8 instanceof Vector2 ? (this.x -= _0xb533d8.x, this.y -= _0xb533d8.y) : (this.x -= _0xb533d8, this.y -= _0xb533d8), this;
      },
      'mul': function (_0x3cd592) {
        return _0x3cd592 instanceof Vector2 ? (this.x *= _0x3cd592.x, this.y *= _0x3cd592.y) : (this.x *= _0x3cd592, this.y *= _0x3cd592), this;
      },
      'div': function (_0x20aa58) {
        return _0x20aa58 instanceof Vector2 ? (0x0 != _0x20aa58.x && (this.x /= _0x20aa58.x), 0x0 != _0x20aa58.y && (this.y /= _0x20aa58.y)) : 0x0 != _0x20aa58 && (this.x /= _0x20aa58, this.y /= _0x20aa58), this;
      },
      'equals': function (_0x1753a4) {
        return this.x == _0x1753a4.x && this.y == _0x1753a4.y;
      },
      'dot': function (_0x25c5c8) {
        return this.x * _0x25c5c8.x + this.y * _0x25c5c8.y;
      },
      'cross': function (_0x417ded) {
        return this.x * _0x417ded.y - this.y * _0x417ded.x;
      },
      'length': function () {
        return Math.sqrt(this.dot(this));
      },
      'norm': function () {
        return this.divide(this.length());
      },
      'min': function () {
        return Math.min(this.x, this.y);
      },
      'max': function () {
        return Math.max(this.x, this.y);
      },
      'toAngles': function () {
        return -Math.atan2(-this.y, this.x);
      },
      'angleTo': function (_0x1088e6) {
        return Math.acos(this.dot(_0x1088e6) / (this.length() * _0x1088e6.length()));
      },
      'toArray': function (_0x3a7355) {
        return [this.x, this.y].slice(0x0, _0x3a7355 || 0x2);
      },
      'clone': function () {
        return new Vector2(this.x, this.y);
      },
      'set': function (_0xc0a18f, _0x1a0066) {
        return this.x = _0xc0a18f, this.y = _0x1a0066, this;
      },
      'unit': function () {
        var _0x31eda1 = this.length();
        if (0x0 < _0x31eda1) return new Vector2(this.x / _0x31eda1, this.y / _0x31eda1);
        throw "Divide by 0 error in unitVector function of vector:" + this;
      },
      'turnRight': function () {
        var _0x432e71 = this.x;
        return this.x = -this.y, this.y = _0x432e71, this;
      },
      'turnLeft': function () {
        var _0x485f4a = this.x;
        return this.x = this.y, this.y = -_0x485f4a, this;
      },
      'rotate': function (_0x30bba9) {
        var _0x424466 = this.clone();
        return this.x = _0x424466.x * Math.cos(_0x30bba9) - _0x424466.y * Math.sin(_0x30bba9), this.y = _0x424466.x * Math.sin(_0x30bba9) + _0x424466.y * Math.cos(_0x30bba9), this;
      }
    }, Vector2.negative = function (_0x3095a6) {
      return new Vector2(-_0x3095a6.x, -_0x3095a6.y);
    }, Vector2.add = function (_0x55c111, _0x5b6806) {
      return _0x5b6806 instanceof Vector2 ? new Vector2(_0x55c111.x + _0x5b6806.x, _0x55c111.y + _0x5b6806.y) : new Vector2(_0x55c111.x + v, _0x55c111.y + v);
    }, Vector2.subtract = function (_0x5a74ff, _0xbe5e43) {
      return _0xbe5e43 instanceof Vector2 ? new Vector2(_0x5a74ff.x - _0xbe5e43.x, _0x5a74ff.y - _0xbe5e43.y) : new Vector2(_0x5a74ff.x - v, _0x5a74ff.y - v);
    }, Vector2.multiply = function (_0x4bc3b5, _0x10c551) {
      return _0x10c551 instanceof Vector2 ? new Vector2(_0x4bc3b5.x * _0x10c551.x, _0x4bc3b5.y * _0x10c551.y) : new Vector2(_0x4bc3b5.x * v, _0x4bc3b5.y * v);
    }, Vector2.divide = function (_0x18379b, _0x48b1f2) {
      return _0x48b1f2 instanceof Vector2 ? new Vector2(_0x18379b.x / _0x48b1f2.x, _0x18379b.y / _0x48b1f2.y) : new Vector2(_0x18379b.x / v, _0x18379b.y / v);
    }, Vector2.equals = function (_0x53e104, _0x5b6b72) {
      return _0x53e104.x == _0x5b6b72.x && _0x53e104.y == _0x5b6b72.y;
    }, Vector2.dot = function (_0x27d61e, _0x1c33ba) {
      return _0x27d61e.x * _0x1c33ba.x + _0x27d61e.y * _0x1c33ba.y;
    }, Vector2.cross = function (_0x5c5588, _0x4d5cfa) {
      return _0x5c5588.x * _0x4d5cfa.y - _0x5c5588.y * _0x4d5cfa.x;
    };
  }), ig.baked = !0x0, ig.module('plugins.data.color-rgb').defines(function () {
    ColorRGB = function (_0x9b052, _0x457da1, _0x52c626, _0x2458fa) {
      this.r = _0x9b052 || 0x0, this.g = _0x457da1 || 0x0, this.b = _0x52c626 || 0x0, this.a = _0x2458fa || 0x0;
    }, ColorRGB.prototype = {
      'setRandomColor': function () {
        this.r = Math.round(0xff * Math.random()), this.g = Math.round(0xff * Math.random()), this.b = Math.round(0xff * Math.random());
      },
      'getStyle': function () {
        return 'rgba(' + this.r + ',' + this.g + ',' + this.b + ',' + this.a + ')';
      },
      'getHex': function () {
        for (var _0x17d514 = this.r.toString(0x10), _0xee3dbf = this.g.toString(0x10), _0x202ad1 = this.b.toString(0x10); 0x2 > _0x17d514.length;) _0x17d514 = '0' + _0x17d514;
        for (; 0x2 > _0xee3dbf.length;) _0xee3dbf = '0' + _0xee3dbf;
        for (; 0x2 > _0x202ad1.length;) _0x202ad1 = '0' + _0x202ad1;
        return '#' + _0x17d514 + _0xee3dbf + _0x202ad1;
      },
      'getInvertedColor': function () {
        return new ColorRGB(0xff - this.r, 0xff - this.g, 0xff - this.b, 0xff - this.a);
      },
      'clone': function () {
        return new ColorRGB(this.r, this.g, this.b, this.a);
      }
    };
  }), ig.baked = !0x0, ig.module('plugins.font.font-info').requires('impact.impact').defines(function () {
    ig.FontInfo = ig.Class.extend({
      'fonts': [{
        'name': 'gabarito-bold',
        'source': 'media/fonts/gabarito-bold'
      }],
      'init': function () {
        this.registerCssFont();
      },
      'registerCssFont': function () {
        var _0x47afdd = [{
          'ext': 'ttf',
          'format': 'truetype'
        }];
        this.fonts = [];
        for (var _0x41ec2c in fonts) {
          var _0x593bf8 = {};
          _0x593bf8.name = fonts[_0x41ec2c], _0x593bf8.source = 'media/fonts/' + fonts[_0x41ec2c], this.fonts.push(_0x593bf8);
        }
        if (0x0 < this.fonts.length) {
          _0x41ec2c = document.createElement('style'), _0x41ec2c.type = 'text/css';
          for (var _0x593bf8 = '', _0x46db14 = 0x0; _0x46db14 < this.fonts.length; _0x46db14++) {
            for (var _0x36f241 = this.fonts[_0x46db14], _0x593bf8 = _0x593bf8 + ("@font-face {font-family: '" + _0x36f241.name + "';src:"), _0x49d8f3 = 0x0; _0x49d8f3 < _0x47afdd.length; _0x49d8f3++) {
              var _0x3c440c = _0x47afdd[_0x49d8f3],
                _0x3c440c = "url('" + _0x36f241.source + '.' + _0x3c440c.ext + "') format('" + _0x3c440c.format + "')";
              _0x49d8f3 < _0x47afdd.length - 0x1 && (_0x3c440c += ','), _0x593bf8 += _0x3c440c;
            }
            _0x593bf8 += '}';
          }
          _0x41ec2c.appendChild(document.createTextNode(_0x593bf8)), document.head.appendChild(_0x41ec2c);
        }
      },
      'isValid': function () {
        for (var _0x3ab89e = 0x0; _0x3ab89e < this.fonts.length; _0x3ab89e++) if (!this._isValidName(this.fonts[_0x3ab89e].source)) return !0x1;
        return !0x0;
      },
      '_isValidName': function (_0x43ef29) {
        return -0x1 == _0x43ef29.search(/^[a-z0-9-\/]+$/) ? !0x1 : !0x0;
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.font.font-loader').requires('impact.impact', 'plugins.font.font-info', 'plugins.splash-loader').defines(function () {
    ig.FontLoader = ig.Class.extend({
      'fontInfo': new ig.FontInfo(),
      'onload': !0x1,
      'onerror': !0x1,
      'init': function (_0x2ec25e, _0x52caee) {
        this.onload = _0x2ec25e, this.onerror = _0x52caee;
      },
      'load': function () {
        this.fontInfo.isValid() ? this._loadByLib() : console.error("Only lowercased alphanumeric and dash are allowed for font file name!. Please check the font path");
      },
      '_loadByLib': function () {
        for (var _0x414346 = [], _0x386f7e = 0x0; _0x386f7e < this.fontInfo.fonts.length; _0x386f7e++) {
          var _0xd5603a = new FontFaceObserver(this.fontInfo.fonts[_0x386f7e].name);
          _0x414346.push(_0xd5603a.load());
        }
        Promise.all(_0x414346).then(this.onload)['catch'](this.onerror);
      }
    }), ig.SplashLoader.inject({
      'parentLoad': !0x1,
      'load': function () {
        this.parentLoad = this.parent, new ig.FontLoader(this.onFontLoad.bind(this), this.onFontError.bind(this)).load();
      },
      'onFontLoad': function () {
        console.log('onFontLoad'), this.parentLoad();
      },
      'onFontError': function () {
        console.error("Font is not loaded"), this.parentLoad();
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.handlers.dom-handler').defines(function () {
    ig.DomHandler = ig.Class.extend({
      'version': '1.1.2',
      'JQUERYAVAILABLE': !0x1,
      'init': function () {
        this.JQUERYAVAILABLE = this._jqueryAvailable();
      },
      '_jqueryAvailable': function () {
        return 'undefined' !== typeof jQuery;
      },
      'addEvent': function (_0x289fe7, _0x23936f, _0x32d771, _0x215924) {
        if (this.JQUERYAVAILABLE) _0x289fe7.on(_0x23936f, _0x32d771);else _0x289fe7.addEventListener(_0x23936f, _0x32d771, _0x215924);
      },
      'create': function (_0x308273) {
        return this.JQUERYAVAILABLE ? $('<' + _0x308273 + '>') : ig.$new(_0x308273);
      },
      'getElementByClass': function (_0x23538c) {
        return this.JQUERYAVAILABLE ? $('.' + _0x23538c) : document.getElementsByClassName(_0x23538c);
      },
      'getElementById': function (_0x34be92) {
        return this.JQUERYAVAILABLE ? 0x0 < $(_0x34be92).length ? $(_0x34be92) : null : ig.$(_0x34be92);
      },
      'appendChild': function (_0x467391, _0x1e31fd) {
        this.JQUERYAVAILABLE ? _0x467391.append(_0x1e31fd) : _0x467391.appendChild(_0x1e31fd);
      },
      'appendToBody': function (_0x1599fe) {
        this.JQUERYAVAILABLE ? $('body').append(_0x1599fe) : document.body.appendChild(_0x1599fe);
      },
      'appendToHead': function (_0x576eac) {
        this.JQUERYAVAILABLE ? $('head').append(_0x576eac) : document.head.appendChild(_0x576eac);
      },
      'removeChild': function (_0x11abc1, _0x33791e) {
        this.JQUERYAVAILABLE ? _0x11abc1.remove(_0x33791e) : _0x11abc1.removeChild(_0x33791e);
      },
      'removeFromBody': function (_0x1b2bca) {
        this.JQUERYAVAILABLE ? $(_0x1b2bca).remove() : document.body.removeChild(_0x1b2bca);
      },
      'removeFromHead': function (_0x20eba2) {
        this.JQUERYAVAILABLE ? $(_0x20eba2).remove() : document.head.removeChild(_0x20eba2);
      },
      'text': function (_0x167bd6, _0x1edfde) {
        this.JQUERYAVAILABLE ? _0x167bd6.text(_0x1edfde) : _0x167bd6.innerText = _0x1edfde;
      },
      'val': function (_0x5a1a6a, _0x2c72c2) {
        this.JQUERYAVAILABLE ? _0x5a1a6a.val(_0x2c72c2) : _0x5a1a6a.value = _0x2c72c2;
      },
      'getVal': function (_0x161048) {
        return this.JQUERYAVAILABLE ? _0x161048.val() : _0x161048.value;
      },
      'getAttr': function (_0x697438, _0x37da4c) {
        return this.JQUERYAVAILABLE ? _0x697438.attr(_0x37da4c) : _0x697438.getAttribute(_0x37da4c);
      },
      'getText': function (_0x43a438) {
        return this.JQUERYAVAILABLE ? _0x43a438.text() : _0x43a438.innerText;
      },
      'html': function (_0x480166, _0x562a49) {
        this.JQUERYAVAILABLE ? _0x480166.html(_0x562a49) : _0x480166.innerHTML = _0x562a49;
      },
      'resize': function (_0x2ff7a4, _0x1b867f, _0x5183af) {
        if (this.JQUERYAVAILABLE) _0x2ff7a4.width(_0x1b867f.toFixed(0x2)), _0x2ff7a4.height(_0x5183af.toFixed(0x2));else {
          var _0x5dcc26 = _0x2ff7a4.style.visibility;
          _0x1b867f = 'width:' + _0x1b867f.toFixed(0x2) + "px; height:" + _0x5183af.toFixed(0x2) + 'px;', this.attr(_0x2ff7a4, 'style', _0x1b867f), _0x2ff7a4.style.visibility = _0x5dcc26;
        }
      },
      'resizeOffsetLeft': function (_0x27d372, _0x581996, _0x43b12d, _0x45d79a) {
        if (this.JQUERYAVAILABLE) _0x27d372.width(_0x581996.toFixed(0x2)), _0x27d372.height(_0x43b12d.toFixed(0x2)), _0x27d372.css('left', _0x45d79a);else {
          var _0x440b73 = _0x27d372.style.visibility;
          _0x581996 = 'width:' + _0x581996.toFixed(0x2) + "px; height:" + _0x43b12d.toFixed(0x2) + "px; left: " + _0x45d79a.toFixed(0x2) + 'px;', this.attr(_0x27d372, 'style', _0x581996), _0x27d372.style.visibility = _0x440b73;
        }
      },
      'resizeOffset': function (_0x1b28e6, _0x30c2f5, _0x166596, _0x22fd7e, _0x4d8d38) {
        if (this.JQUERYAVAILABLE) _0x1b28e6.width(_0x30c2f5.toFixed(0x2)), _0x1b28e6.height(_0x166596.toFixed(0x2)), _0x1b28e6.css('left', _0x22fd7e), _0x1b28e6.css('top', _0x4d8d38);else {
          var _0x17b453 = _0x1b28e6.style.visibility;
          _0x30c2f5 = 'width:' + _0x30c2f5.toFixed(0x2) + "px; height:" + _0x166596.toFixed(0x2) + "px; left: " + _0x22fd7e.toFixed(0x2) + "px; top: " + _0x4d8d38.toFixed(0x2) + 'px;', this.attr(_0x1b28e6, 'style', _0x30c2f5), _0x1b28e6.style.visibility = _0x17b453;
        }
      },
      'css': function (_0x1288d8, _0x1d43e1) {
        if (this.JQUERYAVAILABLE) _0x1288d8.css(_0x1d43e1);else {
          var _0x4866fc = '',
            _0x4c5c86;
          for (_0x4c5c86 in _0x1d43e1) _0x4866fc += _0x4c5c86 + ':' + _0x1d43e1[_0x4c5c86] + ';';
          this.attr(_0x1288d8, 'style', _0x4866fc);
        }
      },
      'getOffsets': function (_0x3bae69) {
        return this.JQUERYAVAILABLE ? (_0x3bae69 = _0x3bae69.offset(), {
          'left': _0x3bae69.left,
          'top': _0x3bae69.top
        }) : {
          'left': _0x3bae69.offsetLeft,
          'top': _0x3bae69.offsetTop
        };
      },
      'attr': function (_0x4d1d69, _0x4c11cf, _0x2a6add) {
        if ('undefined' === typeof _0x2a6add) return this.JQUERYAVAILABLE ? _0x4d1d69.attr(_0x4c11cf) : _0x4d1d69.getAttribute(_0x4c11cf);
        this.JQUERYAVAILABLE ? _0x4d1d69.attr(_0x4c11cf, _0x2a6add) : _0x4d1d69.setAttribute(_0x4c11cf, _0x2a6add);
      },
      'show': function (_0x2e70f5) {
        _0x2e70f5 && 'undefined' !== typeof _0x2e70f5 && (this.JQUERYAVAILABLE ? (_0x2e70f5.show(), _0x2e70f5.css('visibility', 'visible')) : _0x2e70f5 && (_0x2e70f5.style ? _0x2e70f5.style.visibility = 'visible' : _0x2e70f5[0x0] && (_0x2e70f5[0x0].style.visibility = 'visible')));
      },
      'hide': function (_0xdd636a) {
        _0xdd636a && 'undefined' !== typeof _0xdd636a && (this.JQUERYAVAILABLE ? (_0xdd636a.hide(), _0xdd636a.css('visibility', 'hidden')) : _0xdd636a && (_0xdd636a.style ? _0xdd636a.style.visibility = 'hidden' : _0xdd636a[0x0] && (_0xdd636a[0x0].style.visibility = 'hidden')));
      },
      'getQueryVariable': function (_0x4fbe3b) {
        for (var _0x210720 = window.location.search.substring(0x1).split('&'), _0x3992ff = 0x0; _0x3992ff < _0x210720.length; _0x3992ff++) {
          var _0x344b73 = _0x210720[_0x3992ff].match(/([^=]+?)=(.+)/);
          if (_0x344b73 && decodeURIComponent(_0x344b73[0x1]) == _0x4fbe3b) return decodeURIComponent(_0x344b73[0x2]);
        }
      },
      'forcedDeviceDetection': function () {
        var _0x48cbce = this.getQueryVariable('device');
        if (_0x48cbce) switch (_0x48cbce) {
          case 'mobile':
            console.log("serving mobile version ..."), ig.ua.mobile = !0x0;
            break;
          case 'desktop':
            console.log("serving desktop version ..."), ig.ua.mobile = !0x1;
            break;
          default:
            console.log("serving universal version ...");
        } else console.log("serving universal version ...");
      },
      'forcedDeviceRotation': function () {
        var _0x47033e = this.getQueryVariable('force-rotate');
        if (_0x47033e) switch (_0x47033e) {
          case 'portrait':
            console.log("force rotate to portrait"), window.orientation = 0x0;
            break;
          case 'landscape':
            console.log("force rotate to horizontal"), window.orientation = 0x5a;
            break;
          default:
            alert("wrong command/type in param force-rotate. Defaulting value to portrait"), window.orientation = 0x0;
        }
      },
      'setZIndex': function (_0x13c290, _0x7d0fe7) {
        this.JQUERYAVAILABLE ? _0x13c290.css('zIndex', _0x7d0fe7) : _0x13c290 && (_0x13c290.style ? _0x13c290.style.zIndex = _0x7d0fe7 : _0x13c290[0x0] && (_0x13c290[0x0].style.zIndex = _0x7d0fe7));
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.handlers.size-handler').requires('plugins.data.vector').defines(function () {
    ig.SizeHandler = ig.Class.extend({
      'portraitMode': !0x0,
      'disableStretchToFitOnMobileFlag': !0x1,
      'enableStretchToFitOnAntiPortraitModeFlag': !0x0,
      'enableScalingLimitsOnMobileFlag': !0x1,
      'minScalingOnMobile': 0x0,
      'maxScalingOnMobile': 0x1,
      'enableStretchToFitOnDesktopFlag': !0x1,
      'enableScalingLimitsOnDesktopFlag': !0x1,
      'minScalingOnDesktop': 0x0,
      'maxScalingOnDesktop': 0x1,
      'desktop': {
        'actualSize': new Vector2(window.innerWidth, window.innerHeight),
        'actualResolution': new Vector2(0x708, 0x708)
      },
      'mobile': {
        'actualSize': new Vector2(window.innerWidth, window.innerHeight),
        'actualResolution': new Vector2(0x708, 0x708)
      },
      'windowSize': new Vector2(window.innerWidth, window.innerHeight),
      'scaleRatioMultiplier': new Vector2(0x1, 0x1),
      'sizeRatio': new Vector2(0x1, 0x1),
      'scale': 0x1,
      'domHandler': null,
      'dynamicClickableEntityDivs': {},
      'coreDivsToResize': ['#canvas', '#play', '#orientate'],
      'adsToResize': {
        'MobileAdInGamePreroll': {
          'box-width': _SETTINGS.Ad.Mobile.Preroll.Width + 0x2,
          'box-height': _SETTINGS.Ad.Mobile.Preroll.Height + 0x14
        },
        'MobileAdInGameEnd': {
          'box-width': _SETTINGS.Ad.Mobile.End.Width + 0x2,
          'box-height': _SETTINGS.Ad.Mobile.End.Height + 0x14
        },
        'MobileAdInGamePreroll2': {
          'box-width': _SETTINGS.Ad.Mobile.Preroll.Width + 0x2,
          'box-height': _SETTINGS.Ad.Mobile.Preroll.Height + 0x14
        },
        'MobileAdInGameEnd2': {
          'box-width': _SETTINGS.Ad.Mobile.End.Width + 0x2,
          'box-height': _SETTINGS.Ad.Mobile.End.Height + 0x14
        },
        'MobileAdInGamePreroll3': {
          'box-width': _SETTINGS.Ad.Mobile.Preroll.Width + 0x2,
          'box-height': _SETTINGS.Ad.Mobile.Preroll.Height + 0x14
        },
        'MobileAdInGameEnd3': {
          'box-width': _SETTINGS.Ad.Mobile.End.Width + 0x2,
          'box-height': _SETTINGS.Ad.Mobile.End.Height + 0x14
        }
      },
      'init': function (_0x3afc9e) {
        this.domHandler = _0x3afc9e;
        if ('undefined' === typeof _0x3afc9e) throw "undefined Dom Handler for Size Handler";
        this.sizeCalcs(), this.eventListenerSetup(), this.samsungFix();
      },
      'sizeCalcs': function () {
        this.windowSize = new Vector2(window.innerWidth, window.innerHeight);
        if (ig.ua.mobile) {
          this.mobile.actualSize = new Vector2(window.innerWidth, window.innerHeight);
          var _0x222327 = new Vector2(this.mobile.actualResolution.x, this.mobile.actualResolution.y);
          this.scaleRatioMultiplier = new Vector2(this.mobile.actualSize.x / _0x222327.x, this.mobile.actualSize.y / _0x222327.y);
          if (this.disableStretchToFitOnMobileFlag) {
            var _0x55071b = Math.min(this.scaleRatioMultiplier.x, this.scaleRatioMultiplier.y);
            this.enableScalingLimitsOnMobileFlag && (_0x55071b = _0x55071b.limit(this.minScalingOnMobile, this.maxScalingOnMobile)), this.mobile.actualSize.x = _0x222327.x * _0x55071b, this.mobile.actualSize.y = _0x222327.y * _0x55071b, this.scaleRatioMultiplier.x = _0x55071b, this.scaleRatioMultiplier.y = _0x55071b;
          } else this.sizeRatio.x = this.scaleRatioMultiplier.x, this.sizeRatio.y = this.scaleRatioMultiplier.y, this.scaleRatioMultiplier.x = 0x1, this.scaleRatioMultiplier.y = 0x1;
        } else this.desktop.actualSize = new Vector2(window.innerWidth, window.innerHeight), _0x222327 = new Vector2(this.desktop.actualResolution.x, this.desktop.actualResolution.y), this.scaleRatioMultiplier = new Vector2(this.desktop.actualSize.x / _0x222327.x, this.desktop.actualSize.y / _0x222327.y), this.enableStretchToFitOnDesktopFlag ? (this.sizeRatio.x = this.scaleRatioMultiplier.x, this.sizeRatio.y = this.scaleRatioMultiplier.y, this.scaleRatioMultiplier.x = 0x1, this.scaleRatioMultiplier.y = 0x1) : (_0x55071b = Math.min(this.scaleRatioMultiplier.x, this.scaleRatioMultiplier.y), this.enableScalingLimitsOnDesktopFlag && (_0x55071b = _0x55071b.limit(this.minScalingOnDesktop, this.maxScalingOnDesktop)), this.desktop.actualSize.x = _0x222327.x * _0x55071b, this.desktop.actualSize.y = _0x222327.y * _0x55071b, this.scaleRatioMultiplier.x = _0x55071b, this.scaleRatioMultiplier.y = _0x55071b);
      },
      'resizeLayers': function () {
        for (var _0x2f5187 = 0x0; _0x2f5187 < this.coreDivsToResize.length; _0x2f5187++) {
          var _0x407e1a = ig.domHandler.getElementById(this.coreDivsToResize[_0x2f5187]);
          if (ig.ua.mobile) {
            if (this.disableStretchToFitOnMobileFlag) {
              var _0x7139c6 = Math.floor(ig.sizeHandler.windowSize.x / 0x2 - ig.sizeHandler.mobile.actualSize.x / 0x2),
                _0x3dd7b2 = Math.floor(ig.sizeHandler.windowSize.y / 0x2 - ig.sizeHandler.mobile.actualSize.y / 0x2);
              0x0 > _0x7139c6 && (_0x7139c6 = 0x0), 0x0 > _0x3dd7b2 && (_0x3dd7b2 = 0x0), ig.domHandler.resizeOffset(_0x407e1a, Math.floor(ig.sizeHandler.mobile.actualSize.x), Math.floor(ig.sizeHandler.mobile.actualSize.y), _0x7139c6, _0x3dd7b2);
              var _0x483980 = !0x1;
              if (this.portraitMode ? window.innerHeight < window.innerWidth : window.innerHeight > window.innerWidth) {
                if (this.enableStretchToFitOnAntiPortraitModeFlag) ig.domHandler.resizeOffset(_0x407e1a, Math.floor(window.innerWidth), Math.floor(window.innerHeight), 0x0, 0x0);else {
                  var _0x483980 = new Vector2(window.innerWidth / this.mobile.actualResolution.y, window.innerHeight / this.mobile.actualResolution.x),
                    _0x7139c6 = Math.min(_0x483980.x, _0x483980.y),
                    _0x483980 = this.mobile.actualResolution.y * _0x7139c6,
                    _0x59d552 = this.mobile.actualResolution.x * _0x7139c6,
                    _0x7139c6 = Math.floor(ig.sizeHandler.windowSize.x / 0x2 - _0x483980 / 0x2),
                    _0x3dd7b2 = Math.floor(ig.sizeHandler.windowSize.y / 0x2 - _0x59d552 / 0x2);
                  0x0 > _0x7139c6 && (_0x7139c6 = 0x0), 0x0 > _0x3dd7b2 && (_0x3dd7b2 = 0x0), ig.domHandler.resizeOffset(_0x407e1a, Math.floor(_0x483980), Math.floor(_0x59d552), _0x7139c6, _0x3dd7b2);
                }
              }
            } else ig.domHandler.resize(_0x407e1a, Math.floor(ig.sizeHandler.mobile.actualSize.x), Math.floor(ig.sizeHandler.mobile.actualSize.y));
          } else this.enableStretchToFitOnDesktopFlag ? ig.domHandler.resize(_0x407e1a, Math.floor(ig.sizeHandler.desktop.actualSize.x), Math.floor(ig.sizeHandler.desktop.actualSize.y)) : (_0x7139c6 = Math.floor(ig.sizeHandler.windowSize.x / 0x2 - ig.sizeHandler.desktop.actualSize.x / 0x2), _0x3dd7b2 = Math.floor(ig.sizeHandler.windowSize.y / 0x2 - ig.sizeHandler.desktop.actualSize.y / 0x2), 0x0 > _0x7139c6 && (_0x7139c6 = 0x0), 0x0 > _0x3dd7b2 && (_0x3dd7b2 = 0x0), ig.domHandler.resizeOffset(_0x407e1a, Math.floor(ig.sizeHandler.desktop.actualSize.x), Math.floor(ig.sizeHandler.desktop.actualSize.y), _0x7139c6, _0x3dd7b2));
        }
        for (var _0x59f698 in this.adsToResize) _0x2f5187 = ig.domHandler.getElementById('#' + _0x59f698), _0x407e1a = ig.domHandler.getElementById('#' + _0x59f698 + '-Box'), _0x483980 = (window.innerWidth - this.adsToResize[_0x59f698]['box-width']) / 0x2 + 'px', _0x7139c6 = (window.innerHeight - this.adsToResize[_0x59f698]['box-height']) / 0x2 + 'px', _0x2f5187 && ig.domHandler.css(_0x2f5187, {
          'width': window.innerWidth,
          'height': window.innerHeight
        }), _0x407e1a && ig.domHandler.css(_0x407e1a, {
          'left': _0x483980,
          'top': _0x7139c6
        });
        _0x2f5187 = ig.domHandler.getElementById('#canvas'), _0x407e1a = ig.domHandler.getOffsets(_0x2f5187), _0x2f5187 = _0x407e1a.left, _0x407e1a = _0x407e1a.top, _0x483980 = Math.min(ig.sizeHandler.scaleRatioMultiplier.x, ig.sizeHandler.scaleRatioMultiplier.y);
        for (_0x59f698 in this.dynamicClickableEntityDivs) {
          _0x7139c6 = ig.domHandler.getElementById('#' + _0x59f698);
          if (ig.ua.mobile) {
            var _0x59d552 = this.dynamicClickableEntityDivs[_0x59f698].entity_pos_x,
              _0x3df2f7 = this.dynamicClickableEntityDivs[_0x59f698].entity_pos_y,
              _0x3444ac = this.dynamicClickableEntityDivs[_0x59f698].width,
              _0x3dd7b2 = this.dynamicClickableEntityDivs[_0x59f698].height;
            this.disableStretchToFitOnMobileFlag ? (_0x59d552 = Math.floor(_0x2f5187 + _0x59d552 * this.scaleRatioMultiplier.x) + 'px', _0x3df2f7 = Math.floor(_0x407e1a + _0x3df2f7 * this.scaleRatioMultiplier.y) + 'px', _0x3444ac = Math.floor(_0x3444ac * this.scaleRatioMultiplier.x) + 'px', _0x3dd7b2 = Math.floor(_0x3dd7b2 * this.scaleRatioMultiplier.y) + 'px') : (_0x59d552 = Math.floor(_0x59d552 * this.sizeRatio.x) + 'px', _0x3df2f7 = Math.floor(_0x3df2f7 * this.sizeRatio.y) + 'px', _0x3444ac = Math.floor(_0x3444ac * this.sizeRatio.x) + 'px', _0x3dd7b2 = Math.floor(_0x3dd7b2 * this.sizeRatio.y) + 'px');
          } else _0x59d552 = this.dynamicClickableEntityDivs[_0x59f698].entity_pos_x, _0x3df2f7 = this.dynamicClickableEntityDivs[_0x59f698].entity_pos_y, _0x3444ac = this.dynamicClickableEntityDivs[_0x59f698].width, _0x3dd7b2 = this.dynamicClickableEntityDivs[_0x59f698].height, this.enableStretchToFitOnDesktopFlag ? (_0x59d552 = Math.floor(_0x59d552 * this.sizeRatio.x) + 'px', _0x3df2f7 = Math.floor(_0x3df2f7 * this.sizeRatio.y) + 'px', _0x3444ac = Math.floor(_0x3444ac * this.sizeRatio.x) + 'px', _0x3dd7b2 = Math.floor(_0x3dd7b2 * this.sizeRatio.y) + 'px') : (_0x59d552 = Math.floor(_0x2f5187 + _0x59d552 * this.scaleRatioMultiplier.x) + 'px', _0x3df2f7 = Math.floor(_0x407e1a + _0x3df2f7 * this.scaleRatioMultiplier.y) + 'px', _0x3444ac = Math.floor(_0x3444ac * this.scaleRatioMultiplier.x) + 'px', _0x3dd7b2 = Math.floor(_0x3dd7b2 * this.scaleRatioMultiplier.y) + 'px');
          ig.domHandler.css(_0x7139c6, {
            'float': 'left',
            'position': 'absolute',
            'left': _0x59d552,
            'top': _0x3df2f7,
            'width': _0x3444ac,
            'height': _0x3dd7b2,
            'z-index': 0x3
          }), this.dynamicClickableEntityDivs[_0x59f698]['font-size'] && ig.domHandler.css(_0x7139c6, {
            'font-size': this.dynamicClickableEntityDivs[_0x59f698]['font-size'] * _0x483980 + 'px'
          });
        }
        $('#ajaxbar').width(this.windowSize.x), $('#ajaxbar').height(this.windowSize.y);
      },
      'resize': function () {
        this.sizeCalcs(), this.resizeLayers();
      },
      'reorient': function () {
        console.log("changing orientation ...");
        if (ig.ua.mobile) {
          var _0x4ab699 = !0x1,
            _0x4ab699 = this.portraitMode ? window.innerHeight < window.innerWidth : window.innerHeight > window.innerWidth,
            _0x5be8c3 = this.domHandler.getElementById('#orientate'),
            _0x206dc4 = this.domHandler.getElementById('#game');
          _0x4ab699 ? (this.domHandler.show(_0x5be8c3), this.domHandler.hide(_0x206dc4)) : (this.domHandler.show(_0x206dc4), this.domHandler.hide(_0x5be8c3));
        }
        ig.ua.mobile ? (this.resize(), this.resizeAds()) : this.resize();
      },
      'resizeAds': function () {
        for (var _0x5ee1df in this.adsToResize) {
          var _0x475f20 = ig.domHandler.getElementById('#' + _0x5ee1df),
            _0xd53704 = ig.domHandler.getElementById('#' + _0x5ee1df + '-Box'),
            _0x3e4767 = (window.innerWidth - this.adsToResize[_0x5ee1df]['box-width']) / 0x2 + 'px',
            _0x3bd6e2 = (window.innerHeight - this.adsToResize[_0x5ee1df]['box-height']) / 0x2 + 'px';
          _0x475f20 && ig.domHandler.css(_0x475f20, {
            'width': window.innerWidth,
            'height': window.innerHeight
          }), _0xd53704 && ig.domHandler.css(_0xd53704, {
            'left': _0x3e4767,
            'top': _0x3bd6e2
          });
        }
      },
      'samsungFix': function () {
        ig.ua.android && !(4.2 > parseFloat(navigator.userAgent.slice(navigator.userAgent.indexOf('Android') + 0x8, navigator.userAgent.indexOf('Android') + 0xb))) && !(0x0 > navigator.userAgent.indexOf('GT')) && !(0x0 < navigator.userAgent.indexOf('Chrome')) && !(0x0 < navigator.userAgent.indexOf('Firefox')) && (document.addEventListener('touchstart', function (_0x1e00b0) {
          return _0x1e00b0.preventDefault(), !0x1;
        }, !0x1), document.addEventListener('touchmove', function (_0x27835d) {
          return _0x27835d.preventDefault(), !0x1;
        }, !0x1), document.addEventListener('touchend', function (_0x189b8a) {
          return _0x189b8a.preventDefault(), !0x1;
        }, !0x1));
      },
      'orientationInterval': null,
      'orientationTimeout': null,
      'orientationHandler': function () {
        this.reorient(), window.scrollTo(0x0, 0x1);
      },
      'orientationDelayHandler': function () {
        null == this.orientationInterval && (this.orientationInterval = window.setInterval(this.orientationHandler.bind(this), 0x64)), null == this.orientationTimeout && (this.orientationTimeout = window.setTimeout(function () {
          this.clearAllIntervals();
        }.bind(this), 0x7d0));
      },
      'clearAllIntervals': function () {
        window.clearInterval(this.orientationInterval), this.orientationInterval = null, window.clearTimeout(this.orientationTimeout), this.orientationTimeout = null;
      },
      'eventListenerSetup': function () {
        ig.ua.iOS ? (window.addEventListener('orientationchange', this.orientationDelayHandler.bind(this)), window.addEventListener('resize', this.orientationDelayHandler.bind(this))) : (window.addEventListener('orientationchange', this.orientationHandler.bind(this)), window.addEventListener('resize', this.orientationHandler.bind(this))), document.addEventListener('touchmove', function (_0x3781ef) {
          window.scrollTo(0x0, 0x1), _0x3781ef.preventDefault();
        }, {
          'passive': !0x1
        }), this.chromePullDownRefreshFix();
      },
      'chromePullDownRefreshFix': function () {
        var _0xc331e5 = window.chrome || navigator.userAgent.match('CriOS'),
          _0x51f7c1 = 'ontouchstart' in document.documentElement;
        if (_0xc331e5 && _0x51f7c1) {
          var _0x467b05 = _0xc331e5 = !0x1,
            _0x3d9259 = 0x0,
            _0x57aeb8 = !0x1;
          try {
            CSS.supports('overscroll-behavior-y', 'contain') && (_0xc331e5 = !0x0);
          } catch (_0x618806) {}
          try {
            if (_0xc331e5) return document.body.style.overscrollBehaviorY = 'contain';
          } catch (_0x36edf8) {}
          _0xc331e5 = document.head || document.body, _0x51f7c1 = document.createElement('style'), _0x51f7c1.type = 'text/css', _0x51f7c1.styleSheet ? _0x51f7c1.styleSheet.cssText = "\n      ::-webkit-scrollbar {\n        width: 500x;\n      }\n      ::-webkit-scrollbar-thumb {\n        border-radius: 500px;\n        background-color: rgba(0, 0, 0, 0.2);\n      }\n      body {\n        -webkit-overflow-scrolling: auto!important;\n      }\n    " : _0x51f7c1.appendChild(document.createTextNode("\n      ::-webkit-scrollbar {\n        width: 500px;\n      }\n      ::-webkit-scrollbar-thumb {\n        border-radius: 500px;\n        background-color: rgba(0, 0, 0, 0.2);\n      }\n      body {\n        -webkit-overflow-scrolling: auto!important;\n      }\n    ")), _0xc331e5.appendChild(_0x51f7c1);
          try {
            addEventListener('test', null, {
              get 'passive'() {
                _0x467b05 = !0x0;
              }
            });
          } catch (_0xbe2e03) {}
          document.addEventListener('touchstart', function (_0x1d57cf) {
            0x1 === _0x1d57cf.touches.length && (_0x3d9259 = _0x1d57cf.touches[0x0].clientY, _0x57aeb8 = 0x0 === window.pageYOffset);
          }, !!_0x467b05 && {
            'passive': !0x0
          }), document.addEventListener('touchmove', function (_0x46468a) {
            var _0x53dbe8;
            if (_0x53dbe8 = _0x57aeb8) {
              _0x57aeb8 = !0x1, _0x53dbe8 = _0x46468a.touches[0x0].clientY;
              var _0x361bd8 = _0x53dbe8 - _0x3d9259;
              _0x53dbe8 = (_0x3d9259 = _0x53dbe8, 0x0 < _0x361bd8);
            }
            if (_0x53dbe8) return _0x46468a.preventDefault();
          }, !!_0x467b05 && {
            'passive': !0x1
          });
        }
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.handlers.api-handler').defines(function () {
    ig.ApiHandler = ig.Class.extend({
      'apiAvailable': {
        'MJSPreroll': function () {
          ig.ua.mobile && ig.domHandler.JQUERYAVAILABLE && _SETTINGS && _SETTINGS.Ad.Mobile.Preroll.Enabled && MobileAdInGamePreroll.Initialize();
        },
        'MJSHeader': function () {
          ig.ua.mobile && ig.domHandler.JQUERYAVAILABLE && _SETTINGS.Ad.Mobile.Header.Enabled && MobileAdInGameHeader.Initialize();
        },
        'MJSFooter': function () {
          ig.ua.mobile && ig.domHandler.JQUERYAVAILABLE && _SETTINGS.Ad.Mobile.Footer.Enabled && MobileAdInGameFooter.Initialize();
        },
        'MJSEnd': function () {
          ig.ua.mobile && ig.domHandler.JQUERYAVAILABLE && _SETTINGS.Ad.Mobile.End.Enabled && MobileAdInGameEnd.Initialize();
        }
      },
      'run': function (_0x215640, _0x1f51dd) {
        if (this.apiAvailable[_0x215640]) this.apiAvailable[_0x215640](_0x1f51dd);
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.audio.howler-player').defines(function () {
    HowlerPlayer = ig.Class.extend({
      'VERSION': '1.0.1',
      'tagName': 'HowlerPlayer',
      'isMuted': !0x1,
      'soundList': {},
      'activeSoundList': {},
      'init': function (_0x4b4a99) {
        var _0x383d97 = this,
          _0x43ea3e;
        for (_0x43ea3e in _0x4b4a99) this.soundList[_0x43ea3e] = new Howl({
          'src': ['media/audio/' + _0x4b4a99[_0x43ea3e].path + '.mp3'],
          'loop': !!_0x4b4a99[_0x43ea3e].loop,
          'onplay': function (_0x3f81ff) {
            _0x383d97.registerActiveSound(this, _0x3f81ff);
          },
          'onstop': function (_0x330eff) {
            _0x383d97.unregisterActiveSound(this, _0x330eff);
          },
          'onend': function (_0x3da070) {
            this._loop || _0x383d97.unregisterActiveSound(this, _0x3da070);
          }
        });
      },
      'onSystemPause': function () {
        for (var _0x6fa538 in this.activeSoundList) this.pause(this.activeSoundList[_0x6fa538], _0x6fa538);
      },
      'onSystemResume': function () {
        for (var _0x5253ab in this.activeSoundList) this.resume(this.activeSoundList[_0x5253ab], _0x5253ab);
      },
      'play': function (_0x2d92cb) {
        this.isMuted || (_0x2d92cb = 'string' === typeof _0x2d92cb ? this.soundList[_0x2d92cb] : _0x2d92cb, _0x2d92cb.mute(!0x1), _0x2d92cb.play());
      },
      'pause': function (_0x393c4c, _0x1d1212) {
        var _0x5a5d32 = 'string' === typeof _0x393c4c ? this.soundList[_0x393c4c] : _0x393c4c;
        _0x1d1212 = parseInt(_0x1d1212), _0x5a5d32.playing(_0x1d1212) && _0x5a5d32.pause(_0x1d1212);
      },
      'resume': function (_0x14b2a5, _0x260b43) {
        if (!this.isMuted) {
          var _0x322052 = 'string' === typeof _0x14b2a5 ? this.soundList[_0x14b2a5] : _0x14b2a5;
          _0x260b43 = parseInt(_0x260b43), _0x322052.playing(_0x260b43) || _0x322052.play(_0x260b43);
        }
      },
      'stop': function (_0x2aeea8, _0x302496) {
        var _0x4a0559 = 'string' === typeof _0x2aeea8 ? this.soundList[_0x2aeea8] : _0x2aeea8;
        _0x302496 = parseInt(_0x302496), _0x4a0559.playing(_0x302496) && _0x4a0559.stop(_0x302496);
      },
      'stopAll': function () {
        for (var _0x6b1947 in this.activeSoundList) this.stop(this.activeSoundList[_0x6b1947], _0x6b1947);
      },
      'seek': function (_0x299e36) {
        return ('string' === typeof _0x299e36 ? this.soundList[_0x299e36] : _0x299e36).seek();
      },
      'mute': function (_0x22f19d) {
        _0x22f19d || (this.isMuted = !0x0);
        for (var _0x22710a in this.soundList) this.soundList[_0x22710a].mute(!0x0);
      },
      'unmute': function (_0x1f8cb0) {
        _0x1f8cb0 || (this.isMuted = !0x1);
        if (!this.isMuted) {
          for (var _0x259d43 in this.soundList) this.soundList[_0x259d43].mute(!0x1);
        }
      },
      'volume': function (_0x49376b, _0x4bd4c8) {
        if ('number' !== typeof _0x49376b) console.warn("Argument needs to be a number!");else {
          if (_0x49376b = _0x49376b.limit(0x0, 0x1), _0x4bd4c8 in this.soundList) {
            var _0x4b94cf = this.soundList[_0x4bd4c8];
            _0x4b94cf.volume(_0x49376b);
          } else {
            for (_0x4bd4c8 in this.soundList) _0x4b94cf = this.soundList[_0x4bd4c8], _0x4b94cf.volume(_0x49376b);
          }
        }
      },
      'getVolume': function (_0x5a67f8) {
        var _0x379eab = Howler.volume() || 0x1;
        if (_0x5a67f8 in this.soundList) {
          var _0x84c6bf = this.soundList[_0x5a67f8];
          if (null !== _0x84c6bf || 'undefined' !== typeof _0x84c6bf) _0x379eab = _0x84c6bf.volume();
        } else {
          for (_0x5a67f8 in this.soundList) if (_0x84c6bf = this.soundList[_0x5a67f8], null !== _0x84c6bf || 'undefined' !== typeof _0x84c6bf) {
            _0x379eab = _0x84c6bf.volume();
            break;
          }
        }
        return _0x379eab;
      },
      'registerActiveSound': function (_0x33cf83, _0x146ceb) {
        if (null === this.activeSoundList || 'undefined' === typeof this.activeSoundList) this.activeSoundList = {};
        null === _0x33cf83 || 'undefined' === typeof _0x33cf83 || (this.activeSoundList[_0x146ceb] = _0x33cf83);
      },
      'unregisterActiveSound': function (_0x57de36, _0x46f5fb) {
        if (null === this.activeSoundList || 'undefined' === typeof this.activeSoundList) this.activeSoundList = [];
        null === _0x57de36 || 'undefined' === typeof _0x57de36 || (this.activeSoundList[_0x46f5fb] = null, delete this.activeSoundList[_0x46f5fb]);
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.audio.sound-info').defines(function () {
    SoundInfo = ig.Class.extend({
      'sfx': {
        'logosplash1': {
          'path': 'opening/logosplash1'
        },
        'logosplash2': {
          'path': 'opening/logosplash2'
        },
        'click': {
          'path': 'sfx/click'
        },
        'success': {
          'path': 'sfx/success'
        },
        'popup': {
          'path': 'sfx/popup'
        },
        'reward': {
          'path': 'sfx/reward'
        },
        'coin': {
          'path': 'sfx/coin'
        }
      },
      'bgm': {
        'background': {
          'path': 'bgm',
          'loop': !0x0
        }
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.audio.sound-handler').requires('plugins.audio.howler-player', 'plugins.audio.sound-info').defines(function () {
    ig.SoundHandler = ig.Class.extend({
      'bgmPlayer': null,
      'sfxPlayer': null,
      'soundInfo': new SoundInfo(),
      'init': function () {
        Howler.autoSuspend = !0x1, this.sfxPlayer = new HowlerPlayer(this.soundInfo.sfx), this.bgmPlayer = new HowlerPlayer(this.soundInfo.bgm);
      },
      'unlockWebAudio': function () {
        Howler && (Howler.ctx && 'running' !== Howler.ctx.state && Howler.ctx.resume(), Howler._audioUnlocked || 'function' === typeof Howler._unlockAudio && Howler._unlockAudio());
      },
      'onSystemPause': function () {
        if (this.sfxPlayer) this.sfxPlayer.onSystemPause();
        if (this.bgmPlayer) this.bgmPlayer.onSystemPause();
      },
      'onSystemResume': function () {
        this.unlockWebAudio();
        if (this.sfxPlayer) this.sfxPlayer.onSystemResume();
        if (this.bgmPlayer) this.bgmPlayer.onSystemResume();
      },
      'muteSFX': function (_0x23fabe) {
        this.sfxPlayer && this.sfxPlayer.mute(_0x23fabe);
      },
      'muteBGM': function (_0x35013a) {
        this.bgmPlayer && this.bgmPlayer.mute(_0x35013a);
      },
      'unmuteSFX': function (_0x11225b) {
        this.sfxPlayer && this.sfxPlayer.unmute(_0x11225b);
      },
      'unmuteBGM': function (_0x51f0ed) {
        this.bgmPlayer && this.bgmPlayer.unmute(_0x51f0ed);
      },
      'muteAll': function (_0x5a242b) {
        this.muteSFX(_0x5a242b), this.muteBGM(_0x5a242b);
      },
      'unmuteAll': function (_0x16dd30) {
        this.unlockWebAudio(), this.unmuteSFX(_0x16dd30), this.unmuteBGM(_0x16dd30);
      },
      'forceMuteAll': function () {
        this.muteAll(!0x0);
      },
      'forceUnMuteAll': function () {
        this.unmuteAll(!0x0);
      },
      'forceLoopBGM': function () {}
    });
  }), ig.baked = !0x0, ig.module('plugins.handlers.visibility-handler').requires('plugins.audio.sound-handler').defines(function () {
    ig.VisibilityHandler = ig.Class.extend({
      'version': '1.2.3',
      'config': {
        'muteOnBlur': !0x0,
        'pauseOnBlur': !0x1,
        'clearInputStateOnPause': !0x1,
        'clearInputStateOnResume': !0x0,
        'allowResumeWithoutFocus': {
          'desktop': !0x0,
          'mobile': {
            'kaios': !0x1,
            'default': !0x0
          }
        },
        'handlerDelay': {
          'desktop': 0x0,
          'mobile': {
            'kaios': 0x0,
            'default': 0x0
          }
        },
        'autoFocusOnResume': {
          'desktop': !0x0,
          'mobile': {
            'kaios': !0x1,
            'default': !0x0
          }
        },
        'autoFocusAfterResume': {
          'desktop': !0x0,
          'mobile': {
            'kaios': !0x1,
            'default': !0x0
          }
        }
      },
      'browserPrefixes': ['o', 'ms', 'moz', 'webkit'],
      'activeOverlays': [],
      'browserPrefix': null,
      'hiddenPropertyName': null,
      'visibilityEventName': null,
      'visibilityStateName': null,
      'isShowingOverlay': !0x1,
      'isFocused': !0x1,
      'isPaused': !0x1,
      'init': function () {
        this.initVisibilityHandler(), this.initFocusHandler(), this.initPageTransitionHandler(), ig.visibilityHandler = this;
      },
      'pauseHandler': function () {
        !0x0 === this.config.clearInputStateOnPause && this.clearAllInputState(), !0x0 === this.config.pauseOnBlur && ('undefined' !== typeof wgl && null !== wgl && null !== wgl.system && 'undefined' !== typeof wgl.system && 'function' === typeof wgl.system.stopRender && wgl.system.stopRender(), 'undefined' !== typeof ig.game && null !== ig.game && 'undefined' !== typeof ig.game.pauseGame && ig.game.pauseGame()), !0x0 === this.config.muteOnBlur && 'undefined' !== typeof ig.soundHandler && null !== ig.soundHandler && 'function' === typeof ig.soundHandler.forceMuteAll && ig.soundHandler.forceMuteAll();
      },
      'resumeHandler': function () {
        'undefined' !== typeof ig.game && null !== ig.game && ('undefined' !== typeof ig.game.resumeGame && ig.game.resumeGame(), 'undefined' !== typeof wgl && null !== wgl && null !== wgl.system && 'undefined' !== typeof wgl.system && 'function' === typeof wgl.system.startRender && wgl.system.startRender()), 'undefined' !== typeof ig.soundHandler && null !== ig.soundHandler && 'function' === typeof ig.soundHandler.forceUnMuteAll && ig.soundHandler.forceUnMuteAll(), !0x0 === this.config.clearInputStateOnResume && this.clearAllInputState();
      },
      'initVisibilityHandler': function () {
        this.browserPrefix = this.getBrowserPrefix(), this.hiddenPropertyName = this.getHiddenPropertyName(this.browserPrefix), this.visibilityEventName = this.getVisibilityEventName(this.browserPrefix), this.visibilityStateName = this.getVisibilityStateName(this.browserPrefix), this.visibilityEventName && document.addEventListener(this.visibilityEventName, this.onChange.bind(this), !0x0);
      },
      'initFocusHandler': function () {
        window.addEventListener('blur', this.onChange.bind(this), !0x0), document.addEventListener('blur', this.onChange.bind(this), !0x0), document.addEventListener('focusout', this.onChange.bind(this), !0x0), window.addEventListener('focus', this.onChange.bind(this), !0x0), document.addEventListener('focus', this.onChange.bind(this), !0x0), document.addEventListener('focusin', this.onChange.bind(this), !0x0);
      },
      'initPageTransitionHandler': function () {
        window.addEventListener('pagehide', this.onChange.bind(this), !0x0), window.addEventListener('pageshow', this.onChange.bind(this), !0x0);
      },
      'getBrowserPrefix': function () {
        var _0x365364 = null;
        return this.browserPrefixes.forEach(function (_0x521231) {
          if (this.getHiddenPropertyName(_0x521231) in document) return _0x365364 = _0x521231;
        }.bind(this)), _0x365364;
      },
      'getHiddenPropertyName': function (_0x11e40c) {
        return _0x11e40c ? _0x11e40c + 'Hidden' : 'hidden';
      },
      'getVisibilityEventName': function (_0x569447) {
        return (_0x569447 ? _0x569447 : '') + 'visibilitychange';
      },
      'getVisibilityStateName': function (_0x2f2bc9) {
        return _0x2f2bc9 ? _0x2f2bc9 + 'VisibilityState' : 'visibilityState';
      },
      'hasView': function () {
        return !(document[this.hiddenPropertyName] || 'visible' !== document[this.visibilityStateName]);
      },
      'hasFocus': function () {
        return document.hasFocus() || this.isFocused;
      },
      'addActiveOverlay': function (_0x501765) {
        if (null === this.activeOverlays || 'undefined' === typeof this.activeOverlays) this.activeOverlays = [];
        null === _0x501765 || 'undefined' === typeof _0x501765 || !0x0 !== this.activeOverlays.includes(_0x501765) && this.activeOverlays.push(_0x501765);
      },
      'removeActiveOverlay': function (_0x146ea3) {
        if (null === this.activeOverlays || 'undefined' === typeof this.activeOverlays) this.activeOverlays = [];
        0x0 >= this.activeOverlays.length || null === _0x146ea3 || 'undefined' === typeof _0x146ea3 || !0x0 === this.activeOverlays.includes(_0x146ea3) && this.activeOverlays.splice(this.activeOverlays.indexOf(_0x146ea3), 0x1);
      },
      'onOverlayShow': function (_0x304679) {
        null !== _0x304679 && 'undefined' !== typeof _0x304679 && this.addActiveOverlay(_0x304679), 0x0 < this.activeOverlays.length && (this.systemPaused(), this.isShowingOverlay = !0x0);
      },
      'onOverlayHide': function (_0x4429e7) {
        null !== _0x4429e7 && 'undefined' !== typeof _0x4429e7 && this.removeActiveOverlay(_0x4429e7), 0x0 >= this.activeOverlays.length && (this.isShowingOverlay = !0x1, this.systemResumed());
      },
      'systemPaused': function () {
        if (this.isPaused) return !0x1;
        return this.pauseHandler(), this.isPaused = !0x0;
      },
      'systemResumed': function () {
        if (!this.isPaused || !this.hasView() || this.isShowingOverlay) return !0x1;
        if (!this.hasFocus()) {
          if (ig.ua.mobile) {
            if (this.isKaiOS()) {
              if (!this.config.allowResumeWithoutFocus.mobile.kaios) return !0x1;
            } else {
              if (!this.config.allowResumeWithoutFocus.mobile['default']) return !0x1;
            }
          } else {
            if (!this.config.allowResumeWithoutFocus.desktop) return !0x1;
          }
        }
        return this.focusOnResume(), this.resumeHandler(), this.focusAfterResume(), this.isPaused = !0x1, !0x0;
      },
      'clearAllInputState': function () {
        'undefined' !== typeof ig.input && null !== ig.input && ('function' === typeof ig.input.clearAllState && ig.input.clearAllState(), 'function' === typeof ig.input.clearPressed && ig.input.clearPressed(), ig.input.locks = {});
      },
      'isKaiOS': function () {
        return /KAIOS/.test(navigator.userAgent) || !0x1;
      },
      'focusOnResume': function () {
        var _0xcaf3fb = !0x1,
          _0xcaf3fb = ig.ua.mobile ? this.isKaiOS() ? this.config.autoFocusOnResume.mobile.kaios : this.config.autoFocusOnResume.mobile['default'] : this.config.autoFocusOnResume.desktop;
        this.focus(_0xcaf3fb);
      },
      'focusAfterResume': function () {
        var _0x24759f = !0x1,
          _0x24759f = ig.ua.mobile ? this.isKaiOS() ? this.config.autoFocusAfterResume.mobile.kaios : this.config.autoFocusAfterResume.mobile['default'] : this.config.autoFocusAfterResume.desktop;
        this.focus(_0x24759f);
      },
      'focus': function (_0x370ac4) {
        window.focus && _0x370ac4 && (document.activeElement && 'function' === typeof document.activeElement.blur && document.activeElement.blur(), window.focus());
      },
      'handleDelayedEvent': function (_0x504799) {
        if (!this.hasView() || 'pause' === _0x504799.type || 'pageHide' === _0x504799.type || 'blur' === _0x504799.type || 'focusout' === _0x504799.type) {
          if ('blur' === _0x504799.type || 'focusout' === _0x504799.type) {
            var _0x23bd43 = _0x504799.path || _0x504799.composedPath && _0x504799.composedPath();
            if (_0x23bd43 && 0x2 < _0x23bd43.length || _0x504799.srcElement && ('INPUT' === _0x504799.srcElement.tagName || 'TEXTAREA' === _0x504799.srcElement.tagName)) return !0x1;
            this.isFocused = !0x1;
          }
          return this.systemPaused(_0x504799);
        }
        if ('focus' === _0x504799.type || 'focusin' === _0x504799.type) this.isFocused = !0x0;
        return this.systemResumed(_0x504799);
      },
      'startDelayedEventHandler': function (_0x474198) {
        ig.ua.mobile ? this.isKaiOS() ? 0x0 < this.config.handlerDelay.mobile.kaios ? window.setTimeout(function (_0xd100a0) {
          this.handleDelayedEvent(_0xd100a0);
        }.bind(this, _0x474198), this.config.handlerDelay.mobile) : this.handleDelayedEvent(_0x474198) : 0x0 < this.config.handlerDelay.mobile['default'] ? window.setTimeout(function (_0x15c786) {
          this.handleDelayedEvent(_0x15c786);
        }.bind(this, _0x474198), this.config.handlerDelay.mobile) : this.handleDelayedEvent(_0x474198) : 0x0 < this.config.handlerDelay.desktop ? window.setTimeout(function (_0x339d70) {
          this.handleDelayedEvent(_0x339d70);
        }.bind(this, _0x474198), this.config.handlerDelay.desktop) : this.handleDelayedEvent(_0x474198);
      },
      'onChange': function (_0x28a7f2) {
        this.startDelayedEventHandler(_0x28a7f2);
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.io.storage').defines(function () {
    ig.Storage = ig.Class.extend({
      'staticInstantiate': function () {
        return !ig.Storage.instance ? null : ig.Storage.instance;
      },
      'init': function () {
        ig.Storage.instance = this;
      },
      'isCapable': function () {
        return 'undefined' !== typeof window.localStorage;
      },
      'isSet': function (_0x43d60a) {
        return null !== this.get(_0x43d60a);
      },
      'initUnset': function (_0x58235d, _0x5d93dc) {
        null === this.get(_0x58235d) && this.set(_0x58235d, _0x5d93dc);
      },
      'get': function (_0x534146) {
        if (!this.isCapable()) return null;
        try {
          return JSON.parse(localStorage.getItem(_0x534146));
        } catch (_0x2249d8) {
          return window.localStorage.getItem(_0x534146);
        }
      },
      'getInt': function (_0x52d037) {
        return ~~this.get(_0x52d037);
      },
      'getFloat': function (_0x106164) {
        return parseFloat(this.get(_0x106164));
      },
      'getBool': function (_0x4a44b1) {
        return !!this.get(_0x4a44b1);
      },
      'key': function (_0x57800c) {
        return this.isCapable() ? window.localStorage.key(_0x57800c) : null;
      },
      'set': function (_0x4619f9, _0x3c7cbd) {
        if (!this.isCapable()) return null;
        try {
          window.localStorage.setItem(_0x4619f9, JSON.stringify(_0x3c7cbd));
        } catch (_0x8d550a) {
          console.log(_0x8d550a);
        }
      },
      'setHighest': function (_0x405bfb, _0x8621aa) {
        _0x8621aa > this.getFloat(_0x405bfb) && this.set(_0x405bfb, _0x8621aa);
      },
      'remove': function (_0x5cef69) {
        if (!this.isCapable()) return null;
        window.localStorage.removeItem(_0x5cef69);
      },
      'clear': function () {
        if (!this.isCapable()) return null;
        window.localStorage.clear();
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.io.mouse').requires('plugins.data.vector').defines(function () {
    Mouse = ig.Class.extend({
      'pos': new Vector2(0x0, 0x0),
      'bindings': {
        'click': [ig.KEY.MOUSE1]
      },
      'init': function () {
        ig.input.initMouse();
        for (var _0x4384cb in this.bindings) {
          this[_0x4384cb] = _0x4384cb;
          for (var _0x4b5318 = 0x0; _0x4b5318 < this.bindings[_0x4384cb].length; _0x4b5318++) ig.input.bind(this.bindings[_0x4384cb][_0x4b5318], _0x4384cb);
        }
      },
      'getLast': function () {
        return this.pos;
      },
      'getPos': function () {
        var _0x5a2755 = ig.system.scale * ((ig.system.canvas.offsetWidth || ig.system.realWidth) / ig.system.realWidth);
        return this.pos.set(ig.input.mouse.x * _0x5a2755 / ig.sizeHandler.sizeRatio.x / ig.sizeHandler.scaleRatioMultiplier.x, ig.input.mouse.y * _0x5a2755 / ig.sizeHandler.sizeRatio.y / ig.sizeHandler.scaleRatioMultiplier.y), this.pos.clone();
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.io.keyboard').defines(function () {
    Keyboard = ig.Class.extend({
      'bindings': {
        'PREVENT_PAGE_SCROLLING_OVER_IFRAME': [ig.KEY.UP_ARROW, ig.KEY.DOWN_ARROW, ig.KEY.LEFT_ARROW, ig.KEY.RIGHT_ARROW, ig.KEY.PAGE_UP, ig.KEY.PAGE_DOWN],
        'up': [ig.KEY.W, ig.KEY.UP_ARROW],
        'right': [ig.KEY.D, ig.KEY.RIGHT_ARROW],
        'left': [ig.KEY.A, ig.KEY.LEFT_ARROW],
        'down': [ig.KEY.S, ig.KEY.DOWN_ARROW, ig.KEY.SPACE]
      },
      'init': function () {
        for (var _0x36d419 in this.bindings) {
          this[_0x36d419] = _0x36d419;
          for (var _0x1a1f5a = 0x0; _0x1a1f5a < this.bindings[_0x36d419].length; _0x1a1f5a++) ig.input.bind(this.bindings[_0x36d419][_0x1a1f5a], _0x36d419);
        }
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.io.gamepad-input').defines(function () {
    ig.PADKEY = {
      'BUTTON_0': 0x0,
      'PADBUTTON_1': 0x1,
      'BUTTON_2': 0x2,
      'BUTTON_3': 0x3,
      'BUTTON_LEFT_BUMPER': 0x4,
      'BUTTON_RIGHT_BUMPER': 0x5,
      'BUTTON_LEFT_TRIGGER': 0x6,
      'BUTTON_RIGHT_TRIGGER': 0x7,
      'BUTTON_LEFT_JOYSTICK': 0xa,
      'BUTTON_RIGHT_JOYSTICK': 0xb,
      'BUTTON_DPAD_UP': 0xc,
      'BUTTON_DPAD_DOWN': 0xd,
      'BUTTON_DPAD_LEFT': 0xe,
      'BUTTON_DPAD_RIGHT': 0xf,
      'BUTTON_MENU': 0x10,
      'AXIS_LEFT_JOYSTICK_X': 0x0,
      'AXIS_LEFT_JOYSTICK_Y': 0x1,
      'AXIS_RIGHT_JOYSTICK_X': 0x2,
      'AXIS_RIGHT_JOYSTICK_Y': 0x3
    }, ig.GamepadInput = ig.Class.extend({
      'isInit': !0x1,
      'isSupported': !0x1,
      'list': [],
      'bindings': {},
      'states': {},
      'presses': {},
      'releases': {},
      'downLocks': {},
      'upLocks': {},
      'leftStick': {
        'x': 0x0,
        'y': 0x0
      },
      'rightStick': {
        'x': 0x0,
        'y': 0x0
      },
      'start': function () {
        if (!this.isInit) {
          this.isInit = !0x0;
          var _0x1585ef = navigator.getGamepads || navigator.webkitGetGamepads;
          _0x1585ef && (!navigator.getGamepads && navigator.webkitGetGamepads && (navigator.getGamepads = navigator.webkitGetGamepads), this.list = navigator.getGamepads()), this.isSupported = _0x1585ef;
        }
      },
      'isAvailable': function () {
        return this.isInit && this.isSupported;
      },
      'buttonPressed': function (_0x53e592) {
        return 'object' == typeof _0x53e592 ? _0x53e592.pressed : 0x1 == _0x53e592;
      },
      'buttonDown': function (_0x1d91c8) {
        if (_0x1d91c8 = this.bindings[_0x1d91c8]) this.states[_0x1d91c8] = !0x0, this.downLocks[_0x1d91c8] || (this.presses[_0x1d91c8] = !0x0, this.downLocks[_0x1d91c8] = !0x0);
      },
      'buttonUp': function (_0x20ca24) {
        if ((_0x20ca24 = this.bindings[_0x20ca24]) && this.downLocks[_0x20ca24] && !this.upLocks[_0x20ca24]) this.states[_0x20ca24] = !0x1, this.releases[_0x20ca24] = !0x0, this.upLocks[_0x20ca24] = !0x0;
      },
      'clearPressed': function () {
        for (var _0x26e9ad in this.releases) this.states[_0x26e9ad] = !0x1, this.downLocks[_0x26e9ad] = !0x1;
        this.releases = {}, this.presses = {}, this.upLocks = {};
      },
      'bind': function (_0x1dc617, _0x5b5c09) {
        this.bindings[_0x1dc617] = _0x5b5c09;
      },
      'unbind': function (_0x33470d) {
        this.releases[this.bindings[_0x33470d]] = !0x0, this.bindings[_0x33470d] = null;
      },
      'unbindAll': function () {
        this.bindings = {}, this.states = {}, this.presses = {}, this.releases = {}, this.downLocks = {}, this.upLocks = {};
      },
      'state': function (_0x46159c) {
        return this.states[_0x46159c];
      },
      'pressed': function (_0x1cfca0) {
        return this.presses[_0x1cfca0];
      },
      'released': function (_0x515448) {
        return this.releases[_0x515448];
      },
      'clamp': function (_0x49fb7d, _0x5e4a0a, _0x1d5203) {
        return _0x49fb7d < _0x5e4a0a ? _0x5e4a0a : _0x49fb7d > _0x1d5203 ? _0x1d5203 : _0x49fb7d;
      },
      'pollGamepads': function () {
        if (this.isSupported) {
          this.leftStick.x = 0x0, this.leftStick.y = 0x0, this.rightStick.x = 0x0, this.rightStick.y = 0x0, this.list = navigator.getGamepads();
          for (var _0x1249d7 in this.bindings) {
            for (var _0x26a683 = !0x1, _0x34cfc8 = 0x0; _0x34cfc8 < this.list.length; _0x34cfc8++) {
              var _0x334d1e = this.list[_0x34cfc8];
              if (_0x334d1e && _0x334d1e.buttons && this.buttonPressed(_0x334d1e.buttons[_0x1249d7])) {
                _0x26a683 = !0x0;
                break;
              }
            }
            _0x26a683 ? this.buttonDown(_0x1249d7) : this.buttonUp(_0x1249d7);
          }
          for (_0x34cfc8 = 0x0; _0x34cfc8 < this.list.length; _0x34cfc8++) if ((_0x334d1e = this.list[_0x34cfc8]) && _0x334d1e.axes) {
            _0x1249d7 = _0x334d1e.axes[ig.GAMEPADINPUT.AXIS_LEFT_JOYSTICK_X];
            var _0x26a683 = _0x334d1e.axes[ig.GAMEPADINPUT.AXIS_LEFT_JOYSTICK_Y],
              _0x59efbf = _0x334d1e.axes[ig.GAMEPADINPUT.AXIS_RIGHT_JOYSTICK_X],
              _0x334d1e = _0x334d1e.axes[ig.GAMEPADINPUT.AXIS_RIGHT_JOYSTICK_Y];
            this.leftStick.x += isNaN(_0x1249d7) ? 0x0 : _0x1249d7, this.leftStick.y += isNaN(_0x26a683) ? 0x0 : _0x26a683, this.rightStick.x += isNaN(_0x59efbf) ? 0x0 : _0x59efbf, this.rightStick.y += isNaN(_0x334d1e) ? 0x0 : _0x334d1e;
          }
          0x0 < this.list.length && (this.leftStick.x = this.clamp(this.leftStick.x, -0x1, 0x1), this.leftStick.y = this.clamp(this.leftStick.y, -0x1, 0x1), this.rightStick.x = this.clamp(this.rightStick.x, -0x1, 0x1), this.rightStick.y = this.clamp(this.rightStick.y, -0x1, 0x1));
        }
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.io.gamepad').requires('plugins.io.gamepad-input').defines(function () {
    Gamepad = ig.Class.extend({
      'bindings': {
        'padJump': [ig.PADKEY.BUTTON_0]
      },
      'init': function () {
        ig.gamepadInput.start();
        for (var _0x4af01a in this.bindings) for (var _0x10d5d6 = 0x0; _0x10d5d6 < this.bindings[_0x4af01a].length; _0x10d5d6++) ig.gamepadInput.bind(this.bindings[_0x4af01a][_0x10d5d6], _0x4af01a);
      },
      'press': function () {},
      'held': function () {},
      'release': function () {}
    });
  }), ig.baked = !0x0, ig.module('plugins.io.multitouch').defines(function () {
    Multitouch = ig.Class.extend({
      'init': function () {
        ig.multitouchInput.start();
      },
      'getTouchesPos': function () {
        if (ig.ua.mobile) {
          if (0x0 < ig.multitouchInput.touches.length) {
            for (var _0x4c9d8d = [], _0x5ea249 = 0x0; _0x5ea249 < ig.multitouchInput.touches.length; _0x5ea249++) {
              var _0x44dc8d = ig.multitouchInput.touches[_0x5ea249];
              _0x4c9d8d.push({
                'x': _0x44dc8d.x,
                'y': _0x44dc8d.y
              });
            }
            return _0x4c9d8d;
          }
          return null;
        }
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.io.multitouch-input').defines(function () {
    ig.MultitouchInput = ig.Class.extend({
      'isStart': !0x1,
      'touches': [],
      'multitouchCapable': !0x1,
      'lastEventUp': null,
      'start': function () {
        this.isStart || (this.isStart = !0x0, navigator.maxTouchPoints && 0x1 < navigator.maxTouchPoints && (this.multitouchCapable = !0x0), ig.ua.touchDevice && (window.navigator.msPointerEnabled && (ig.system.canvas.addEventListener('MSPointerDown', this.touchdown.bind(this), !0x1), ig.system.canvas.addEventListener('MSPointerUp', this.touchup.bind(this), !0x1), ig.system.canvas.addEventListener('MSPointerMove', this.touchmove.bind(this), !0x1), ig.system.canvas.style.msContentZooming = 'none', ig.system.canvas.style.msTouchAction = 'none'), ig.system.canvas.addEventListener('touchstart', this.touchdown.bind(this), !0x1), ig.system.canvas.addEventListener('touchend', this.touchup.bind(this), !0x1), ig.system.canvas.addEventListener('touchmove', this.touchmove.bind(this), !0x1)));
      },
      'touchmove': function (_0xbf341f) {
        if (ig.ua.touchDevice) {
          var _0x44fd70 = parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth,
            _0x1bf01d = parseInt(ig.system.canvas.offsetHeight) || ig.system.realHeight,
            _0x44fd70 = ig.system.scale * (_0x44fd70 / ig.system.realWidth),
            _0x1bf01d = ig.system.scale * (_0x1bf01d / ig.system.realHeight);
          if (_0xbf341f.touches) {
            for (; 0x0 < this.touches.length;) this.touches.pop();
            !this.multitouchCapable && 0x1 < _0xbf341f.touches.length && (this.multitouchCapable = !0x0);
            var _0x18e04d = {
              'left': 0x0,
              'top': 0x0
            };
            ig.system.canvas.getBoundingClientRect && (_0x18e04d = ig.system.canvas.getBoundingClientRect());
            for (var _0x40faf4 = 0x0; _0x40faf4 < _0xbf341f.touches.length; _0x40faf4++) {
              var _0x32c3f6 = _0xbf341f.touches[_0x40faf4];
              _0x32c3f6 && this.touches.push({
                'x': (_0x32c3f6.clientX - _0x18e04d.left) / _0x44fd70,
                'y': (_0x32c3f6.clientY - _0x18e04d.top) / _0x1bf01d
              });
            }
          } else this.windowMove(_0xbf341f);
        }
        try {
          ig.soundHandler.unlockWebAudio();
        } catch (_0x4de10c) {}
      },
      'touchdown': function (_0x462af1) {
        var _0x1aa054 = parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth,
          _0x299fa1 = parseInt(ig.system.canvas.offsetHeight) || ig.system.realHeight,
          _0x1aa054 = ig.system.scale * (_0x1aa054 / ig.system.realWidth),
          _0x299fa1 = ig.system.scale * (_0x299fa1 / ig.system.realHeight);
        if (window.navigator.msPointerEnabled) this.windowKeyDown(_0x462af1);else {
          if (ig.ua.touchDevice && _0x462af1.touches) {
            for (; 0x0 < this.touches.length;) this.touches.pop();
            !this.multitouchCapable && 0x1 < _0x462af1.touches.length && (this.multitouchCapable = !0x0);
            var _0x41c5ec = {
              'left': 0x0,
              'top': 0x0
            };
            ig.system.canvas.getBoundingClientRect && (_0x41c5ec = ig.system.canvas.getBoundingClientRect());
            for (var _0x22b847 = 0x0; _0x22b847 < _0x462af1.touches.length; _0x22b847++) {
              var _0x1ac00a = _0x462af1.touches[_0x22b847];
              _0x1ac00a && this.touches.push({
                'x': (_0x1ac00a.clientX - _0x41c5ec.left) / _0x1aa054,
                'y': (_0x1ac00a.clientY - _0x41c5ec.top) / _0x299fa1
              });
            }
          }
        }
      },
      'touchup': function (_0x2f4306) {
        var _0x27d20b = parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth;
        parseInt(ig.system.canvas.offsetHeight), _0x27d20b = ig.system.scale * (_0x27d20b / ig.system.realWidth);
        if (window.navigator.msPointerEnabled) this.windowKeyUp(_0x2f4306);else {
          this.lastEventUp = _0x2f4306;
          var _0x1cf424 = {
            'left': 0x0,
            'top': 0x0
          };
          ig.system.canvas.getBoundingClientRect && (_0x1cf424 = ig.system.canvas.getBoundingClientRect());
          if (ig.ua.touchDevice) {
            _0x2f4306 = (_0x2f4306.changedTouches[0x0].clientX - _0x1cf424.left) / _0x27d20b;
            for (_0x27d20b = 0x0; _0x27d20b < this.touches.length; _0x27d20b++) this.touches[_0x27d20b].x >= _0x2f4306 - 0x28 && this.touches[_0x27d20b].x <= _0x2f4306 + 0x28 && this.touches.splice(_0x27d20b, 0x1);
          }
        }
        if (ig.visibilityHandler) ig.visibilityHandler.onChange('focus');
        try {
          ig.soundHandler.unlockWebAudio();
        } catch (_0x223fba) {}
      },
      'windowKeyDown': function (_0x2a0612) {
        var _0x2ab069 = parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth,
          _0x1c7538 = parseInt(ig.system.canvas.offsetHeight) || ig.system.realHeight,
          _0x2ab069 = ig.system.scale * (_0x2ab069 / ig.system.realWidth),
          _0x1c7538 = ig.system.scale * (_0x1c7538 / ig.system.realHeight);
        if (window.navigator.msPointerEnabled) {
          var _0x1035d3 = {
            'left': 0x0,
            'top': 0x0
          };
          ig.system.canvas.getBoundingClientRect && (_0x1035d3 = ig.system.canvas.getBoundingClientRect()), _0x2a0612 = _0x2a0612.changedTouches ? _0x2a0612.changedTouches : [_0x2a0612];
          for (var _0x8cc325 = 0x0; _0x8cc325 < _0x2a0612.length; ++_0x8cc325) {
            for (var _0x2d5193 = _0x2a0612[_0x8cc325], _0x1028ce = 'undefined' != typeof _0x2d5193.identifier ? _0x2d5193.identifier : 'undefined' != typeof _0x2d5193.pointerId ? _0x2d5193.pointerId : 0x1, _0x1649b1 = (_0x2d5193.clientX - _0x1035d3.left) / _0x2ab069, _0x2d5193 = (_0x2d5193.clientY - _0x1035d3.top) / _0x1c7538, _0x32ace3 = 0x0; _0x32ace3 < this.touches.length; ++_0x32ace3) this.touches[_0x32ace3].identifier == _0x1028ce && this.touches.splice(_0x32ace3, 0x1);
            this.touches.push({
              'x': _0x1649b1,
              'y': _0x2d5193,
              'identifier': _0x1028ce
            });
          }
          for (_0x2ab069 = 0x0; _0x2ab069 < this.touches.length; _0x2ab069++);
        }
      },
      'windowKeyUp': function (_0x1f8995) {
        _0x1f8995 = 'undefined' != typeof _0x1f8995.identifier ? _0x1f8995.identifier : 'undefined' != typeof _0x1f8995.pointerId ? _0x1f8995.pointerId : 0x1;
        for (var _0x1f6acb = 0x0; _0x1f6acb < this.touches.length; ++_0x1f6acb) this.touches[_0x1f6acb].identifier == _0x1f8995 && this.touches.splice(_0x1f6acb, 0x1);
        for (; 0x0 < this.touches.length;) this.touches.pop();
        if (ig.visibilityHandler) ig.visibilityHandler.onChange('focus');
        try {
          ig.soundHandler.unlockWebAudio();
        } catch (_0x10bec8) {}
      },
      'windowMove': function (_0x2029db) {
        var _0xc90160 = parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth,
          _0x2b68b2 = parseInt(ig.system.canvas.offsetHeight) || ig.system.realHeight,
          _0xc90160 = ig.system.scale * (_0xc90160 / ig.system.realWidth),
          _0x2b68b2 = ig.system.scale * (_0x2b68b2 / ig.system.realHeight),
          _0x4c26f9 = {
            'left': 0x0,
            'top': 0x0
          };
        ig.system.canvas.getBoundingClientRect && (_0x4c26f9 = ig.system.canvas.getBoundingClientRect());
        if (window.navigator.msPointerEnabled) {
          for (var _0x4e28bf = 'undefined' != typeof _0x2029db.identifier ? _0x2029db.identifier : 'undefined' != typeof _0x2029db.pointerId ? _0x2029db.pointerId : 0x1, _0x17de93 = 0x0; _0x17de93 < this.touches.length; ++_0x17de93) if (this.touches[_0x17de93].identifier == _0x4e28bf) {
            var _0x106833 = (_0x2029db.clientY - _0x4c26f9.top) / _0x2b68b2;
            this.touches[_0x17de93].x = (_0x2029db.clientX - _0x4c26f9.left) / _0xc90160, this.touches[_0x17de93].y = _0x106833;
          }
        }
        try {
          ig.soundHandler.unlockWebAudio();
        } catch (_0x41cb35) {}
      },
      'clear': function () {
        for (var _0x3c6562 = 0x0; _0x3c6562 < this.released.length; ++_0x3c6562) this.released[_0x3c6562] && (this.released.splice(_0x3c6562, 0x1), _0x3c6562--);
      },
      'pollMultitouch': function (_0x312b96) {
        !this.multitouchCapable && 0x1 < _0x312b96 && (this.multitouchCapable = !0x0);
      },
      'spliceFromArray': function (_0x57f403, _0x533743) {
        for (var _0x45ae98 = 0x0; _0x45ae98 < _0x533743.length; _0x45ae98++) for (var _0x3c3ebc = 0x0; _0x3c3ebc < _0x57f403.length; _0x3c3ebc++) _0x57f403[_0x3c3ebc].identifier === _0x533743[_0x45ae98].identifier && (_0x57f403.splice(_0x3c3ebc, 0x1), _0x3c3ebc--);
      },
      'updateSizeProperties': function () {
        var _0x3587e3 = parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth,
          _0x358dd1 = parseInt(ig.system.canvas.offsetHeight) || ig.system.realHeight;
        this.scaleX = ig.system.scale * (_0x3587e3 / ig.system.realWidth), this.scaleY = ig.system.scale * (_0x358dd1 / ig.system.realHeight);
      },
      'upgrade': function (_0x1df196, _0x3c1bb5, _0x57c938) {
        var _0x527862 = {
          'left': 0x0,
          'top': 0x0
        };
        ig.system.canvas.getBoundingClientRect && (_0x527862 = ig.system.canvas.getBoundingClientRect());
        for (var _0x5c3142 = (_0x57c938.clientX - _0x527862.left) / this.scaleX, _0x527862 = (_0x57c938.clientY - _0x527862.top) / this.scaleY, _0x35766e = 0x0; _0x35766e < _0x1df196.length; _0x35766e++) if (void 0x0 !== typeof _0x1df196[_0x35766e].identifier && void 0x0 !== typeof _0x57c938.identifier && _0x57c938.identifier === _0x1df196[_0x35766e].identifier) {
          _0x1df196.splice(_0x35766e, 0x1), _0x3c1bb5.push({
            'identifier': _0x57c938.identifier,
            'x': _0x5c3142,
            'y': _0x527862
          });
          break;
        }
      },
      'updateArray': function (_0x593f4d, _0x2200b1) {
        var _0xb04965 = {
          'left': 0x0,
          'top': 0x0
        };
        ig.system.canvas.getBoundingClientRect && (_0xb04965 = ig.system.canvas.getBoundingClientRect());
        for (var _0x350cd5 = (_0x2200b1.clientX - _0xb04965.left) / this.scaleX, _0xb04965 = (_0x2200b1.clientY - _0xb04965.top) / this.scaleY, _0x25fd5d = 0x0; _0x25fd5d < _0x593f4d.length; _0x25fd5d++) if (void 0x0 !== typeof _0x593f4d[_0x25fd5d].identifier && void 0x0 !== typeof _0x2200b1.identifier && _0x2200b1.identifier === _0x593f4d[_0x25fd5d].identifier) {
          _0x593f4d[_0x25fd5d].x = _0x350cd5, _0x593f4d[_0x25fd5d].y = _0xb04965;
          break;
        }
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.io.fake-storage').requires('impact.game').defines(function () {
    ig.FakeStorage = ig.Class.extend({
      'tempData': {},
      'init': function () {
        ig.FakeStorage.instance = this;
      },
      'initUnset': function (_0xfd7cab, _0x242a55) {
        null === this.get(_0xfd7cab) && this.set(_0xfd7cab, _0x242a55);
      },
      'set': function (_0x436640, _0x30e140) {
        this.tempData[_0x436640] = JSON.stringify(_0x30e140);
      },
      'setHighest': function (_0x3215f7, _0x3de62f) {
        _0x3de62f > this.getFloat(_0x3215f7) && this.set(_0x3215f7, _0x3de62f);
      },
      'get': function (_0x41cf04) {
        return 'undefined' == typeof this.tempData[_0x41cf04] ? null : JSON.parse(this.tempData[_0x41cf04]);
      },
      'getInt': function (_0x14d332) {
        return ~~this.get(_0x14d332);
      },
      'getFloat': function (_0x415976) {
        return parseFloat(this.get(_0x415976));
      },
      'getBool': function (_0x449628) {
        return !!this.get(_0x449628);
      },
      'isSet': function (_0x1cedd3) {
        return null !== this.get(_0x1cedd3);
      },
      'remove': function (_0x56b223) {
        delete this.tempData[_0x56b223];
      },
      'clear': function () {
        this.tempData = {};
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.io.io-manager').requires('plugins.io.storage', 'plugins.io.mouse', 'plugins.io.keyboard', 'plugins.io.gamepad', 'plugins.io.multitouch', 'plugins.io.multitouch-input', 'plugins.io.gamepad-input', 'plugins.io.fake-storage').defines(function () {
    IoManager = ig.Class.extend({
      'version': '1.0.0',
      'storage': null,
      'localStorageSupport': !0x1,
      'mouse': null,
      'keyboard': null,
      'multitouch': null,
      'gamepad': null,
      'init': function () {
        ig.multitouchInput = new ig.MultitouchInput(), ig.gamepadInput = new ig.GamepadInput(), this.unbindAll(), this.initStorage(), this.initMouse(), this.initKeyboard();
      },
      'unbindAll': function () {
        ig.input.unbindAll(), ig.gamepadInput.unbindAll();
      },
      'initStorage': function () {
        try {
          window.localStorage.setItem('test', 'test'), window.localStorage.removeItem('test'), this.storage = new ig.Storage();
        } catch (_0x850fdb) {
          console.log("using fake storage"), this.storage = new ig.FakeStorage();
        }
      },
      'initMouse': function () {
        this.mouse = new Mouse();
      },
      'initKeyboard': function () {
        this.keyboard = new Keyboard();
      },
      'initMultitouch': function () {
        this.multitouch = new Multitouch();
      },
      'initGamepad': function () {
        this.gamepad = new Gamepad();
      },
      'press': function (_0x362e24) {
        return ig.input.pressed(_0x362e24) || this.gamepad && this.gamepad.press(_0x362e24) ? !0x0 : !0x1;
      },
      'held': function (_0xad7479) {
        return ig.input.state(_0xad7479) || this.gamepad && this.gamepad.state(_0xad7479) ? !0x0 : !0x1;
      },
      'release': function (_0x2a48dd) {
        return ig.input.released(_0x2a48dd) || this.gamepad && this.gamepad.released(_0x2a48dd) ? !0x0 : !0x1;
      },
      'getClickPos': function () {
        return this.mouse.getPos();
      },
      'getLastClickPos': function () {
        return this.mouse.getLast();
      },
      'getTouchesPos': function () {
        return this.multitouch.getTouchesPos();
      },
      'checkOverlap': function (_0x72da60, _0x2ac69a, _0x4b42a1, _0xa9d4b, _0x34c4c5) {
        return _0x72da60.x > _0x2ac69a + _0xa9d4b || _0x72da60.x < _0x2ac69a || _0x72da60.y > _0x4b42a1 + _0x34c4c5 || _0x72da60.y < _0x4b42a1 ? !0x1 : !0x0;
      },
      'clear': function () {
        ig.multitouchInput.clear();
      },
      '_supportsLocalStorage': function () {
        try {
          return localStorage.setItem('test', 'test'), localStorage.removeItem('test'), this.localStorageSupport = 'localStorage' in window && null !== window.localStorage;
        } catch (_0x4d7623) {
          return this.localStorageSupport;
        }
      },
      'storageIsSet': function (_0x11dcde) {
        return 'function' === typeof this.storage.isSet ? this.storage.isSet(_0x11dcde) : null;
      },
      'storageGet': function (_0x310b42) {
        return 'function' === typeof this.storage.get ? this.storage.get(_0x310b42) : null;
      },
      'storageSet': function (_0xb3f346, _0x3f2285) {
        return 'function' === typeof this.storage.set ? this.storage.set(_0xb3f346, _0x3f2285) : null;
      },
      'assert': function (_0xfca91, _0x4b7ed0, _0x240acf) {
        if (_0x4b7ed0 !== _0x240acf) throw 'actualValue:' + _0x4b7ed0 + " not equal to testValue:" + _0x240acf + " at " + _0xfca91;
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.io.storage-manager').requires('impact.game', 'plugins.io.io-manager').defines(function () {
    ig.Game.prototype.name = 'MJS-Game', ig.Game.prototype.version = '1.0.0', ig.Game.prototype.sessionData = {}, ig.Game.prototype.initData = function () {
      return this.sessionData = {
        'sound': 0.5,
        'music': 0.5,
        'level': 0x1,
        'score': 0x0
      };
    }, ig.Game.prototype.setupStorageManager = function () {
      'undefined' === typeof this.name ? console.error("Cannot found Game Name, Storage Manager Cancelled.") : 'undefined' === typeof this.version ? console.error("Cannot found Game Version, Storage Manager Cancelled.") : (this.io || (this.io = new IoManager(), console.log("IO Manager doesn't existed. Initialize...")), console.log("Plug in Storage Manager"), this.storage = this.io.storage, this.storageName = this.name + '-v' + this.version, this.loadAll());
    }, ig.Game.prototype.loadAll = function () {
      var _0x557570 = this.storage.get(this.storageName);
      if (null === _0x557570 || 'undefined' === typeof _0x557570) _0x557570 = this.initData();
      for (var _0x5e28f8 in _0x557570) this.sessionData[_0x5e28f8] = _0x557570[_0x5e28f8];
      this.storage.set(this.storageName, _0x557570);
    }, ig.Game.prototype.saveAll = function () {
      var _0x28084f = this.storage.get(this.storageName),
        _0x53a564;
      for (_0x53a564 in _0x28084f) _0x28084f[_0x53a564] = this.sessionData[_0x53a564];
      this.storage.set(this.storageName, _0x28084f);
    }, ig.Game.prototype.load = function (_0x3fe07f) {
      return this.storage.get(this.storageName)[_0x3fe07f];
    }, ig.Game.prototype.save = function (_0x47ecda, _0x5370d7) {
      var _0x375adb = this.storage.get(this.storageName);
      _0x375adb[_0x47ecda] = _0x5370d7, this.storage.set(this.storageName, _0x375adb);
    };
  }), ig.baked = !0x0, ig.module('plugins.tween').requires('impact.entity').defines(function () {
    Array.prototype.indexOf || (Array.prototype.indexOf = function (_0x4c15e7) {
      for (var _0x14cb80 = 0x0; _0x14cb80 < this.length; ++_0x14cb80) if (this[_0x14cb80] === _0x4c15e7) return _0x14cb80;
      return -0x1;
    }), ig.Entity.prototype.tweens = [], ig.Entity.prototype._preTweenUpdate = ig.Entity.prototype.update, ig.Entity.prototype.update = function () {
      this._preTweenUpdate();
      if (0x0 < this.tweens.length) {
        for (var _0x14deae = [], _0xb2aebe = 0x0; _0xb2aebe < this.tweens.length; _0xb2aebe++) this.tweens[_0xb2aebe].update(), this.tweens[_0xb2aebe].complete || _0x14deae.push(this.tweens[_0xb2aebe]);
        this.tweens = _0x14deae;
      }
    }, ig.Entity.prototype.tween = function (_0x2910ff, _0x43ce9f, _0x2e8ad4) {
      return _0x2910ff = new ig.Tween(this, _0x2910ff, _0x43ce9f, _0x2e8ad4), this.tweens.push(_0x2910ff), _0x2910ff;
    }, ig.Entity.prototype.pauseTweens = function () {
      for (var _0x3e25b3 = 0x0; _0x3e25b3 < this.tweens.length; _0x3e25b3++) this.tweens[_0x3e25b3].pause();
    }, ig.Entity.prototype.resumeTweens = function () {
      for (var _0x4a038d = 0x0; _0x4a038d < this.tweens.length; _0x4a038d++) this.tweens[_0x4a038d].resume();
    }, ig.Entity.prototype.stopTweens = function (_0x28894a) {
      for (var _0x58d9dd = 0x0; _0x58d9dd < this.tweens.length; _0x58d9dd++) this.tweens[_0x58d9dd].stop(_0x28894a);
    }, ig.Tween = function (_0x1a034a, _0x5e5a4d, _0xc07341, _0x57460f) {
      var _0xb15455 = {},
        _0x36553c = {},
        _0x2b488c = {},
        _0x129a56 = 0x0,
        _0x1dacdd = !0x1,
        _0x2c4687 = !0x1,
        _0x3364f7 = !0x1;
      this.duration = _0xc07341, this.paused = this.complete = !0x1, this.easing = ig.Tween.Easing.Linear.EaseNone, this.onComplete = !0x1, this.loop = this.delay = 0x0, this.loopCount = -0x1, ig.merge(this, _0x57460f), this.loopNum = this.loopCount, this.chain = function (_0x95b45) {
        _0x3364f7 = _0x95b45;
      }, this.initEnd = function (_0x3ca3ac, _0x122c05, _0x4d93c7) {
        if ('object' !== typeof _0x122c05[_0x3ca3ac]) _0x4d93c7[_0x3ca3ac] = _0x122c05[_0x3ca3ac];else {
          for (subprop in _0x122c05[_0x3ca3ac]) _0x4d93c7[_0x3ca3ac] || (_0x4d93c7[_0x3ca3ac] = {}), this.initEnd(subprop, _0x122c05[_0x3ca3ac], _0x4d93c7[_0x3ca3ac]);
        }
      }, this.initStart = function (_0x52b406, _0x4236a0, _0x3b671a, _0x1cad3f) {
        if ('object' !== typeof _0x3b671a[_0x52b406]) 'undefined' !== typeof _0x4236a0[_0x52b406] && (_0x1cad3f[_0x52b406] = _0x3b671a[_0x52b406]);else {
          for (subprop in _0x3b671a[_0x52b406]) _0x1cad3f[_0x52b406] || (_0x1cad3f[_0x52b406] = {}), 'undefined' !== typeof _0x4236a0[_0x52b406] && this.initStart(subprop, _0x4236a0[_0x52b406], _0x3b671a[_0x52b406], _0x1cad3f[_0x52b406]);
        }
      }, this.start = function () {
        this.paused = this.complete = !0x1, this.loopNum = this.loopCount, _0x129a56 = 0x0, -0x1 == _0x1a034a.tweens.indexOf(this) && _0x1a034a.tweens.push(this), _0x2c4687 = !0x0, _0x1dacdd = new ig.Timer();
        for (var _0x1428d8 in _0x5e5a4d) this.initEnd(_0x1428d8, _0x5e5a4d, _0x36553c);
        for (_0x1428d8 in _0x36553c) this.initStart(_0x1428d8, _0x36553c, _0x1a034a, _0xb15455), this.initDelta(_0x1428d8, _0x2b488c, _0x1a034a, _0x36553c);
      }, this.initDelta = function (_0x5f5a5b, _0x3fb6b2, _0x5581a6, _0x49c15d) {
        if ('object' !== typeof _0x49c15d[_0x5f5a5b]) _0x3fb6b2[_0x5f5a5b] = _0x49c15d[_0x5f5a5b] - _0x5581a6[_0x5f5a5b];else {
          for (subprop in _0x49c15d[_0x5f5a5b]) _0x3fb6b2[_0x5f5a5b] || (_0x3fb6b2[_0x5f5a5b] = {}), this.initDelta(subprop, _0x3fb6b2[_0x5f5a5b], _0x5581a6[_0x5f5a5b], _0x49c15d[_0x5f5a5b]);
        }
      }, this.propUpdate = function (_0x3252c3, _0x2eeab3, _0x35dfdb, _0x433aee, _0x39cc56) {
        if ('object' !== typeof _0x35dfdb[_0x3252c3]) _0x2eeab3[_0x3252c3] = 'undefined' != typeof _0x35dfdb[_0x3252c3] ? _0x35dfdb[_0x3252c3] + _0x433aee[_0x3252c3] * _0x39cc56 : _0x2eeab3[_0x3252c3];else {
          for (subprop in _0x35dfdb[_0x3252c3]) this.propUpdate(subprop, _0x2eeab3[_0x3252c3], _0x35dfdb[_0x3252c3], _0x433aee[_0x3252c3], _0x39cc56);
        }
      }, this.propSet = function (_0x2cdcee, _0x176eda, _0x126d6a) {
        if ('object' !== typeof _0x176eda[_0x2cdcee]) _0x126d6a[_0x2cdcee] = _0x176eda[_0x2cdcee];else {
          for (subprop in _0x176eda[_0x2cdcee]) _0x126d6a[_0x2cdcee] || (_0x126d6a[_0x2cdcee] = {}), this.propSet(subprop, _0x176eda[_0x2cdcee], _0x126d6a[_0x2cdcee]);
        }
      }, this.update = function () {
        if (!_0x2c4687) return !0x1;
        if (this.delay) {
          if (_0x1dacdd.delta() < this.delay) return;
          this.delay = 0x0, _0x1dacdd.reset();
        }
        if (this.paused || this.complete) return !0x1;
        var _0x259d82 = (_0x1dacdd.delta() + _0x129a56) / this.duration,
          _0x259d82 = 0x1 < _0x259d82 ? 0x1 : _0x259d82,
          _0x251233 = this.easing(_0x259d82);
        for (property in _0x2b488c) this.propUpdate(property, _0x1a034a, _0xb15455, _0x2b488c, _0x251233);
        if (0x1 <= _0x259d82) {
          if (0x0 == this.loopNum || !this.loop) {
            this.complete = !0x0;
            if (this.onComplete) this.onComplete();
            return _0x3364f7 && _0x3364f7.start(), !0x1;
          }
          if (this.loop == ig.Tween.Loop.Revert) {
            for (property in _0xb15455) this.propSet(property, _0xb15455, _0x1a034a);
            _0x129a56 = 0x0, _0x1dacdd.reset(), -0x1 != this.loopNum && this.loopNum--;
          } else {
            if (this.loop == ig.Tween.Loop.Reverse) {
              _0x259d82 = {}, _0x251233 = {}, ig.merge(_0x259d82, _0x36553c), ig.merge(_0x251233, _0xb15455), ig.merge(_0xb15455, _0x259d82), ig.merge(_0x36553c, _0x251233);
              for (property in _0x36553c) this.initDelta(property, _0x2b488c, _0x1a034a, _0x36553c);
              _0x129a56 = 0x0, _0x1dacdd.reset(), -0x1 != this.loopNum && this.loopNum--;
            }
          }
        }
      }, this.pause = function () {
        this.paused = !0x0, _0x1dacdd && _0x1dacdd.delta && (_0x129a56 += _0x1dacdd.delta());
      }, this.resume = function () {
        this.paused = !0x1, _0x1dacdd && _0x1dacdd.reset && _0x1dacdd.reset();
      }, this.stop = function (_0x45e57a) {
        _0x45e57a && (this.loop = this.complete = this.paused = !0x1, _0x129a56 += _0xc07341, this.update()), this.complete = !0x0;
      };
    }, ig.Tween.Loop = {
      'Revert': 0x1,
      'Reverse': 0x2
    }, ig.Tween.Easing = {
      'Linear': {},
      'Quadratic': {},
      'Cubic': {},
      'Quartic': {},
      'Quintic': {},
      'Sinusoidal': {},
      'Exponential': {},
      'Circular': {},
      'Elastic': {},
      'Back': {},
      'Bounce': {}
    }, ig.Tween.Easing.Linear.EaseNone = function (_0x3989e9) {
      return _0x3989e9;
    }, ig.Tween.Easing.Quadratic.EaseIn = function (_0x3566cc) {
      return _0x3566cc * _0x3566cc;
    }, ig.Tween.Easing.Quadratic.EaseOut = function (_0x26b7b6) {
      return -_0x26b7b6 * (_0x26b7b6 - 0x2);
    }, ig.Tween.Easing.Quadratic.EaseInOut = function (_0x1c0e97) {
      return 0x1 > (_0x1c0e97 *= 0x2) ? 0.5 * _0x1c0e97 * _0x1c0e97 : -0.5 * (--_0x1c0e97 * (_0x1c0e97 - 0x2) - 0x1);
    }, ig.Tween.Easing.Cubic.EaseIn = function (_0x1d8f99) {
      return _0x1d8f99 * _0x1d8f99 * _0x1d8f99;
    }, ig.Tween.Easing.Cubic.EaseOut = function (_0x3fdadd) {
      return --_0x3fdadd * _0x3fdadd * _0x3fdadd + 0x1;
    }, ig.Tween.Easing.Cubic.EaseInOut = function (_0x1e0beb) {
      return 0x1 > (_0x1e0beb *= 0x2) ? 0.5 * _0x1e0beb * _0x1e0beb * _0x1e0beb : 0.5 * ((_0x1e0beb -= 0x2) * _0x1e0beb * _0x1e0beb + 0x2);
    }, ig.Tween.Easing.Quartic.EaseIn = function (_0x430d32) {
      return _0x430d32 * _0x430d32 * _0x430d32 * _0x430d32;
    }, ig.Tween.Easing.Quartic.EaseOut = function (_0x20179d) {
      return -(--_0x20179d * _0x20179d * _0x20179d * _0x20179d - 0x1);
    }, ig.Tween.Easing.Quartic.EaseInOut = function (_0x42cdbd) {
      return 0x1 > (_0x42cdbd *= 0x2) ? 0.5 * _0x42cdbd * _0x42cdbd * _0x42cdbd * _0x42cdbd : -0.5 * ((_0x42cdbd -= 0x2) * _0x42cdbd * _0x42cdbd * _0x42cdbd - 0x2);
    }, ig.Tween.Easing.Quintic.EaseIn = function (_0x3bfb07) {
      return _0x3bfb07 * _0x3bfb07 * _0x3bfb07 * _0x3bfb07 * _0x3bfb07;
    }, ig.Tween.Easing.Quintic.EaseOut = function (_0x13438c) {
      return (_0x13438c -= 0x1) * _0x13438c * _0x13438c * _0x13438c * _0x13438c + 0x1;
    }, ig.Tween.Easing.Quintic.EaseInOut = function (_0x3cd4b5) {
      return 0x1 > (_0x3cd4b5 *= 0x2) ? 0.5 * _0x3cd4b5 * _0x3cd4b5 * _0x3cd4b5 * _0x3cd4b5 * _0x3cd4b5 : 0.5 * ((_0x3cd4b5 -= 0x2) * _0x3cd4b5 * _0x3cd4b5 * _0x3cd4b5 * _0x3cd4b5 + 0x2);
    }, ig.Tween.Easing.Sinusoidal.EaseIn = function (_0x51e97e) {
      return -Math.cos(_0x51e97e * Math.PI / 0x2) + 0x1;
    }, ig.Tween.Easing.Sinusoidal.EaseOut = function (_0x14ef16) {
      return Math.sin(_0x14ef16 * Math.PI / 0x2);
    }, ig.Tween.Easing.Sinusoidal.EaseInOut = function (_0x59cda1) {
      return -0.5 * (Math.cos(Math.PI * _0x59cda1) - 0x1);
    }, ig.Tween.Easing.Exponential.EaseIn = function (_0xb3b679) {
      return 0x0 == _0xb3b679 ? 0x0 : Math.pow(0x2, 0xa * (_0xb3b679 - 0x1));
    }, ig.Tween.Easing.Exponential.EaseOut = function (_0x417fee) {
      return 0x1 == _0x417fee ? 0x1 : -Math.pow(0x2, -0xa * _0x417fee) + 0x1;
    }, ig.Tween.Easing.Exponential.EaseInOut = function (_0x55a694) {
      return 0x0 == _0x55a694 ? 0x0 : 0x1 == _0x55a694 ? 0x1 : 0x1 > (_0x55a694 *= 0x2) ? 0.5 * Math.pow(0x2, 0xa * (_0x55a694 - 0x1)) : 0.5 * (-Math.pow(0x2, -0xa * (_0x55a694 - 0x1)) + 0x2);
    }, ig.Tween.Easing.Circular.EaseIn = function (_0x452fdb) {
      return -(Math.sqrt(0x1 - _0x452fdb * _0x452fdb) - 0x1);
    }, ig.Tween.Easing.Circular.EaseOut = function (_0xffca3d) {
      return Math.sqrt(0x1 - --_0xffca3d * _0xffca3d);
    }, ig.Tween.Easing.Circular.EaseInOut = function (_0x3dfe48) {
      return 0x1 > (_0x3dfe48 /= 0.5) ? -0.5 * (Math.sqrt(0x1 - _0x3dfe48 * _0x3dfe48) - 0x1) : 0.5 * (Math.sqrt(0x1 - (_0x3dfe48 -= 0x2) * _0x3dfe48) + 0x1);
    }, ig.Tween.Easing.Elastic.EaseIn = function (_0x2adb50) {
      var _0x49484e,
        _0x312a30 = 0.1,
        _0x5e2835 = 0.4;
      if (0x0 == _0x2adb50) return 0x0;
      if (0x1 == _0x2adb50) return 0x1;
      return _0x5e2835 || (_0x5e2835 = 0.3), !_0x312a30 || 0x1 > _0x312a30 ? (_0x312a30 = 0x1, _0x49484e = _0x5e2835 / 0x4) : _0x49484e = _0x5e2835 / (0x2 * Math.PI) * Math.asin(0x1 / _0x312a30), -(_0x312a30 * Math.pow(0x2, 0xa * (_0x2adb50 -= 0x1)) * Math.sin(0x2 * (_0x2adb50 - _0x49484e) * Math.PI / _0x5e2835));
    }, ig.Tween.Easing.Elastic.EaseOut = function (_0x3bb688) {
      var _0x519d58,
        _0xf26610 = 0.1,
        _0x5eb4db = 0.4;
      if (0x0 == _0x3bb688) return 0x0;
      if (0x1 == _0x3bb688) return 0x1;
      return _0x5eb4db || (_0x5eb4db = 0.3), !_0xf26610 || 0x1 > _0xf26610 ? (_0xf26610 = 0x1, _0x519d58 = _0x5eb4db / 0x4) : _0x519d58 = _0x5eb4db / (0x2 * Math.PI) * Math.asin(0x1 / _0xf26610), _0xf26610 * Math.pow(0x2, -0xa * _0x3bb688) * Math.sin(0x2 * (_0x3bb688 - _0x519d58) * Math.PI / _0x5eb4db) + 0x1;
    }, ig.Tween.Easing.Elastic.EaseInOut = function (_0x4c067b) {
      var _0x7e2856,
        _0x49c06c = 0.1,
        _0x13f370 = 0.4;
      if (0x0 == _0x4c067b) return 0x0;
      if (0x1 == _0x4c067b) return 0x1;
      return _0x13f370 || (_0x13f370 = 0.3), !_0x49c06c || 0x1 > _0x49c06c ? (_0x49c06c = 0x1, _0x7e2856 = _0x13f370 / 0x4) : _0x7e2856 = _0x13f370 / (0x2 * Math.PI) * Math.asin(0x1 / _0x49c06c), 0x1 > (_0x4c067b *= 0x2) ? -0.5 * _0x49c06c * Math.pow(0x2, 0xa * (_0x4c067b -= 0x1)) * Math.sin(0x2 * (_0x4c067b - _0x7e2856) * Math.PI / _0x13f370) : 0.5 * _0x49c06c * Math.pow(0x2, -0xa * (_0x4c067b -= 0x1)) * Math.sin(0x2 * (_0x4c067b - _0x7e2856) * Math.PI / _0x13f370) + 0x1;
    }, ig.Tween.Easing.Back.EaseIn = function (_0x929df9) {
      return _0x929df9 * _0x929df9 * (2.70158 * _0x929df9 - 1.70158);
    }, ig.Tween.Easing.Back.EaseOut = function (_0x2fab57) {
      return (_0x2fab57 -= 0x1) * _0x2fab57 * (2.70158 * _0x2fab57 + 1.70158) + 0x1;
    }, ig.Tween.Easing.Back.EaseInOut = function (_0x1be542) {
      return 0x1 > (_0x1be542 *= 0x2) ? 0.5 * _0x1be542 * _0x1be542 * (3.5949095 * _0x1be542 - 2.5949095) : 0.5 * ((_0x1be542 -= 0x2) * _0x1be542 * (3.5949095 * _0x1be542 + 2.5949095) + 0x2);
    }, ig.Tween.Easing.Bounce.EaseIn = function (_0x42efd0) {
      return 0x1 - ig.Tween.Easing.Bounce.EaseOut(0x1 - _0x42efd0);
    }, ig.Tween.Easing.Bounce.EaseOut = function (_0x39f6a6) {
      return (_0x39f6a6 /= 0x1) < 0x1 / 2.75 ? 7.5625 * _0x39f6a6 * _0x39f6a6 : _0x39f6a6 < 0x2 / 2.75 ? 7.5625 * (_0x39f6a6 -= 1.5 / 2.75) * _0x39f6a6 + 0.75 : _0x39f6a6 < 2.5 / 2.75 ? 7.5625 * (_0x39f6a6 -= 2.25 / 2.75) * _0x39f6a6 + 0.9375 : 7.5625 * (_0x39f6a6 -= 2.625 / 2.75) * _0x39f6a6 + 0.984375;
    }, ig.Tween.Easing.Bounce.EaseInOut = function (_0x570234) {
      return 0.5 > _0x570234 ? 0.5 * ig.Tween.Easing.Bounce.EaseIn(0x2 * _0x570234) : 0.5 * ig.Tween.Easing.Bounce.EaseOut(0x2 * _0x570234 - 0x1) + 0.5;
    }, ig.Tween.Interpolation = {
      'Linear': function (_0x165c45, _0x29e4b1) {
        var _0x25fb93 = _0x165c45.length - 0x1,
          _0x4b842c = _0x25fb93 * _0x29e4b1,
          _0xa183c8 = Math.floor(_0x4b842c),
          _0x1a27f9 = ig.Tween.Interpolation.Utils.Linear;
        return 0x0 > _0x29e4b1 ? _0x1a27f9(_0x165c45[0x0], _0x165c45[0x1], _0x4b842c) : 0x1 < _0x29e4b1 ? _0x1a27f9(_0x165c45[_0x25fb93], _0x165c45[_0x25fb93 - 0x1], _0x25fb93 - _0x4b842c) : _0x1a27f9(_0x165c45[_0xa183c8], _0x165c45[_0xa183c8 + 0x1 > _0x25fb93 ? _0x25fb93 : _0xa183c8 + 0x1], _0x4b842c - _0xa183c8);
      }
    };
  }), ig.baked = !0x0, ig.module('plugins.patches.entity-patch').requires('impact.entity').defines(function () {
    ig.Entity.inject({
      'handleMovementTrace': function (_0x2b8b36) {
        this.standing = !0x1, _0x2b8b36.collision.y && (0x0 < this.bounciness && Math.abs(this.vel.y) > this.minBounceVelocity ? this.vel.y *= -this.bounciness : (0x0 < this.vel.y && (this.standing = !0x0), this.vel.y = 0x0)), _0x2b8b36.collision.x && (this.vel.x = 0x0 < this.bounciness && Math.abs(this.vel.x) > this.minBounceVelocity ? this.vel.x * -this.bounciness : 0x0);
        if (_0x2b8b36.collision.slope) {
          var _0xe9335f = _0x2b8b36.collision.slope;
          if (0x0 < this.bounciness) {
            var _0x46de9d = this.vel.x * _0xe9335f.nx + this.vel.y * _0xe9335f.ny;
            this.vel.x = (this.vel.x - 0x2 * _0xe9335f.nx * _0x46de9d) * this.bounciness, this.vel.y = (this.vel.y - 0x2 * _0xe9335f.ny * _0x46de9d) * this.bounciness;
          } else _0x46de9d = (this.vel.x * _0xe9335f.x + this.vel.y * _0xe9335f.y) / (_0xe9335f.x * _0xe9335f.x + _0xe9335f.y * _0xe9335f.y), this.vel.x = _0xe9335f.x * _0x46de9d, this.vel.y = _0xe9335f.y * _0x46de9d, _0xe9335f = Math.atan2(_0xe9335f.x, _0xe9335f.y), _0xe9335f > this.slopeStanding.min && _0xe9335f < this.slopeStanding.max && (this.standing = !0x0);
        }
        this.pos.x = _0x2b8b36.pos.x, this.pos.y = _0x2b8b36.pos.y;
      },
      'update': function () {
        this.parent(), null !== this.clickableLayer && 'undefined' !== typeof this.clickableLayer && null !== this.clickableLayer.update && 'function' === typeof this.clickableLayer.update && this.clickableLayer.update(this.pos.x, this.pos.y, this.size.x, this.size.y);
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.tweens-handler').requires('impact.entity', 'plugins.tween', 'plugins.patches.entity-patch').defines(function () {
    Array.prototype.indexOf || (Array.prototype.indexOf = function (_0x5251c5) {
      for (var _0x13f6d1 = 0x0; _0x13f6d1 < this.length; ++_0x13f6d1) if (this[_0x13f6d1] === _0x5251c5) return _0x13f6d1;
      return -0x1;
    }), ig.TweensHandler = ig.Class.extend({
      '_tweens': [],
      '_systemPausedTweens': [],
      'init': function () {},
      'getAll': function () {
        return this._tweens;
      },
      'removeAll': function () {
        this._tweens = [];
      },
      'add': function (_0x49724e) {
        this._tweens.push(_0x49724e);
      },
      'remove': function (_0x44ad17) {
        _0x44ad17 = this._tweens.indexOf(_0x44ad17), -0x1 !== _0x44ad17 && this._tweens.splice(_0x44ad17, 0x1);
      },
      'onSystemPause': function () {
        if (0x0 === this._tweens.length) return !0x1;
        for (var _0x2ce65f = 0x0, _0x457d38 = null; _0x2ce65f < this._tweens.length;) _0x457d38 = this._tweens[_0x2ce65f], _0x457d38._isPlaying && (this._systemPausedTweens.push(_0x457d38), _0x457d38.pause()), _0x2ce65f++;
        return !0x0;
      },
      'onSystemResume': function () {
        if (0x0 === this._systemPausedTweens.length) return !0x1;
        for (var _0x3d2848 = 0x0; _0x3d2848 < this._systemPausedTweens.length;) this._systemPausedTweens[_0x3d2848].resume(), _0x3d2848++;
        return this._systemPausedTweens = [], !0x0;
      },
      'update': function (_0x596148, _0x12555a) {
        if (0x0 === this._tweens.length) return !0x1;
        var _0x4208fd = 0x0;
        for (_0x596148 = void 0x0 !== _0x596148 ? _0x596148 : ig.game.tweens.now(); _0x4208fd < this._tweens.length;) this._tweens[_0x4208fd].update(_0x596148) || _0x12555a ? _0x4208fd++ : this._tweens.splice(_0x4208fd, 0x1);
        return !0x0;
      },
      'now': function () {
        return Date.now();
      }
    }), ig.TweenDef = ig.Class.extend({
      'version': '1.0.1',
      '_ent': null,
      '_valuesStart': {},
      '_valuesEnd': {},
      '_valuesStartRepeat': {},
      '_duration': 0x3e8,
      '_repeat': 0x0,
      '_yoyo': !0x1,
      '_isPlaying': !0x1,
      '_reversed': !0x1,
      '_delayTime': 0x0,
      '_startTime': null,
      '_pauseTime': null,
      '_easingFunction': ig.Tween.Easing.Linear.EaseNone,
      '_interpolationFunction': ig.Tween.Interpolation.Linear,
      '_chainedTweens': [],
      '_onStartCallback': null,
      '_onStartCallbackFired': !0x1,
      '_onUpdateCallback': null,
      '_onCompleteCallback': null,
      '_onStopCallback': null,
      '_onPauseCallback': null,
      '_onResumeCallback': null,
      '_currentElapsed': 0x0,
      'init': function (_0x90ee57) {
        this._object = _0x90ee57;
      },
      'to': function (_0x195b89, _0x815662) {
        return this._valuesEnd = _0x195b89, void 0x0 !== _0x815662 && (this._duration = _0x815662), this;
      },
      'start': function (_0x31641b) {
        if (this._isPlaying) return this;
        ig.game.tweens.add(this), this._isPlaying = !0x0, this._onStartCallbackFired = !0x1, this._startTime = void 0x0 !== _0x31641b ? _0x31641b : ig.game.tweens.now(), this._startTime += this._delayTime;
        for (var _0x3ec443 in this._valuesEnd) {
          if (this._valuesEnd[_0x3ec443] instanceof Array) {
            if (0x0 === this._valuesEnd[_0x3ec443].length) continue;
            this._valuesEnd[_0x3ec443] = [this._object[_0x3ec443]].concat(this._valuesEnd[_0x3ec443]);
          }
          void 0x0 !== this._object[_0x3ec443] && (this._valuesStart[_0x3ec443] = this._object[_0x3ec443], !0x1 === this._valuesStart[_0x3ec443] instanceof Array && (this._valuesStart[_0x3ec443] *= 0x1), this._valuesStartRepeat[_0x3ec443] = this._valuesStart[_0x3ec443] || 0x0);
        }
        return this;
      },
      'stop': function () {
        if (!this._isPlaying) return this;
        return ig.game.tweens.remove(this), this._isPlaying = !0x1, null !== this._onStopCallback && this._onStopCallback.call(this._object, this._object), this.stopChainedTweens(), this;
      },
      'pause': function () {
        if (!this._isPlaying) return this;
        return ig.game.tweens.remove(this), this._isPlaying = !0x1, this._pauseTime = ig.game.tweens.now(), null !== this._onPauseCallback && this._onPauseCallback.call(this._object, this._object), this;
      },
      'resume': function () {
        if (this._isPlaying || !this._pauseTime) return this;
        var _0x266be2 = ig.game.tweens.now() - this._pauseTime;
        return this._startTime += _0x266be2, ig.game.tweens.add(this), this._isPlaying = !0x0, null !== this._onResumeCallback && this._onResumeCallback.call(this._object, this._object), this._pauseTime = null, this;
      },
      'end': function () {
        return this.update(this._startTime + this._duration), this;
      },
      'stopChainedTweens': function () {
        for (var _0x17f4f8 = 0x0, _0x41ccef = this._chainedTweens.length; _0x17f4f8 < _0x41ccef; _0x17f4f8++) this._chainedTweens[_0x17f4f8].stop();
      },
      'delay': function (_0x2586a8) {
        return this._delayTime = _0x2586a8, this;
      },
      'repeat': function (_0x29a533) {
        return this._repeat = _0x29a533, this;
      },
      'repeatDelay': function (_0x13c2f3) {
        return this._repeatDelayTime = _0x13c2f3, this;
      },
      'yoyo': function (_0x56ac09) {
        return this._yoyo = _0x56ac09, this;
      },
      'easing': function (_0x484310) {
        return this._easingFunction = _0x484310, this;
      },
      'interpolation': function (_0x31aaf7) {
        return this._interpolationFunction = _0x31aaf7, this;
      },
      'chain': function () {
        return this._chainedTweens = arguments, this;
      },
      'onStart': function (_0x9eeb39) {
        return this._onStartCallback = _0x9eeb39, this;
      },
      'onUpdate': function (_0x16b624) {
        return this._onUpdateCallback = _0x16b624, this;
      },
      'onComplete': function (_0x5b3b3a) {
        return this._onCompleteCallback = _0x5b3b3a, this;
      },
      'onStop': function (_0x5c0a36) {
        return this._onStopCallback = _0x5c0a36, this;
      },
      'onPause': function (_0x37ab55) {
        return this._onPauseCallback = _0x37ab55, this;
      },
      'onResume': function (_0x499980) {
        return this._onResumeCallback = _0x499980, this;
      },
      'update': function (_0x57755f) {
        var _0x2274ae, _0x141da3, _0x10c37b;
        if (_0x57755f < this._startTime) return !0x0;
        !0x1 === this._onStartCallbackFired && (null !== this._onStartCallback && this._onStartCallback.call(this._object, this._object), this._onStartCallbackFired = !0x0), _0x141da3 = (_0x57755f - this._startTime) / this._duration, this._currentElapsed = _0x141da3 = 0x1 < _0x141da3 ? 0x1 : _0x141da3, _0x10c37b = this._easingFunction(_0x141da3);
        for (_0x2274ae in this._valuesEnd) if (void 0x0 !== this._valuesStart[_0x2274ae]) {
          var _0x3ddc26 = this._valuesStart[_0x2274ae] || 0x0,
            _0x5cccbf = this._valuesEnd[_0x2274ae];
          _0x5cccbf instanceof Array ? this._object[_0x2274ae] = this._interpolationFunction(_0x5cccbf, _0x10c37b) : ('string' === typeof _0x5cccbf && (_0x5cccbf = '+' === _0x5cccbf.charAt(0x0) || '-' === _0x5cccbf.charAt(0x0) ? _0x3ddc26 + parseFloat(_0x5cccbf) : parseFloat(_0x5cccbf)), 'number' === typeof _0x5cccbf && (this._object[_0x2274ae] = _0x3ddc26 + (_0x5cccbf - _0x3ddc26) * _0x10c37b));
        }
        null !== this._onUpdateCallback && this._onUpdateCallback.call(this._object, this._object, _0x10c37b);
        if (0x1 === _0x141da3) {
          if (0x0 < this._repeat || 0x0 > this._repeat) {
            isFinite(this._repeat) && 0x0 < this._repeat && this._repeat--;
            for (_0x2274ae in this._valuesStartRepeat) 'string' === typeof this._valuesEnd[_0x2274ae] && (this._valuesStartRepeat[_0x2274ae] = _valuesStartRepeat[_0x2274ae] + parseFloat(_valuesEnd[_0x2274ae])), this._yoyo && (_0x141da3 = this._valuesStartRepeat[_0x2274ae], this._valuesStartRepeat[_0x2274ae] = this._valuesEnd[_0x2274ae], this._valuesEnd[_0x2274ae] = _0x141da3), this._valuesStart[_0x2274ae] = this._valuesStartRepeat[_0x2274ae];
            this._yoyo && (this._reversed = !this._reversed), this._startTime = void 0x0 !== this._repeatDelayTime ? _0x57755f + this._repeatDelayTime : _0x57755f + this._delayTime;
          } else {
            this._isPlaying = !0x1, null !== this._onCompleteCallback && this._onCompleteCallback.call(this._object, this._object), _0x57755f = 0x0;
            for (_0x2274ae = this._chainedTweens.length; _0x57755f < _0x2274ae; _0x57755f++) this._chainedTweens[_0x57755f].start(this._startTime + this._duration);
            return !0x1;
          }
        }
        return !0x0;
      }
    });
    var _0x533873 = [0x1];
    ig.Tween.Interpolation = {
      'Linear': function (_0x2ccd84, _0x475c72) {
        var _0x34a609 = _0x2ccd84.length - 0x1,
          _0x368c60 = _0x34a609 * _0x475c72,
          _0x5b9371 = Math.floor(_0x368c60),
          _0x45a061 = ig.Tween.Interpolation.Utils.Linear;
        return 0x0 > _0x475c72 ? _0x45a061(_0x2ccd84[0x0], _0x2ccd84[0x1], _0x368c60) : 0x1 < _0x475c72 ? _0x45a061(_0x2ccd84[_0x34a609], _0x2ccd84[_0x34a609 - 0x1], _0x34a609 - _0x368c60) : _0x45a061(_0x2ccd84[_0x5b9371], _0x2ccd84[_0x5b9371 + 0x1 > _0x34a609 ? _0x34a609 : _0x5b9371 + 0x1], _0x368c60 - _0x5b9371);
      },
      'Bezier': function (_0x24546c, _0x5b7016) {
        for (var _0x167c9c = 0x0, _0x354998 = _0x24546c.length - 0x1, _0x5d59e8 = Math.pow, _0x196f63 = ig.Tween.Interpolation.Utils.Bernstein, _0xe307ac = 0x0; _0xe307ac <= _0x354998; _0xe307ac++) _0x167c9c += _0x5d59e8(0x1 - _0x5b7016, _0x354998 - _0xe307ac) * _0x5d59e8(_0x5b7016, _0xe307ac) * _0x24546c[_0xe307ac] * _0x196f63(_0x354998, _0xe307ac);
        return _0x167c9c;
      },
      'CatmullRom': function (_0x42fb30, _0x570365) {
        var _0x3f3999 = _0x42fb30.length - 0x1,
          _0x591e2b = _0x3f3999 * _0x570365,
          _0x21662c = Math.floor(_0x591e2b),
          _0x375848 = ig.Tween.Interpolation.Utils.CatmullRom;
        return _0x42fb30[0x0] === _0x42fb30[_0x3f3999] ? (0x0 > _0x570365 && (_0x21662c = Math.floor(_0x591e2b = _0x3f3999 * (0x1 + _0x570365))), _0x375848(_0x42fb30[(_0x21662c - 0x1 + _0x3f3999) % _0x3f3999], _0x42fb30[_0x21662c], _0x42fb30[(_0x21662c + 0x1) % _0x3f3999], _0x42fb30[(_0x21662c + 0x2) % _0x3f3999], _0x591e2b - _0x21662c)) : 0x0 > _0x570365 ? _0x42fb30[0x0] - (_0x375848(_0x42fb30[0x0], _0x42fb30[0x0], _0x42fb30[0x1], _0x42fb30[0x1], -_0x591e2b) - _0x42fb30[0x0]) : 0x1 < _0x570365 ? _0x42fb30[_0x3f3999] - (_0x375848(_0x42fb30[_0x3f3999], _0x42fb30[_0x3f3999], _0x42fb30[_0x3f3999 - 0x1], _0x42fb30[_0x3f3999 - 0x1], _0x591e2b - _0x3f3999) - _0x42fb30[_0x3f3999]) : _0x375848(_0x42fb30[_0x21662c ? _0x21662c - 0x1 : 0x0], _0x42fb30[_0x21662c], _0x42fb30[_0x3f3999 < _0x21662c + 0x1 ? _0x3f3999 : _0x21662c + 0x1], _0x42fb30[_0x3f3999 < _0x21662c + 0x2 ? _0x3f3999 : _0x21662c + 0x2], _0x591e2b - _0x21662c);
      },
      'Utils': {
        'Linear': function (_0x52fc0b, _0x2c40b3, _0x3ed3cb) {
          return (_0x2c40b3 - _0x52fc0b) * _0x3ed3cb + _0x52fc0b;
        },
        'Bernstein': function (_0x33fb1e, _0x5eb40a) {
          var _0x3b36e3 = ig.Tween.Interpolation.Utils.Factorial;
          return _0x3b36e3(_0x33fb1e) / _0x3b36e3(_0x5eb40a) / _0x3b36e3(_0x33fb1e - _0x5eb40a);
        },
        'Factorial': function (_0x58f095) {
          var _0x25fe50 = 0x1;
          if (_0x533873[_0x58f095]) return _0x533873[_0x58f095];
          for (var _0x5570f6 = _0x58f095; 0x1 < _0x5570f6; _0x5570f6--) _0x25fe50 *= _0x5570f6;
          return _0x533873[_0x58f095] = _0x25fe50;
        },
        'CatmullRom': function (_0x5bbbc6, _0x1654a9, _0x355d32, _0x23f357, _0x1cc5af) {
          _0x5bbbc6 = 0.5 * (_0x355d32 - _0x5bbbc6), _0x23f357 = 0.5 * (_0x23f357 - _0x1654a9);
          var _0x59fae3 = _0x1cc5af * _0x1cc5af;
          return (0x2 * _0x1654a9 - 0x2 * _0x355d32 + _0x5bbbc6 + _0x23f357) * _0x1cc5af * _0x59fae3 + (-0x3 * _0x1654a9 + 0x3 * _0x355d32 - 0x2 * _0x5bbbc6 - _0x23f357) * _0x59fae3 + _0x5bbbc6 * _0x1cc5af + _0x1654a9;
        }
      }
    };
  }), ig.baked = !0x0, ig.module('plugins.url-parameters').defines(function () {
    ig.UrlParameters = ig.Class.extend({
      'init': function () {
        switch (getQueryVariable('iphone')) {
          case 'true':
            ig.ua.iPhone = !0x0, console.log("iPhone mode");
        }
        var _0x2215dd = getQueryVariable('webview');
        if (_0x2215dd) switch (_0x2215dd) {
          case 'true':
            ig.ua.is_uiwebview = !0x0, console.log("webview mode");
        }
        if (_0x2215dd = getQueryVariable('debug')) switch (_0x2215dd) {
          case 'true':
            ig.game.showDebugMenu(), console.log("debug mode");
        }
        switch (getQueryVariable('view')) {
          case 'stats':
            ig.game.resetPlayerStats(), ig.game.endGame();
        }
        getQueryVariable('ad');
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.director').requires('impact.impact').defines(function () {
    ig.Director = ig.Class.extend({
      'init': function (_0x1c3849, _0x1c9bdc) {
        this.game = _0x1c3849, this.levels = [], this.currentLevel = 0x0, this.append(_0x1c9bdc);
      },
      'loadLevel': function (_0x107fea) {
        for (var _0x5adfcf in ig.sizeHandler.dynamicClickableEntityDivs) {
          var _0x1c91e7 = ig.domHandler.getElementById('#' + _0x5adfcf);
          ig.domHandler.hide(_0x1c91e7);
        }
        return this.currentLevel = _0x107fea, this.game.loadLevel(this.levels[_0x107fea]), !0x0;
      },
      'loadLevelWithoutEntities': function (_0x865c8f) {
        return this.currentLevel = _0x865c8f, this.game.loadLevelWithoutEntities(this.levels[_0x865c8f]), !0x0;
      },
      'append': function (_0x1dfec0) {
        return newLevels = [], 'object' === typeof _0x1dfec0 ? (_0x1dfec0.constructor === [].constructor ? newLevels = _0x1dfec0 : newLevels[0x0] = _0x1dfec0, this.levels = this.levels.concat(newLevels), !0x0) : !0x1;
      },
      'nextLevel': function () {
        return this.currentLevel + 0x1 < this.levels.length ? this.loadLevel(this.currentLevel + 0x1) : !0x1;
      },
      'previousLevel': function () {
        return 0x0 <= this.currentLevel - 0x1 ? this.loadLevel(this.currentLevel - 0x1) : !0x1;
      },
      'jumpTo': function (_0x39346c) {
        var _0x21fedc = null;
        for (i = 0x0; i < this.levels.length; i++) this.levels[i] == _0x39346c && (_0x21fedc = i);
        return 0x0 <= _0x21fedc ? this.loadLevel(_0x21fedc) : !0x1;
      },
      'firstLevel': function () {
        return this.loadLevel(0x0);
      },
      'lastLevel': function () {
        return this.loadLevel(this.levels.length - 0x1);
      },
      'reloadLevel': function () {
        return this.loadLevel(this.currentLevel);
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.impact-storage').requires('impact.game').defines(function () {
    ig.Storage = ig.Class.extend({
      'staticInstantiate': function () {
        return !ig.Storage.instance ? null : ig.Storage.instance;
      },
      'init': function () {
        ig.Storage.instance = this;
      },
      'isCapable': function () {
        return 'undefined' !== typeof window.localStorage;
      },
      'isSet': function (_0x388695) {
        return null !== this.get(_0x388695);
      },
      'initUnset': function (_0x47fe81, _0x523fed) {
        null === this.get(_0x47fe81) && this.set(_0x47fe81, _0x523fed);
      },
      'get': function (_0xb02f23) {
        if (!this.isCapable()) return null;
        try {
          return JSON.parse(localStorage.getItem(_0xb02f23));
        } catch (_0x17a6bb) {
          return window.localStorage.getItem(_0xb02f23);
        }
      },
      'getInt': function (_0x4d1577) {
        return ~~this.get(_0x4d1577);
      },
      'getFloat': function (_0x1631e7) {
        return parseFloat(this.get(_0x1631e7));
      },
      'getBool': function (_0xddd208) {
        return !!this.get(_0xddd208);
      },
      'key': function (_0x14a788) {
        return this.isCapable() ? window.localStorage.key(_0x14a788) : null;
      },
      'set': function (_0xf07c00, _0x258227) {
        if (!this.isCapable()) return null;
        try {
          window.localStorage.setItem(_0xf07c00, JSON.stringify(_0x258227));
        } catch (_0x5963a0) {
          console.log(_0x5963a0);
        }
      },
      'setHighest': function (_0x29a6a3, _0x2f2586) {
        _0x2f2586 > this.getFloat(_0x29a6a3) && this.set(_0x29a6a3, _0x2f2586);
      },
      'remove': function (_0x457daa) {
        if (!this.isCapable()) return null;
        window.localStorage.removeItem(_0x457daa);
      },
      'clear': function () {
        if (!this.isCapable()) return null;
        window.localStorage.clear();
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.fullscreen').requires('impact.entity', 'plugins.handlers.size-handler', 'plugins.director').defines(function () {
    ig.Fullscreen = {
      'version': '1.0.0',
      'enableFullscreenButton': !0x1,
      '_isEnabled': 'notChecked',
      'isEnabled': function () {
        return 'notChecked' == this._isEnabled && (this._isEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled || document.msFullscreenEnabled ? !0x0 : !0x1), this._isEnabled;
      },
      'isFullscreen': function () {
        return ig.Fullscreen.isEnabled() && (document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement) ? !0x0 : !0x1;
      },
      'toggleFullscreen': function () {
        ig.Fullscreen.isFullscreen() ? ig.Fullscreen.exitFullscreen() : ig.Fullscreen.requestFullscreen(), ig.sizeHandler.orientationDelayHandler();
        if (ig && ig.visibilityHandler) ig.visibilityHandler.onChange('focus');
        try {
          ig.soundHandler.unlockWebAudio();
        } catch (_0x40724c) {}
      },
      'requestFullscreen': function () {
        var _0x47b21b = document.documentElement;
        _0x47b21b.requestFullscreen ? _0x47b21b.requestFullscreen() : _0x47b21b.webkitRequestFullscreen ? _0x47b21b.webkitRequestFullscreen() : _0x47b21b.mozRequestFullScreen ? _0x47b21b.mozRequestFullScreen() : _0x47b21b.msRequestFullscreen ? _0x47b21b.msRequestFullscreen() : console.log("no request fullscreen method available");
      },
      'exitFullscreen': function () {
        document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.msExitFullscreen ? document.msExitFullscreen() : console.log("no exit fullscreen method available");
      },
      'divs': {}
    }, ig.Director.inject({
      'loadLevel': function (_0x485d83) {
        var _0x355fd4 = ig.Fullscreen.divs,
          _0x660c28;
        for (_0x660c28 in _0x355fd4) _0x355fd4 = ig.domHandler.getElementById('#' + _0x660c28), ig.domHandler.hide(_0x355fd4);
        return this.parent(_0x485d83);
      }
    }), ig.SizeHandler.inject({
      'resize': function () {
        this.parent();
        var _0x3ccb39 = ig.domHandler.getElementById('#canvas'),
          _0xcf6cdc = ig.domHandler.getOffsets(_0x3ccb39),
          _0x3ccb39 = _0xcf6cdc.left,
          _0xcf6cdc = _0xcf6cdc.top,
          _0x5262b2 = Math.min(ig.sizeHandler.scaleRatioMultiplier.x, ig.sizeHandler.scaleRatioMultiplier.y),
          _0xdb4da7 = ig.Fullscreen.divs,
          _0x1793f8;
        for (_0x1793f8 in _0xdb4da7) {
          var _0x3f3ac = ig.domHandler.getElementById('#' + _0x1793f8);
          ig.domHandler.css(_0x3f3ac, {
            'float': 'left',
            'position': 'absolute',
            'left': Math.floor(_0x3ccb39 + _0xdb4da7[_0x1793f8].entity_pos_x * this.scaleRatioMultiplier.x) + 'px',
            'top': Math.floor(_0xcf6cdc + _0xdb4da7[_0x1793f8].entity_pos_y * this.scaleRatioMultiplier.y) + 'px',
            'width': Math.floor(_0xdb4da7[_0x1793f8].width * this.scaleRatioMultiplier.x) + 'px',
            'height': Math.floor(_0xdb4da7[_0x1793f8].height * this.scaleRatioMultiplier.y) + 'px',
            'z-index': 0x3
          }), _0xdb4da7[_0x1793f8]['font-size'] && ig.domHandler.css(_0x3f3ac, {
            'font-size': _0xdb4da7[_0x1793f8]['font-size'] * _0x5262b2 + 'px'
          });
        }
      }
    }), ig.FullscreenButton = ig.Entity.extend({
      'enterImage': null,
      'exitImage': null,
      'isReady': !0x1,
      'zIndex': 0xf423f,
      'identifier': null,
      'prevPos': {
        'x': 0x0,
        'y': 0x0
      },
      'invisImagePath': 'media/graphics/misc/invisible.png',
      'init': function (_0x1af9bb, _0x331296, _0xdf579e) {
        this.parent(_0x1af9bb, _0x331296, _0xdf579e), ig.Fullscreen.isEnabled() && ig.Fullscreen.enableFullscreenButton ? this.enterImage.loaded ? this.initSize() : this.enterImage.loadCallback = function () {
          this.initSize();
        }.bind(this) : this.kill();
      },
      'kill': function () {
        this.parent();
      },
      'destroy': function () {
        this.parent(), console.log('destroy');
      },
      'initSize': function () {
        this.size.x = this.enterImage.width, this.size.y = this.enterImage.height, this.createClickableLayer(), this.isReady = !0x0;
      },
      'createClickableLayer': function () {
        this.identifier = 'fullscreen-button-layer';
        var _0x5c6a3a = ig.domHandler.getElementById('#' + this.identifier);
        _0x5c6a3a ? (ig.domHandler.show(_0x5c6a3a), ig.domHandler.attr(_0x5c6a3a, 'onclick', 'ig.Fullscreen.toggleFullscreen()')) : this.createClickableOutboundLayer();
      },
      'update': function (_0x53dd38, _0x4a5d36) {
        _0x53dd38 = this.pos.x, _0x4a5d36 = this.pos.y;
        if (this.isReady && !(this.prevPos.x === _0x53dd38 && this.prevPos.y === _0x4a5d36)) {
          ig.Fullscreen.divs[this.identifier] = {}, ig.Fullscreen.divs[this.identifier].width = this.size.x, ig.Fullscreen.divs[this.identifier].height = this.size.y, ig.Fullscreen.divs[this.identifier].entity_pos_x = this.pos.x, ig.Fullscreen.divs[this.identifier].entity_pos_y = this.pos.y;
          var _0x2d5b7c = ig.domHandler.getElementById('#' + this.identifier);
          this.updateCSS(_0x2d5b7c), this.prevPos.x = _0x53dd38, this.prevPos.y = _0x4a5d36;
        }
      },
      'draw': function () {
        this.isReady && (ig.Fullscreen.isFullscreen() ? this.exitImage.draw(this.pos.x, this.pos.y) : this.enterImage.draw(this.pos.x, this.pos.y));
      },
      'createClickableOutboundLayer': function () {
        var _0x5e4f77 = this.identifier,
          _0x3534d0 = this.invisImagePath,
          _0x182686 = ig.domHandler.create('div');
        ig.domHandler.attr(_0x182686, 'id', _0x5e4f77), ig.domHandler.attr(_0x182686, 'onclick', 'ig.Fullscreen.toggleFullscreen()');
        var _0x266c9f = ig.domHandler.create('a'),
          _0x1199ab = ig.domHandler.create('img');
        ig.domHandler.css(_0x1199ab, {
          'width': '100%',
          'height': '100%'
        }), ig.domHandler.attr(_0x1199ab, 'src', _0x3534d0), ig.domHandler.addEvent(_0x182686, 'mousemove', ig.input.mousemove.bind(ig.input), !0x1), ig.domHandler.appendChild(_0x266c9f, _0x1199ab), ig.domHandler.appendChild(_0x182686, _0x266c9f), ig.domHandler.appendToBody(_0x182686), ig.Fullscreen.divs[_0x5e4f77] = {}, ig.Fullscreen.divs[_0x5e4f77].width = this.size.x, ig.Fullscreen.divs[_0x5e4f77].height = this.size.y, ig.Fullscreen.divs[_0x5e4f77].entity_pos_x = this.pos.x, ig.Fullscreen.divs[_0x5e4f77].entity_pos_y = this.pos.y, this.updateCSS(_0x182686);
      },
      'updateCSS': function (_0x45b586) {
        var _0x148a14 = Math.min(ig.sizeHandler.scaleRatioMultiplier.x, ig.sizeHandler.scaleRatioMultiplier.y);
        if (ig.ua.mobile) {
          var _0x3f861d = ig.domHandler.getElementById('#canvas'),
            _0x3f861d = ig.domHandler.getOffsets(_0x3f861d),
            _0x42fbbb = _0x3f861d.left,
            _0x508f63 = _0x3f861d.top;
          console.log(_0x3f861d.left), ig.sizeHandler.disableStretchToFitOnMobileFlag ? (_0x3f861d = Math.floor(_0x42fbbb + this.pos.x * ig.sizeHandler.scaleRatioMultiplier.x) + 'px', _0x508f63 = Math.floor(_0x508f63 + this.pos.y * ig.sizeHandler.scaleRatioMultiplier.y) + 'px', _0x42fbbb = Math.floor(this.size.x * ig.sizeHandler.scaleRatioMultiplier.x) + 'px', _0x148a14 = Math.floor(this.size.y * ig.sizeHandler.scaleRatioMultiplier.y) + 'px') : (_0x3f861d = Math.floor(this.pos.x * ig.sizeHandler.sizeRatio.x) + 'px', _0x508f63 = Math.floor(this.pos.y * ig.sizeHandler.sizeRatio.y) + 'px', _0x42fbbb = Math.floor(this.size.x * ig.sizeHandler.sizeRatio.x) + 'px', _0x148a14 = Math.floor(this.size.y * ig.sizeHandler.sizeRatio.y) + 'px');
        } else _0x3f861d = ig.domHandler.getElementById('#canvas'), _0x3f861d = ig.domHandler.getOffsets(_0x3f861d), _0x42fbbb = _0x3f861d.left, _0x508f63 = _0x3f861d.top, ig.sizeHandler.enableStretchToFitOnDesktopFlag ? (_0x3f861d = Math.floor(_0x42fbbb + this.pos.x * ig.sizeHandler.sizeRatio.x) + 'px', _0x508f63 = Math.floor(_0x508f63 + this.pos.y * ig.sizeHandler.sizeRatio.y) + 'px', _0x42fbbb = Math.floor(this.size.x * ig.sizeHandler.sizeRatio.x) + 'px', _0x148a14 = Math.floor(this.size.y * ig.sizeHandler.sizeRatio.y) + 'px') : (_0x3f861d = Math.floor(_0x42fbbb + this.pos.x * _0x148a14) + 'px', _0x508f63 = Math.floor(_0x508f63 + this.pos.y * _0x148a14) + 'px', _0x42fbbb = Math.floor(this.size.x * _0x148a14) + 'px', _0x148a14 = Math.floor(this.size.y * _0x148a14) + 'px');
        ig.domHandler.css(_0x45b586, {
          'float': 'left',
          'position': 'absolute',
          'left': _0x3f861d,
          'top': _0x508f63,
          'width': _0x42fbbb,
          'height': _0x148a14,
          'z-index': 0x3
        });
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.responsive.responsive-utils').requires('impact.system').defines(function () {
    ig.responsive = {
      'width': 0x0,
      'height': 0x0,
      'halfWidth': 0x0,
      'halfHeight': 0x0,
      'originalWidth': 0x0,
      'originalHeight': 0x0,
      'fillScale': 0x1,
      'scaleX': 0x1,
      'scaleY': 0x1,
      'toAnchor': function (_0x4a12fd, _0x9c6f1, _0x32b091) {
        switch (_0x32b091) {
          case 'top-left':
          case 'left-top':
            return this.toAnchorTopLeft(_0x4a12fd, _0x9c6f1);
          case 'top-center':
          case 'center-top':
          case 'top':
            return this.toAnchorTopCenter(_0x4a12fd, _0x9c6f1);
          case 'top-right':
          case 'right-top':
            return this.toAnchorTopRight(_0x4a12fd, _0x9c6f1);
          case 'left-middle':
          case 'middle-left':
          case 'left':
            return this.toAnchorLeftMiddle(_0x4a12fd, _0x9c6f1);
          case 'center-middle':
          case 'middle-center':
          case 'middle':
          case 'center':
            return this.toAnchorCenterMiddle(_0x4a12fd, _0x9c6f1);
          case 'right-middle':
          case 'middle-right':
          case 'right':
            return this.toAnchorRightMiddle(_0x4a12fd, _0x9c6f1);
          case 'bottom-left':
          case 'left-bottom':
            return this.toAnchorBottomLeft(_0x4a12fd, _0x9c6f1);
          case 'bottom-center':
          case 'center-bottom':
          case 'bottom':
            return this.toAnchorBottomCenter(_0x4a12fd, _0x9c6f1);
          case 'bottom-right':
          case 'right-bottom':
            return this.toAnchorBottomRight(_0x4a12fd, _0x9c6f1);
          default:
            return this.toAnchorDefault(_0x4a12fd, _0x9c6f1);
        }
      },
      'toAnchorDefault': function (_0x2f5bf5, _0x30731b) {
        return {
          'x': _0x2f5bf5 + (this.width - this.originalWidth) / 0x2,
          'y': _0x30731b + (this.height - this.originalHeight) / 0x2
        };
      },
      'toAnchorCenterMiddle': function (_0x1e6912, _0x246828) {
        return {
          'x': _0x1e6912 + this.halfWidth,
          'y': _0x246828 + this.halfHeight
        };
      },
      'toAnchorLeftMiddle': function (_0x5e3817, _0x328210) {
        return {
          'x': _0x5e3817,
          'y': _0x328210 + this.halfHeight
        };
      },
      'toAnchorTopCenter': function (_0x37863a, _0x3b6aab) {
        return {
          'x': _0x37863a + this.halfWidth,
          'y': _0x3b6aab
        };
      },
      'toAnchorRightMiddle': function (_0x2128d7, _0x3a0d44) {
        return {
          'x': _0x2128d7 + this.width,
          'y': _0x3a0d44 + this.halfHeight
        };
      },
      'toAnchorBottomCenter': function (_0x17b139, _0x21fa79) {
        return {
          'x': _0x17b139 + this.halfWidth,
          'y': _0x21fa79 + this.height
        };
      },
      'toAnchorTopLeft': function (_0x1c2389, _0x18e8ab) {
        return {
          'x': _0x1c2389,
          'y': _0x18e8ab
        };
      },
      'toAnchorBottomLeft': function (_0x2efb9b, _0x49eb58) {
        return {
          'x': _0x2efb9b,
          'y': _0x49eb58 + this.height
        };
      },
      'toAnchorTopRight': function (_0x2a05e4, _0x16b2d2) {
        return {
          'x': _0x2a05e4 + this.width,
          'y': _0x16b2d2
        };
      },
      'toAnchorBottomRight': function (_0x3b1f24, _0x33327e) {
        return {
          'x': _0x3b1f24 + this.width,
          'y': _0x33327e + this.height
        };
      },
      'fromPos': function () {},
      'fromPosDefault': function () {},
      'fromPosCenterMiddle': function () {},
      'fromPosLeftMiddle': function () {},
      'fromPosTopCenter': function () {},
      'fromPosRightMiddle': function () {},
      'fromPosBottomCenter': function () {},
      'fromPosTopLeft': function () {},
      'fromPosBottomLeft': function () {},
      'fromPosTopRight': function () {},
      'fromPosBottomRight': function () {},
      'drawScaledImage': function (_0x5cae4b, _0x4275a1, _0x3f8285, _0x3da3c8, _0x18ae59, _0xed805d, _0x3efff5) {
        _0xed805d || (_0xed805d = 0x0), _0x3efff5 || (_0x3efff5 = 0x0);
        var _0x4e96c5 = ig.system.context;
        _0x4e96c5.save(), _0x4e96c5.translate(_0x4275a1, _0x3f8285), (0x1 != _0x3da3c8 || 0x1 != _0x18ae59) && _0x4e96c5.scale(_0x3da3c8, _0x18ae59), _0x5cae4b.draw(-_0x5cae4b.width * _0xed805d, -_0x5cae4b.height * _0x3efff5), _0x4e96c5.restore();
      }
    };
  }), ig.baked = !0x0, ig.module('plugins.responsive.responsive-plugin').requires('impact.system', 'impact.entity', 'plugins.handlers.size-handler', 'plugins.responsive.responsive-utils').defines(function () {
    console.log("Responsive Plugin 1.4"), ig.SizeHandler.inject({
      'resize': function () {
        this.parent();
      },
      'sizeCalcs': function () {
        this.originalResolution || (this.originalResolution = new Vector2(this.desktop.actualResolution.x, this.desktop.actualResolution.y), ig.responsive.originalWidth = this.desktop.actualResolution.x, ig.responsive.originalHeight = this.desktop.actualResolution.y);
        var _0x50cb65 = window.innerWidth,
          _0x1e2255 = window.innerHeight,
          _0x4de2dc = _0x50cb65 / _0x1e2255,
          _0x1e7070 = this.originalResolution.x / this.originalResolution.y,
          _0x40363f = 0x0,
          _0x51a80b = 0x0;
        this.windowSize = new Vector2(_0x50cb65, _0x1e2255), _0x4de2dc < _0x1e7070 ? (_0x40363f = this.originalResolution.x, _0x51a80b = _0x40363f / _0x4de2dc, ig.responsive.scaleX = 0x1, ig.responsive.scaleY = _0x51a80b / this.originalResolution.y) : (_0x51a80b = this.originalResolution.y, _0x40363f = _0x51a80b * _0x4de2dc, ig.responsive.scaleX = _0x40363f / this.originalResolution.x, ig.responsive.scaleY = 0x1), this.scaleRatioMultiplier = new Vector2(_0x50cb65 / _0x40363f, _0x1e2255 / _0x51a80b), this.desktop.actualResolution = new Vector2(_0x40363f, _0x51a80b), this.mobile.actualResolution = new Vector2(_0x40363f, _0x51a80b), this.desktop.actualSize = new Vector2(_0x50cb65, _0x1e2255), this.mobile.actualSize = new Vector2(_0x50cb65, _0x1e2255), ig.responsive.width = _0x40363f, ig.responsive.height = _0x51a80b, ig.responsive.halfWidth = _0x40363f / 0x2, ig.responsive.halfHeight = _0x51a80b / 0x2, ig.responsive.fillScale = Math.max(ig.responsive.scaleX, ig.responsive.scaleY);
      },
      'resizeLayers': function () {
        ig.system.resize(ig.sizeHandler.desktop.actualResolution.x, ig.sizeHandler.desktop.actualResolution.y);
        for (var _0x438e5b = 0x0; _0x438e5b < this.coreDivsToResize.length; _0x438e5b++) {
          var _0xa563cc = ig.domHandler.getElementById(this.coreDivsToResize[_0x438e5b]),
            _0x2f4d70 = Math.floor(ig.sizeHandler.windowSize.x / 0x2 - ig.sizeHandler.desktop.actualSize.x / 0x2),
            _0x2d97ab = Math.floor(ig.sizeHandler.windowSize.y / 0x2 - ig.sizeHandler.desktop.actualSize.y / 0x2);
          0x0 > _0x2f4d70 && (_0x2f4d70 = 0x0), 0x0 > _0x2d97ab && (_0x2d97ab = 0x0), ig.domHandler.resizeOffset(_0xa563cc, Math.floor(ig.sizeHandler.desktop.actualSize.x), Math.floor(ig.sizeHandler.desktop.actualSize.y), _0x2f4d70, _0x2d97ab);
        }
        for (var _0x4d863a in this.adsToResize) _0x438e5b = ig.domHandler.getElementById('#' + _0x4d863a), _0xa563cc = ig.domHandler.getElementById('#' + _0x4d863a + '-Box'), _0x2f4d70 = (window.innerWidth - this.adsToResize[_0x4d863a]['box-width']) / 0x2 + 'px', _0x2d97ab = (window.innerHeight - this.adsToResize[_0x4d863a]['box-height']) / 0x2 + 'px', _0x438e5b && ig.domHandler.css(_0x438e5b, {
          'width': window.innerWidth,
          'height': window.innerHeight
        }), _0xa563cc && ig.domHandler.css(_0xa563cc, {
          'left': _0x2f4d70,
          'top': _0x2d97ab
        });
        _0x438e5b = ig.domHandler.getElementById('#canvas'), _0xa563cc = ig.domHandler.getOffsets(_0x438e5b), _0x438e5b = _0xa563cc.left, _0xa563cc = _0xa563cc.top, _0x2f4d70 = Math.min(ig.sizeHandler.scaleRatioMultiplier.x, ig.sizeHandler.scaleRatioMultiplier.y);
        for (_0x4d863a in this.dynamicClickableEntityDivs) _0x2d97ab = ig.domHandler.getElementById('#' + _0x4d863a), ig.domHandler.css(_0x2d97ab, {
          'float': 'left',
          'position': 'absolute',
          'left': Math.floor(_0x438e5b + this.dynamicClickableEntityDivs[_0x4d863a].entity_pos_x * this.scaleRatioMultiplier.x) + 'px',
          'top': Math.floor(_0xa563cc + this.dynamicClickableEntityDivs[_0x4d863a].entity_pos_y * this.scaleRatioMultiplier.y) + 'px',
          'width': Math.floor(this.dynamicClickableEntityDivs[_0x4d863a].width * this.scaleRatioMultiplier.x) + 'px',
          'height': Math.floor(this.dynamicClickableEntityDivs[_0x4d863a].height * this.scaleRatioMultiplier.y) + 'px',
          'z-index': 0x3
        }), this.dynamicClickableEntityDivs[_0x4d863a]['font-size'] && ig.domHandler.css(_0x2d97ab, {
          'font-size': this.dynamicClickableEntityDivs[_0x4d863a]['font-size'] * _0x2f4d70 + 'px'
        });
        $('#ajaxbar').width(this.windowSize.x), $('#ajaxbar').height(this.windowSize.y);
      },
      'reorient': function () {
        ig.ua.mobile ? (this.resize(), this.resizeAds()) : this.resize(), ('undefined' !== typeof BABYLON || window.BABYLON) && this.resizeBabylon(), ig.game && (ig.game.update(), ig.game.draw());
      },
      'resizeBabylon': function () {
        var _0x1358b2 = window.innerWidth,
          _0x2e8010 = window.innerHeight,
          _0x19e7dd = _0x1358b2 / _0x2e8010,
          _0x371a7a = ig.responsive.originalWidth,
          _0x462f28 = ig.responsive.originalHeight,
          _0x22dc12 = _0x371a7a / _0x462f28,
          _0x3e43b9 = Math.max(_0x371a7a, _0x462f28);
        ig.ua.mobile && (_0x3e43b9 = 0x280), minSize = Math.min(_0x371a7a, _0x462f28), _0x19e7dd > _0x22dc12 ? (_0x2e8010 > _0x462f28 && (_0x2e8010 = _0x462f28), _0x1358b2 = Math.floor(window.innerWidth / window.innerHeight * _0x2e8010), _0x1358b2 > _0x3e43b9 && (_0x1358b2 = _0x3e43b9), _0x2e8010 = Math.floor(window.innerHeight / window.innerWidth * _0x1358b2)) : (_0x1358b2 > _0x371a7a && (_0x1358b2 = _0x371a7a), _0x2e8010 = Math.floor(window.innerHeight / window.innerWidth * _0x1358b2), _0x2e8010 > _0x3e43b9 && (_0x2e8010 = _0x3e43b9), _0x1358b2 = Math.floor(window.innerWidth / window.innerHeight * _0x2e8010)), _0x371a7a = _0x19e7dd = 0x1, window.innerWidth > _0x3e43b9 && (_0x19e7dd = window.innerWidth / _0x3e43b9), window.innerHeight > _0x3e43b9 && (_0x371a7a = window.innerHeight / _0x3e43b9), wgl.system.engine.setSize(_0x1358b2, _0x2e8010), wgl.system.engine.resize(), wgl.system.engine.setHardwareScalingLevel(Math.max(_0x19e7dd, _0x371a7a)), ig.gameScene.zoomFactor = 0x1, ig.ua.mobile && minSize < _0x3e43b9 && (ig.gameScene.zoomFactor = _0x3e43b9 / minSize), ig.wglW = _0x1358b2, ig.wglH = _0x2e8010, ig.wglInnerW = window.innerWidth, ig.wglInnerH = window.innerHeight, console.log("babylon renderSize : ", wgl.system.engine.getRenderWidth(), wgl.system.engine.getRenderHeight(), "hwScalingLevel : ", wgl.system.engine.getHardwareScalingLevel());
      }
    }), ig.Entity.inject({
      'init': function (_0x3352d4, _0x401362, _0xfa9d84) {
        this.parent(_0x3352d4, _0x401362, _0xfa9d84), !this.anchorType && !_0xfa9d84.anchorType && (this.anchorType = 'none'), this.anchoredPositionX = _0x3352d4, this.anchoredPositionY = _0x401362;
      },
      'setAnchoredPosition': function (_0x213b6f, _0x4b2a50, _0x10be2b) {
        _0x10be2b || (_0x10be2b = 'default'), this.anchorType = _0x10be2b, this.anchoredPositionX = _0x213b6f, this.anchoredPositionY = _0x4b2a50;
      },
      'update': function () {
        this.parent();
        if ('' != this.anchorType && 'none' != this.anchorType) {
          var _0x531114 = ig.responsive.toAnchor(this.anchoredPositionX, this.anchoredPositionY, this.anchorType);
          this.pos.x = _0x531114.x, this.pos.y = _0x531114.y;
        }
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.tiled.util.rectangle').defines(function () {
    Rectangle = ig.Class.extend({
      'init': function (_0x189bf5, _0x4196d4, _0x45e873, _0x3c2514) {
        this.x = _0x189bf5 || 0x0, this.y = _0x4196d4 || 0x0, this.w = _0x45e873 || 0x0, this.h = _0x3c2514 || 0x0;
      },
      'contains': function (_0x847035, _0x5cc732) {
        var _0x2357b0 = this.w + this.x,
          _0x7f38c8 = this.h + this.y;
        return _0x847035 < this.x || _0x5cc732 < this.y ? !0x1 : (_0x2357b0 < this.x || _0x2357b0 > _0x847035) && (_0x7f38c8 < this.y || _0x7f38c8 > _0x5cc732);
      },
      'translate': function (_0x27aa54, _0x2b1f9a) {
        this.x += _0x27aa54, this.y += _0x2b1f9a;
      },
      'clone': function () {
        return new Rectangle(this.x, this.y, this.w, this.h);
      },
      'atOrigin': function (_0xcb0933, _0xfc88e3) {
        return new Rectangle(0x0, 0x0, _0xcb0933, _0xfc88e3);
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.tiled.layer').requires('plugins.tiled.util.rectangle').defines(function () {
    Layer = ig.Class.extend({
      'init': function (_0x37e6e9, _0x3d3669) {
        this.name = _0x37e6e9, this.visible = !0x0, this.map = null, this.opacity = 0x1, this.bounds = _0x3d3669 || new Rectangle(), this.properties = {};
      },
      'rotate': function () {
        throw Error("Not implemented");
      },
      'mirror': function () {
        throw Error("Not implemented");
      },
      'clone': function () {
        throw Error("Not implemented");
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.tiled.doodad-group').requires('plugins.tiled.layer', 'plugins.tiled.util.rectangle').defines(function () {
    DoodadGroup = Layer.extend({
      'init': function (_0x531c35, _0x4a73a2) {
        this.parent(_0x531c35, _0x4a73a2), this.doodads = [];
      },
      'addDoodad': function (_0x196525) {
        _0x196525.group = this, this.doodads.push(_0x196525);
      },
      'removeDoodad': function (_0xd42832) {
        for (var _0x132a3b = 0x0; _0x132a3b < this.doodads.length; _0x132a3b++) if (this.doodads[_0x132a3b] === _0xd42832) {
          this.doodads.splice(_0x132a3b, 0x1), _0xd42832.group = null;
          break;
        }
      },
      'getDoodadAt': function (_0x47380e, _0x22b2c4) {
        this.getDoodadNear(_0x47380e, _0x22b2c4, 0x0);
      },
      'getDoodadNear': function () {},
      'clone': function () {
        var _0x3733ea = new DoodadGroup();
        return _0x3733ea.name = this.name, _0x3733ea.visible = this.visible, _0x3733ea.map = this.map, _0x3733ea.opacity = this.opacity, _0x3733ea.bounds = this.bounds.clone(), _0x3733ea.properties = $.extend({}, this.properties), _0x3733ea.doodads = this.doodads.slice(), _0x3733ea;
      },
      'toXML': function () {},
      'fromElement': function () {}
    });
  }), ig.baked = !0x0, ig.module('plugins.tiled.cell').defines(function () {
    Cell = ig.Class.extend({
      'FLIPPED_HORIZONTALLY_FLAG': 0x80000000,
      'FLIPPED_VERTICALLY_FLAG': 0x40000000,
      'FLIPPED_ANTIDIAGONALLY_FLAG': 0x20000000,
      'init': function (_0x4d6e9a, _0x256c9c) {
        this.tile = _0x4d6e9a, this.flipped = _0x256c9c || {
          'horizontally': !0x1,
          'vertically': !0x1,
          'antidiagonally': !0x1
        };
      },
      'getFlippedGlobalId': function () {},
      'getFlippedFrom': function (_0x19c20e) {
        return {
          'horizontally': 0x0 !== (_0x19c20e & this.FLIPPED_HORIZONTALLY_FLAG),
          'vertically': 0x0 !== (_0x19c20e & this.FLIPPED_VERTICALLY_FLAG),
          'antidiagonally': 0x0 !== (_0x19c20e & this.FLIPPED_ANTIDIAGONALLY_FLAG)
        };
      },
      'getGlobalIdFrom': function (_0x2ab1a4) {
        return _0x2ab1a4 & ~(this.FLIPPED_HORIZONTALLY_FLAG | this.FLIPPED_VERTICALLY_FLAG | this.FLIPPED_ANTIDIAGONALLY_FLAG);
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.tiled.util.base64').defines(function () {
    Base64 = {
      'alphabet': 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
      'decode': function (_0x20cd82) {
        var _0x3e901b = this.alphabet.indexOf(_0x20cd82.charAt(_0x20cd82.length - 0x1)),
          _0x26dd73 = this.alphabet.indexOf(_0x20cd82.charAt(_0x20cd82.length - 0x2)),
          _0x79576b = 0x3 * (_0x20cd82.length / 0x4);
        0x40 == _0x3e901b && _0x79576b--, 0x40 == _0x26dd73 && _0x79576b--;
        var _0x3e901b = [],
          _0x51531c,
          _0x3dae10,
          _0x3f5141,
          _0x35c58d,
          _0x8694f0 = 0x0,
          _0x1b0036 = 0x0;
        _0x20cd82 = _0x20cd82.replace(/[^A-Za-z0-9\+\/\=]/g, '');
        for (_0x8694f0 = 0x0; _0x8694f0 < _0x79576b; _0x8694f0 += 0x3) _0x51531c = this.alphabet.indexOf(_0x20cd82.charAt(_0x1b0036++)), _0x3dae10 = this.alphabet.indexOf(_0x20cd82.charAt(_0x1b0036++)), _0x26dd73 = this.alphabet.indexOf(_0x20cd82.charAt(_0x1b0036++)), _0x35c58d = this.alphabet.indexOf(_0x20cd82.charAt(_0x1b0036++)), _0x51531c = _0x51531c << 0x2 | _0x3dae10 >> 0x4, _0x3dae10 = (_0x3dae10 & 0xf) << 0x4 | _0x26dd73 >> 0x2, _0x3f5141 = (_0x26dd73 & 0x3) << 0x6 | _0x35c58d, _0x3e901b[_0x8694f0] = _0x51531c, 0x40 != _0x26dd73 && (_0x3e901b[_0x8694f0 + 0x1] = _0x3dae10), 0x40 != _0x35c58d && (_0x3e901b[_0x8694f0 + 0x2] = _0x3f5141);
        return _0x3e901b;
      },
      'encode': function (_0xfa74ec) {
        for (var _0x8b19aa = '', _0xa2f892, _0x3d181f, _0x3c8c6b, _0x54aed1, _0x29d0b3, _0x5439c5, _0x358a86 = 0x0, _0x15b894 = 0x0, _0x358a86 = 0x0; _0x358a86 < _0xfa74ec.length; _0x358a86 += 0x3) _0xa2f892 = _0xfa74ec[_0x15b894++], _0x3d181f = _0xfa74ec[_0x15b894++], _0x3c8c6b = _0xfa74ec[_0x15b894++], _0x54aed1 = _0xa2f892 >> 0x2, _0xa2f892 = (_0xa2f892 & 0x3) << 0x4 | _0x3d181f >> 0x4, _0x29d0b3 = (_0x3d181f & 0xf) << 0x2 | _0x3c8c6b >> 0x6, _0x5439c5 = _0x3c8c6b & 0x3f, isNaN(_0x3d181f) ? _0x5439c5 = _0x29d0b3 = 0x40 : isNaN(_0x3c8c6b) && (_0x5439c5 = 0x40), _0x8b19aa += this.alphabet.charAt(_0x54aed1), _0x8b19aa += this.alphabet.charAt(_0xa2f892), _0x8b19aa += this.alphabet.charAt(_0x29d0b3), _0x8b19aa += this.alphabet.charAt(_0x5439c5);
        return _0x8b19aa;
      }
    };
  }), ig.baked = !0x0, ig.module('plugins.tiled.util.util').defines(function () {
    Util = {
      'format': function (_0x3c0768) {
        var _0x1737d4 = _0x3c0768,
          _0x4f59dd;
        for (_0x4f59dd in arguments) 0x0 != _0x4f59dd && (_0x1737d4 = _0x1737d4.replace('{' + (_0x4f59dd - 0x1) + '}', arguments[_0x4f59dd]));
        return _0x1737d4;
      },
      'startsWith': function (_0x3157b1, _0xf2940) {
        return 0x0 === _0x3157b1.indexOf(_0xf2940);
      },
      'endsWith': function (_0x500892, _0x5594bf) {
        return -0x1 !== _0x500892.indexOf(_0x5594bf, _0x500892.length - _0x5594bf.length);
      },
      'size': function (_0x3a6183) {
        if (null == _0x3a6183) return 0x0;
        if (_0x3a6183.length === parseInt(_0x3a6183.length)) return _0x3a6183.length;
        if (Object.keys) return Object.keys(_0x3a6183).length;
        var _0x45e558 = 0x0,
          _0x4ef21f;
        for (_0x4ef21f in _0x3a6183) _0x3a6183.hasOwnProperty(_0x4ef21f) && _0x45e558++;
        return _0x45e558;
      },
      'urlFor': function (_0x595acf, _0x455ab0) {
        return this.startsWith(_0x595acf, 'http') || this.startsWith(_0x595acf, '/') ? _0x595acf : (_0x455ab0 || '.') + '/' + _0x595acf;
      }
    };
  }), ig.baked = !0x0, ig.module('plugins.tiled.tile-layer').requires('plugins.tiled.cell', 'plugins.tiled.layer', 'plugins.tiled.util.base64', 'plugins.tiled.util.rectangle', 'plugins.tiled.util.util').defines(function () {
    TileLayer = Layer.extend({
      'Format': {
        'XML': 'xml',
        'BASE64': 'base64',
        'BASE64_GZIP': 'base64gzip',
        'CSV': 'csv'
      },
      'init': function (_0x1890c2, _0x2042fe) {
        this.parent(_0x1890c2, _0x2042fe), this.Cell = new Cell(), this.format = this.Format.XML, this.cells = Array(this.bounds.w * this.bounds.h), this.tileProperties = {};
      },
      'rotate': function (_0x476098) {
        var _0x2ea5e1,
          _0x32df4f = 0x0,
          _0x22ce25 = 0x0;
        switch (_0x476098) {
          case 0x5a:
            _0x2ea5e1 = new Rectangle(this.bounds.x, this.bounds.y, this.bounds.h, this.bounds.w), _0x32df4f = this.bounds.h - 0x1;
            break;
          case 0xb4:
            _0x2ea5e1 = this.bounds, _0x32df4f = this.bounds.w - 0x1, _0x22ce25 = this.bounds.h - 0x1;
            break;
          case 0x10e:
            _0x2ea5e1 = new Rectangle(this.bounds.x, this.bounds.y, this.bounds.h, this.bounds.w), _0x22ce25 = this.bounds.w - 0x1;
            break;
          default:
            throw Error("Unsupported rotation angle: " + _0x476098);
        }
        var _0x3fb263 = Array(this.bounds.w * this.bounds.h),
          _0x451a80 = _0x476098 * Math.PI / 0xb4;
        _0x476098 = Math.round(Math.cos(_0x451a80));
        for (var _0x451a80 = Math.round(Math.sin(_0x451a80)), _0x1d875f = 0x0; _0x1d875f < this.bounds.h; _0x1d875f++) for (var _0x5c3d2e = 0x0; _0x5c3d2e < this.bounds.w; _0x5c3d2e++) _0x3fb263[(_0x5c3d2e * _0x451a80 + _0x1d875f * _0x476098 + _0x22ce25) * _0x2ea5e1.w + (_0x5c3d2e * _0x476098 - _0x1d875f * _0x451a80 + _0x32df4f)] = this.cells[_0x1d875f * this.bounds.w + _0x5c3d2e];
        this.bounds = _0x2ea5e1, this.cells = _0x3fb263;
      },
      'mirror': function (_0x1c234d) {
        switch (_0x1c234d) {
          case 'horizontal':
            break;
          case 'vertical':
            break;
          default:
            throw Error("Unsupported mirror direction: " + _0x1c234d);
        }
      },
      'setCellAt': function (_0x150121, _0x2468a7, _0x492477) {
        this.bounds.contains(_0x150121, _0x2468a7) && (this.cells[(_0x2468a7 - this.bounds.y) * this.bounds.w + (_0x150121 - this.bounds.x)] = _0x492477);
      },
      'getCellAt': function (_0xee41cf, _0x4094db) {
        var _0x30e13e = _0xee41cf - this.bounds.x,
          _0x4f3949 = _0x4094db - this.bounds.y;
        return this.bounds.contains(_0xee41cf, _0x4094db) ? this.cells[_0x4f3949 * this.bounds.w + _0x30e13e] : null;
      },
      'removeTile': function (_0x53f30d) {
        for (var _0x9a9068 = 0x0; _0x9a9068 < this.cells.length; _0x9a9068++) this.cells[_0x9a9068] && this.cells[_0x9a9068].tile === _0x53f30d && (this.cells[_0x9a9068] = null);
      },
      'clone': function () {
        var _0x19a201 = new TileLayer();
        return _0x19a201.name = this.name, _0x19a201.visible = this.visible, _0x19a201.map = this.map, _0x19a201.opacity = this.opacity, _0x19a201.bounds = this.bounds.clone(), _0x19a201.properties = $.extend({}, this.properties), _0x19a201.cells = this.cells.slice(), _0x19a201.tileProperties = $.extend({}, this.tileProperties), _0x19a201;
      },
      'toXML': function (_0x9f93e5) {
        var _0xcfc405 = $('<layer>', _0x9f93e5).attr({
          'name': this.name,
          'width': this.bounds.w,
          'height': this.bounds.h
        });
        if (Util.size(this.properties)) {
          var _0x2dfe20 = $('<properties>', _0x9f93e5);
          $.each(this.properties, function (_0x5d449a, _0x4d6d40) {
            var _0x569b57 = $('<property>', _0x9f93e5).attr({
              'name': _0x5d449a,
              'value': _0x4d6d40
            });
            _0x2dfe20.append(_0x569b57);
          }), _0xcfc405.append(_0x2dfe20);
        }
        var _0x2fdc29, _0x21e6db;
        switch (this.format) {
          case this.Format.XML:
            break;
          case this.Format.BASE64:
            _0x21e6db = 'base64';
            break;
          case this.Format.BASE64_GZIP:
            _0x21e6db = 'base64', _0x2fdc29 = 'gzip';
            break;
          case this.Format.CSV:
            _0x21e6db = 'csv';
            break;
          default:
            throw Error("Unsupported format: " + this.format);
        }
        var _0x2551bc = $('<data>', _0x9f93e5);
        _0x2fdc29 && _0x2551bc.attr('compression', _0x2fdc29), _0x21e6db && _0x2551bc.attr('encoding', _0x21e6db);
        if (this.format === this.Format.XML) $.each(this.cells, function (_0x545aca, _0x50d541) {
          var _0x1b7b0b = $('<tile>', _0x9f93e5).attr('gid', _0x50d541 ? _0x50d541.tile.getGlobalId() : 0x0);
          _0x2551bc.append(_0x1b7b0b);
        });else {
          if (this.format === this.Format.CSV) _0x2fdc29 = $.map(this.cells, function (_0x4914bf) {
            return _0x4914bf ? _0x4914bf.tile.getGlobalId() : 0x0;
          }), _0x2551bc.text(_0x2fdc29.join(','));else {
            var _0x2c6357 = [];
            $.each(this.cells, function (_0x287098, _0x252d66) {
              var _0x4b24f8 = _0x252d66 ? _0x252d66.tile.getGlobalId() : 0x0;
              _0x2c6357.push(_0x4b24f8 >> 0x0 & 0xff), _0x2c6357.push(_0x4b24f8 >> 0x8 & 0xff), _0x2c6357.push(_0x4b24f8 >> 0x10 & 0xff), _0x2c6357.push(_0x4b24f8 >> 0x18 & 0xff);
            });
            var _0x4ec50d;
            switch (this.format) {
              case this.Format.BASE64:
                _0x4ec50d = Base64.encode(_0x2c6357);
            }
            _0x2551bc.text(_0x4ec50d);
          }
        }
        return _0xcfc405.append(_0x2551bc), _0xcfc405;
      },
      'fromElement': function (_0x40f15e, _0x5ebe07) {
        var _0x54f7bb = $(_0x40f15e),
          _0x200c6c = new TileLayer();
        _0x200c6c.name = _0x54f7bb.attr('name'), _0x200c6c.bounds = new Rectangle(0x0, 0x0, parseInt(_0x54f7bb.attr('width')), parseInt(_0x54f7bb.attr('height'))), _0x200c6c.visible = '0' !== _0x54f7bb.attr('visible'), _0x200c6c.opacity = parseFloat(_0x54f7bb.attr('opacity')), _0x200c6c.opacity = isNaN(_0x200c6c.opacity) ? 0x1 : Math.min(Math.max(0x0, _0x200c6c.opacity), 0x1), _0x54f7bb.find("properties:first property").each(function () {
          _0x200c6c.properties[$(this).attr('name')] = $(this).attr('value');
        });
        var _0x44d75b = this;
        return _0x54f7bb.find('data:first').each(function () {
          var _0x55286e = $(this),
            _0x50dfc6 = [],
            _0x23b7e4 = _0x55286e.attr('encoding');
          if (_0x23b7e4) switch (_0x200c6c.format = _0x23b7e4, _0x23b7e4) {
            case 'base64':
              _0x23b7e4 = $.trim(_0x55286e.text()), _0x23b7e4 = Base64.decode(_0x23b7e4);
              if (_0x55286e = _0x55286e.attr('compression')) switch (_0x200c6c.format += _0x55286e, _0x55286e) {
                default:
                  throw Error("Unsupported format: " + _0x200c6c.format);
              }
              for (var _0x55286e = [], _0x29d357 = 0x0; _0x29d357 < _0x23b7e4.length; _0x29d357 += 0x4) {
                var _0x380583 = 0x0,
                  _0x380583 = _0x380583 + (_0x23b7e4[_0x29d357 + 0x0] << 0x0),
                  _0x380583 = _0x380583 + (_0x23b7e4[_0x29d357 + 0x1] << 0x8),
                  _0x380583 = _0x380583 + (_0x23b7e4[_0x29d357 + 0x2] << 0x10),
                  _0x380583 = _0x380583 + (_0x23b7e4[_0x29d357 + 0x3] << 0x18);
                _0x55286e.push(_0x380583);
              }
              _0x50dfc6 = _0x55286e;
              break;
            case 'csv':
              var _0x17fda7 = [];
              $.each(_0x55286e.text().split(','), function () {
                _0x17fda7.push(parseInt(this));
              }), _0x50dfc6 = _0x17fda7;
              break;
            default:
              throw Error("Unsupported encoding: " + _0x23b7e4);
          } else $(this).children('tile').each(function () {
            _0x50dfc6.push(parseInt($(this).attr('gid')) || null);
          });
          $.each(_0x50dfc6, function (_0x15859b, _0x3c8c1e) {
            var _0x8efb66 = _0x44d75b.Cell.getGlobalIdFrom(_0x3c8c1e),
              _0x1c9cf9 = _0x15859b % _0x200c6c.bounds.w,
              _0x46b514 = Math.floor(_0x15859b / _0x200c6c.bounds.w),
              _0xbbe661 = _0x5ebe07.findTileSet(_0x8efb66);
            _0xbbe661 ? (_0x8efb66 = new Cell(_0xbbe661.getTileAt(_0x8efb66 - _0xbbe661.firstGlobalId), _0x44d75b.Cell.getFlippedFrom(_0x3c8c1e)), _0x200c6c.setCellAt(_0x1c9cf9, _0x46b514, _0x8efb66)) : _0x200c6c.setCellAt(_0x1c9cf9, _0x46b514, null);
          });
        }), _0x200c6c;
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.tiled.tile').requires('plugins.tiled.util.rectangle', 'plugins.tiled.util.util').defines(function () {
    Tile = ig.Class.extend({
      'init': function () {
        this.tileSet = this.id = null, this.bounds = new Rectangle(), this.imageInfo = {
          'source': null,
          'w': 0x0,
          'h': 0x0
        }, this.properties = {};
      },
      'getGlobalId': function () {
        return this.tileSet.firstGlobalId + this.id;
      },
      'toXML': function (_0x56a690) {
        var _0x2696c9 = $('<tile>', _0x56a690).attr('id', this.id);
        if (Util.size(this.properties)) {
          var _0x393baf = $('<properties>', _0x56a690);
          $.each(this.properties, function (_0x1228a0, _0x4a01fc) {
            var _0x21be2c = $('<property>', _0x56a690).attr({
              'name': _0x1228a0,
              'value': _0x4a01fc
            });
            _0x393baf.append(_0x21be2c);
          }), _0x2696c9.append(_0x393baf);
        }
        return _0x2696c9;
      },
      'fromElement': function (_0x1aa022) {
        _0x1aa022 = $(_0x1aa022);
        var _0x1c5014 = new Tile();
        return _0x1c5014.id = _0x1aa022.attr('id') || null, _0x1aa022.find("properties:first property").each(function () {
          _0x1c5014.properties[$(this).attr('name')] = $(this).attr('value');
        }), _0x1c5014;
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.tiled.tile-set').requires('plugins.tiled.util.rectangle', 'plugins.tiled.util.util', 'plugins.tiled.tile').defines(function () {
    TileSet = ig.Class.extend({
      'init': function (_0x15b277) {
        this.Tile = new Tile(), this.firstGlobalId = _0x15b277 || 0x1, this.name = null, this.tileInfo = {
          'w': 0x0,
          'h': 0x0,
          'spacing': 0x0,
          'margin': 0x0
        }, this.imageInfo = {
          'source': null,
          'w': 0x0,
          'h': 0x0
        }, this.tiles = [], this.properties = {};
      },
      'addTile': function (_0x236192) {
        if (null !== _0x236192.id) throw Error("Tile cannot have an id");
        return _0x236192.id = this.tiles.length, _0x236192.tileSet = this, this.tiles.push(_0x236192), _0x236192.id;
      },
      'getTileAt': function (_0x2d8eb3) {
        return this.tiles[_0x2d8eb3];
      },
      'removeTileAt': function (_0x35ce65) {
        this.tiles[_0x35ce65] = null;
      },
      'getMaxTileId': function () {
        return this.tiles.length - 0x1;
      },
      'generateTiles': function () {
        for (var _0x420011 = this.tileInfo, _0x4fdbbf = this.imageInfo, _0xa8e18b = _0x420011.margin; _0xa8e18b < _0x4fdbbf.h; _0xa8e18b += _0x420011.h + _0x420011.spacing) for (var _0x372ede = _0x420011.margin; _0x372ede < _0x4fdbbf.w; _0x372ede += _0x420011.w + _0x420011.spacing) {
          var _0x355817 = this.getTileAt(_0xa8e18b * _0x420011.w + _0x372ede) || new Tile();
          _0x355817.imageInfo = _0x4fdbbf, _0x355817.bounds.x = _0x372ede, _0x355817.bounds.y = _0xa8e18b, _0x355817.bounds.w = _0x420011.w, _0x355817.bounds.h = _0x420011.h, _0x355817.id || this.addTile(_0x355817);
        }
      },
      'toXML': function (_0x1e92a1, _0x22d125) {
        var _0x14a8f8 = $('<tileset>', _0x1e92a1).attr({
          'firstgid': this.firstGlobalId,
          'name': this.name
        });
        if (_0x14a8f8.source) _0x14a8f8.attr('source', _0x14a8f8.source);else {
          _0x14a8f8.attr({
            'tilewidth': this.tileInfo.w,
            'tileheight': this.tileInfo.h,
            'spacing': this.tileInfo.spacing,
            'margin': this.tileInfo.margin
          });
          var _0x67d8d7 = $('<image>', _0x1e92a1).attr({
            'source': this.imageInfo.source,
            'width': this.imageInfo.w,
            'height': this.imageInfo.h
          });
          _0x14a8f8.append(_0x67d8d7);
          if (Util.size(this.properties)) {
            var _0x335c45 = $('<properties>', _0x1e92a1);
            $.each(this.properties, function (_0x38fcf6, _0x5e1437) {
              var _0x2a226d = $('<property>', _0x1e92a1).attr({
                'name': _0x38fcf6,
                'value': _0x5e1437
              });
              _0x335c45.append(_0x2a226d);
            }), _0x14a8f8.append(_0x335c45);
          }
          $.each(this.tiles, function (_0x20ebe1, _0x165f2b) {
            var _0x49ac82 = _0x165f2b.toXML(_0x1e92a1, _0x22d125);
            _0x14a8f8.append(_0x49ac82);
          });
        }
        return _0x14a8f8;
      },
      'fromElement': function (_0x4631a0, _0x3c8b8e) {
        _0x3c8b8e = $.extend(!0x0, {
          'dir': '.'
        }, _0x3c8b8e);
        var _0x5c06cc = $(_0x4631a0),
          _0x3c51cd = parseInt(_0x5c06cc.attr('firstgid')),
          _0x45c525 = new TileSet(_0x3c51cd),
          _0x3f4ea2 = function (_0x44273d) {
            _0x45c525.name = _0x44273d.attr('name'), _0x45c525.tileInfo = {
              'w': parseInt(_0x44273d.attr('tilewidth')) || 0x1,
              'h': parseInt(_0x44273d.attr('tileheight')) || 0x1,
              'spacing': parseInt(_0x44273d.attr('spacing')) || 0x0,
              'margin': parseInt(_0x44273d.attr('margin')) || 0x0
            };
            var _0x30728a = _0x44273d.children('image:first'),
              _0x520086 = _0x30728a.attr('source');
            if (!_0x520086) throw Error("'image' requires 'source' attribute");
            _0x45c525.imageInfo = {
              'source': _0x520086,
              'w': parseInt(_0x30728a.attr('width')) || 0x0,
              'h': parseInt(_0x30728a.attr('height')) || 0x0
            }, _0x44273d.children('tiles').each(function () {
              var _0x1d4297 = this.Tile.fromElement(this, _0x3c8b8e);
              if (0x0 > _0x1d4297.id) throw Error("Invalid (negative) tile id: " + _0x1d4297.id);
              if (_0x1d4297.id === _0x45c525.tiles.length) _0x45c525.addTile(_0x1d4297);else throw Error("Invalid (non-consecutive) tile id: " + _0x1d4297.id);
            }), _0x45c525.generateTiles();
          };
        _0x45c525.source = _0x5c06cc.attr('source');
        var _0x59c0c7 = $.Deferred();
        return _0x45c525.source ? (_0x5c06cc = Util.urlFor(_0x45c525.source, _0x3c8b8e.dir), $.get(_0x5c06cc, {}, null, 'xml').done(function (_0x37a412) {
          _0x37a412 = $(_0x37a412).find('tileset'), _0x3f4ea2(_0x37a412), _0x59c0c7.resolve(_0x45c525);
        })) : (_0x3f4ea2(_0x5c06cc), _0x59c0c7.resolve(_0x45c525)), _0x59c0c7;
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.tiled.map').requires('plugins.tiled.doodad-group', 'plugins.tiled.tile-layer', 'plugins.tiled.tile-set', 'plugins.tiled.util.rectangle', 'plugins.tiled.util.util').defines(function () {
    ig.TileMap = ig.Class.extend({
      'Orientation': {
        'ORTHOGONAL': 'orthogonal',
        'ISOMETRIC': 'isometric',
        'STAGGERED': 'staggered'
      },
      'init': function (_0x5ef20c, _0x1f47d3, _0xa60b85, _0xe2b6c, _0x545070, _0x35ef2e) {
        this.TileLayer = new TileLayer(), this.TileSet = new TileSet(), this.Rectangle = new Rectangle(), this.version = null, this.bounds = this.Rectangle.atOrigin(_0x1f47d3, _0xa60b85), this.orientation = _0x5ef20c || this.Orientation.ORTHOGONAL, this.tileInfo = {
          'w': _0xe2b6c || 0x0,
          'h': _0x545070 || 0x0
        }, this.layers = [], this.tileSets = [], this.properties = {}, this.hexSideLength = _0x35ef2e;
      },
      'fitBoundsToLayers': function () {},
      'addLayer': function (_0x5e288b) {
        return _0x5e288b.map = this, this.layers.push(_0x5e288b);
      },
      'setLayerAt': function (_0x25a590, _0x24da1a) {
        _0x24da1a.map = this, this.layers[_0x25a590] = _0x24da1a;
      },
      'insertLayerAt': function (_0x46c6d0, _0x3d4d84) {
        _0x3d4d84.map = this, this.layers.splice(_0x46c6d0, 0x0, _0x3d4d84);
      },
      'removeLayerAt': function (_0x2a3f4c) {
        var _0x3f67dc = this.layers[_0x2a3f4c];
        return this.layers.splice(_0x2a3f4c, 0x1), _0x3f67dc;
      },
      'removeAllLayers': function () {
        this.layers.length = 0x0;
      },
      'getTileLayers': function () {
        var _0x41c566 = [];
        return $.each(this.layers, function (_0x4253e4, _0x48f801) {
          _0x48f801 instanceof TileLayer && _0x41c566.push(_0x48f801);
        }), _0x41c566;
      },
      'getDoodadGroups': function () {
        var _0x491388 = [];
        return $.each(this.layers, function (_0x140dce, _0x3b0926) {
          _0x3b0926 instanceof DoodadGroup && _0x491388.push(_0x3b0926);
        }), _0x491388;
      },
      'addTileSet': function (_0x9547b7) {
        if (null === _0x9547b7) throw Error("TileSet cannot be null");
        -0x1 < $.inArray(_0x9547b7, this.tileSets) || this.tileSets.push(_0x9547b7);
      },
      'removeTileSetAt': function (_0x2e6a18) {
        if (!(_0x2e6a18 >= this.tileSets.length)) {
          var _0x14efa2 = this;
          $.each(this.tileSets[_0x2e6a18].tiles, function (_0x5e349d, _0x3c52f4) {
            $.each(_0x14efa2.layers, function (_0x2edaaf, _0x19390b) {
              _0x19390b instanceof TileLayer && _0x19390b.removeTile(_0x3c52f4);
            });
          }), this.tileSets.splice(_0x2e6a18, 0x1);
        }
      },
      'findTileSet': function (_0x212add) {
        var _0x355473 = null;
        return $.each(this.tileSets, function (_0x375b4e, _0x30644c) {
          this.firstGlobalId <= _0x212add && (_0x355473 = _0x30644c);
        }), _0x355473;
      },
      'findTile': function (_0x18a1f3) {
        var _0xd37a77 = this.findTileSet(_0x18a1f3);
        return _0xd37a77.tiles[_0x18a1f3 - _0xd37a77.firstGlobalId];
      },
      'getMaxGlobalId': function () {
        if (!this.tileSets.length) return 0x0;
        var _0xb3fc4a = this.tileSets[this.tileSets.length - 0x1];
        return _0xb3fc4a.firstGlobalId + _0xb3fc4a.tiles.length - 0x1;
      },
      'swapTileSets': function () {},
      'toXML': function (_0x1d2cbd) {
        var _0x1c1f76 = $.parseXML("<?xml version=\"1.0\" encoding=\"UTF-8\"?><map/>"),
          _0x55de72 = $(_0x1c1f76).find('map').attr({
            'version': this.version,
            'orientation': this.orientation,
            'width': this.bounds.w,
            'height': this.bounds.h,
            'tilewidth': this.tileInfo.w,
            'tileheight': this.tileInfo.h
          });
        if (Util.size(this.properties)) {
          var _0x5a1d9d = $('<properties>', _0x1c1f76);
          $.each(this.properties, function (_0x338b6a, _0x540b34) {
            var _0x5c9514 = $('<property>', _0x1c1f76).attr({
              'name': _0x338b6a,
              'value': _0x540b34
            });
            _0x5a1d9d.append(_0x5c9514);
          }), _0x55de72.append(_0x5a1d9d);
        }
        return $.each(this.tileSets, function (_0x173a30, _0x522666) {
          _0x55de72.append(_0x522666.toXML(_0x1c1f76, _0x1d2cbd));
        }), $.each(this.layers, function (_0x3a04db, _0xe44660) {
          _0x55de72.append(_0xe44660.toXML(_0x1c1f76, _0x1d2cbd));
        }), _0x55de72;
      },
      'fromXML': function (_0x1dac84, _0x3017f0) {
        var _0x123768 = $(_0x1dac84).find('map'),
          _0x8893bd = new ig.TileMap(_0x123768.attr('orientation'), parseInt(_0x123768.attr('width')), parseInt(_0x123768.attr('height')), parseInt(_0x123768.attr('tilewidth')), parseInt(_0x123768.attr('tileheight')), parseInt(_0x123768.attr('hexsidelength')));
        _0x8893bd.version = _0x123768.attr('version') || null, _0x123768.find("properties:first property").each(function () {
          _0x8893bd.properties[$(this).attr('name')] = $(this).attr('value');
        });
        var _0xf19873 = [],
          _0x3adb7f = this;
        _0x123768.find('tileset').each(function () {
          _0xf19873.push(_0x3adb7f.TileSet.fromElement(this, _0x3017f0).done(function (_0x5290bb) {
            _0x8893bd.addTileSet(_0x5290bb);
          }));
        });
        var _0x30bc9d = $.Deferred(),
          _0x3adb7f = this;
        return $.when.apply($, _0xf19873).done(function () {
          _0x123768.find('layer').each(function () {
            _0x8893bd.addLayer(_0x3adb7f.TileLayer.fromElement(this, _0x8893bd, _0x3017f0));
          }), _0x30bc9d.resolve(_0x8893bd);
        }).fail(function () {
          _0x30bc9d.reject();
        }), _0x30bc9d.promise();
      }
    });
  }), this.START_BRANDING_SPLASH, ig.baked = !0x0, ig.module('plugins.branding.splash').requires('impact.impact', 'impact.entity').defines(function () {
    ig.BrandingSplash = ig.Class.extend({
      'init': function () {
        ig.game.spawnEntity(EntityBranding, 0x0, 0x0), console.log("spawn branding");
      }
    }), EntityBranding = ig.Entity.extend({
      'autoUpdateScale': !0x1,
      'gravityFactor': 0x0,
      'size': {
        'x': 0x20,
        'y': 0x20
      },
      'splash': new ig.Image('branding/splash1.png'),
      'init': function (_0x3764a4, _0x442368, _0x5be0e1) {
        this.parent(_0x3764a4, _0x442368, _0x5be0e1), 0x140 >= ig.system.width ? (this.size.x = 0x140, this.size.y = 0xc8) : (this.size.x = 0x1e0, this.size.y = 0xf0), this.pos.x = (ig.system.width - this.size.x) / 0x2, this.pos.y = -this.size.y - 0xc8, this.endPosY = (ig.system.height - this.size.y) / 0x2, _0x3764a4 = this.tween({
          'pos': {
            'y': this.endPosY
          }
        }, 0.5, {
          'easing': ig.Tween.Easing.Bounce.EaseIn
        }), _0x442368 = this.tween({}, 2.5, {
          'onComplete': function () {
            ig.game.director.loadLevel(ig.game.director.currentLevel);
          }
        }), _0x3764a4.chain(_0x442368), _0x3764a4.start(), this.currentAnim = this.anims.idle;
      },
      'createClickableLayer': function () {
        console.log("Build clickable layer"), this.checkClickableLayer('branding-splash', _SETTINGS.Branding.Logo.Link, _SETTINGS.Branding.Logo.NewWindow);
      },
      'doesClickableLayerExist': function (_0x244dc2) {
        for (k in dynamicClickableEntityDivs) if (k == _0x244dc2) return !0x0;
        return !0x1;
      },
      'checkClickableLayer': function (_0x37486b, _0xf9c550, _0x148c50) {
        'undefined' == typeof wm && (this.doesClickableLayerExist(_0x37486b) ? (ig.game.showOverlay([_0x37486b]), $('#' + _0x37486b).find('[href]').attr('href', _0xf9c550)) : this.createClickableOutboundLayer(_0x37486b, _0xf9c550, 'media/graphics/misc/invisible.png', _0x148c50));
      },
      'createClickableOutboundLayer': function (_0xa6dd9f, _0x855df1, _0x2e9187, _0x10ea9f) {
        var _0x4beb65 = ig.$new('div');
        _0x4beb65.id = _0xa6dd9f, document.body.appendChild(_0x4beb65), _0x4beb65 = $('#' + _0x4beb65.id), _0x4beb65.css('float', 'left'), _0x4beb65.css('position', 'absolute');
        if (ig.ua.mobile) {
          var _0x5012c4 = window.innerHeight / mobileHeight,
            _0xc9279e = window.innerWidth / mobileWidth;
          _0x4beb65.css('left', this.pos.x * _0xc9279e), _0x4beb65.css('top', this.pos.y * _0x5012c4), _0x4beb65.css('width', this.size.x * _0xc9279e), _0x4beb65.css('height', this.size.y * _0x5012c4);
        } else _0x5012c4 = w / 0x2 - destW / 0x2, _0xc9279e = h / 0x2 - destH / 0x2, console.log(_0x5012c4, _0xc9279e), _0x4beb65.css('left', _0x5012c4 + this.pos.x * multiplier), _0x4beb65.css('top', _0xc9279e + this.pos.y * multiplier), _0x4beb65.css('width', this.size.x * multiplier), _0x4beb65.css('height', this.size.y * multiplier);
        _0x10ea9f ? _0x4beb65.html("<a target='_blank' href='" + _0x855df1 + "'><img style='width:100%;height:100%' src='" + _0x2e9187 + "'></a>") : _0x4beb65.html("<a href='" + _0x855df1 + "'><img style='width:100%;height:100%' src='" + _0x2e9187 + "'></a>"), dynamicClickableEntityDivs[_0xa6dd9f] = {}, dynamicClickableEntityDivs[_0xa6dd9f].width = this.size.x * multiplier, dynamicClickableEntityDivs[_0xa6dd9f].height = this.size.y * multiplier, dynamicClickableEntityDivs[_0xa6dd9f].entity_pos_x = this.pos.x, dynamicClickableEntityDivs[_0xa6dd9f].entity_pos_y = this.pos.y;
      },
      'draw': function () {
        ig.system.context.fillStyle = '#ffffff', ig.system.context.fillRect(0x0, 0x0, ig.system.width, ig.system.height), ig.system.context.fillStyle = '#000', ig.system.context.font = "12px Arial", ig.system.context.textAlign = 'left', 0x140 >= ig.system.width ? ig.system.context.fillText("powered by MarketJS.com", ig.system.width - 0x96, ig.system.height - 0xf) : ig.system.context.fillText("powered by MarketJS.com", ig.system.width - 0xa0, ig.system.height - 0xf), this.parent(), this.splash && ig.system.context.drawImage(this.splash.data, 0x0, 0x0, this.splash.data.width, this.splash.data.height, this.pos.x, this.pos.y, this.size.x, this.size.y);
      }
    });
  }), this.END_BRANDING_SPLASH, ig.baked = !0x0, ig.module('game.entities.buttons.button').requires('impact.entity', 'plugins.data.vector').defines(function () {
    EntityButton = ig.Entity.extend({
      'collides': ig.Entity.COLLIDES.NEVER,
      'type': ig.Entity.TYPE.A,
      'size': new Vector2(0x30, 0x30),
      'fillColor': null,
      'zIndex': 0x17318,
      'init': function (_0x41bc2d, _0x3c9a81, _0x2fa482) {
        this.parent(_0x41bc2d, _0x3c9a81, _0x2fa482), !ig.global.wm && !isNaN(_0x2fa482.zIndex) && (this.zIndex = _0x2fa482.zIndex), _0x41bc2d = Math.floor(0x100 * Math.random()), _0x3c9a81 = Math.floor(0x100 * Math.random()), _0x2fa482 = Math.floor(0x100 * Math.random()), this.fillColor = 'rgba(' + _0x41bc2d + ',' + _0x2fa482 + ',' + _0x3c9a81 + ',1)';
      },
      'clicked': function () {
        console.warn("no implementation on clicked()");
      },
      'clicking': function () {
        console.warn("no implementation on clicking()");
      },
      'released': function () {
        console.warn("no implementation on released()");
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.clickable-div-layer').requires('plugins.data.vector').defines(function () {
    ClickableDivLayer = ig.Class.extend({
      'version': '1.0.0',
      'pos': new Vector2(0x0, 0x0),
      'size': new Vector2(0x0, 0x0),
      'identifier': null,
      'invisImagePath': 'media/graphics/misc/invisible.png',
      'init': function (_0xebf059) {
        this.pos = new Vector2(_0xebf059.pos.x, _0xebf059.pos.y), this.size = new Vector2(_0xebf059.size.x, _0xebf059.size.y);
        var _0x527d0b = 'more-games',
          _0x4e448f = 'https://www.marketjs.com',
          _0x198c9b = !0x1;
        _0xebf059.div_layer_name && (_0x527d0b = _0xebf059.div_layer_name), _0xebf059.link && (_0x4e448f = _0xebf059.link), _0xebf059.newWindow && (_0x198c9b = _0xebf059.newWindow), this.createClickableLayer(_0x527d0b, _0x4e448f, _0x198c9b);
      },
      'createClickableLayer': function (_0x4b55c8, _0x41c80a, _0x2abd13) {
        this.identifier = _0x4b55c8;
        var _0x167b3f = ig.domHandler.getElementById('#' + _0x4b55c8);
        _0x167b3f ? (ig.domHandler.show(_0x167b3f), ig.domHandler.attr(_0x167b3f, 'href', _0x41c80a)) : this.createClickableOutboundLayer(_0x4b55c8, _0x41c80a, this.invisImagePath, _0x2abd13);
      },
      'update': function (_0x28ab67, _0x7f9aef, _0x2a8120, _0x550868) {
        this.pos.x === _0x28ab67 && this.pos.y === _0x7f9aef && this.size.x === _0x2a8120 && this.size.y === _0x550868 || (this.pos.x = _0x28ab67, this.pos.y = _0x7f9aef, this.size.x = _0x2a8120, this.size.y = _0x550868, ig.sizeHandler.dynamicClickableEntityDivs[this.identifier] = {}, ig.sizeHandler.dynamicClickableEntityDivs[this.identifier].width = this.size.x, ig.sizeHandler.dynamicClickableEntityDivs[this.identifier].height = this.size.y, ig.sizeHandler.dynamicClickableEntityDivs[this.identifier].entity_pos_x = this.pos.x, ig.sizeHandler.dynamicClickableEntityDivs[this.identifier].entity_pos_y = this.pos.y, _0x28ab67 = ig.domHandler.getElementById('#' + this.identifier), this.updateCSS(_0x28ab67));
      },
      'createClickableOutboundLayer': function (_0x31ef99, _0x326a18, _0x30352a, _0x127a9e) {
        var _0x31c854 = ig.domHandler.create('div');
        ig.domHandler.attr(_0x31c854, 'id', _0x31ef99);
        var _0x5d8ed1 = ig.domHandler.create('a');
        ig.domHandler.addEvent(_0x31c854, 'mousedown', function (_0x3099f1) {
          _0x3099f1.preventDefault();
        }), _0x127a9e ? (ig.domHandler.attr(_0x5d8ed1, 'href', _0x326a18), ig.domHandler.attr(_0x5d8ed1, 'target', '_blank')) : ig.domHandler.attr(_0x5d8ed1, 'href', _0x326a18), _0x326a18 = ig.domHandler.create('img'), ig.domHandler.css(_0x326a18, {
          'width': '100%',
          'height': '100%'
        }), ig.domHandler.attr(_0x326a18, 'src', _0x30352a), ig.domHandler.addEvent(_0x31c854, 'mousemove', ig.input.mousemove.bind(ig.input), !0x1), ig.domHandler.appendChild(_0x5d8ed1, _0x326a18), ig.domHandler.appendChild(_0x31c854, _0x5d8ed1), ig.domHandler.appendToBody(_0x31c854), ig.sizeHandler.dynamicClickableEntityDivs[_0x31ef99] = {}, ig.sizeHandler.dynamicClickableEntityDivs[_0x31ef99].width = this.size.x, ig.sizeHandler.dynamicClickableEntityDivs[_0x31ef99].height = this.size.y, ig.sizeHandler.dynamicClickableEntityDivs[_0x31ef99].entity_pos_x = this.pos.x, ig.sizeHandler.dynamicClickableEntityDivs[_0x31ef99].entity_pos_y = this.pos.y, this.updateCSS(_0x31c854);
      },
      'updateCSS': function (_0x1105cf) {
        var _0x388f6d = Math.min(ig.sizeHandler.scaleRatioMultiplier.x, ig.sizeHandler.scaleRatioMultiplier.y);
        if (ig.ua.mobile) {
          var _0x548bea = ig.domHandler.getElementById('#canvas'),
            _0x401f1e = ig.domHandler.getOffsets(_0x548bea),
            _0x548bea = _0x401f1e.left,
            _0x401f1e = _0x401f1e.top;
          if (ig.sizeHandler.disableStretchToFitOnMobileFlag) var _0x548bea = Math.floor(_0x548bea + this.pos.x * ig.sizeHandler.scaleRatioMultiplier.x) + 'px',
            _0x401f1e = Math.floor(_0x401f1e + this.pos.y * ig.sizeHandler.scaleRatioMultiplier.y) + 'px',
            _0x16b46a = Math.floor(this.size.x * ig.sizeHandler.scaleRatioMultiplier.x) + 'px',
            _0x388f6d = Math.floor(this.size.y * ig.sizeHandler.scaleRatioMultiplier.y) + 'px';else _0x548bea = Math.floor(this.pos.x * ig.sizeHandler.sizeRatio.x) + 'px', _0x401f1e = Math.floor(this.pos.y * ig.sizeHandler.sizeRatio.y) + 'px', _0x16b46a = Math.floor(this.size.x * ig.sizeHandler.sizeRatio.x) + 'px', _0x388f6d = Math.floor(this.size.y * ig.sizeHandler.sizeRatio.y) + 'px';
        } else _0x548bea = ig.domHandler.getElementById('#canvas'), _0x401f1e = ig.domHandler.getOffsets(_0x548bea), _0x548bea = _0x401f1e.left, _0x401f1e = _0x401f1e.top, ig.sizeHandler.enableStretchToFitOnDesktopFlag ? (_0x548bea = Math.floor(_0x548bea + this.pos.x * ig.sizeHandler.sizeRatio.x) + 'px', _0x401f1e = Math.floor(_0x401f1e + this.pos.y * ig.sizeHandler.sizeRatio.y) + 'px', _0x16b46a = Math.floor(this.size.x * ig.sizeHandler.sizeRatio.x) + 'px', _0x388f6d = Math.floor(this.size.y * ig.sizeHandler.sizeRatio.y) + 'px') : (_0x548bea = Math.floor(_0x548bea + this.pos.x * _0x388f6d) + 'px', _0x401f1e = Math.floor(_0x401f1e + this.pos.y * _0x388f6d) + 'px', _0x16b46a = Math.floor(this.size.x * _0x388f6d) + 'px', _0x388f6d = Math.floor(this.size.y * _0x388f6d) + 'px');
        ig.domHandler.css(_0x1105cf, {
          'float': 'left',
          'position': 'absolute',
          'left': _0x548bea,
          'top': _0x401f1e,
          'width': _0x16b46a,
          'height': _0x388f6d,
          'z-index': 0x3
        });
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.buttons.button-branding-logo').requires('game.entities.buttons.button', 'plugins.clickable-div-layer').defines(function () {
    EntityButtonBrandingLogo = EntityButton.extend({
      'type': ig.Entity.TYPE.A,
      'gravityFactor': 0x0,
      'logo': new ig.AnimationSheet('branding/logo.png', _SETTINGS.Branding.Logo.Width, _SETTINGS.Branding.Logo.Height),
      'zIndex': 0x2711,
      'size': {
        'x': 0x40,
        'y': 0x42
      },
      'clickableLayer': null,
      'link': null,
      'newWindow': !0x1,
      'div_layer_name': 'branding-logo',
      'name': 'brandinglogo',
      'init': function (_0x3085f6, _0x2d781a, _0x3dc9b2) {
        this.parent(_0x3085f6, _0x2d781a, _0x3dc9b2);
        if (!ig.global.wm) {
          if ('undefined' == typeof wm) {
            if (_SETTINGS.Branding.Logo.Enabled) this.size.x = _SETTINGS.Branding.Logo.Width, this.size.y = _SETTINGS.Branding.Logo.Height, this.anims.idle = new ig.Animation(this.logo, 0x0, [0x0], !0x0), this.currentAnim = this.anims.idle, _0x3dc9b2 && _0x3dc9b2.centralize && (this.pos.x = ig.system.width / 0x2 - this.size.x / 0x2, console.log("centralize true ... centering branded logo ...")), _SETTINGS.Branding.Logo.LinkEnabled && (this.link = _SETTINGS.Branding.Logo.Link, this.newWindow = _SETTINGS.Branding.Logo.NewWindow, this.clickableLayer = new ClickableDivLayer(this));else {
              this.kill();
              return;
            }
          }
          this.div_layer_name = _0x3dc9b2.div_layer_name ? _0x3dc9b2.div_layer_name : 'branding-logo';
        }
      },
      'show': function () {
        var _0x5494f1 = ig.domHandler.getElementById('#' + this.div_layer_name);
        ig.domHandler.show(_0x5494f1);
      },
      'hide': function () {
        var _0x30bed0 = ig.domHandler.getElementById('#' + this.div_layer_name);
        ig.domHandler.hide(_0x30bed0);
      },
      'clicked': function () {},
      'clicking': function () {},
      'released': function () {}
    });
  }), ig.baked = !0x0, ig.module('game.entities.branding-logo-placeholder').requires('impact.entity', 'game.entities.buttons.button-branding-logo').defines(function () {
    EntityBrandingLogoPlaceholder = ig.Entity.extend({
      'gravityFactor': 0x0,
      'size': {
        'x': 0x20,
        'y': 0x20
      },
      '_wmDrawBox': !0x0,
      '_wmBoxColor': "rgba(0, 0, 255, 0.7)",
      'init': function (_0x116173, _0x55790f, _0x1a2a20) {
        this.parent(_0x116173, _0x55790f, _0x1a2a20);
        if (_0x1a2a20) switch (console.log("settings found ... using that div layer name"), _0x116173 = _0x1a2a20.div_layer_name, console.log('settings.centralize:', _0x1a2a20.centralize), _0x1a2a20.centralize) {
          case 'true':
            console.log("centralize true"), centralize = !0x0;
            break;
          case 'false':
            console.log("centralize false"), centralize = !0x1;
            break;
          default:
            console.log("default ... centralize false"), centralize = !0x1;
        } else _0x116173 = 'branding-logo', centralize = !0x1;
        if ('undefined' == typeof wm) {
          if (_SETTINGS.Branding.Logo.Enabled) try {
            ig.game.spawnEntity(EntityButtonBrandingLogo, this.pos.x, this.pos.y, {
              'div_layer_name': _0x116173,
              'centralize': centralize
            });
          } catch (_0x38b91d) {
            console.log(_0x38b91d);
          }
          this.kill();
        }
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.pointer').requires('impact.entity').defines(function () {
    EntityPointer = ig.Entity.extend({
      'checkAgainst': ig.Entity.TYPE.BOTH,
      'size': new Vector2(0x1, 0x1),
      'isFirstPressed': !0x1,
      'isPressed': !0x1,
      'isReleased': !0x1,
      'isHovering': !0x1,
      'hoveringItem': null,
      'objectArray': [],
      'clickedObjectList': [],
      'ignorePause': !0x0,
      'zIndex': 0x157c,
      'check': function (_0x5ea02a) {
        this.objectArray.push(_0x5ea02a);
      },
      'clickObject': function (_0x314cfa) {
        this.isFirstPressed && 'function' == typeof _0x314cfa.clicked && (_0x314cfa.clicked(), this.addToClickedObjectList(_0x314cfa)), this.isPressed && !this.isReleased && 'function' == typeof _0x314cfa.clicking && _0x314cfa.clicking(), this.isReleased && 'function' == typeof _0x314cfa.released && (_0x314cfa.released(), this.removeFromClickedObjectList(_0x314cfa));
      },
      'refreshPos': function () {
        this.pos = ig.game.io.getClickPos();
      },
      'update': function () {
        this.parent(), this.refreshPos();
        var _0x32e006 = null,
          _0x2eaaff = -0x1;
        for (a = this.objectArray.length - 0x1; -0x1 < a; a--) this.objectArray[a].zIndex > _0x2eaaff && (_0x2eaaff = this.objectArray[a].zIndex, _0x32e006 = this.objectArray[a]);
        if (null != _0x32e006) null != this.hoveringItem ? this.hoveringItem != _0x32e006 && ('function' == typeof this.hoveringItem.leave && this.hoveringItem.leave(), 'function' == typeof _0x32e006.over && _0x32e006.over()) : 'function' == typeof _0x32e006.over && _0x32e006.over(), this.hoveringItem = _0x32e006, this.clickObject(_0x32e006), this.objectArray = [];else {
          if (null != this.hoveringItem && 'function' == typeof this.hoveringItem.leave && (this.hoveringItem.leave(), this.hoveringItem = null), this.isReleased) {
            for (_0x32e006 = 0x0; _0x32e006 < this.clickedObjectList.length; _0x32e006++) _0x2eaaff = this.clickedObjectList[_0x32e006], 'function' == typeof _0x2eaaff.releasedOutside && _0x2eaaff.releasedOutside();
            this.clickedObjectList = [];
          }
        }
        this.isFirstPressed = ig.input.pressed('click'), this.isReleased = ig.input.released('click'), this.isPressed = ig.input.state('click');
      },
      'addToClickedObjectList': function (_0x55e080) {
        this.clickedObjectList.push(_0x55e080);
      },
      'removeFromClickedObjectList': function (_0xe7879f) {
        for (var _0x2bcb9b = [], _0x58a119 = 0x0; _0x58a119 < this.clickedObjectList.length; _0x58a119++) {
          var _0x34e176 = this.clickedObjectList[_0x58a119];
          _0x34e176 != _0xe7879f && _0x2bcb9b.push(_0x34e176);
        }
        this.clickedObjectList = _0x2bcb9b;
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.pointer-selector').requires('game.entities.pointer').defines(function () {
    EntityPointerSelector = EntityPointer.extend({
      'zIndex': 0x3e8,
      '_wmDrawBox': !0x0,
      '_wmBoxColor': "rgba(0, 0, 255, 0.7)",
      'size': {
        'x': 0x14,
        'y': 0x14
      },
      'init': function (_0x597838, _0x158887, _0x1aced7) {
        this.parent(_0x597838, _0x158887, _0x1aced7);
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.select').requires('impact.entity').defines(function () {
    EntitySelect = ig.Entity.extend({
      'type': ig.Entity.TYPE.B,
      'checkAgainst': ig.Entity.TYPE.A,
      'collides': ig.Entity.COLLIDES.NEVER,
      'canSelect': !0x1,
      'canSelectTimerDuration': 0.35,
      'zIndex': 0x1869f,
      'isHovering': !0x1,
      'isSelected': !0x1,
      'init': function (_0x1b71a3, _0x332950, _0x2fa392) {
        this.parent(_0x1b71a3, _0x332950, _0x2fa392), this.canSelectTimer = new ig.Timer(this.canSelectTimerDuration);
      },
      'doesClickableLayerExist': function (_0xefb8bf) {
        for (k in dynamicClickableEntityDivs) if (k == _0xefb8bf) return !0x0;
        return !0x1;
      },
      'checkClickableLayer': function (_0x24d01b, _0x521e3b, _0xd43c99) {
        'undefined' == typeof wm && (this.doesClickableLayerExist(_0x24d01b) ? (ig.game.showOverlay([_0x24d01b]), $('#' + _0x24d01b).find('[href]').attr('href', _0x521e3b)) : this.createClickableOutboundLayer(_0x24d01b, _0x521e3b, 'media/graphics/misc/invisible.png', _0xd43c99));
      },
      'createClickableOutboundLayer': function (_0x575154, _0x27221e, _0x1a2577, _0x243651) {
        var _0x2e5525 = ig.$new('div');
        _0x2e5525.id = _0x575154, document.body.appendChild(_0x2e5525), $('#' + _0x2e5525.id).css('float', 'left'), $('#' + _0x2e5525.id).css('width', this.size.x * multiplier), $('#' + _0x2e5525.id).css('height', this.size.y * multiplier), $('#' + _0x2e5525.id).css('position', 'absolute');
        var _0x26cd89 = w / 0x2 - destW / 0x2,
          _0x1bde35 = h / 0x2 - destH / 0x2;
        w == mobileWidth ? ($('#' + _0x2e5525.id).css('left', this.pos.x), $('#' + _0x2e5525.id).css('top', this.pos.y)) : ($('#' + _0x2e5525.id).css('left', _0x26cd89 + this.pos.x * multiplier), $('#' + _0x2e5525.id).css('top', _0x1bde35 + this.pos.y * multiplier)), _0x243651 ? $('#' + _0x2e5525.id).html("<a target='_blank' href='" + _0x27221e + "'><img style='width:100%;height:100%' src='" + _0x1a2577 + "'></a>") : $('#' + _0x2e5525.id).html("<a href='" + _0x27221e + "'><img style='width:100%;height:100%' src='" + _0x1a2577 + "'></a>"), dynamicClickableEntityDivs[_0x575154] = {}, dynamicClickableEntityDivs[_0x575154].width = $('#' + _0x2e5525.id).width(), dynamicClickableEntityDivs[_0x575154].height = $('#' + _0x2e5525.id).height(), dynamicClickableEntityDivs[_0x575154].entity_pos_x = this.pos.x, dynamicClickableEntityDivs[_0x575154].entity_pos_y = this.pos.y;
      },
      'hovered': function () {
        this.isHovering = !0x0, this.dehoverOthers();
      },
      'dehoverOthers': function () {
        var _0x3288c5 = ig.game.getEntitiesByType(EntitySelect);
        for (i = 0x0; i < _0x3288c5.length; i++) _0x3288c5[i] != this && (_0x3288c5[i].isHovering = !0x1);
      },
      'deselectOthers': function () {
        var _0x2c240a = ig.game.getEntitiesByType(EntitySelect);
        for (i = 0x0; i < _0x2c240a.length; i++) _0x2c240a[i] != this && (_0x2c240a[i].isSelected = !0x1);
      },
      'update': function () {
        this.parent(), this.canSelectTimer && 0x0 < this.canSelectTimer.delta() && (this.canSelect = !0x0, this.canSelectTimer = null);
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.marketjs-splash').requires('impact.entity').defines(function () {
    EntityMarketJSSplash = ig.Entity.extend({
      'logoImage': new ig.Image('media/graphics/splash/marketjs/logo.png'),
      'letterImage': new ig.Image('media/graphics/splash/marketjs/letter-m.png'),
      'brandingText': new ig.Image('media/graphics/splash/marketjs/branding-text.png'),
      'scale': {
        'x': 0x1,
        'y': 0x1
      },
      'init': function () {
        if (_SETTINGS.DeveloperBranding.Splash.Enabled) {
          this.updateScale(), this.originX = 0x0, this.logo = {
            'scale': 0.02,
            'alpha': 0x0,
            'x': -this.logoImage.width / 0x2,
            'y': -this.logoImage.height / 0x2
          };
          var _0x462f4b = this.tween({
            'logo': {
              'scale': 0x1,
              'alpha': 0x1
            }
          }, 0.48, {
            'delay': 0.3,
            'easing': ig.Tween.Easing.Back.EaseOut,
            'onComplete': function () {
              ig.soundHandler.sfxPlayer.play('logosplash1'), this.tween({}, 0.59, {
                'onComplete': function () {
                  ig.soundHandler.sfxPlayer.play('logosplash2');
                }
              }).start();
            }.bind(this)
          });
          this.letterM = {
            'scale': 0.02,
            'alpha': 0x0,
            'x': -this.letterImage.width / 0x2,
            'y': -this.letterImage.height / 0x2 - 0xa
          };
          var _0x1fdf31 = this.tween({
            'letterM': {
              'scale': 0x1,
              'alpha': 0x1
            }
          }, 0.48, {
            'easing': ig.Tween.Easing.Back.EaseOut
          });
          this.text = {
            'alpha': 0x1,
            'x': -this.brandingText.width / 0x2,
            'y': -this.brandingText.height / 0x2,
            'coverW': 0x2 * this.brandingText.width,
            'coverH': 0x2 * this.brandingText.height
          }, this.text.originX = -this.brandingText.width / 0x2 - 0x10e, this.text.cx = -this.text.coverW - 0x104, this.text.cy = -this.brandingText.height;
          var _0x2be430 = this.tween({
              'originX': -0x1c2,
              'logo': {
                'scale': 0.82
              },
              'letterM': {
                'scale': 0.82
              },
              'text': {
                'originX': 0x96
              }
            }, 0.78, {
              'delay': 0.4,
              'easing': ig.Tween.Easing.Back.EaseOut
            }),
            _0x553c3e = this.tween({
              'logo': {
                'alpha': 0x0
              },
              'letterM': {
                'alpha': 0x0
              },
              'text': {
                'alpha': 0x0
              }
            }, 0.9, {
              'delay': 1.5,
              'onComplete': function () {
                this.goToMenu();
              }.bind(this)
            });
          _0x462f4b.chain(_0x1fdf31), _0x1fdf31.chain(_0x2be430), _0x2be430.chain(_0x553c3e), _0x462f4b.start(), this.tween({}, 0.25, {
            'onComplete': function () {
              ig.soundHandler.sfxPlayer.play('logosplash1');
            }
          }).start();
        } else this.goToMenu();
      },
      'goToMenu': function () {
        ig.soundHandler.sfxPlayer.soundList.logosplash1.mute(!0x0), ig.soundHandler.sfxPlayer.soundList.logosplash2.mute(!0x0), ig.soundHandler.bgmPlayer.play('background'), ig.game.director.nextLevel(), this.kill();
      },
      'update': function () {
        if (0x0 < this.tweens.length) {
          for (var _0x5110f7 = [], _0x248358 = 0x0; _0x248358 < this.tweens.length; _0x248358++) this.tweens[_0x248358].update(), this.tweens[_0x248358].complete || _0x5110f7.push(this.tweens[_0x248358]);
          this.tweens = _0x5110f7;
        }
        this.updateScale();
      },
      'draw': function () {
        var _0x5e2afd = ig.system.context;
        _0x5e2afd.fillStyle = '#FFF', _0x5e2afd.fillRect(0x0, 0x0, ig.system.width, ig.system.height), _0x5e2afd.save(), _0x5e2afd.translate(ig.system.width / 0x2, ig.system.height / 0x2), _0x5e2afd.scale(this.scale.x, this.scale.y), _0x5e2afd.imageSmoothingEnabled = !0x0, _0x5e2afd.globalAlpha = this.text.alpha, this.brandingText.draw(this.text.originX + this.text.x, this.text.y), _0x5e2afd.globalAlpha = 0x1, _0x5e2afd.fillRect(this.text.cx, this.text.cy, this.originX - this.text.cx, this.text.coverH), _0x5e2afd.save(), _0x5e2afd.globalAlpha = this.logo.alpha, _0x5e2afd.scale(this.logo.scale, this.logo.scale), this.logoImage.draw(this.originX + this.logo.x, this.logo.y), _0x5e2afd.restore(), _0x5e2afd.save(), _0x5e2afd.globalAlpha = this.letterM.alpha, _0x5e2afd.scale(this.letterM.scale, this.letterM.scale), this.letterImage.draw(this.originX + this.letterM.x, this.letterM.y), _0x5e2afd.restore(), _0x5e2afd.restore();
      },
      'updateScale': function () {
        if (!this.skipUpdateScale) {
          var _0x4288b5 = window.innerWidth / window.innerHeight,
            _0x3f5cd7 = ig.system.height / 0x500,
            _0x2ac977 = ig.system.width / 0x500;
          if (ig.responsive) this.scale.x = this.scale.y = 0x1 < _0x4288b5 ? _0x3f5cd7 : _0x2ac977;else {
            if (ig.ua.mobile && !ig.sizeHandler.disableStretchToFitOnMobileFlag) {
              var _0x21782e = ig.system.width / ig.system.height;
              0x1 < _0x4288b5 ? (this.scale.x = _0x21782e / _0x4288b5 * _0x3f5cd7, this.scale.y = _0x3f5cd7) : (this.scale.x = _0x2ac977, this.scale.y = _0x4288b5 / _0x21782e * _0x2ac977);
            } else this.skipUpdateScale = !0x0, _0x2ac977 = ig.system.width / 0x438, this.scale.x = this.scale.y = _0x3f5cd7 < _0x2ac977 ? _0x3f5cd7 : _0x2ac977;
          }
          0x1 < this.scale.x && (this.scale.x = 0x1), 0x1 < this.scale.y && (this.scale.y = 0x1);
        }
      }
    });
  }), ig.baked = !0x0, ig.module('game.levels.opening').requires('impact.image', 'game.entities.marketjs-splash').defines(function () {
    LevelOpening = {
      'entities': [{
        'type': 'EntityMarketJSSplash',
        'x': 0x208,
        'y': 0xd4
      }],
      'layer': []
    };
  }), ig.baked = !0x0, ig.module('game.entities.addon.custom-pointer').requires('game.entities.pointer-selector').defines(function () {
    EntityCustomPointer = EntityPointerSelector.extend({
      'name': 'Pointer',
      'alive': !0x0,
      'exists': !0x0,
      'visible': !0x0,
      'size': {
        'x': 0x1,
        'y': 0x1
      },
      'check': function (_0x5aa7ed) {
        _0x5aa7ed.useCustomEntity ? _0x5aa7ed.exists && _0x5aa7ed.inputEnabled && ig.game.checkVisibility(_0x5aa7ed) && !(0x1 > _0x5aa7ed.size.x || 0x1 > _0x5aa7ed.size.y) && _0x5aa7ed.alive && 'buy-tile' != _0x5aa7ed.name && this.objectArray.push(_0x5aa7ed) : this.parent(_0x5aa7ed);
      },
      'kill': function () {
        this.parent(), this.exists = !0x1;
      },
      'update': function () {
        this.parent();
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.addon.page-controller').requires('game.entities.addon.group', 'game.entities.addon.custom-pointer').defines(function () {
    EntityPageController = EntityGroup.extend({
      'name': 'Controller',
      'localState': {},
      'isReady': !0x1,
      'pageReady': !0x1,
      'init': function (_0x96dee2, _0xc5941b, _0xdc089d) {
        this.parent(_0x96dee2, _0xc5941b, _0xdc089d), ig.global.wm || (ig.game.tweens.removeAll(), this.centerX = ig.game.centerX, this.centerY = ig.game.centerY, this.gw = ig.game.gw, this.gh = ig.game.gh, this.timeEvent = new ig.TimeEvent(), ig.game.addOnReady = !0x0, ig.game.groups = [], this.gBG = ig.game.addGroup(0x0, 0x0), this.gCont = ig.game.addGroup(0x0, 0x0), this.gFront = ig.game.addGroup(0x0, 0x0), this.gPointer = ig.game.addGroup(0x0, 0x0), ig.game.groups.push(this.gBG), ig.game.groups.push(this.gCont), ig.game.groups.push(this.gFront), ig.game.groups.push(this.gPointer), ig.game.checkZIndexGroups(), this.gPointer.add(this), this.curtainBg = ig.game.spawnEntity(EntityManualDrawEntity, this.centerX, this.centerY, {
          'isCameraLock': !0x0
        }), this.curtainBg.anchor.setTo(0.5), this.curtainBg.setShape(ig.system.width, ig.system.height), this.curtainBg.drawShape = function () {
          var _0x168ba2 = ig.game.geom.rectangle(0x0, 0x0, this.width, this.height);
          ig.game.geomDebug.rect(_0x168ba2, 'black', this.alpha * ig.system.context.globalAlpha);
        }.bind(this.curtainBg), this.curtainBg.inputEnabled = !0x0, this.curtainBg.alpha = 0x0, this.gPointer.add(this.curtainBg), ig.game.controller = this, ig.game.pointer = ig.game.spawnEntity(EntityCustomPointer, ig.system.width / 0x2, ig.system.height / 0x2), ig.game.sortEntitiesDeferred());
      },
      'createFSBtn': function () {
        this.fsBtn = ig.game.spawnEntity(ig.FullscreenButton, 0xa, 0xa, {
          'enterImage': new ig.Image('media/graphics/misc/enter-fullscreen-transparent.png'),
          'exitImage': new ig.Image('media/graphics/misc/exit-fullscreen-transparent.png'),
          'useCustomEntity': !0x0,
          'isResponsive': !0x1
        });
      },
      'createFpsText': function () {
        this.showFps = ig.game.addText(0xa, 0xa, '', 0x1e, fonts.font1, {
          'isResponsive': !0x1,
          'isCameraLock': !0x0
        }), this.showFps.anchor.setTo(0x0, 0x1), this.showFps.align = 'right', this.showFps.fill = 'white', this.gPointer.add(this.showFps);
      },
      'createSenteceTxt': function (_0x678de3) {
        _0x678de3 = _0x678de3.split(" ");
        for (var _0x32fa5a = [], _0x423c26 = 0x0; _0x423c26 < _0x678de3.length; _0x423c26++) {
          var _0x21ac39 = _0x678de3[_0x423c26],
            _0x21ac39 = [_0x21ac39[0x0], _0x21ac39.slice(0x1)];
          _0x32fa5a.push(_0x21ac39);
        }
        return _0x32fa5a;
      },
      'groupTxts': function (_0x4a3498, _0xb6cc50, _0x55066d) {
        for (var _0x3877dd = ig.game.addGroup(0x0, 0x0), _0x35664c = [], _0x5c447f = 0x0; _0x5c447f < _0x4a3498.length; _0x5c447f++) {
          for (var _0x22aef8 = 0x0; _0x22aef8 < _0x4a3498[_0x5c447f].length; _0x22aef8++) {
            var _0x27ce12 = _0xb6cc50[_0x22aef8],
              _0x37456a = ig.game.addText(0x0, 0x0, _0x4a3498[_0x5c447f][_0x22aef8], _0x27ce12, fonts.font1);
            _0x37456a.anchor.setTo(0x0, 0x1), _0x37456a.fill = _0x55066d, _0x3877dd.add(_0x37456a);
            if (0x0 < _0x35664c.length) {
              var _0x2d13a2 = _0x35664c[_0x35664c.length - 0x1];
              _0x37456a.x = _0x2d13a2.x + _0x2d13a2.size.x;
            }
            _0x35664c.push(_0x37456a);
          }
          0x1 < _0x4a3498.length && (_0x37456a = ig.game.addText(0x0, 0x0, " ", _0x27ce12, fonts.font1), _0x37456a.anchor.setTo(0x0, 0x1), _0x37456a.fill = _0x55066d, _0x3877dd.add(_0x37456a), _0x2d13a2 = _0x35664c[_0x35664c.length - 0x1], _0x37456a.x = _0x2d13a2.x + _0x2d13a2.size.x, _0x35664c.push(_0x37456a));
        }
        return _0x3877dd;
      },
      'createGreyBg': function () {
        this.greyBg = ig.game.spawnEntity(EntityManualDrawEntity, this.centerX, this.centerY, {
          'isCameraLock': !0x0,
          'name': 'grey-bg'
        }), this.greyBg.anchor.setTo(0.5), this.greyBg.setShape(ig.system.width, ig.system.height), this.greyBg.drawShape = function () {
          var _0x15da94 = ig.game.geom.rectangle(0x0, 0x0, this.width, this.height);
          ig.game.geomDebug.rect(_0x15da94, 'black', 0.5 * ig.system.context.globalAlpha);
        }.bind(this.greyBg), this.greyBg.inputEnabled = !0x0, this.greyBg.visible = !0x1, this.greyBg.alpha = 0x0, this.gFront.add(this.greyBg);
      },
      'updateOnOrientationChange': function () {
        ig.game.useResponsive && (this.greyBg && this.greyBg.setShape(ig.system.width, ig.system.height), this.curtainBg && this.curtainBg.setShape(ig.system.width, ig.system.height), this.showFps && (this.showFps.y = ig.system.height - 0xa));
      },
      'update': function () {
        this.parent(), ig.game.fps && this.showFps && this.showFps.setText(ig.game.fps + " FPS"), this.timeEvent.update(), this.isReady || (this.isReady = !0x0, ig.game.transition ? ig.game.transition.open() : this.curtainBg && (this.curtainBg.visible = !0x1)), this.fsBtn && this.fsBtn.update();
      },
      'draw': function () {
        this.parent(), this.fsBtn && this.fsBtn.draw();
      },
      'kill': function () {
        this.exists = ig.game.addOnReady = !0x1, this.parent();
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.controllers.mainmenu-ctrl').requires('game.entities.addon.page-controller').defines(function () {
    EntityMainmenuCtrl = EntityPageController.extend({
      'init': function (_0x5985fb, _0x33079e, _0x5f20ed) {
        this.parent(_0x5985fb, _0x33079e, _0x5f20ed), ig.global.wm || (ig.GameData.isResetGame && (ig.GameData.generateWorldMapData(), ig.game.resetData(), ig.game.saveAll(), ig.GameData.isResetGame = !0x1, ig.GameData.factoryDatas = null), this.create());
      },
      'create': function () {
        ig.GameData.areaId = ig.game.generateAreaId(), ig.game.screen = new Vector2(0x0, 0x0), this.bg = ig.CallAsset.addImage(this.centerX, this.centerY, 'bg'), this.bg.anchor.setTo(0.5), this.gBG.add(this.bg), this.createGreyBg(), this.gInGame = ig.game.addGroup(), this.titleImg = ig.CallAsset.addImage(this.centerX, 0.2 * this.gh, 'title'), this.titleImg.anchor.setTo(0.5, 0x0), this.gInGame.add(this.titleImg), this.btnPlay = ig.CallAsset.addFrame(this.centerX, 0.7 * this.gh, 'ingame/buttons/btn-play', {}, EntityClickBtn), this.btnPlay.onStartClick.add(function () {
          this.curtainBg.visible = !0x0;
        }, this), this.btnPlay.onClick.add(this.goToGameplay, this), this.gInGame.add(this.btnPlay), this.btnSettings = ig.CallAsset.addFrame(this.btnPlay.x + 0.5 * this.btnPlay.size.x + 0x1e, this.btnPlay.y + 0.5 * this.btnPlay.size.y, 'ingame/buttons/btn-settings', {}, EntityClickBtn), this.btnSettings.x += 0.5 * this.btnSettings.size.x, this.btnSettings.onStartClick.add(function () {
          this.greyBg.visible = !0x0;
        }, this), this.btnSettings.onClick.add(this.showSettingPopup, this), this.gInGame.add(this.btnSettings), this.btnMoreGame = ig.CallAsset.addFrame(this.btnPlay.x - 0.5 * this.btnPlay.size.x - 0x1e, this.btnSettings.y, 'ingame/buttons/btn-moregames', {}, EntityClickBtn), this.btnMoreGame.moreGames(), this.btnMoreGame.x -= 0.5 * this.btnMoreGame.size.x, this.gInGame.add(this.btnMoreGame), _SETTINGS.MoreGames.Enabled || (this.btnPlay.y -= 0x1e, this.btnSettings.x = this.btnPlay.x, this.btnSettings.y = this.btnPlay.y + 0.5 * this.btnPlay.height + 0.5 * this.btnSettings.height + 0xa), this.createFSBtn();
        var _0x21154d = ig.game.sessionData.onBoardData;
        _0x21154d && null != _0x21154d.blockId || _0x21154d || (_0x21154d = {
          'worldId': 0x0,
          'sectionId': 0x0,
          'blockId': 0x0
        }), this.gCont.add(this.gInGame), this.updateOnOrientationChange();
      },
      'updateOnOrientationChange': function () {
        this.parent();
        var _0xb0971f = Math.max(ig.system.width / this.bg.width, ig.system.height / this.bg.height);
        this.bg.scale.setTo(_0xb0971f);
      },
      'goToGameplay': function () {
        ig.game.changePage(LevelGameplay);
      },
      'showSettingPopup': function () {
        this.gSetting = ig.game.addGroup(this.centerX, this.centerY, {}, EntityOptions), this.gSetting.onResume.add(function () {
          this.gSetting.kill(), this.gSetting = null;
        }, this), this.gFront.add(this.gSetting), this.gSetting.appear();
      },
      'update': function () {
        !this.pageReady && !ig.game.transition.isClosed && !ig.game.transition.isRunning ? (this.pageReady = !0x0, ig.sizeHandler.reorient()) : this.parent();
      }
    });
  }), ig.baked = !0x0, ig.module('game.levels.mainmenu').requires('impact.image', 'game.entities.controllers.mainmenu-ctrl').defines(function () {
    LevelMainmenu = {
      'entities': [{
        'type': 'EntityMainmenuCtrl',
        'x': 0x398,
        'y': 0xb8
      }],
      'layer': []
    }, LevelMainmenuResources = [];
  }), ig.baked = !0x0, ig.module('game.entities.objects.game-bg').requires('game.entities.addon.manual-draw-entity').defines(function () {
    EntityGameBg = EntityManualDrawEntity.extend({
      'init': function (_0x264000, _0x204309, _0xc5a37d) {
        this.parent(_0x264000, _0x204309, _0xc5a37d);
      },
      'drawShape': function () {
        var _0x5f0d92 = ig.system.context;
        _0x5f0d92.save();
        var _0x1cab00 = _0x5f0d92.createLinearGradient(0x0, 0x0, 0x0, 0.5 * this.height);
        _0x1cab00.addColorStop(0x0, '#a2def9'), _0x1cab00.addColorStop(0x1, '#00bdf2'), _0x5f0d92.fillStyle = _0x1cab00, _0x5f0d92.fillRect(0x0, 0x0, this.width, this.height), _0x5f0d92.restore();
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.objects.tile').requires('game.entities.addon.manual-draw-entity').defines(function () {
    EntityTile = EntityManualDrawEntity.extend({
      'image': null,
      'tWidth': 0x0,
      'tHeight': 0x0,
      'tImageX': 0x0,
      'tImageY': 0x0,
      'ctx': null,
      'mScale': {
        'x': 0x1,
        'y': 0x1
      },
      'controller': null,
      'enableActive': !0x1,
      'isActive': !0x1,
      'isBuyable': !0x1,
      'price': 0x0,
      'tileType': 'normalTile',
      'worldId': 0x0,
      'sectionId': 0x0,
      'blockId': 0x0,
      'tileId': 0x0,
      'images': {},
      'iconData': null,
      'tileData': null,
      'showImage': !0x1,
      'isResponsive': !0x1,
      'clickTime': 0x0,
      'maxClickTime': 0x12c,
      'name': 'buy-tile',
      'init': function (_0x528e19, _0xeaef25, _0x2c941c) {
        this.parent(_0x528e19, _0xeaef25, _0x2c941c), this.maxClickTime = curState().maxClickTime, this.setShape(ig.TileController.tileSize.x, ig.TileController.tileSize.y), this.anchor.setTo(0.5), this.onStartClick = new ig.AddSignal(this), this.onGoing = !0x1;
        var _0x32ff12 = curState().gMapDrawer.image;
        _0x528e19 = _0x32ff12.topGap, _0xeaef25 = {
          'x': 0x0,
          'y': 0x0 + _0x528e19
        }, _0x2c941c = {
          'x': _0xeaef25.x + this.width / 0x2,
          'y': 0x0
        };
        var _0x455694 = {
            'x': 0x0 + this.width,
            'y': _0xeaef25.y
          },
          _0x32ff12 = {
            'x': _0x455694.x,
            'y': 0x0 + _0x32ff12.gapY
          };
        this.checkPoints = [_0xeaef25, _0x2c941c, _0x455694, _0x32ff12, {
          'x': _0x2c941c.x,
          'y': _0x32ff12.y + _0x528e19
        }, {
          'x': 0x0,
          'y': _0x32ff12.y
        }], this.tileData = ig.GameData.tileDatas[this.worldId][this.sectionId][this.blockId][this.tileId], this.price = ig.GameData.calculateTilePrice(this.worldId, this.sectionId, this.blockId), this.onRelease.add(this.activateLand, this);
      },
      'setBuyable': function () {
        this.inputEnabled = this.isBuyable = !0x0, ig.GameData.tileDatas[this.worldId][this.sectionId][this.blockId][this.tileId].isBuyable = !0x0;
      },
      'activateLand': function () {
        if (!this.isActive) {
          csound.sfxPlay('success');
          for (var _0x126249 = !0x1, _0x48cd8e = ig.game.sessionData.unlockedSequence[this.worldId][this.sectionId], _0xaa69aa = 0x0; _0xaa69aa < _0x48cd8e.length; _0xaa69aa++) {
            var _0x10f138 = _0x48cd8e[_0xaa69aa];
            if (_0x10f138.blockId == this.blockId && 0x0 <= _0x10f138.tiles.indexOf(this.tileId)) {
              _0x126249 = !0x0;
              break;
            }
          }
          if (!_0x126249) {
            this.isActive = !0x0, this.isBuyable = !0x1, curState(), this.tileData.isActive = !0x0, this.tileData.visible = !0x1, this.tileData.isBuyable = !0x1;
            for (_0xaa69aa = 0x0; _0xaa69aa < ig.GameData.factoryDatas.length; _0xaa69aa++) if (_0x48cd8e = ig.GameData.factoryDatas[_0xaa69aa], _0x126249 = _0x48cd8e.tileData, _0x126249.worldId == this.worldId && _0x126249.sectionId == this.sectionId && _0x126249.blockId == this.blockId && _0x126249.tileId == this.tileId) {
              this.iconData = _0x48cd8e;
              break;
            }
            curState().addMoney(-this.price, !0x0), _0x126249 = ig.game.sessionData.unlockedSequence[this.worldId][this.sectionId];
            for (_0xaa69aa = 0x0; _0xaa69aa < _0x126249.length; _0xaa69aa++) if (_0x48cd8e = _0x126249[_0xaa69aa], _0x48cd8e.blockId == this.blockId) {
              _0x48cd8e.tiles.push(this.tileId);
              break;
            }
            ig.game.save('unlockedSequence', ig.game.sessionData.unlockedSequence), 'processorTile' == this.tileType && ig.GameData.checkProsReward(this.worldId, this.sectionId, this.blockId, this.tileId), 0x1 == ig.game.sessionData.tutorIdx && curState().tutorCtrl.tutorOnComplete(), this.onGoing = !0x0, this.tileData.onGoing = !0x0, _0xaa69aa = this.tileData.pos.y - ig.GameData.gapTweenTileY, 0x0 == _0xaa69aa && (_0xaa69aa = 0.1), new ig.TweenDef(this.tileData.pos).to({
              'y': _0xaa69aa
            }, 0x78).yoyo(!0x0).repeat(0x1).start(), _0xaa69aa = new ig.TweenDef(this.tileData.scale).to({
              'x': 0x1
            }, 0x78).onComplete(function () {
              this.showImage = this.onGoing = !0x1, this.tileData.visible = !0x0, this.tileData.onGoing = !0x1, curState().gMapDrawer.image.drawImageCanvas();
            }.bind(this)), new ig.TweenDef(this.tileData.scale).to({
              'x': 0.01
            }, 0x78).onComplete(function () {
              this.enableActive = !0x0, this.tileData.enableActive = !0x0;
            }.bind(this)).chain(_0xaa69aa).start(), this.iconData && (this.iconData.onGoing = !0x0, _0xaa69aa = this.iconData.y - 0x1e, new ig.TweenDef(this.iconData).to({
              'y': _0xaa69aa
            }, 0x78).yoyo(!0x0).repeat(0x1).onComplete(function () {
              this.iconData.onGoing = !0x1, curState().gFactory.generateResourceDelivery(this.iconData);
            }.bind(this)).start()), this.inputEnabled = !0x1, this.controller.checkUnlockedTiles();
          }
        }
      },
      'clicked': function () {
        if ((!ig.game.transition || !ig.game.transition.isClosed) && !this.isActive && !(ig.game.sessionData.money < this.price) && !this.tileData.onGoing && !this.isClicked && !this.onGoing) {
          var _0x30769f = ig.game.pointer.pos,
            _0x33dcb2 = this.generateClickArea(),
            _0x33dcb2 = ig.game.geom.polygon(_0x33dcb2);
          ig.game.math.polygonContains(_0x33dcb2, _0x30769f.x, _0x30769f.y) && (this.isClicked = !0x0, this.onClick.dispatch(), this.clickTime = new Date());
        }
      },
      'generateClickArea': function () {
        var _0x1a218a = -(this.width * this.anchor.x),
          _0x48cd03 = -(this.height * this.anchor.y),
          _0x41aa2f = ig.game.screen.x,
          _0x57f942 = ig.game.screen.y;
        this.isCameraLock && (_0x57f942 = _0x41aa2f = 0x0);
        for (var _0x2849b6 = [], _0x333e26 = 0x0; _0x333e26 < this.checkPoints.length; _0x333e26++) {
          var _0x1e6e38 = this.checkPoints[_0x333e26],
            _0x1e6e38 = ig.World.parentPos(this, _0x1a218a + _0x1e6e38.x, _0x48cd03 + _0x1e6e38.y);
          _0x1e6e38.x -= _0x41aa2f, _0x1e6e38.y -= _0x57f942;
          if (this.isResponsive) {
            var _0x16a9fb = ig.responsive.toAnchor(_0x1e6e38.x, _0x1e6e38.y, ig.game.anchorType);
            _0x1e6e38.x = _0x16a9fb.x, _0x1e6e38.y = _0x16a9fb.y;
          }
          _0x2849b6.push({
            'x': _0x1e6e38.x,
            'y': _0x1e6e38.y
          });
        }
        return _0x2849b6;
      },
      'checkPointerPos': function () {
        if (this.inputEnabled && ig.game.checkVisibility(this) && !(0x1 > this.size.x || 0x1 > this.size.y)) {
          var _0x10c417 = ig.game.pointer,
            _0x4b4e5e = this.generateClickArea(),
            _0x4b4e5e = ig.game.geom.polygon(_0x4b4e5e);
          ig.game.math.polygonContains(_0x4b4e5e, _0x10c417.pos.x, _0x10c417.pos.y) && 0x0 > _0x10c417.objectArray.indexOf(this) && _0x10c417.objectArray.push(this);
        }
      },
      'update': function () {
        this.parent(), this.checkPointerPos();
      },
      'released': function () {
        if (this.isClicked && !this.onGoing) {
          this.isClicked = !0x1;
          var _0x2179df = ig.game.pointer,
            _0x48dd73 = this.generateClickArea(),
            _0x48dd73 = ig.game.geom.polygon(_0x48dd73);
          ig.game.math.polygonContains(_0x48dd73, _0x2179df.pos.x, _0x2179df.pos.y) && this.onRelease.dispatch();
        }
      },
      'drawShape': function () {
        if (this.showImage) {
          var _0x310903 = ig.system.context;
          _0x310903.save();
          var _0x278043 = this.isActive && this.enableActive ? this.images.imgOn : this.images.imgOff;
          _0x310903.drawImage(_0x278043, 0x0, 0x0, _0x278043.width, _0x278043.height, (this.width - this.tWidth) / 0x2, (this.height - this.tHeight) / 0x2, _0x278043.width, _0x278043.height), _0x310903.restore();
        }
      },
      'draw': function () {
        this.parent();
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.buttons.button-unlock-block').requires('game.entities.objects.click-btn').defines(function () {
    EntityButtonUnlockBlock = EntityClickBtn.extend({
      'worldId': 0x0,
      'sectionId': 0x0,
      'blockId': 0x0,
      'init': function (_0x325951, _0x1aa91c, _0x327847) {
        this.parent(_0x325951, _0x1aa91c, _0x327847), this.onClick.add(this.unlockBlock, this), this.generatePos();
        if (this.worldId < curState().worldIds.startId || this.worldId >= curState().worldIds.endId) this.visible = !0x1;
      },
      'generatePos': function () {
        for (var _0x265c51 = ig.GameData.tileDatas[this.worldId][this.sectionId][this.blockId], _0x535649 = [], _0x2d5e37 = 0x0; _0x2d5e37 < _0x265c51.length; _0x2d5e37++) {
          var _0x52fed3 = _0x265c51[_0x2d5e37],
            _0x2c342e = _0x535649.indexOf(_0x52fed3.y);
          0x0 > _0x2c342e && _0x535649.push(_0x52fed3.y);
        }
        _0x535649.sort(function (_0x432141, _0x15c927) {
          return _0x432141 - _0x15c927;
        });
        for (var _0x417fb5 = [], _0x2d5e37 = 0x0; _0x2d5e37 < _0x265c51.length; _0x2d5e37++) {
          var _0x52fed3 = _0x265c51[_0x2d5e37],
            _0x2c342e = _0x535649.indexOf(_0x52fed3.y),
            _0x347c36 = _0x417fb5[_0x2c342e];
          Array.isArray(_0x347c36) || (_0x347c36 = _0x417fb5[_0x2c342e] = []), _0x347c36.push(_0x52fed3);
        }
        _0x265c51 = Math.floor(_0x417fb5.length / 0x2), 0x0 == _0x417fb5.length % 0x2 && (_0x535649 = _0x265c51 - 0x1, _0x265c51 = _0x417fb5[_0x535649].length >= _0x417fb5[_0x265c51].length ? _0x535649 : _0x265c51), _0x417fb5 = _0x417fb5[_0x265c51], _0x265c51 = _0x417fb5[0x0], _0x417fb5 = _0x417fb5[_0x417fb5.length - 0x1], _0x535649 = _0x265c51.x, _0x417fb5 = _0x535649 + (_0x417fb5.x + _0x417fb5.tWidth - _0x535649) / 0x2, _0x2d5e37 = curState().gMapDrawer, _0x52fed3 = _0x265c51.y + (_0x2d5e37.image.gapY + _0x2d5e37.image.topGap) / 0x2, _0x265c51 = -(_0x2d5e37.width * _0x2d5e37.anchor.x), _0x2c342e = -(_0x2d5e37.height * _0x2d5e37.anchor.y), _0x2d5e37 = curState().gMapDrawer, _0x535649 = _0x2d5e37.image, _0x2d5e37 = _0x2d5e37.image.pivot, _0x52fed3 = _0x52fed3 + _0x2c342e + _0x2d5e37.y - _0x535649.posData.minY, this.x = _0x417fb5 + _0x265c51 + _0x2d5e37.x - _0x535649.posData.minX, this.y = _0x52fed3;
      },
      'unlockBlock': function () {
        for (var _0x40a736 = !0x1, _0x2f87ab = ig.game.sessionData.unlockedSequence[this.worldId][this.sectionId], _0x447359 = 0x0; _0x447359 < _0x2f87ab.length; _0x447359++) {
          var _0x30da77 = _0x2f87ab[_0x447359];
          if (_0x30da77.blockId == this.blockId) {
            _0x40a736 = !0x0;
            break;
          }
        }
        _0x40a736 || (ig.game.sessionData.onBoardData = {
          'worldId': this.worldId,
          'sectionId': this.sectionId,
          'blockId': this.blockId
        }, ig.game.save('onBoardData', ig.game.sessionData.onBoardData), _0x30da77 = {
          'blockId': this.blockId,
          'tiles': []
        }, ig.game.sessionData.unlockedSequence[this.worldId][this.sectionId].push(_0x30da77), ig.game.save('unlockedSequence', ig.game.sessionData.unlockedSequence), this.controller.generateNewArea(), 0x3 < ig.GameData.countUnlockedBlock(this.worldId, this.sectionId, this.blockId) && curState().showUpgradeBtn(), 0x2 == ig.game.sessionData.tutorIdx && curState().tutorCtrl.tutorOnComplete(), this.animateBlock());
      },
      'animateBlock': function () {
        for (var _0x2faa26 = ig.GameData.tileDatas[this.worldId][this.sectionId][this.blockId], _0x223311 = 0x0; _0x223311 < _0x2faa26.length; _0x223311++) {
          for (var _0x49873c = _0x2faa26[_0x223311], _0x4694ed = [_0x49873c.pos.y - 0x1e, _0x49873c.pos.y], _0x207a7d = 0x0; _0x207a7d < _0x4694ed.length; _0x207a7d++) 0x0 == _0x4694ed[_0x207a7d] && (_0x4694ed[_0x207a7d] += 0.1);
          var _0x1a42ea = 0x32 * _0x223311 + 0xa;
          _0x49873c.onGoing = !0x0, _0x207a7d = new ig.TweenDef(_0x49873c.pos).to({
            'y': _0x4694ed
          }, 0x96).onStart(function () {
            this.visible = !0x1;
          }.bind(_0x49873c));
          if (_0x223311 < _0x2faa26.length - 0x1) _0x207a7d.onComplete(function () {
            this.visible = !0x0, this.onGoing = !0x1;
          }.bind(_0x49873c));else _0x207a7d.onComplete(function () {
            this.visible = !0x0, this.onGoing = !0x1, curState().gMapDrawer.image.drawImageCanvas();
          }.bind(_0x49873c));
          curState().timeEvent.add(_0x1a42ea / 0x3e8, function () {
            csound.sfxPlay('popup'), this.start();
          }, _0x207a7d), _0x4694ed = null;
          for (_0x207a7d = 0x0; _0x207a7d < ig.GameData.factoryDatas.length; _0x207a7d++) {
            var _0x77e16f = ig.GameData.factoryDatas[_0x207a7d];
            _0x77e16f.tileData == _0x49873c && (_0x4694ed = _0x77e16f);
          }
          _0x4694ed && (_0x4694ed.onGoing = !0x0, _0x49873c = [_0x4694ed.y - 0x1e, _0x4694ed.y], new ig.TweenDef(_0x4694ed).to({
            'y': _0x49873c
          }, 0x96).delay(_0x1a42ea).onComplete(function () {
            this.onGoing = !0x1;
          }.bind(_0x4694ed)).start());
        }
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.objects.world-map').requires('game.entities.addon.locked-group', 'game.entities.objects.tile', 'game.entities.buttons.button-unlock-block').defines(function () {
    EntityWorldMap = EntityLockedGroup.extend({
      'tiles': [],
      'coins': [],
      'onBoardData': null,
      'unlockBlockBtns': [],
      'enableAutoZoomOut': !0x1,
      'init': function (_0x1f04be, _0x467c6a, _0x52f00e) {
        this.parent(_0x1f04be, _0x467c6a, _0x52f00e), this.gTiles = ig.game.addGroup(0x0, 0x0, {}, EntityLockedGroup), this.add(this.gTiles), this.gCoins = ig.game.addGroup(0x0, 0x0, {}, EntityLockedGroup), this.add(this.gCoins), _0x1f04be = ig.game.sessionData.onBoardData, null != _0x1f04be.blockId ? this.createBlocks(_0x1f04be.worldId, _0x1f04be.sectionId, _0x1f04be.blockId) : this.createUnlockBlockBtn(), this.onBoardData = {};
        for (var _0x44f349 in _0x1f04be) this.onBoardData[_0x44f349] = _0x1f04be[_0x44f349];
        this.checkUnlockedTiles(), this.checkActiveTiles();
      },
      'createBlocks': function (_0x8b951d, _0x3b38ee, _0x5e4ccf) {
        var _0x21f928 = ig.GameData.tileDatas[_0x8b951d][_0x3b38ee][_0x5e4ccf],
          _0x2648de = ig.game.sessionData.unlockedSequence[_0x8b951d][_0x3b38ee];
        _0x8b951d = [];
        for (_0x3b38ee = 0x0; _0x3b38ee < _0x2648de.length; _0x3b38ee++) {
          var _0x1d4007 = _0x2648de[_0x3b38ee];
          if (_0x1d4007.blockId == _0x5e4ccf) {
            _0x8b951d = _0x1d4007.tiles;
            break;
          }
        }
        this.tiles = [];
        for (_0x3b38ee = 0x0; _0x3b38ee < _0x21f928.length; _0x3b38ee++) {
          _0x5e4ccf = _0x21f928[_0x3b38ee];
          var _0x2648de = {},
            _0x1f0101;
          for (_0x1f0101 in _0x5e4ccf) 'x' == _0x1f0101 || 'y' == _0x1f0101 || (_0x2648de[_0x1f0101] = _0x5e4ccf[_0x1f0101]);
          _0x1d4007 = ig.TileController.generateTilePosition(_0x5e4ccf), _0x2648de = ig.game.spawnEntity(EntityTile, _0x1d4007.x, _0x1d4007.y, _0x2648de), _0x2648de.controller = this, this.gTiles.add(_0x2648de);
          if (_0x5e4ccf.worldId < curState().worldIds.startId || _0x5e4ccf.worldId >= curState().worldIds.endId) _0x2648de.visible = !0x1;
          if (0x0 <= _0x8b951d.indexOf(_0x2648de.tileId) || 'starterTile' == _0x2648de.tileType) _0x2648de.isActive = !0x0, _0x2648de.enableActive = !0x0;
          this.tiles.push(_0x2648de);
        }
      },
      'countUnlockTiles': function () {
        for (var _0x1f4309 = 0x0, _0xe08e5d = 0x0; _0xe08e5d < this.tiles.length; _0xe08e5d++) this.tiles[_0xe08e5d].isActive && _0x1f4309++;
        return _0x1f4309;
      },
      'generateNewArea': function () {
        var _0x5527a9 = curState().gMapDrawer;
        _0x5527a9.checkOnBoardDatas();
        for (var _0x53c05a = 0x0; _0x53c05a < this.unlockBlockBtns.length; _0x53c05a++) this.unlockBlockBtns[_0x53c05a].kill();
        this.unlockBlockBtns = [], _0x5527a9 = _0x5527a9.onBoardDatas;
        if (_0x5527a9.worldId != this.onBoardData.worldId || _0x5527a9.sectionId != this.onBoardData.sectionId || _0x5527a9.blockId != this.onBoardData.blockId) {
          for (var _0x293a4f in _0x5527a9) this.onBoardData[_0x293a4f] = _0x5527a9[_0x293a4f];
          this.createBlocks(_0x5527a9.worldId, _0x5527a9.sectionId, _0x5527a9.blockId);
        }
        this.checkUnlockedTiles();
      },
      'checkActiveTiles': function () {
        for (var _0x49c53b = 0x0; _0x49c53b <= ig.game.sessionData.onBoardData.worldId; _0x49c53b++) for (var _0x36675e = ig.GameData.tileDatas[_0x49c53b], _0x3fd1a0 = 0x0; _0x3fd1a0 < _0x36675e.length; _0x3fd1a0++) for (var _0x27a78e = _0x36675e[_0x3fd1a0], _0x277374 = 0x0; _0x277374 < _0x27a78e.length; _0x277374++) for (var _0x2f463a = _0x27a78e[_0x277374], _0x432492 = 0x0; _0x432492 < _0x2f463a.length; _0x432492++) {
          var _0xb2b882 = _0x2f463a[_0x432492];
          if ('processorTile' == _0xb2b882.tileType && _0xb2b882.isActive && 0x0 > ig.game.sessionData.unlockedProcessor[_0x49c53b].indexOf(_0x3fd1a0)) {
            ig.GameData.checkProsReward(_0x49c53b, _0x3fd1a0, _0x277374, _0x432492);
            return;
          }
        }
      },
      'createUnlockBlockBtn': function () {
        for (var _0x19cad5 = 0x0; _0x19cad5 < this.tiles.length; _0x19cad5++) this.tiles[_0x19cad5].kill();
        this.tiles = [];
        if (this.enableAutoZoomOutOnCompletingOneBlock && curState().pageReady && 0x2 < ig.game.sessionData.tutorIdx) {
          var _0x57ab0b = curState().minZoomLevel + 0x1;
          curState().zoomOutBtn.calculateZoomScale(_0x57ab0b);
        }
        var _0x19cad5 = ig.game.sessionData.onBoardData,
          _0x4381dd = curState().gMapDrawer;
        if (ig.GameData.checkWorldArea()) _0x57ab0b = _0x19cad5.worldId + 0x1, _0x57ab0b < ig.GameData.tileDatas.length ? _0x57ab0b >= curState().worldIds.endId ? curState().spawnNextAreaPopup() : (_0x57ab0b = curState().unlockWorldButtons[_0x57ab0b - 0x1], _0x57ab0b.checkIfBuyable(), curState().pageReady && curState().moveToAvailableUnlockWorldButton(_0x57ab0b)) : curState().pageReady && curState().spawnNextAreaPopup({
          'allCompleted': !0x0
        });else {
          for (var _0x57ab0b = this.checkSectionBlocks(), _0x32842c = [], _0x46d5ea = _0x19cad5.worldId, _0x39d934 = ig.GameData.tileDatas[_0x46d5ea][_0x57ab0b], _0x1b82a9 = 0x0; _0x1b82a9 < _0x39d934.length; _0x1b82a9++) {
            for (var _0x3a33aa = _0x39d934[_0x1b82a9], _0x394b17 = ig.game.sessionData.unlockedSequence[_0x46d5ea][_0x57ab0b], _0x41d775 = [], _0x19cad5 = 0x0; _0x19cad5 < _0x394b17.length; _0x19cad5++) {
              var _0x356bb8 = _0x394b17[_0x19cad5];
              if (_0x356bb8.blockId == _0x1b82a9) {
                _0x41d775 = _0x356bb8.tiles;
                break;
              }
            }
            if (_0x41d775.length != _0x3a33aa.length) for (_0x394b17 = 0x0; _0x394b17 < _0x3a33aa.length; _0x394b17++) {
              _0x41d775 = this.checkAllTileSurrounding(_0x3a33aa[_0x394b17]);
              for (_0x19cad5 = 0x0; _0x19cad5 < _0x41d775.length; _0x19cad5++) _0x356bb8 = _0x41d775[_0x19cad5], _0x356bb8.worldId < curState().worldIds.startId || _0x356bb8.worldId >= curState().worldIds.endId || _0x356bb8.isActive && 0x0 > _0x32842c.indexOf(_0x1b82a9) && _0x32842c.push(_0x1b82a9);
            }
          }
          _0x39d934 = _0x4381dd.image.gapY + _0x4381dd.image.topGap, _0x3a33aa = -(_0x4381dd.width * _0x4381dd.anchor.x), _0x4381dd = -(_0x4381dd.height * _0x4381dd.anchor.y);
          for (_0x19cad5 = 0x0; _0x19cad5 < _0x32842c.length; _0x19cad5++) _0x1b82a9 = _0x32842c[_0x19cad5], _0x394b17 = ig.GameData.tileDatas[_0x46d5ea][_0x57ab0b][_0x1b82a9], _0x394b17 = curState().generateLocalBlockArea(_0x394b17), _0x41d775 = _0x394b17.height, _0x1b82a9 = ig.CallAsset.addFrame(_0x394b17.centerX + _0x3a33aa, _0x394b17.centerY + _0x4381dd - (_0x41d775 - Math.floor(_0x41d775 / _0x39d934) * _0x39d934) / 0x2, 'ingame/ui/lock2', {
            'controller': this,
            'worldId': _0x46d5ea,
            'sectionId': _0x57ab0b,
            'blockId': _0x1b82a9
          }, EntityButtonUnlockBlock), curState().gLocked.add(_0x1b82a9), this.unlockBlockBtns.push(_0x1b82a9);
          0x2 == ig.game.sessionData.tutorIdx && curState().pageReady && curState().tutorCtrl.checkTutor();
        }
      },
      'checkSectionBlocks': function () {
        var _0x6f5da = ig.game.sessionData.onBoardData,
          _0x3f1f00 = _0x6f5da.sectionId;
        return ig.GameData.tileDatas[_0x6f5da.worldId][_0x6f5da.sectionId].length == ig.game.sessionData.unlockedSequence[_0x6f5da.worldId][_0x6f5da.sectionId].length && _0x3f1f00++, _0x3f1f00;
      },
      'checkUnlockedTiles': function () {
        this.countUnlockTiles() == this.tiles.length && this.createUnlockBlockBtn();
        if (0x0 != this.tiles.length) {
          for (var _0x4dd55f = [], _0x766bba = 0x0; _0x766bba < this.tiles.length; _0x766bba++) {
            var _0x44a18e = this.tiles[_0x766bba];
            if (!_0x44a18e.isActive) for (var _0x8d7575 = this.checkAllTileSurrounding(ig.GameData.tileDatas[_0x44a18e.worldId][_0x44a18e.sectionId][_0x44a18e.blockId][_0x44a18e.tileId]), _0x6e2421 = 0x0; _0x6e2421 < _0x8d7575.length; _0x6e2421++) {
              var _0x1b839e = _0x8d7575[_0x6e2421];
              _0x1b839e.worldId < curState().worldIds.startId || _0x1b839e.worldId >= curState().worldIds.endId || _0x1b839e.isActive && 0x0 > _0x4dd55f.indexOf(_0x44a18e) && _0x4dd55f.push(_0x44a18e);
            }
          }
          for (_0x766bba = 0x0; _0x766bba < _0x4dd55f.length; _0x766bba++) _0x44a18e = _0x4dd55f[_0x766bba], _0x44a18e.setBuyable();
        }
      },
      'checkAllTileSurrounding': function (_0x4b6d75) {
        for (var _0x143dd2 = this.generateTileBound(_0x4b6d75), _0x2320a8 = [], _0x4fed0a = 0x0; _0x4fed0a < ig.GameData.tileDatas.length; _0x4fed0a++) for (var _0x4dd5cb = ig.GameData.tileDatas[_0x4fed0a], _0x26c5c0 = 0x0; _0x26c5c0 < _0x4dd5cb.length; _0x26c5c0++) for (var _0x2c7394 = _0x4dd5cb[_0x26c5c0], _0x59222b = 0x0; _0x59222b < _0x2c7394.length; _0x59222b++) for (var _0x23d67a = _0x2c7394[_0x59222b], _0x33d346 = 0x0; _0x33d346 < _0x23d67a.length; _0x33d346++) {
          var _0x332705 = _0x23d67a[_0x33d346];
          if (_0x332705 != _0x4b6d75) {
            var _0x1eb96c = this.generateTileBound(_0x332705);
            ig.game.math.rectIntersects(_0x143dd2, _0x1eb96c) && 0x0 > _0x2320a8.indexOf(_0x332705) && _0x2320a8.push(_0x332705);
          }
        }
        return _0x2320a8;
      },
      'generateTileBound': function (_0x473a20) {
        var _0x19aa71 = _0x473a20.width ? _0x473a20.width : _0x473a20.tWidth,
          _0x5b8799 = _0x473a20.height ? _0x473a20.height : _0x473a20.tHeight,
          _0x20a5a8 = 0.5,
          _0x359526 = 0.5;
        _0x473a20.anchor && (_0x20a5a8 = _0x473a20.anchor.x, _0x359526 = _0x473a20.anchor.y);
        var _0x4232ff = _0x473a20.tWidth + 0x5,
          _0x1f3522 = _0x473a20.tHeight;
        return ig.game.geom.rectangle(_0x473a20.x + -(_0x19aa71 * _0x20a5a8) + (_0x19aa71 - _0x4232ff) / 0x2, _0x473a20.y + -(_0x5b8799 * _0x359526) + (_0x5b8799 - _0x1f3522) / 0x2, _0x4232ff, _0x1f3522);
      },
      'update': function () {
        this.parent();
      }
    });
  }), ig.baked = !0x0, ig.module('plugins.addon.custom-canvas').defines(function () {
    ig.CustomCanvas = ig.Class.extend({
      'sourceX': 0x0,
      'sourceY': 0x0,
      'size': {
        'x': 0x0,
        'y': 0x0
      },
      'renewCanvas': !0x1,
      'init': function (_0x1902ab, _0x1cf431, _0xe464c4, _0x178acf) {
        ig.merge(this, _0x178acf), this.height = _0xe464c4, this.width = _0x1cf431, this.size.x = _0x1cf431, this.size.y = _0xe464c4, this.canvasName = _0x1902ab, _0x1cf431 = this.setCanvas(_0x1cf431, _0xe464c4), this.drawEle = hiddenCanvases[_0x1902ab].ele, this.drawCtx = hiddenCanvases[_0x1902ab].ctx, this.drawImageCanvas(_0x1cf431.ctx);
      },
      'setCanvas': function (_0x3c817d, _0x3d36f6) {
        var _0x1d3e94 = hiddenCanvases[this.canvasName];
        return _0x1d3e94 ? this.renewCanvas && (hiddenCanvases[this.canvasName] = this.create_canvas_context(_0x3c817d, _0x3d36f6), _0x1d3e94 = hiddenCanvases[this.canvasName]) : (hiddenCanvases[this.canvasName] = this.create_canvas_context(_0x3c817d, _0x3d36f6), _0x1d3e94 = hiddenCanvases[this.canvasName]), _0x1d3e94;
      },
      'create_canvas_context': function (_0x368e68, _0x2d75a6) {
        var _0x469b77 = document.createElement('canvas');
        _0x469b77.width = _0x368e68, _0x469b77.height = _0x2d75a6;
        var _0x56ad5b = _0x469b77.getContext('2d');
        return {
          'ele': _0x469b77,
          'ctx': _0x56ad5b
        };
      },
      'drawImageCanvas': function () {},
      'draw': function (_0x1cc3a6, _0x2b2e0b) {
        ig.system.context.save(), ig.system.context.drawImage(this.drawEle, this.sourceX, this.sourceY, this.size.x, this.size.y, ig.system.getDrawPos(_0x1cc3a6), ig.system.getDrawPos(_0x2b2e0b), this.size.x, this.size.y), ig.system.context.restore(), ig.Image.drawCount++;
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.objects.area-img-drawer').requires('plugins.addon.custom-canvas').defines(function () {
    ig.AreaImgDrawer = ig.CustomCanvas.extend({
      'areaId': 0x0,
      'init': function (_0x416c93) {
        ig.merge(this, _0x416c93), this.worldIds = curState().generateWorldId(this.areaId), this.ingameImg = ig.Image.cache[imgCache.ingame.path.img], this.strokeLineWidth = ig.GameData.mapStrokeLineWidth, this.imgLocked = ig.TileController.tileLockedImg, this.pivot = {
          'x': 0x0,
          'y': 0x0
        }, this.tileSeq = [], this.tileDatas = [];
        for (var _0x4c2d0e = null, _0xa4157c = null, _0x5962d7 = null, _0x53602d = null, _0x39a672 = 0x0; _0x39a672 < ig.GameData.tileSeq.length; _0x39a672++) {
          var _0x98676f = ig.GameData.tileSeq[_0x39a672];
          if (!(_0x98676f.worldId < this.worldIds.startId || _0x98676f.worldId >= this.worldIds.endId)) {
            var _0x3cd73b = _0x98676f.x + _0x98676f.tWidth,
              _0x54e7dd = _0x98676f.y + _0x98676f.tHeight;
            null == _0x4c2d0e ? _0x4c2d0e = _0x98676f.x : _0x98676f.x < _0x4c2d0e && (_0x4c2d0e = _0x98676f.x), null == _0xa4157c ? _0xa4157c = _0x3cd73b : _0x3cd73b > _0xa4157c && (_0xa4157c = _0x3cd73b), null == _0x5962d7 ? _0x5962d7 = _0x98676f.y : _0x98676f.y < _0x5962d7 && (_0x5962d7 = _0x98676f.y), null == _0x53602d ? _0x53602d = _0x54e7dd : _0x54e7dd > _0x53602d && (_0x53602d = _0x54e7dd), _0x98676f.isActive = !0x1, _0x98676f.visible = !0x0, _0x98676f.scale = {
              'x': 0x1,
              'y': 0x1
            }, _0x98676f.enableActive = !0x1, _0x98676f.isBuyable = !0x1, _0x3cd73b = (_0x3cd73b = tileImages[_0x98676f.worldId][_0x98676f.sectionId][_0x98676f.blockId][_0x98676f.tileId]) ? _0x3cd73b : ig.TileController.createTileImage(_0x98676f), _0x98676f.images = _0x3cd73b, this.tileSeq.push(_0x98676f);
          }
        }
        _0x3cd73b = this.sortByYAscending(this.tileSeq), this.tileSeq = [];
        for (_0x39a672 = 0x0; _0x39a672 < _0x3cd73b.length; _0x39a672++) _0x98676f = _0x3cd73b[_0x39a672], _0x98676f.pos = {
          'x': _0x98676f.x - _0x4c2d0e,
          'y': _0x98676f.y - _0x5962d7
        }, this.tileSeq.push(_0x98676f);
        _0x3cd73b = 0x0;
        for (_0x39a672 = this.worldIds.startId; _0x39a672 < this.worldIds.endId; _0x39a672++) {
          _0x54e7dd = ig.GameData.tileDatas[_0x39a672], this.tileDatas[_0x3cd73b] = [];
          for (var _0x46d7fa = 0x0; _0x46d7fa < _0x54e7dd.length; _0x46d7fa++) {
            var _0x3bb78c = _0x54e7dd[_0x46d7fa];
            this.tileDatas[_0x3cd73b][_0x46d7fa] = [];
            for (var _0x2db761 = 0x0; _0x2db761 < _0x3bb78c.length; _0x2db761++) {
              var _0x33cef7 = _0x3bb78c[_0x2db761];
              this.tileDatas[_0x3cd73b][_0x46d7fa][_0x2db761] = [];
              for (var _0x13a926 = 0x0; _0x13a926 < _0x33cef7.length; _0x13a926++) _0x98676f = _0x33cef7[_0x13a926], this.checkTileExists(_0x98676f), this.tileDatas[_0x3cd73b][_0x46d7fa][_0x2db761][_0x13a926] = _0x98676f;
            }
          }
          _0x3cd73b++;
        }
        this.gapY = tileMapCache.tileSurfaceHeight, this.topGap = tileMapCache.tileTopGap, _0x39a672 = this.strokeLineWidth / 0x2, this.posData = {
          'minX': _0x4c2d0e - _0x39a672,
          'maxX': _0xa4157c,
          'minY': _0x5962d7 - _0x39a672,
          'maxY': _0x53602d
        }, _0x4c2d0e = Math.floor(_0xa4157c - _0x4c2d0e + this.strokeLineWidth) + 0x1, _0x5962d7 = Math.floor(_0x53602d - _0x5962d7 + this.strokeLineWidth) + 0x1, this.pivot.y = ig.GameData.gapTweenTileY, _0x5962d7 += this.pivot.y, this.checkUnlockedDatas(), this.parent('map-area' + this.areaId, _0x4c2d0e, _0x5962d7, _0x416c93);
      },
      'sortByYAscending': function (_0x131f7a) {
        for (var _0x4096a3 = []; _0x4096a3.length < _0x131f7a.length;) {
          for (var _0x4e6df5 = null, _0x597968 = 0x0; _0x597968 < _0x131f7a.length; _0x597968++) {
            var _0x2d7836 = _0x131f7a[_0x597968];
            0x0 <= _0x4096a3.indexOf(_0x2d7836) || (_0x4e6df5 ? _0x2d7836.y + _0x2d7836.tHeight < _0x4e6df5.y + _0x4e6df5.tHeight && (_0x4e6df5 = _0x2d7836) : _0x4e6df5 = _0x2d7836);
          }
          _0x4096a3.push(_0x4e6df5);
        }
        return _0x4096a3;
      },
      'checkTileExists': function (_0x506048) {
        if (!(null != ig.game.sessionData.onBoardData && (_0x506048.worldId < curState().worldIds.startId || _0x506048.worldId >= curState().worldIds.endId || ig.game.sessionData.onBoardData.worldId < _0x506048.worldId))) {
          var _0x4f36df = _0x506048.worldId,
            _0x1e5761 = _0x506048.sectionId,
            _0x3583af = _0x506048.blockId,
            _0x213c24 = _0x506048.tileId,
            _0x51d5d7 = ig.GameData.worldTilesId[_0x4f36df][_0x1e5761][_0x3583af];
          if (_0x506048.tId == _0x51d5d7.startTile) {
            for (var _0x1cdcdb = ig.game.sessionData.unlockedSequence[_0x4f36df][_0x1e5761], _0x2082bf = [], _0xbb6266 = 0x0; _0xbb6266 < _0x1cdcdb.length; _0xbb6266++) if (_0x51d5d7 = _0x1cdcdb[_0xbb6266], _0x51d5d7.blockId == _0x3583af) {
              _0x2082bf = _0x51d5d7.tiles;
              break;
            }
            0x0 > _0x2082bf.indexOf(_0x213c24) && (_0x506048.isActive = !0x0, ig.game.sessionData.onBoardData = {
              'worldId': _0x4f36df,
              'sectionId': _0x1e5761,
              'blockId': _0x3583af
            }, ig.game.save('onBoardData', ig.game.sessionData.onBoardData), ig.game.sessionData.unlockedSequence[_0x4f36df][_0x1e5761].push({
              'blockId': _0x3583af,
              'tiles': [_0x213c24]
            }), ig.game.save('unlockedSequence', ig.game.sessionData.unlockedSequence));
          }
        }
      },
      'checkUnlockedDatas': function () {
        for (var _0x40c262 = ig.game.sessionData.unlockedSequence, _0xe93e5 = this.worldIds.startId; _0xe93e5 < this.worldIds.endId; _0xe93e5++) for (var _0x4c679a = _0x40c262[_0xe93e5], _0x2dfef5 = 0x0; _0x2dfef5 < _0x4c679a.length; _0x2dfef5++) for (var _0x1e7cb8 = _0x4c679a[_0x2dfef5], _0x21b3f8 = 0x0; _0x21b3f8 < _0x1e7cb8.length; _0x21b3f8++) for (var _0x2b7fdd = _0x1e7cb8[_0x21b3f8], _0x1a60d2 = _0x2b7fdd.blockId, _0x2b6c59 = 0x0; _0x2b6c59 < _0x2b7fdd.tiles.length; _0x2b6c59++) this.setUnlockDatas(_0xe93e5, _0x2dfef5, _0x1a60d2, _0x2b7fdd.tiles[_0x2b6c59]);
      },
      'setUnlockDatas': function (_0x4713aa, _0x511042, _0x304087, _0x2a7a29) {
        _0x4713aa -= this.worldIds.startId, _0x4713aa = this.tileDatas[_0x4713aa][_0x511042][_0x304087], _0x511042 = null;
        for (_0x304087 = 0x0; _0x304087 < _0x4713aa.length; _0x304087++) if (_0x511042 = _0x4713aa[_0x304087], _0x511042.tileId == _0x2a7a29) return _0x511042.isActive = !0x0, _0x511042.enableActive = !0x0, _0x511042;
      },
      'drawImageCanvas': function () {
        var _0x1b8760 = this.drawEle.getContext('2d');
        _0x1b8760.clearRect(0x0, 0x0, this.width, this.height), _0x1b8760.translate(this.pivot.x, this.pivot.y);
        for (var _0x2d2e37 = 0x0; _0x2d2e37 < this.tileSeq.length; _0x2d2e37++) {
          var _0x14779c = this.tileSeq[_0x2d2e37];
          if (_0x14779c.visible) {
            var _0x398a82 = _0x14779c.worldId > ig.game.sessionData.onBoardData.worldId ? this.imgLocked : _0x14779c.isActive && _0x14779c.enableActive ? _0x14779c.images.imgOn : _0x14779c.images.imgOff,
              _0x23f541 = _0x14779c.x - this.posData.minX,
              _0x5449ff = _0x14779c.y - this.posData.minY;
            _0x1b8760.drawImage(_0x398a82, 0x0, 0x0, _0x398a82.width, _0x398a82.height, _0x23f541, _0x5449ff, _0x398a82.width, _0x398a82.height);
          }
        }
        this.borderedTiles = [];
        for (_0x2d2e37 = 0x0; _0x2d2e37 < this.tileDatas.length; _0x2d2e37++) {
          _0x14779c = this.tileDatas[_0x2d2e37];
          for (_0x398a82 = 0x0; _0x398a82 < _0x14779c.length; _0x398a82++) {
            _0x23f541 = _0x14779c[_0x398a82];
            for (_0x5449ff = 0x0; _0x5449ff < _0x23f541.length; _0x5449ff++) this.checkTileStroke(_0x23f541[_0x5449ff]);
          }
        }
        for (_0x2d2e37 = 0x0; _0x2d2e37 < this.tileSeq.length; _0x2d2e37++) _0x14779c = this.tileSeq[_0x2d2e37], _0x14779c.visible || (_0x398a82 = _0x14779c.isActive && _0x14779c.enableActive ? _0x14779c.images.imgOn : _0x14779c.images.imgOff, _0x23f541 = _0x14779c.pos.x + _0x398a82.width / 0x2, _0x5449ff = _0x14779c.pos.y + _0x398a82.height / 0x2, _0x1b8760.save(), _0x1b8760.translate(_0x23f541, _0x5449ff), _0x1b8760.scale(_0x14779c.scale.x, _0x14779c.scale.y), _0x1b8760.drawImage(_0x398a82, 0x0, 0x0, _0x398a82.width, _0x398a82.height, -(_0x398a82.width / 0x2), -(_0x398a82.height / 0x2), _0x398a82.width, _0x398a82.height), _0x1b8760.restore());
        _0x1b8760.translate(-this.pivot.x, -this.pivot.y);
      },
      'checkTileStroke': function (_0x32a8eb) {
        for (var _0x4afd1b = 0x0; _0x4afd1b < _0x32a8eb.length; _0x4afd1b++) {
          var _0x526e31 = _0x32a8eb[_0x4afd1b],
            _0x411c7c = this.generateSixAngles(_0x526e31),
            _0x1470af = this.checkTileSurrounding(_0x526e31, _0x32a8eb),
            _0x38bd26 = this.checkTileSurrounding(_0x526e31, this.tileSeq);
          if (null != _0x1470af) {
            var _0x5f5c82 = {},
              _0x27cf3c;
            for (_0x27cf3c in _0x411c7c) _0x5f5c82[_0x27cf3c] = !0x1;
            for (_0x27cf3c in _0x1470af) _0x5f5c82[_0x27cf3c] = _0x1470af[_0x27cf3c];
            if (null != _0x38bd26) {
              for (_0x27cf3c in _0x5f5c82) !_0x5f5c82[_0x27cf3c] && _0x38bd26[_0x27cf3c] && 0x0 <= this.borderedTiles.indexOf(_0x38bd26[_0x27cf3c]) && (_0x5f5c82[_0x27cf3c] = _0x38bd26[_0x27cf3c]);
            }
            _0x411c7c = !0x1;
            for (_0x27cf3c in _0x5f5c82) _0x5f5c82[_0x27cf3c] || (_0x411c7c = !0x0);
            _0x411c7c && (this.borderedTiles.push(_0x526e31), this.drawTileStroke(_0x526e31, _0x5f5c82));
          }
        }
      },
      'checkTileSurrounding': function (_0x1ce973, _0x4738a6) {
        for (var _0x50af19 = [], _0xeb2f13 = this.generateTileBound(_0x1ce973), _0x5733d1 = 0x0; _0x5733d1 < _0x4738a6.length; _0x5733d1++) {
          var _0x1354b9 = _0x4738a6[_0x5733d1];
          if (_0x1354b9 != _0x1ce973) {
            var _0x11530e = this.generateTileBound(_0x1354b9);
            ig.game.math.rectIntersects(_0xeb2f13, _0x11530e) && 0x0 > _0x50af19.indexOf(_0x1354b9) && _0x50af19.push(_0x1354b9);
          }
        }
        for (var _0x1354b9 = {}, _0x244492 = this.generateSixAngles(_0x1ce973), _0x5733d1 = 0x0; _0x5733d1 < _0x50af19.length; _0x5733d1++) {
          var _0x86704d = _0x50af19[_0x5733d1],
            _0x11530e = this.generateTileBound(_0x86704d),
            _0x11530e = ig.game.math.angleBetween(_0xeb2f13.centerX, _0xeb2f13.centerY, _0x11530e.centerX, _0x11530e.centerY),
            _0x4878a5;
          for (_0x4878a5 in _0x244492) {
            var _0x3ce65a = _0x244492[_0x4878a5];
            if ('leftAngle' == _0x4878a5) {
              if (_0x11530e < _0x3ce65a.max || _0x11530e > _0x3ce65a.min) _0x1354b9[_0x4878a5] = _0x86704d;
            } else _0x11530e > _0x3ce65a.min && _0x11530e < _0x3ce65a.max && (_0x1354b9[_0x4878a5] = _0x86704d);
          }
        }
        return _0x1354b9;
      },
      'checkSurroundAngles': function (_0x15a66b) {
        var _0x44bf88 = [];
        _0x15a66b = this.generateTileBound(_0x15a66b);
        for (var _0x21d8ff = 0x0; _0x21d8ff < this.tileSeq.length; _0x21d8ff++) {
          var _0x13c21c = this.tileSeq[_0x21d8ff],
            _0x1165c1 = this.generateTileBound(_0x13c21c);
          ig.game.math.rectIntersects(_0x15a66b, _0x1165c1) && 0x0 > _0x44bf88.indexOf(_0x13c21c) && _0x44bf88.push(_0x13c21c);
        }
      },
      'drawTileStroke': function (_0x487a50, _0x1a713d) {
        var _0x2a5efc = this.drawCtx;
        _0x2a5efc.lineWidth = this.strokeLineWidth, _0x2a5efc.strokeStyle = 'black';
        var _0x10c21e = _0x487a50.x - this.posData.minX,
          _0x11eb03 = _0x487a50.y - this.posData.minY,
          _0x970f8b = _0x487a50.tWidth / 0x2,
          _0x215eb8 = _0x10c21e + _0x970f8b,
          _0x46cbfe = _0x10c21e + _0x487a50.tWidth,
          _0x2f8fa8 = _0x11eb03 + this.gapY + this.topGap,
          _0x1602dc = _0x11eb03 + this.topGap,
          _0x514589 = _0x11eb03 + this.gapY;
        _0x1a713d.leftAngle || (_0x2a5efc.save(), _0x2a5efc.beginPath(), _0x2a5efc.moveTo(_0x10c21e, _0x1602dc), _0x2a5efc.lineTo(_0x10c21e, _0x514589), _0x2a5efc.stroke(), _0x2a5efc.restore()), _0x1a713d.nwAngle || (_0x2a5efc.save(), _0x2a5efc.beginPath(), _0x2a5efc.moveTo(_0x10c21e, _0x1602dc), _0x2a5efc.lineTo(_0x215eb8, _0x11eb03), _0x2a5efc.stroke(), _0x2a5efc.restore()), _0x1a713d.neAngle || (_0x2a5efc.save(), _0x2a5efc.beginPath(), _0x2a5efc.moveTo(_0x10c21e + _0x970f8b, _0x11eb03), _0x2a5efc.lineTo(_0x46cbfe, _0x1602dc), _0x2a5efc.stroke(), _0x2a5efc.restore()), _0x1a713d.rightAngle || (_0x2a5efc.save(), _0x2a5efc.beginPath(), _0x2a5efc.moveTo(_0x46cbfe, _0x1602dc), _0x2a5efc.lineTo(_0x46cbfe, _0x514589), _0x2a5efc.stroke(), _0x2a5efc.restore()), _0x1a713d.seAngle || (_0x2a5efc.save(), _0x2a5efc.beginPath(), _0x2a5efc.moveTo(_0x46cbfe, _0x514589), _0x2a5efc.lineTo(_0x215eb8, _0x2f8fa8), _0x2a5efc.stroke(), _0x2a5efc.restore()), _0x1a713d.swAngle || (_0x2a5efc.save(), _0x2a5efc.beginPath(), _0x2a5efc.moveTo(_0x215eb8, _0x2f8fa8), _0x2a5efc.lineTo(_0x10c21e, _0x514589), _0x2a5efc.stroke(), _0x2a5efc.restore());
      },
      'generateSixAngles': function (_0x5ed2bc) {
        var _0x4be5b2 = this.generateTileBound(_0x5ed2bc),
          _0x3dd21f = 0.5 * _0x5ed2bc.tWidth,
          _0x3e6fa6 = _0x5ed2bc.x - this.posData.minX,
          _0x4cef46 = _0x5ed2bc.y - this.posData.minY,
          _0x164abf = _0x4cef46 - this.gapY,
          _0x13c0b0 = ig.game.geom.rectangle(_0x3e6fa6 - _0x3dd21f, _0x164abf, _0x5ed2bc.tWidth, _0x4be5b2.height),
          _0x48be34 = ig.game.math.angleBetween(_0x4be5b2.centerX, _0x4be5b2.centerY, _0x13c0b0.right, _0x4cef46),
          _0x48be34 = {
            'min': ig.game.math.angleBetween(_0x4be5b2.centerX, _0x4be5b2.centerY, _0x13c0b0.centerX, _0x13c0b0.bottom),
            'max': _0x48be34
          },
          _0x5f9059 = ig.game.geom.rectangle(_0x3e6fa6 + _0x3dd21f, _0x164abf, _0x5ed2bc.tWidth, _0x4be5b2.height),
          _0x164abf = ig.game.math.angleBetween(_0x4be5b2.centerX, _0x4be5b2.centerY, _0x5f9059.x, _0x4cef46),
          _0x591286 = ig.game.math.angleBetween(_0x4be5b2.centerX, _0x4be5b2.centerY, _0x5f9059.centerX, _0x5f9059.bottom),
          _0x164abf = {
            'min': _0x164abf,
            'max': _0x591286
          },
          _0x43b1ca = _0x4cef46 + this.gapY,
          _0x4cef46 = ig.game.geom.rectangle(_0x3e6fa6 - _0x3dd21f, _0x43b1ca, _0x5ed2bc.tWidth, _0x4be5b2.height),
          _0x591286 = ig.game.math.angleBetween(_0x4be5b2.centerX, _0x4be5b2.centerY, _0x4cef46.centerX, _0x4cef46.y),
          _0x591286 = {
            'min': ig.game.math.angleBetween(_0x4be5b2.centerX, _0x4be5b2.centerY, _0x4cef46.right, _0x4be5b2.bottom),
            'max': _0x591286
          },
          _0x3dd21f = ig.game.geom.rectangle(_0x3e6fa6 + _0x3dd21f, _0x43b1ca, _0x5ed2bc.tWidth, _0x4be5b2.height);
        return _0x5ed2bc = ig.game.math.angleBetween(_0x4be5b2.centerX, _0x4be5b2.centerY, _0x3dd21f.centerX, _0x3dd21f.y), _0x3e6fa6 = ig.game.math.angleBetween(_0x4be5b2.centerX, _0x4be5b2.centerY, _0x3dd21f.x, _0x4be5b2.bottom), _0x5ed2bc = {
          'min': _0x5ed2bc,
          'max': _0x3e6fa6
        }, _0x5f9059 = ig.game.math.angleBetween(_0x4be5b2.centerX, _0x4be5b2.centerY, _0x5f9059.centerX, _0x5f9059.bottom), _0x3dd21f = ig.game.math.angleBetween(_0x4be5b2.centerX, _0x4be5b2.centerY, _0x3dd21f.centerX, _0x3dd21f.y), _0x5f9059 = {
          'min': _0x5f9059,
          'max': _0x3dd21f
        }, _0x13c0b0 = ig.game.math.angleBetween(_0x4be5b2.centerX, _0x4be5b2.centerY, _0x13c0b0.centerX, _0x13c0b0.bottom), _0x4be5b2 = {
          'min': ig.game.math.angleBetween(_0x4be5b2.centerX, _0x4be5b2.centerY, _0x4cef46.centerX, _0x4cef46.y),
          'max': _0x13c0b0
        }, {
          'nwAngle': _0x48be34,
          'neAngle': _0x164abf,
          'swAngle': _0x591286,
          'seAngle': _0x5ed2bc,
          'rightAngle': _0x5f9059,
          'leftAngle': _0x4be5b2
        };
      },
      'generateTileBound': function (_0x50217d) {
        var _0x4f8abe = _0x50217d.tWidth + 0x5;
        return ig.game.geom.rectangle(_0x50217d.x + (_0x50217d.tWidth - _0x4f8abe) - this.posData.minX, _0x50217d.y - this.posData.minY, _0x4f8abe, this.gapY + this.topGap);
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.objects.world-map-drawer').requires('game.entities.addon.manual-draw-entity', 'game.entities.objects.area-img-drawer', 'plugins.addon.custom-canvas').defines(function () {
    EntityWorldMapDrawer = EntityManualDrawEntity.extend({
      'onBoardDatas': {},
      'init': function (_0xfdd669, _0x281c59, _0xafb5f1) {
        this.parent(_0xfdd669, _0x281c59, _0xafb5f1), this.image = new ig.AreaImgDrawer({
          'controller': this,
          'areaId': ig.GameData.areaId
        }), this.setShape(this.image.width, this.image.height), this.anchor.setTo(0.5), this.tileDatas = this.image.tileDatas, this.checkOnBoardDatas();
      },
      'checkOnBoardDatas': function () {
        if (null == ig.game.sessionData.onBoardData.blockId) {
          var _0x17c697 = ig.game.sessionData.onBoardData.worldId - 0x1,
            _0x4a7e21 = ig.game.sessionData.unlockedSequence[_0x17c697],
            _0x57ad84 = _0x4a7e21.length - 0x1,
            _0x4a7e21 = _0x4a7e21[_0x57ad84];
          this.onBoardDatas = {
            'worldId': _0x17c697,
            'sectionId': _0x57ad84,
            'blockId': _0x4a7e21[_0x4a7e21.length - 0x1].blockId
          };
        } else {
          for (_0x17c697 in ig.game.sessionData.onBoardData) this.onBoardDatas[_0x17c697] = ig.game.sessionData.onBoardData[_0x17c697];
        }
      },
      'checkIfTilesAnimating': function () {
        for (var _0x457567 = !0x1, _0x3c0fe0 = 0x0; _0x3c0fe0 < ig.GameData.tileSeq.length; _0x3c0fe0++) if (ig.GameData.tileSeq[_0x3c0fe0].onGoing) {
          _0x457567 = !0x0;
          break;
        }
        return _0x457567;
      },
      'drawShape': function () {
        (this.worldOnGoing = this.checkIfTilesAnimating()) && this.image.drawImageCanvas(), this.image.draw(0x0, 0x0);
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.objects.factory-img-drawer').requires('plugins.addon.custom-canvas').defines(function () {
    ig.FactoryImgDrawer = ig.CustomCanvas.extend({
      'renewCanvas': !0x0,
      'coins': [],
      'fontSize': 0x17,
      'areaId': 0x0,
      'init': function (_0x13dc7d) {
        ig.merge(this, _0x13dc7d), this.worldIds = curState().generateWorldId(this.areaId);
        var _0x4ef4ba = 'factory-drawer' + this.areaId;
        this.control = _0x13dc7d.control, this.ingameImg = ig.Image.cache[imgCache.ingame.path.img];
        var _0x5ae372 = curState().gMapDrawer.image;
        this.tileDatas = _0x5ae372.tileDatas, this.tileSeq = _0x5ae372.tileSeq, this.worldMapDrawer = _0x5ae372, this.onBoardDatas = ig.game.sessionData.onBoardData, this.gapY = _0x5ae372.gapY, this.topGap = _0x5ae372.topGap, this.factoryImages = ig.TileController.factoryImages, this.factoryDatas = ig.GameData.factoryDatas, this.factorySections = [];
        for (var _0x4f326f = 0x0; _0x4f326f < ig.GameData.tileDatas.length; _0x4f326f++) {
          this.factorySections[_0x4f326f] = [];
          for (var _0x559b81 = ig.GameData.worldTilesId[_0x4f326f], _0x3359ce = 0x0; _0x3359ce < _0x559b81.length; _0x3359ce++) {
            this.factorySections[_0x4f326f][_0x3359ce] = [];
            for (var _0x5946b7 = _0x559b81[_0x3359ce], _0x345740 = 0x0; _0x345740 < _0x5946b7.length; _0x345740++) {
              for (var _0x2ef773 = {
                  'resourceTiles': []
                }, _0x21cf9f = 0x0; _0x21cf9f < this.factoryDatas.length; _0x21cf9f++) {
                var _0x39bddf = this.factoryDatas[_0x21cf9f],
                  _0x437872 = _0x39bddf.tileData;
                _0x437872.worldId != _0x4f326f || _0x437872.sectionId != _0x3359ce || _0x437872.blockId != _0x345740 || ('resourceTile' == _0x437872.tileType ? _0x2ef773.resourceTiles.push(_0x39bddf) : 'processorTile' == _0x437872.tileType && (_0x2ef773.processorTile = _0x39bddf));
              }
              this.factorySections[_0x4f326f][_0x3359ce][_0x345740] = _0x2ef773;
            }
          }
        }
        _0x4f326f = _0x5ae372.width, _0x559b81 = _0x5ae372.height, this.pivot = {
          'x': _0x5ae372.pivot.x,
          'y': _0x5ae372.pivot.y
        }, this.parent(_0x4ef4ba, _0x4f326f, _0x559b81, _0x13dc7d);
      },
      'update': function () {
        for (var _0x12b076 = 0x0; _0x12b076 < ig.GameData.factoryDatas.length; _0x12b076++) {
          var _0x30e2c0 = ig.GameData.factoryDatas[_0x12b076];
          if ('resourceTile' == _0x30e2c0.tileData.tileType && _0x30e2c0.sending) {
            for (var _0x3df33e = [], _0x3ef200 = 0x0; _0x3ef200 < _0x30e2c0.resPos.length; _0x3ef200++) {
              var _0x77eea0 = _0x30e2c0.resPos[_0x3ef200],
                _0x3835c1 = _0x77eea0.targetData.targetPos;
              0x1 <= ig.game.math.distance(_0x77eea0.x, _0x77eea0.y, _0x3835c1.x, _0x3835c1.y) && _0x3df33e.push(_0x77eea0);
            }
            _0x30e2c0.resPos = [];
            for (_0x3ef200 = 0x0; _0x3ef200 < _0x3df33e.length; _0x3ef200++) _0x30e2c0.resPos.push(_0x3df33e[_0x3ef200]);
            _0x77eea0 = _0x30e2c0.tileData, _0x3ef200 = 0x0;
            _0x36b062: for (; _0x3ef200 < ig.game.sessionData.factoryDatas.length; _0x3ef200++) if (_0x3df33e = ig.game.sessionData.factoryDatas[_0x3ef200], _0x3835c1 = _0x3df33e.tileData, _0x77eea0.worldId == _0x3835c1.worldId && _0x77eea0.sectionId == _0x3835c1.sectionId && _0x77eea0.blockId == _0x3835c1.blockId && _0x77eea0.tileId == _0x3835c1.tileId) {
              _0x3df33e.resPos = [];
              for (_0x3ef200 = 0x0; _0x3ef200 < _0x30e2c0.resPos.length; _0x3ef200++) _0x77eea0 = _0x30e2c0.resPos[_0x3ef200], _0x3df33e.resPos[_0x3ef200] = {
                'x': _0x77eea0.x,
                'y': _0x77eea0.y
              };
              break _0x36b062;
            }
          }
        }
        for (_0x12b076 = 0x0; _0x12b076 < this.factoryDatas.length; _0x12b076++) if (_0x30e2c0 = this.factoryDatas[_0x12b076], 'processorTile' == _0x30e2c0.tileData.tileType && 0x0 < _0x30e2c0.texts.length) {
          _0x77eea0 = [];
          for (_0x3ef200 = 0x0; _0x3ef200 < _0x30e2c0.texts.length; _0x3ef200++) _0x3df33e = _0x30e2c0.texts[_0x3ef200], (_0x3df33e.visible || !_0x3df33e.isTweening || !_0x3df33e.onGoing) && _0x77eea0.push(_0x3df33e);
          _0x30e2c0.texts = [];
          for (_0x3ef200 = 0x0; _0x3ef200 < _0x77eea0.length; _0x3ef200++) _0x3df33e = _0x77eea0[_0x3ef200], _0x3df33e.seq = _0x3ef200, _0x30e2c0.texts.push(_0x3df33e);
        }
      },
      'drawImageCanvas': function () {
        var _0x30944b = this.drawEle.getContext('2d');
        _0x30944b.clearRect(0x0, 0x0, this.width, this.height), _0x30944b.save(), _0x30944b.translate(this.pivot.x, this.pivot.y);
        for (var _0x442205 = this.topGap + this.gapY, _0x28a95c = 0x0; _0x28a95c < this.factorySections.length; _0x28a95c++) if (!(_0x28a95c < curState().worldIds.startId || _0x28a95c >= curState().worldIds.endId)) {
          for (var _0x15f117 = this.factorySections[_0x28a95c], _0x310176 = 0x0; _0x310176 < _0x15f117.length; _0x310176++) for (var _0x2a1b39 = _0x15f117[_0x310176], _0x5a16ed = 0x0; _0x5a16ed < _0x2a1b39.length; _0x5a16ed++) {
            var _0x53747f = _0x2a1b39[_0x5a16ed],
              _0x570161 = _0x53747f.processorTile.tileData;
            if (_0x570161.isActive && !_0x53747f.processorTile.onGoing) for (var _0x592ccd = _0x570161.x - this.worldMapDrawer.posData.minX + _0x570161.tWidth / 0x2, _0x526117 = _0x570161.y - this.worldMapDrawer.posData.minY + _0x442205 / 0x2, _0x351047 = 0x0; _0x351047 < _0x53747f.resourceTiles.length; _0x351047++) {
              var _0x519a11 = _0x53747f.resourceTiles[_0x351047],
                _0x570161 = _0x519a11.tileData;
              if (_0x570161.isActive && !_0x519a11.onGoing) {
                var _0x20ad1f = _0x519a11.images.imgOn,
                  _0x20ad1f = _0x570161.x - this.worldMapDrawer.posData.minX,
                  _0x519a11 = _0x570161.y - this.worldMapDrawer.posData.minY,
                  _0x570161 = _0x20ad1f + _0x570161.tWidth / 0x2,
                  _0x519a11 = _0x519a11 + _0x442205 / 0x2;
                _0x30944b.save(), _0x30944b.strokeStyle = 'black', _0x30944b.lineWidth = 0x2, _0x30944b.setLineDash([0xa, 0x6]), _0x30944b.beginPath(), _0x30944b.moveTo(_0x570161, _0x519a11), _0x30944b.lineTo(_0x592ccd, _0x526117), _0x30944b.stroke(), _0x30944b.restore();
              }
            }
          }
        }
        _0x442205 = ig.game.sessionData.onBoardData;
        for (_0x28a95c = 0x0; _0x28a95c < this.tileSeq.length; _0x28a95c++) if (_0x570161 = this.tileSeq[_0x28a95c], !(_0x570161.worldId < curState().worldIds.startId || _0x570161.worldId >= curState().worldIds.endId) && !(_0x570161.worldId > _0x442205.worldId)) {
          if ('processorTile' == _0x570161.tileType || 'resourceTile' == _0x570161.tileType) for (_0x310176 = 0x0; _0x310176 < this.factoryDatas.length; _0x310176++) {
            if (_0x519a11 = this.factoryDatas[_0x310176], _0x519a11.tileData == _0x570161) {
              if (_0x570161.isActive) _0x20ad1f = _0x519a11.images.imgOn;else {
                if (!_0x442205) continue;
                if (_0x570161.worldId == _0x442205.worldId && _0x570161.sectionId == _0x442205.sectionId && _0x570161.blockId == _0x442205.blockId) _0x20ad1f = _0x519a11.images.imgOff;else continue;
              }
              _0x15f117 = _0x519a11.anchor, _0x2a1b39 = _0x519a11.x - this.worldMapDrawer.posData.minX + _0x20ad1f.width * _0x15f117.x, _0x5a16ed = _0x519a11.y - this.worldMapDrawer.posData.minY + _0x20ad1f.height * _0x15f117.y, _0x30944b.save(), _0x30944b.translate(_0x2a1b39, _0x5a16ed), _0x30944b.scale(_0x519a11.scale.x, _0x519a11.scale.y), _0x30944b.drawImage(_0x20ad1f, 0x0, 0x0, _0x20ad1f.width, _0x20ad1f.height, -(_0x20ad1f.width * _0x15f117.x), -(_0x20ad1f.height * _0x15f117.y), _0x20ad1f.width, _0x20ad1f.height), _0x30944b.restore();
            }
          } else {
            if ('normalTile' == _0x570161.tileType) {
              for (_0x310176 = 0x0; _0x310176 < this.coins.length; _0x310176++) if (_0x519a11 = this.coins[_0x310176], !(_0x519a11.worldId < curState().worldIds.startId || _0x519a11.worldId >= curState().worldIds.endId) && _0x519a11.worldId == _0x570161.worldId && _0x519a11.sectionId == _0x570161.sectionId && _0x519a11.blockId == _0x570161.blockId && _0x519a11.tileId == _0x570161.tileId) _0x15f117 = this.coinFrameData.frame.x, _0x2a1b39 = this.coinFrameData.frame.y, _0x5a16ed = this.coinFrameData.frame.w, _0x53747f = this.coinFrameData.frame.h, _0x592ccd = _0x519a11.x + _0x519a11.width / 0x2, _0x526117 = _0x519a11.y + _0x519a11.height / 0x2, _0x30944b.save(), _0x30944b.translate(_0x592ccd, _0x526117), _0x30944b.scale(_0x519a11.scale.x, _0x519a11.scale.y), this.ingameImg.drawCtx(_0x30944b, -_0x5a16ed / 0x2, -_0x53747f / 0x2, _0x15f117, _0x2a1b39, _0x5a16ed, _0x53747f), _0x30944b.restore();
            }
          }
        }
        for (_0x28a95c = 0x0; _0x28a95c < this.factoryDatas.length; _0x28a95c++) if (_0x519a11 = this.factoryDatas[_0x28a95c], _0x570161 = _0x519a11.tileData, !(_0x570161.worldId < curState().worldIds.startId || _0x570161.worldId >= curState().worldIds.endId) && _0x570161.isActive) {
          if ('resourceTile' == _0x570161.tileType && _0x519a11.sending) {
            _0x442205 = this.ingameImg, _0x15f117 = _0x519a11.resFrameData, _0x2a1b39 = _0x519a11.resPos;
            for (_0x310176 = 0x0; _0x310176 < _0x2a1b39.length; _0x310176++) _0x5a16ed = _0x2a1b39[_0x310176], _0x5a16ed.targetData && (_0x592ccd = _0x5a16ed.x, _0x526117 = _0x5a16ed.y, _0x351047 = _0x5a16ed.targetData.targetPos, _0x53747f = _0x351047.x, _0x351047 = ig.game.math.angleBetween(_0x592ccd, _0x526117, _0x53747f, _0x351047.y), _0x592ccd -= this.worldMapDrawer.posData.minX, _0x526117 -= this.worldMapDrawer.posData.minY, _0x30944b.save(), _0x30944b.translate(_0x592ccd, _0x526117), _0x30944b.rotate(_0x351047), _0x592ccd = 0x1, _0x5a16ed.x > _0x53747f && (_0x592ccd *= -0x1), _0x30944b.scale(0x1, _0x592ccd), _0x442205.drawCtx(_0x30944b, -(_0x15f117.frame.w / 0x2), -(_0x15f117.frame.h / 0x2), _0x15f117.frame.x, _0x15f117.frame.y, _0x15f117.frame.w, _0x15f117.frame.h), _0x30944b.restore());
          }
          if ('processorTile' == _0x570161.tileType) {
            for (_0x310176 = 0x0; _0x310176 < _0x519a11.texts.length; _0x310176++) _0x2a1b39 = _0x519a11.texts[_0x310176], _0x2a1b39.visible && (_0x15f117 = _0x2a1b39.text, _0x30944b.save(), _0x442205 = this.fontSize, _0x30944b.font = _0x442205 + "px " + fonts.font1, _0x30944b.fillStyle = 'white', _0x30944b.textAlign = 'center', _0x570161 = _0x2a1b39.pos.x - this.worldMapDrawer.posData.minX, _0x442205 = _0x2a1b39.pos.y - this.worldMapDrawer.posData.minY, _0x30944b.fillText(_0x15f117, _0x570161, _0x442205), _0x30944b.restore());
          }
        }
        for (_0x28a95c = 0x0; _0x28a95c < this.tileSeq.length; _0x28a95c++) if (_0x570161 = this.tileSeq[_0x28a95c], !(_0x570161.worldId < curState().worldIds.startId || _0x570161.worldId >= curState().worldIds.endId) && _0x570161.isBuyable) {
          _0x519a11 = curState().gMap, _0x310176 = curState().gMapDrawer.image, _0x442205 = _0x519a11.tiles[_0x570161.tileId], tileH = _0x310176.topGap + _0x310176.gapY, _0x519a11 = _0x442205.price, _0x310176 = ig.GameData.generateMoneyChart(_0x442205.price), _0x442205 = this.fontSize, _0x30944b.save(), _0x30944b.lineWidth = 0x0, _0x30944b.fillStyle = ig.game.sessionData.money >= _0x519a11 ? '#90ff00' : 'white', _0x2a1b39 = 0.8 * _0x570161.tWidth, _0x15f117 = _0x442205 + 0xa, _0x20ad1f = _0x570161.x - this.worldMapDrawer.posData.minX, _0x519a11 = _0x570161.y - this.worldMapDrawer.posData.minY, _0x5a16ed = _0x20ad1f + (_0x570161.tWidth - _0x2a1b39) / 0x2, _0x519a11 = _0x519a11 + 0.5 * tileH - _0x15f117 / 0x2, _0x30944b.font = _0x442205 + "px " + fonts.font1, _0x53747f = _0x30944b.measureText(_0x310176).width, _0x592ccd = 0.8 * _0x2a1b39, _0x53747f > _0x592ccd && (_0x442205 *= _0x592ccd / _0x53747f, _0x30944b.font = _0x442205 + "px " + fonts.font1);
          if ('resourceTile' == _0x570161.tileType || 'processorTile' == _0x570161.tileType) _0x570161 = ig.game.geom.roundRect(_0x5a16ed, _0x519a11, _0x2a1b39, _0x15f117, 0x5), ig.game.geomDebug.roundRect(_0x570161, "rgba(116, 116, 116, 0.8)", 0x1, null, _0x30944b);
          _0x570161 = _0x5a16ed + _0x2a1b39 / 0x2, _0x442205 = _0x519a11 + _0x15f117 / 0x2 + 0.3 * _0x442205 + 0x1, _0x30944b.textAlign = 'center', _0x30944b.fillText(_0x310176, _0x570161, _0x442205), _0x30944b.restore();
        }
        _0x30944b.restore();
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.objects.factory-ctrl').requires('game.entities.addon.manual-draw-entity', 'game.entities.objects.factory-img-drawer').defines(function () {
    EntityFactoryCtrl = EntityManualDrawEntity.extend({
      'checkInactiveCD': 0x1,
      'cdCheckInactive': 0x0,
      'countTimer': 0x0,
      'init': function (_0x40809d, _0x57f71f, _0x2f7194) {
        this.parent(_0x40809d, _0x57f71f, _0x2f7194), ig.TileController.settingFactoryDatas(), _0x40809d = curState().gMapDrawer, this.anchor.setTo(_0x40809d.anchor.x, _0x40809d.anchor.y), this.image = new ig.FactoryImgDrawer({
          'control': this,
          'areaId': ig.GameData.areaId
        }), this.setShape(this.image.width, this.image.height), this.factorySections = [];
        for (_0x40809d = 0x0; _0x40809d < ig.GameData.tileDatas.length; _0x40809d++) {
          this.factorySections[_0x40809d] = [];
          var _0x119a71 = ig.GameData.worldTilesId[_0x40809d];
          for (_0x57f71f = 0x0; _0x57f71f < _0x119a71.length; _0x57f71f++) {
            this.factorySections[_0x40809d][_0x57f71f] = [];
            for (var _0x4e2cc0 = _0x119a71[_0x57f71f], _0x56e0db = 0x0; _0x56e0db < _0x4e2cc0.length; _0x56e0db++) {
              _0x2f7194 = {
                'resourceTiles': []
              };
              for (var _0x337049 = 0x0; _0x337049 < ig.GameData.factoryDatas.length; _0x337049++) {
                var _0x5001f2 = ig.GameData.factoryDatas[_0x337049],
                  _0x5dfe69 = _0x5001f2.tileData;
                _0x5dfe69.worldId != _0x40809d || _0x5dfe69.sectionId != _0x57f71f || _0x5dfe69.blockId != _0x56e0db || ('resourceTile' == _0x5dfe69.tileType ? _0x2f7194.resourceTiles.push(_0x5001f2) : 'processorTile' == _0x5dfe69.tileType && (_0x2f7194.processorTile = _0x5001f2));
              }
              this.factorySections[_0x40809d][_0x57f71f][_0x56e0db] = _0x2f7194;
            }
          }
        }
        for (_0x40809d = 0x0; _0x40809d < ig.GameData.factoryDatas.length; _0x40809d++) {
          _0x2f7194 = ig.GameData.factoryDatas[_0x40809d], _0x119a71 = ig.game.sessionData.factoryDatas[_0x40809d], _0x5dfe69 = _0x2f7194.tileData, _0x2f7194.texts = [], _0x2f7194.scale.x = 0x1, _0x2f7194.scale.y = 0x1, _0x2f7194.tweening = !0x1, _0x2f7194.onGoing = !0x1;
          if (0x0 < _0x2f7194.resPos.length && _0x2f7194.sending && _0x5dfe69.isActive) {
            for (_0x57f71f = 0x0; _0x57f71f < _0x2f7194.resPos.length; _0x57f71f++) this.sendingResource(_0x2f7194, !0x0), this.generateIncome(_0x2f7194, !0x1);
          }
          _0x2f7194.resPos = [], _0x119a71.resPos = [];
        }
        this.cdCheckInactive = this.checkInactiveCD;
      },
      'generateResourceDelivery': function (_0x23232e) {
        var _0x243879 = _0x23232e.tileData;
        _0x23232e = this.factorySections[_0x243879.worldId][_0x243879.sectionId][_0x243879.blockId];
        if ('processorTile' == _0x243879.tileType) for (_0x243879 = 0x0; _0x243879 < _0x23232e.resourceTiles.length; _0x243879++) {
          var _0x2cf264 = _0x23232e.resourceTiles[_0x243879];
          _0x2cf264.tileData.isActive && !_0x2cf264.sending && (_0x2cf264.sending = !0x0);
        } else 'resourceTile' == _0x243879.tileType && _0x23232e.processorTile.tileData.isActive && this.generateResourceDelivery(_0x23232e.processorTile);
      },
      'sendingResource': function (_0x38bf19, _0x55e255) {
        _0x38bf19.sending = !0x0;
        for (var _0x34cf1b = _0x38bf19.tileData, _0x486460 = 0x0; _0x486460 < ig.game.sessionData.factoryDatas.length; _0x486460++) {
          var _0x4832fc = ig.game.sessionData.factoryDatas[_0x486460],
            _0x1d7200 = _0x4832fc.tileData;
          if (_0x1d7200.worldId == _0x34cf1b.worldId && _0x1d7200.sectionId == _0x34cf1b.sectionId && _0x1d7200.blockId == _0x34cf1b.blockId && _0x1d7200.tileId == _0x34cf1b.tileId) {
            _0x4832fc.sending = !0x0;
            break;
          }
        }
        var _0xecc2ab = this.factorySections[_0x34cf1b.worldId][_0x34cf1b.sectionId][_0x34cf1b.blockId].processorTile;
        _0x38bf19.processor = _0xecc2ab;
        if (!_0x55e255) {
          _0x486460 = ig.GameData.calculateResTime(_0x34cf1b.worldId, _0x34cf1b.sectionId, _0x34cf1b.blockId), _0x38bf19.countdown = _0x486460, _0x4832fc.countdown = _0x486460;
          var _0x346359 = this.image.topGap + this.image.gapY,
            _0x283566 = _0x34cf1b.x + _0x34cf1b.tWidth / 0x2,
            _0x4eafd7 = _0x34cf1b.y + _0x346359 / 0x2,
            _0x486460 = {
              'x': _0x283566,
              'y': _0x4eafd7
            };
          _0x38bf19.resPos.push(_0x486460), _0x4832fc.resPos.push(_0x486460), _0x486460 = _0x38bf19.resPos.length - 0x1, _0x1d7200 = 0x3e8 * ig.GameData.sendingResourceTime / ig.GameData.timerSpeed, _0x34cf1b.worldId < curState().worldIds.startId || _0x34cf1b.worldId >= curState().endId ? (_0x38bf19.resPos.splice(0x0, 0x1), _0x4832fc.resPos.splice(0x0, 0x1), this.generateIncome(_0x38bf19, !0x1)) : (_0x4832fc = _0xecc2ab.tileData, _0x34cf1b = _0x4832fc.x + _0x4832fc.tWidth / 0x2, _0x4832fc = _0x4832fc.y + _0x346359 / 0x2, ig.game.math.distance(_0x283566, _0x4eafd7, _0x34cf1b, _0x4832fc), _0x283566 = ig.game.math.angleBetween(_0x283566, _0x4eafd7, _0x34cf1b, _0x4832fc), _0x4eafd7 = _0x283566.toDeg(), _0x346359 = -0x5a, 0x5a < _0x4eafd7 && (_0x346359 = 0x5a), _0x4eafd7 = (_0x4eafd7 + _0x346359).toRad(), Math.cos(_0x283566), Math.sin(_0x283566), Math.cos(_0x4eafd7), Math.sin(_0x4eafd7), _0x38bf19.resPos[_0x486460].targetData = {
            'targetPos': {
              'x': _0x34cf1b,
              'y': _0x4832fc
            }
          }, new ig.TweenDef(_0x38bf19.resPos[_0x486460]).to({
            'x': _0x34cf1b,
            'y': _0x4832fc
          }, _0x1d7200).onComplete(function () {
            curState().gFactory.generateIncome(this, !0x0);
          }.bind(_0x38bf19)).start()._ignorePause = !0x0, _0x38bf19.tweening || (_0x38bf19.tweening = !0x0, _0x486460 = [1.2, 0x1], _0x1d7200 = 0x96 / ig.GameData.timerSpeed, new ig.TweenDef(_0x38bf19.scale).to({
            'x': _0x486460,
            'y': _0x486460
          }, _0x1d7200).onComplete(function () {
            this.tweening = !0x1;
          }.bind(_0x38bf19)).start()));
        }
      },
      'generateIncome': function (_0x17f015, _0x101724) {
        var _0x540242 = _0x17f015.processor,
          _0x507b81 = _0x540242.tileData,
          _0x203e54 = ig.GameData.generateOnlineResIncome(_0x507b81.worldId, _0x507b81.sectionId, _0x507b81.blockId),
          _0x507b81 = _0x203e54.income;
        curState().addMoney(_0x507b81);
        if (_0x101724) {
          var _0x177c51 = _0x540242.images.imgOn,
            _0x507b81 = _0x540242.x + _0x177c51.width / 0x2,
            _0x177c51 = _0x540242.y + _0x177c51.height / 0x2 - 0x5,
            _0xead463 = _0x203e54.totRes,
            _0x203e54 = ig.GameData.generateMoneyChart(_0x203e54.baseIncome * ig.GameData.incomeMultiplier),
            _0x177dc4 = _0xead463.toFixed(0x2);
          0x1 < _0xead463 && (_0x203e54 += " x " + _0x177dc4), _0x507b81 = {
            'text': _0x203e54,
            'pos': new Vector2(_0x507b81, _0x177c51),
            'visible': !0x1,
            'onGoing': !0x1,
            'isTweening': !0x1,
            'seq': 0x0
          }, 0x0 < _0x540242.texts.length && (_0x507b81.seq = _0x540242.texts[_0x540242.texts.length - 0x1].seq + 0x1), _0x540242.texts.push(_0x507b81), _0x540242.tweening || (_0x540242.tweening = !0x0, _0x203e54 = [1.2, 0x1], _0x177c51 = 0x96 / ig.GameData.timerSpeed, new ig.TweenDef(_0x540242.scale).to({
            'x': _0x203e54,
            'y': _0x203e54
          }, _0x177c51).onComplete(function () {
            this.tweening = !0x1;
          }.bind(_0x540242)).start()), this.checkIncomeTxt(_0x507b81);
        }
      },
      'checkResSchedule': function () {
        for (var _0x2b3166 = 0x0; _0x2b3166 < ig.GameData.factoryDatas.length; _0x2b3166++) {
          var _0x4f4126 = ig.GameData.factoryDatas[_0x2b3166],
            _0x44e942 = ig.game.sessionData.factoryDatas[_0x2b3166],
            _0x222797 = _0x4f4126.tileData;
          _0x4f4126.sending && _0x222797.isActive && 0x0 < _0x4f4126.countdown && (_0x222797 = ig.system.tick * ig.GameData.timerSpeed, _0x4f4126.countdown -= _0x222797, _0x44e942.countdown -= _0x222797, 0x0 >= _0x4f4126.countdown && this.sendingResource(_0x4f4126));
        }
      },
      'countInactiveWorldIncome': function (_0x481051) {
        for (var _0x2f967c = 0x0; _0x2f967c < ig.GameData.factoryDatas.length; _0x2f967c++) {
          var _0x2910c0 = ig.GameData.factoryDatas[_0x2f967c],
            _0x1537de = ig.game.sessionData.factoryDatas[_0x2f967c],
            _0x3cc487 = _0x2910c0.tileData;
          if (!(_0x3cc487.worldId >= curState().worldIds.startId && _0x3cc487.worldId < curState().worldIds.endId) && _0x2910c0.sending && _0x3cc487.isActive && 0x0 < _0x2910c0.countdown) {
            var _0x5311bc = _0x2910c0.countdown,
              _0x3cc487 = ig.GameData.sendingResourceTime / ig.GameData.timerSpeed,
              _0x28ad9b = _0x481051 - _0x5311bc;
            if (0x0 < _0x28ad9b) {
              for (; 0x0 < _0x28ad9b;) _0x28ad9b -= _0x3cc487, this.sendingResource(_0x2910c0), _0x5311bc = _0x2910c0.countdown, _0x5311bc = _0x28ad9b - _0x5311bc, 0x0 > _0x5311bc ? (_0x2910c0.countdown -= _0x28ad9b, _0x1537de.countdown = _0x2910c0.countdown) : 0x0 == _0x5311bc && (_0x2910c0.countdown = 0.1, _0x1537de.countdown = _0x2910c0.countdown), _0x28ad9b = _0x5311bc;
            } else _0x2910c0.countdown -= _0x481051, _0x1537de.countdown = _0x2910c0.countdown;
          }
        }
      },
      'checkInactiveWorlds': function () {
        var _0xa45dff = ig.system.tick * ig.GameData.timerSpeed;
        0x0 < this.cdCheckInactive && (this.cdCheckInactive -= ig.system.tick, this.countTimer += _0xa45dff, 0x0 >= this.cdCheckInactive && (this.countInactiveWorldIncome(this.countTimer), this.cdCheckInactive = this.checkInactiveCD, this.countTimer = 0x0));
      },
      'checkIncomeTxt': function (_0x3067f0) {
        if (!_0x3067f0.onGoing) {
          var _0x488394 = _0x3067f0.pos.y - 0x1e,
            _0x5ce8fc = 0xfa * _0x3067f0.seq + 0x64;
          _0x3067f0.onGoing = !0x0, new ig.TweenDef(_0x3067f0.pos).to({
            'y': _0x488394
          }, 0x1f4).delay(_0x5ce8fc).onStart(function () {
            this.visible = this.isTweening = !0x0;
          }.bind(_0x3067f0)).onComplete(function () {
            this.visible = !0x1;
          }.bind(_0x3067f0)).start();
        }
      },
      'update': function () {
        this.parent(), this.checkResSchedule(), this.image.update();
      },
      'drawShape': function () {
        this.image.drawImageCanvas(), this.image.draw(0x0, 0x0);
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.objects.coin-ctrl').requires('game.entities.objects.factory-img-drawer').defines(function () {
    ig.FactoryImgDrawer.inject({
      'maxCoinPerBlock': 0x3,
      'clickedCoin': null,
      'clickTime': 0x0,
      'maxClickTime': 0x12c,
      'init': function (_0x19dce4) {
        this.coinFrameData = ig.CallAsset.searchSpriteData('ingame/ui/money'), this.maxClickTime = curState().maxClickTime, this.parent(_0x19dce4), this.generateCoinTimer();
      },
      'generateCoinTimer': function () {
        this.summonCoinTimer = ig.game.rnd.realInRange(0x1e, 0x3c);
      },
      'update': function () {
        this.parent(), 0x0 < this.summonCoinTimer && (this.summonCoinTimer -= ig.system.tick, 0x0 >= this.summonCoinTimer && (this.generateCoin(), this.generateCoinTimer())), 0x0 < this.coins.length && (ig.input.pressed('click') ? !this.clickedCoin && curState().checkClickAvailability(this.control) && (this.clickedCoin = this.checkPointerPos(), this.clickTime = new Date()) : ig.input.released('click') && this.clickedCoin && (new Date() - this.clickTime <= this.maxClickTime && this.generateSecondaryIncome(this.clickedCoin), this.clickedCoin = null));
      },
      'checkPointerPos': function () {
        for (var _0x4f6d55 = ig.game.io.getClickPos(), _0xa16ffe = null, _0x409cf4 = 0x0; _0x409cf4 < this.coins.length; _0x409cf4++) {
          var _0x5db93f = this.coins[_0x409cf4];
          if (!(_0x5db93f.worldId < curState().worldIds.startId || _0x5db93f.worldId >= curState().worldIds.endId) && !_0x5db93f.onGoing) {
            var _0xe235db = this.generateCoinBound(_0x5db93f);
            if (ig.game.math.rectContains(_0xe235db, _0x4f6d55.x, _0x4f6d55.y)) {
              _0xa16ffe = _0x5db93f;
              break;
            }
          }
        }
        return _0xa16ffe;
      },
      'generateCoin': function () {
        var _0x5e77dd = this.checkLandAvailability();
        if (0x0 != _0x5e77dd.length) {
          var _0x1758c0 = ig.game.rnd.integerInRange(0x0, _0x5e77dd.length - 0x1),
            _0x5e77dd = _0x5e77dd[_0x1758c0],
            _0x1758c0 = _0x5e77dd.availTiles,
            _0x11df85 = ig.game.rnd.integerInRange(0x0, _0x1758c0.length - 0x1);
          _0x5e77dd.tileId = _0x1758c0[_0x11df85], this.createCoin(_0x5e77dd);
        }
      },
      'checkLandAvailability': function () {
        for (var _0x5de99a = [], _0x4a2bf3 = curState().worldIds.startId; _0x4a2bf3 < curState().worldIds.endId; _0x4a2bf3++) for (var _0x5b90c9 = ig.game.sessionData.unlockedSequence[_0x4a2bf3], _0x4ca692 = 0x0; _0x4ca692 < _0x5b90c9.length; _0x4ca692++) for (var _0x20bb73 = _0x5b90c9[_0x4ca692], _0xce739e = 0x0; _0xce739e < _0x20bb73.length; _0xce739e++) {
          var _0x3f43d4 = _0x20bb73[_0xce739e],
            _0x4cca8b = _0x3f43d4.blockId,
            _0x3f43d4 = _0x3f43d4.tiles,
            _0x2f6990 = this.checkCoinPerBlock(_0x4a2bf3, _0x4ca692, _0x4cca8b);
          if (!(_0x3f43d4.length <= _0x2f6990.length) && !(_0x2f6990.length >= this.maxCoinPerBlock)) {
            for (var _0x37e49f = [], _0x5b3349 = 0x0; _0x5b3349 < _0x3f43d4.length; _0x5b3349++) {
              var _0x48cb05 = _0x3f43d4[_0x5b3349];
              'normalTile' == ig.GameData.tileDatas[_0x4a2bf3][_0x4ca692][_0x4cca8b][_0x48cb05].tileType && 0x0 > _0x2f6990.indexOf(_0x48cb05) && _0x37e49f.push(_0x48cb05);
            }
            0x0 < _0x37e49f.length && _0x5de99a.push({
              'worldId': _0x4a2bf3,
              'sectionId': _0x4ca692,
              'blockId': _0x4cca8b,
              'availTiles': _0x37e49f
            });
          }
        }
        return _0x5de99a;
      },
      'checkCoinPerBlock': function (_0x12c789, _0x326549, _0x131abf) {
        for (var _0xb3b0f3 = [], _0x4cb903 = 0x0; _0x4cb903 < this.coins.length; _0x4cb903++) {
          var _0x141c74 = this.coins[_0x4cb903];
          _0x141c74.worldId == _0x12c789 && _0x141c74.sectionId == _0x326549 && _0x141c74.blockId == _0x131abf && _0xb3b0f3.push(_0x141c74.tileId);
        }
        return _0xb3b0f3;
      },
      'createCoin': function (_0x2419f1) {
        var _0x5568bf = this.coinFrameData,
          _0x5a1f91 = ig.GameData.tileDatas[_0x2419f1.worldId][_0x2419f1.sectionId][_0x2419f1.blockId][_0x2419f1.tileId],
          _0x1a8716 = _0x5568bf.sourceSize.w,
          _0x5568bf = _0x5568bf.sourceSize.h,
          _0x5113f1 = _0x5a1f91.x - this.worldMapDrawer.posData.minX + (_0x5a1f91.tWidth - _0x1a8716) / 0x2,
          _0x5a1f91 = _0x5a1f91.y - this.worldMapDrawer.posData.minY + 0.35 * _0x5a1f91.tHeight - _0x5568bf / 0x2;
        _0x2419f1.width = _0x1a8716, _0x2419f1.height = _0x5568bf, _0x2419f1.x = _0x5113f1, _0x2419f1.y = _0x5a1f91, _0x2419f1.scale = {
          'x': 0x0,
          'y': 0x0
        }, this.coins.push(_0x2419f1), _0x2419f1.onGoing = !0x0, _0x1a8716 = [1.5, 0x1], new ig.TweenDef(_0x2419f1.scale).to({
          'x': _0x1a8716,
          'y': _0x1a8716
        }, 0x96 * _0x1a8716.length).onComplete(function () {
          this.onGoing = !0x1;
        }.bind(_0x2419f1)).start(), _0x1a8716 = [_0x2419f1.y - 0x1e, _0x2419f1.y + 0xa, _0x2419f1.y], new ig.TweenDef(_0x2419f1).easing(ig.Tween.Easing.Quartic.EaseInOut).to({
          'y': _0x1a8716
        }, 0x96 * _0x1a8716.length).start();
      },
      'generateCoinBound': function (_0x35c234) {
        var _0x36f272 = -(this.width * this.control.anchor.x) + this.pivot.x,
          _0x8ef743 = -(this.height * this.control.anchor.y) + this.pivot.y;
        _0x35c234 = ig.game.geom.rectangle(_0x35c234.x, _0x35c234.y, _0x35c234.width, _0x35c234.height), _0x35c234 = [{
          'x': _0x35c234.x,
          'y': _0x35c234.y
        }, {
          'x': _0x35c234.right,
          'y': _0x35c234.y
        }, {
          'x': _0x35c234.right,
          'y': _0x35c234.bottom
        }, {
          'x': _0x35c234.x,
          'y': _0x35c234.bottom
        }];
        var _0x1a430f = ig.game.screen.x,
          _0x20e16f = ig.game.screen.y;
        this.control.isCameraLock && (_0x20e16f = _0x1a430f = 0x0);
        for (var _0x411b41 = [], _0x2e7e5c = 0x0; _0x2e7e5c < _0x35c234.length; _0x2e7e5c++) {
          var _0x4bea32 = _0x35c234[_0x2e7e5c],
            _0x4bea32 = ig.World.parentPos(this.control, _0x4bea32.x + _0x36f272, _0x4bea32.y + _0x8ef743);
          _0x4bea32.x -= _0x1a430f, _0x4bea32.y -= _0x20e16f;
          if (this.control.isResponsive) {
            var _0x1e8800 = ig.responsive.toAnchor(_0x4bea32.x, _0x4bea32.y, ig.game.anchorType);
            _0x4bea32.x = _0x1e8800.x, _0x4bea32.y = _0x1e8800.y;
          }
          _0x411b41.push({
            'x': _0x4bea32.x,
            'y': _0x4bea32.y
          });
        }
        return ig.World.getBounds(_0x411b41);
      },
      'generateSecondaryIncome': function (_0x5b5503) {
        csound.sfxPlay('coin'), this.animateClickedCoin(_0x5b5503);
        var _0x281c20 = ig.GameData.calculateSecondaryIncome(_0x5b5503.worldId, _0x5b5503.sectionId, _0x5b5503.blockId) * ig.GameData.incomeMultiplier;
        curState().addMoney(_0x281c20);
        var _0x2c7059 = -(this.control.width * this.control.anchor.x),
          _0x1f6343 = -(this.control.height * this.control.anchor.y),
          _0x281c20 = ig.GameData.generateMoneyChart(_0x281c20);
        _0x5b5503 = ig.game.addText(_0x5b5503.x + _0x5b5503.width / 0x2 + _0x2c7059 + this.pivot.x, _0x5b5503.y + _0x5b5503.height / 0x2 + _0x1f6343 + this.pivot.y, _0x281c20, this.fontSize + 0x5, fonts.font1), _0x5b5503.anchor.setTo(0.5, 0x1), _0x5b5503.isResponsive = this.control.isResponsive, this.control.addChild(_0x5b5503), _0x2c7059 = _0x5b5503.y - 0x28, new ig.TweenDef(_0x5b5503).to({
          'y': _0x2c7059
        }, 0x12c).onComplete(function () {
          this.kill();
        }.bind(_0x5b5503)).start();
      },
      'animateClickedCoin': function (_0x48e18c) {
        _0x48e18c.onGoing = !0x0, new ig.TweenDef(_0x48e18c.scale).to({
          'x': 0.8,
          'y': 0.8
        }, 0x4b).yoyo(!0x0).repeat(0x1).onComplete(function () {
          var _0x29165d = curState().gFactory.image,
            _0x5a4d61 = _0x29165d.coins.indexOf(this);
          _0x29165d.coins.splice(_0x5a4d61, 0x1);
        }.bind(_0x48e18c)).start();
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.buttons.button-upgrade').requires('game.entities.buttons.base-button', 'plugins.addon.text-plugin').defines(function () {
    EntityButtonUpgrade = EntityBaseButton.extend({
      'btnIdx': 0x0,
      'price': 0x0,
      'adCooldown': 0x3c,
      'adSession': 0x3c,
      'cdSession': 0x0,
      'cdCooldown': 0x0,
      'isFree': !0x1,
      'init': function (_0x1336f4, _0x81cad6, _0x4adbcd) {
        this.parent(_0x1336f4, _0x81cad6, _0x4adbcd), this.maxClickTime = curState().maxClickTime, this.clickTime = 0x0, this.image = ig.Image.cache[imgCache.ingame.path.img], this.canvas = ig.$new('canvas'), this.textPlugin = new ig.TextPlugin(), this.adSession = ig.GameData.upgradeAdSession, this.cdCooldown = this.adCooldown = ig.GameData.upgradeAdCooldown, this.coinData1 = ig.CallAsset.searchSpriteData('ingame/ui/coin-1'), this.coinData2 = ig.CallAsset.searchSpriteData('ingame/ui/coin-2'), this.setPrice(), this.onRelease.add(this.clickAction, this);
      },
      'setShape': function (_0x1e19a8, _0x583727) {
        this.parent(_0x1e19a8, _0x583727), this.canvas.width = _0x1e19a8, this.canvas.height = _0x583727;
      },
      'clickAction': function () {
        this.isFree ? this.showAd() : this.buyUpgrade();
      },
      'buyUpgrade': function () {
        ig.game.sessionData.upgradeLevel[this.btnIdx] += 0x1, ig.game.save('upgradeLevel', ig.game.sessionData.upgradeLevel), curState().addMoney(-this.price, !0x0), this.setPrice();
      },
      'setPrice': function () {
        this.price = ig.GameData.calculateUpgradePrice(this.btnIdx), this.priceText = ig.GameData.generateMoneyChart(this.price);
        var _0x15745e = ig.GameData.calculateUpgradePercentage(this.btnIdx);
        this.percentageText = Math.round(0x64 + 0x64 * _0x15745e) + '%', 0x2 == this.btnIdx && (this.percentageText = Math.floor(ig.GameData.offlineIncome * (0x1 + _0x15745e))), this.setAvailability();
      },
      'setAvailability': function () {
        if (this.price > ig.game.sessionData.money) {
          var _0x18cde0 = 'ingame/buttons/upgrade-off';
          this.inputEnabled = !0x1;
        } else _0x18cde0 = 'ingame/buttons/upgrade-' + this.btnIdx, this.inputEnabled = !0x0;
        this.spriteData = ig.CallAsset.searchSpriteData(_0x18cde0), this.setShape(this.spriteData.frame.w, this.spriteData.frame.h), this.drawImageCanvas();
      },
      'showAd': function () {
        this.adMockup = ig.game.spawnEntity(EntityAdMockup, curState().centerX, curState().centerY, {
          'onSuccess': this.adSuccess.bind(this),
          'onFail': this.adFailed.bind(this)
        }), curState().gFront.add(this.adMockup);
      },
      'adSuccess': function () {
        this.price = 0x0, this.buyUpgrade(), this.isFree = !0x1, this.cdSession = 0x0, this.cdCooldown = this.adCooldown;
      },
      'adFailed': function () {
        this.setPrice(), this.setAvailability();
      },
      'update': function () {
        this.parent(), this.isFree ? 0x0 < this.cdSession && (this.cdSession -= ig.system.tick, 0x0 >= this.cdSession && (this.isFree = !0x1, this.cdCooldown = this.adCooldown, this.setPrice(), this.setAvailability())) : 0x0 < this.cdCooldown && (this.cdCooldown -= ig.system.tick, 0x0 >= this.cdCooldown && (this.isFree = !0x0, this.cdSession = this.adSession, this.price = 0x0, this.setAvailability())), this.onGoing || this.setAvailability();
      },
      'drawShape': function () {
        ig.system.context.drawImage(this.canvas, 0x0, 0x0, this.canvas.width, this.canvas.height, 0x0, 0x0, this.canvas.width, this.canvas.height);
      },
      'drawImageCanvas': function () {
        var _0x5aa803 = this.canvas.getContext('2d');
        _0x5aa803.clearRect(0x0, 0x0, this.width, this.height), this.image.drawCtx(_0x5aa803, 0x0, 0x0, this.spriteData.frame.x, this.spriteData.frame.y, this.spriteData.frame.w, this.spriteData.frame.h), _0x5aa803.save(), _0x5aa803.fillStyle = 'white', _0x5aa803.strokeStyle = 'black', _0x5aa803.lineWidth = 0x5, _0x5aa803.miterLimit = 0x2;
        var _0x11a458 = _STRINGS.Game.upgradeLabel[this.btnIdx],
          _0x1b8b1f = this.width / 0x2,
          _0x3bf1e0 = 0.15 * this.height + 0x20;
        _0x5aa803.textAlign = 'center', _0x5aa803.font = "40px " + fonts.font1, _0x5aa803.strokeText(_0x11a458, _0x1b8b1f, _0x3bf1e0), _0x5aa803.fillText(_0x11a458, _0x1b8b1f, _0x3bf1e0);
        var _0x10d476 = this.coinData2,
          _0x11a458 = _0x10d476.frame.w,
          _0x3994af = _0x10d476.frame.h,
          _0x1b8b1f = 0.62 * this.height,
          _0x3bf1e0 = 0.25 * this.width + 0x5;
        _0x5aa803.font = "30px " + fonts.font1;
        if (this.isFree) {
          var _0x4325b3 = ig.CallAsset.searchSpriteData('ingame/ui/ad-icon'),
            _0x3aa9dd = 0.6 * _0x4325b3.frame.w,
            _0x15831e = 0.6 * _0x4325b3.frame.h,
            _0x10d476 = _STRINGS.Game.free,
            _0x290846 = Math.floor(0.8 * _0x15831e);
          _0x5aa803.textAlign = 'left';
          var _0x3994af = _0x5aa803.measureText(_0x10d476).width,
            _0x19d977 = 0xa,
            _0x29ad0e = _0x3bf1e0 - (_0x3994af + _0x3aa9dd + _0x19d977) / 0x2 - 0x5,
            _0x3994af = _0x1b8b1f - 0x1c;
          _0x5aa803.save(), _0x5aa803.translate(_0x29ad0e, _0x3994af), _0x5aa803.scale(0.6, 0.6), this.image.drawCtx(_0x5aa803, 0x0, 0x0, _0x4325b3.frame.x, _0x4325b3.frame.y, _0x4325b3.frame.w, _0x4325b3.frame.h), _0x5aa803.restore(), _0x5aa803.save(), _0x5aa803.translate(_0x29ad0e + _0x3aa9dd + _0x19d977, _0x3994af + _0x15831e / 0x2), _0x19d977 = 0.3 * _0x290846 + 0x5, _0x5aa803.strokeText(_0x10d476, 0x0, _0x19d977), _0x5aa803.fillText(_0x10d476, 0x0, _0x19d977), _0x5aa803.restore(), _0x10d476 = ig.game.countMin(this.cdSession), _0x5aa803.textAlign = 'center', _0x5aa803.font = "20px " + fonts.font1, _0x15831e = _0x3994af + _0x15831e + 0xc, _0x5aa803.save(), _0x5aa803.translate(_0x3bf1e0, _0x15831e), _0x19d977 = 0x10, _0x5aa803.strokeText(_0x10d476, 0x0, _0x19d977), _0x5aa803.fillText(_0x10d476, 0x0, _0x19d977);
        } else {
          _0x5aa803.textAlign = 'left', _0x5aa803.measureText(this.priceText), _0x15831e = _0x5aa803.measureText(" ").width, _0x19d977 = Math.floor((_0x11a458 + _0x15831e) / _0x15831e), _0x15831e = '';
          for (_0x4325b3 = 0x0; _0x4325b3 < _0x19d977; _0x4325b3++) _0x15831e += " ";
          this.textPlugin.setTextSettings({
            'fontSize': 0x1e,
            'wordWrap': !0x0,
            'wordWrapWidth': 0.4 * this.width,
            'fill': _0x5aa803.fillStyle,
            'strokeStyle': _0x5aa803.strokeStyle,
            'strokeThickness': 0x4,
            'stroke': !0x0,
            'align': 'center',
            'lineSpacing': 0x2,
            'fontType': fonts.font1
          }), _0x19d977 = this.priceText.split(" "), _0x19d977[_0x19d977.length - 0x1] += _0x15831e;
          var _0x4325b3 = this.textPlugin.getDimension(_0x19d977, _0x5aa803),
            _0x15831e = 0x1,
            _0x2201ae = 0.35 * this.width;
          _0x4325b3.width > _0x2201ae && (_0x15831e = _0x2201ae / _0x4325b3.width), _0x5aa803.save(), _0x5aa803.translate(_0x3bf1e0, _0x1b8b1f), _0x5aa803.scale(_0x15831e, _0x15831e), _0x3bf1e0 = -(0.5 * _0x4325b3.height), this.textPlugin.drawWrappedText(_0x19d977, 0x0, _0x3bf1e0, _0x5aa803), _0x15831e = 0x0 + _0x5aa803.measureText(_0x19d977[_0x19d977.length - 0x1]).width / 0x2 - _0x11a458, this.image.drawCtx(_0x5aa803, _0x15831e, _0x3bf1e0 + _0x4325b3.height - 0xf - 0.5 * _0x3994af, _0x10d476.frame.x, _0x10d476.frame.y, _0x11a458, _0x3994af);
        }
        _0x5aa803.restore(), _0x5aa803.fillStyle = '#fbfb1d', _0x15831e = 0.75 * this.width, _0x3bf1e0 = 0x1, _0x5aa803.save(), _0x5aa803.translate(_0x15831e, _0x1b8b1f);
        if (0x2 > this.btnIdx) _0x5aa803.textAlign = 'center', _0x5aa803.font = "30px " + fonts.font1, _0x11a458 = _0x5aa803.measureText(this.percentageText).width, _0x11a458 > _0x2201ae && (_0x3bf1e0 = _0x2201ae / _0x11a458), _0x5aa803.scale(_0x3bf1e0, _0x3bf1e0), _0x2201ae = 0x9, _0x11a458 = 0x0, _0x5aa803.strokeText(this.percentageText, _0x11a458, _0x2201ae), _0x5aa803.fillText(this.percentageText, _0x11a458, _0x2201ae);else {
          _0x3aa9dd = this.percentageText, _0x290846 = _STRINGS.Game.perMin, _0x1b8b1f = this.coinData2, _0x10d476 = _0x1b8b1f.frame.w, _0x3994af = _0x1b8b1f.frame.h, _0x5aa803.font = "30px " + fonts.font1, _0x5aa803.textAlign = 'center', _0x15831e = _0x5aa803.measureText(" ").width, _0x19d977 = Math.floor((_0x11a458 + 0x2 * _0x15831e) / _0x15831e), _0x15831e = '';
          for (_0x4325b3 = 0x0; _0x4325b3 < _0x19d977; _0x4325b3++) _0x15831e += " ";
          _0x11a458 = _0x5aa803.measureText(_0x3aa9dd).width, _0x5aa803.measureText(_0x290846), _0x19d977 = _0x3aa9dd + _0x15831e + "\n" + _0x290846, this.textPlugin.setTextSettings({
            'fontSize': 0x1e,
            'wordWrap': !0x1,
            'wordWrapWidth': 0.4 * this.width,
            'fill': _0x5aa803.fillStyle,
            'strokeStyle': _0x5aa803.strokeStyle,
            'strokeThickness': 0x4,
            'stroke': !0x0,
            'align': 'center',
            'lineSpacing': 0x2,
            'fontType': fonts.font1
          }), _0x19d977 = this.textPlugin.wordWrapText(_0x19d977, _0x5aa803), _0x4325b3 = this.textPlugin.getDimension(_0x19d977, _0x5aa803), _0x4325b3.width > _0x2201ae && (_0x3bf1e0 = _0x2201ae / _0x4325b3.width), _0x5aa803.scale(_0x3bf1e0, _0x3bf1e0), _0x2201ae = -(_0x4325b3.height / 0x2), this.textPlugin.drawWrappedText(_0x19d977, 0x0, _0x2201ae, _0x5aa803), _0x3bf1e0 = _0x5aa803.measureText(_0x19d977[0x0]).width, _0x15831e = _0x5aa803.measureText(_0x15831e).width, this.image.drawCtx(_0x5aa803, -(_0x3bf1e0 / 0x2) + _0x11a458 + (_0x15831e - _0x10d476) / 0x2, _0x2201ae + 0xf - _0x3994af / 0x2 - 0x2, _0x1b8b1f.frame.x, _0x1b8b1f.frame.y, _0x10d476, _0x3994af);
        }
        _0x5aa803.restore(), _0x5aa803.restore();
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.objects.ad-mockup').requires('game.entities.addon.manual-draw-entity').defines(function () {
    EntityAdMockup = EntityManualDrawEntity.extend({
      'isSuccess': !0x0,
      'onSuccess': null,
      'onFail': null,
      'isCameraLock': !0x0,
      'init': function (_0x35b7bd, _0x118372, _0x573701) {
        this.parent(_0x35b7bd, _0x118372, _0x573701), this.inputEnabled = !0x0, this.anchor.setTo(0.5), this.adText = ig.game.addText(0x0, 0x0, "Ad Showing", 0x32, fonts.font1, {
          'fill': 'white',
          'align': 'center',
          'isCameraLock': this.isCameraLock
        }), this.adText.anchor.setTo(0.5), this.addChild(this.adText), this.updateOnOrientationChange(), curState().timeEvent.add(0x1, this.adFinished, this);
      },
      'updateOnOrientationChange': function () {
        this.width = ig.system.width, this.height = ig.system.height;
      },
      'adFinished': function () {
        if (this.isSuccess) this.onSuccess();else this.onFail();
        this.kill();
      },
      'drawShape': function () {
        var _0x59c9f0 = ig.system.context,
          _0x94d1b0 = ig.game.geom.rectangle(0x0, 0x0, this.width, this.height);
        ig.game.geomDebug.rect(_0x94d1b0, 'black', 0.5 * _0x59c9f0.globalAlpha);
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.buttons.button-rv').requires('game.entities.objects.click-btn', 'game.entities.objects.ad-mockup').defines(function () {
    EntityButtonRv = EntityClickBtn.extend({
      'btnText': '',
      'init': function (_0x491395, _0x176fe6, _0x5e33ac) {
        this.parent(_0x491395, _0x176fe6, _0x5e33ac), this.setProperties(imgCache.ingame.path.img), this.frameName = 'ingame/buttons/btn-yes', this.setFrame(), this.iconImg = ig.CallAsset.addFrameImage(-(0.4 * this.width), -0x5, 'ingame/ui/ad-icon'), this.iconImg.anchor.setTo(0x0, 0.5), this.addChild(this.iconImg), this.btnTxt = ig.game.addText(this.iconImg.x + this.iconImg.width + 0xa, this.iconImg.y + 0x2, this.btnText, 0x1b, fonts.font1, {
          'strokeThickness': 0x3
        }), this.btnTxt.anchor.setTo(0x0, 0.5), this.addChild(this.btnTxt), this.onClick.add(this.showAd, this);
      },
      'showAd': function () {
        this.adMockup = ig.game.spawnEntity(EntityAdMockup, curState().centerX, curState().centerY, {
          'onSuccess': this.controller.adSuccess.bind(this.controller),
          'onFail': function () {
            'function' == typeof this.controller.adFailed && this.controller.adFailed();
          }.bind(this)
        }), curState().gFront.add(this.adMockup);
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.objects.popup.reward-popup').requires('game.entities.objects.popup.base-popup', 'game.entities.buttons.button-rv').defines(function () {
    EntityRewardPopup = EntityBasePopup.extend({
      'isCameraLock': !0x0,
      'multiplyer': 0x1,
      'reward': 0x5f5e100,
      'iconName': 'ingame/reward-icons/0-2',
      'titleText': '',
      'init': function (_0x8372a4, _0x4abf16, _0x15c3d9) {
        this.titleText = _STRINGS.Game.rewardTitle[0x0], this.parent(_0x8372a4, _0x4abf16, _0x15c3d9), this.bg = ig.CallAsset.addImage(0x0, 0x0, 'bg-reward'), this.bg.anchor.setTo(0.5), this.add(this.bg), this.titleTxt = ig.game.addText(0.13 * -this.bg.width, 0.3 * -this.bg.height, this.titleText, 0x4b, fonts.font1, {
          'strokeThickness': 0x3
        }), this.titleTxt.anchor.setTo(0.5, 0x0), this.add(this.titleTxt), ig.CallAsset.searchSpriteData(this.iconName) || (this.iconName = 'ingame/reward-icons/0-2'), this.iconImg = ig.CallAsset.addFrameImage(0x0, 0x14, this.iconName), this.iconImg.anchor.setTo(0.5), this.add(this.iconImg), this.gReward = ig.game.addGroup(), this.add(this.gReward), _0x8372a4 = '+' + ig.GameData.generateMoneyChart(this.reward), this.rewardTxt = ig.game.addText(0x0, 0.25 * this.bg.height, _0x8372a4, 0x4b, fonts.font1, {
          'fill': '#1a1c1b'
        }), this.rewardTxt.anchor.setTo(0.5), this.add(this.rewardTxt), this.setRewardTxt(_0x8372a4), this.adBtn = ig.game.spawnEntity(EntityButtonRv, 0x0, 0.38 * this.bg.height, {
          'controller': this,
          'btnText': _STRINGS.Game.claim + " x" + ig.GameData.rewardMultiplier
        }), this.adBtn.x += 0.55 * this.adBtn.width, this.add(this.adBtn), this.claimBtn = ig.CallAsset.addFrame(this.adBtn.x - 1.1 * this.adBtn.width, this.adBtn.y, 'ingame/buttons/btn-no', {}, EntityClickBtn), this.claimBtn.onClick.add(this.claimReward, this), this.add(this.claimBtn), this.claimText = ig.game.addText(0x0, -0x2, _STRINGS.Game.claim, Math.floor(0.4 * this.claimBtn.height), fonts.font1, {
          'strokeThickness': 0x3
        }), this.claimText.anchor.setTo(0.5), this.claimBtn.addChild(this.claimText), this.onClaimReward = new ig.AddSignal(this), _SETTINGS.RewardAd.Enabled || (this.adBtn.kill(), this.claimBtn.x = 0.1, this.claimBtn.frameName = 'ingame/buttons/btn-yes');
      },
      'appear': function () {
        this.onGoing || (csound.sfxPlay('popup'), this.parent());
      },
      'setRewardTxt': function (_0x3dfb5f) {
        this.rewardTxt.setText(_0x3dfb5f), this.rewardTxt.updateText(), _0x3dfb5f = 0.8 * this.bg.width, this.rewardTxt.width > _0x3dfb5f && this.rewardTxt.scale.setTo(_0x3dfb5f / this.rewardTxt.width);
      },
      'adSuccess': function () {
        this.multiplyer = ig.GameData.rewardMultiplier, this.claimReward();
      },
      'adFailed': function () {},
      'claimReward': function () {
        csound.sfxPlay('reward');
        var _0x21c1c7 = this.reward * this.multiplyer;
        curState().addMoney(_0x21c1c7, !0x0), this.onClaimReward.dispatch(), this.disappear();
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.buttons.button-unlock-world').requires('game.entities.buttons.base-button').defines(function () {
    EntityButtonUnlockWorld = EntityBaseButton.extend({
      'isLocked': !0x0,
      'isBuyable': !0x0,
      'worldId': 0x0,
      'init': function (_0x49f54a, _0x2d8ba9, _0x203ffd) {
        this.parent(_0x49f54a, _0x2d8ba9, _0x203ffd), this.anchor.setTo(0.5), this.image = ig.Image.cache[imgCache.ingame.path.img], this.btnFrameDataOn = ig.CallAsset.searchSpriteData('ingame/buttons/btn-buyable'), this.btnFrameDataOff = ig.CallAsset.searchSpriteData('ingame/buttons/btn-not-buyable'), this.lockFrameData = ig.CallAsset.searchSpriteData('ingame/ui/locked'), this.coinFrameData = ig.CallAsset.searchSpriteData('ingame/ui/coins'), this.setShape(this.btnFrameDataOn.frame.w, this.btnFrameDataOn.frame.h), this.price = ig.GameData.worldCost[this.worldId], this.inputEnabled = !0x1, this.generatePos(), this.checkIfBuyable(), this.onClick.add(this.unlockWorld, this);
      },
      'generatePos': function () {
        for (var _0x3f9b89 = curState().gMapDrawer, _0x262fdd = _0x3f9b89.image, _0x53952f = _0x3f9b89.image.pivot, _0x3d64d8 = -(_0x3f9b89.width * _0x3f9b89.anchor.x), _0xdc034 = -(_0x3f9b89.height * _0x3f9b89.anchor.y), _0x533ab2 = ig.GameData.tileDatas[this.worldId], _0x563eeb = null, _0x256448 = null, _0x4132e5 = null, _0x4eaf01 = null, _0x16d623 = 0x0; _0x16d623 < _0x533ab2.length; _0x16d623++) for (var _0x2a5dac = _0x533ab2[_0x16d623], _0x4b85c9 = 0x0; _0x4b85c9 < _0x2a5dac.length; _0x4b85c9++) for (var _0x29f522 = _0x2a5dac[_0x4b85c9], _0x50b753 = 0x0; _0x50b753 < _0x29f522.length; _0x50b753++) {
          var _0x558035 = _0x29f522[_0x50b753],
            _0x382e7e = _0x558035.x + _0x3d64d8,
            _0xa8253d = _0x558035.y + _0xdc034,
            _0x558035 = _0x382e7e + _0x558035.tWidth,
            _0x54b0fd = _0xa8253d + _0x3f9b89.image.gapY;
          null == _0x563eeb ? _0x563eeb = _0x382e7e : _0x382e7e < _0x563eeb && (_0x563eeb = _0x382e7e), null == _0x256448 ? _0x256448 = _0xa8253d : _0xa8253d < _0x256448 && (_0x256448 = _0xa8253d), null == _0x4132e5 ? _0x4132e5 = _0x558035 : _0x558035 > _0x4132e5 && (_0x4132e5 = _0x558035), null == _0x4eaf01 ? _0x4eaf01 = _0x54b0fd : _0x54b0fd > _0x4eaf01 && (_0x4eaf01 = _0x54b0fd);
        }
        _0x3f9b89 = _0x256448 + (_0x4eaf01 - _0x256448) / 0x2 - _0x262fdd.posData.minY, this.x = _0x563eeb + (_0x4132e5 - _0x563eeb) / 0x2 - _0x262fdd.posData.minX + _0x53952f.x, this.y = _0x3f9b89 + _0x53952f.y;
      },
      'checkIfBuyable': function () {
        if (ig.game.sessionData.onBoardData.worldId >= this.worldId) this.kill();else {
          for (var _0x2d6eb2 = this.worldId - 0x1, _0x102259 = ig.game.sessionData.unlockedSequence[_0x2d6eb2], _0x365a40 = ig.GameData.tileDatas[_0x2d6eb2], _0x1b0c33 = _0x2d6eb2 = 0x0; _0x1b0c33 < _0x365a40.length; _0x1b0c33++) for (var _0x42e5ae = _0x365a40[_0x1b0c33], _0x4c9505 = 0x0; _0x4c9505 < _0x42e5ae.length; _0x4c9505++) _0x2d6eb2 += _0x42e5ae[_0x4c9505].length;
          for (_0x1b0c33 = _0x365a40 = 0x0; _0x1b0c33 < _0x102259.length; _0x1b0c33++) {
            _0x42e5ae = _0x102259[_0x1b0c33];
            for (_0x4c9505 = 0x0; _0x4c9505 < _0x42e5ae.length; _0x4c9505++) _0x365a40 += _0x42e5ae[_0x4c9505].tiles.length;
          }
          _0x365a40 == _0x2d6eb2 && (this.isLocked = !0x1, this.inputEnabled = this.isBuyable = !0x0);
        }
      },
      'unlockWorld': function () {
        if (!this.isLocked && !(ig.game.sessionData.money < this.price)) {
          csound.sfxPlay('reward'), ig.game.sessionData.onBoardData = {
            'worldId': this.worldId,
            'sectionId': 0x0,
            'blockId': null
          }, ig.game.save('onBoardData', ig.game.sessionData.onBoardData), curState().addMoney(-this.price);
          var _0x367bec = curState().gMapDrawer,
            _0x51c9c3 = curState().gMap,
            _0x1631d1 = ig.game.sessionData.onBoardData;
          if (_0x1631d1.worldId == curState().worldIds.startId && 0x0 == _0x1631d1.sectionId) {
            for (var _0x1631d1 = ig.GameData.tileDatas[_0x1631d1.worldId][_0x1631d1.sectionId][0x0], _0x159d92 = 0x0; _0x159d92 < _0x1631d1.length; _0x159d92++) {
              var _0x5b35ea = _0x1631d1[_0x159d92];
              _0x367bec.image.checkTileExists(_0x5b35ea);
              if ('starterTile' == _0x5b35ea.tileType) break;
            }
            _0x367bec.image.checkUnlockedDatas(), _0x51c9c3.generateNewArea();
          } else _0x51c9c3.createUnlockBlockBtn();
          _0x367bec.image.drawImageCanvas(), curState().unlockWorldButtons[this.worldId - 0x1] = null, this.kill();
        }
      },
      'drawShape': function () {
        var _0xe07f64 = ig.system.context;
        if (this.isLocked) this.image.draw((this.width - this.lockFrameData.frame.w) / 0x2, (this.height - this.lockFrameData.frame.h) / 0x2, this.lockFrameData.frame.x, this.lockFrameData.frame.y, this.lockFrameData.frame.w, this.lockFrameData.frame.h);else {
          var _0x3b96f5 = this.btnFrameDataOff;
          this.isBuyable && ig.game.sessionData.money > this.price && (_0x3b96f5 = this.btnFrameDataOn), this.image.draw(0x0, 0x0, _0x3b96f5.frame.x, _0x3b96f5.frame.y, _0x3b96f5.frame.w, _0x3b96f5.frame.h);
          var _0x3b96f5 = 0.7 * this.coinFrameData.frame.w,
            _0x470920 = (this.height - 0.7 * this.coinFrameData.frame.h) / 0x2 - 0x5,
            _0x3de497 = this.coinFrameData.frame.x,
            _0x19c201 = this.coinFrameData.frame.y;
          _0xe07f64.save(), _0xe07f64.translate(0x14, _0x470920), _0xe07f64.scale(0.7, 0.7), this.image.draw(0x0, 0x0, _0x3de497, _0x19c201, this.coinFrameData.frame.w, this.coinFrameData.frame.h), _0xe07f64.restore(), _0x470920 = ig.GameData.generateMoneyChart(this.price), _0x3de497 = Math.floor(0.5 * this.height), _0xe07f64.font = _0x3de497 + "px " + fonts.font1, _0x19c201 = _0xe07f64.measureText(_0x470920).width, _0x3b96f5 = 0.7 * (this.width - (0x14 + _0x3b96f5)), _0x19c201 > _0x3b96f5 && (_0x3de497 *= _0x3b96f5 / _0x19c201, _0x3de497 = Math.floor(_0x3de497), _0xe07f64.font = _0x3de497 + "px " + fonts.font1), _0x3b96f5 = this.width - 0x14, _0x3de497 = 0.5 * this.height + 0.3 * _0x3de497 - 0x2, _0xe07f64.fillStyle = 'white', _0xe07f64.textAlign = 'right', _0xe07f64.fillText(_0x470920, _0x3b96f5, _0x3de497);
        }
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.buttons.button-zoom').requires('game.entities.buttons.base-button').defines(function () {
    EntityButtonZoom = EntityBaseButton.extend({
      'isZoomIn': !0x0,
      'init': function (_0xab74f3, _0x34cdc8, _0x42e814) {
        this.parent(_0xab74f3, _0x34cdc8, _0x42e814), this.image = ig.Image.cache[imgCache.ingame.path.img], this.isZoomIn ? (this.frameData = ig.CallAsset.searchSpriteData('ingame/buttons/btn-zoom-in'), this.onClick.add(this.zoomIn, this)) : (this.frameData = ig.CallAsset.searchSpriteData('ingame/buttons/btn-zoom-out'), this.onClick.add(this.zoomOut, this)), this.setShape(this.frameData.frame.w, this.frameData.frame.h);
      },
      'zoomIn': function () {
        var _0xc16900 = curState().zoomLevel + 0x1;
        _0xc16900 <= curState().maxZoomLevel && this.calculateZoomScale(_0xc16900);
      },
      'zoomOut': function () {
        var _0x412607 = curState().zoomLevel - 0x1;
        _0x412607 >= curState().minZoomLevel && this.calculateZoomScale(_0x412607);
      },
      'calculateZoomScale': function (_0x7d35e9) {
        var _0x2a1293 = (curState().maxScale - curState().minScale) / curState().maxScale;
        curState().zoomLevel = _0x7d35e9, _0x7d35e9 = curState().minScale + _0x7d35e9 * _0x2a1293, _0x2a1293 = curState().gInGame.scale.x, curState().distScale = _0x7d35e9 / _0x2a1293, curState().gInGame.scale.setTo(_0x7d35e9), curState().reposMap(), curState().gInGame.scale.setTo(_0x2a1293), curState().tweenScale(_0x7d35e9);
      },
      'update': function () {
        this.parent();
      },
      'drawShape': function () {
        this.image.draw(0x0, 0x0, this.frameData.frame.x, this.frameData.frame.y, this.frameData.frame.w, this.frameData.frame.h);
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.buttons.button-booster').requires('game.entities.buttons.base-button').defines(function () {
    EntityButtonBooster = EntityBaseButton.extend({
      'btnIdx': 0x0,
      'isActive': !0x1,
      'boostDuration': 0x0,
      'labelLineWidth': 0x3,
      'tweenScale': null,
      'init': function (_0xd3e1ea, _0x57451a, _0x2cd1e5) {
        this.parent(_0xd3e1ea, _0x57451a, _0x2cd1e5), this.image = ig.Image.cache[imgCache.ingame.path.img], this.canvas = ig.$new('canvas'), this.setFrame(), this.onClick.add(this.showAd, this), this.oriScale = {
          'x': this.scale.x,
          'y': this.scale.y
        }, 0x0 < ig.GameData.boostTimer[this.btnIdx] && this.adSuccess(ig.GameData.boostTimer[this.btnIdx]);
      },
      'setShape': function (_0xc5a30, _0x2d7ff8) {
        this.parent(_0xc5a30, _0x2d7ff8), this.canvas.width = _0xc5a30, this.canvas.height = _0x2d7ff8;
      },
      'animateBtn': function () {
        if (!this.isActive && !this.onGoing && !this.tweenScale) {
          var _0x19d768 = this.oriScale.x,
            _0x19d768 = [1.05 * _0x19d768, _0x19d768];
          this.tweenScale = new ig.TweenDef(this.scale).to({
            'x': _0x19d768,
            'y': _0x19d768
          }, 0x1f4).onComplete(function () {
            this.tweenScale = null, this.animateBtn();
          }.bind(this)).start();
        }
      },
      'setScale': function (_0x5d4ba1, _0x5c4c55) {
        this.parent(_0x5d4ba1, _0x5c4c55);
      },
      'setFrame': function () {
        var _0x57b1b0 = ig.CallAsset.searchSpriteData('ingame/buttons/btn-dark');
        this.bgFrameData = _0x57b1b0;
        var _0x2286dd = _0x57b1b0.frame.w,
          _0x57b1b0 = _0x57b1b0.frame.h;
        this.spriteData = ig.CallAsset.searchSpriteData(0x0 == this.btnIdx ? 'ingame/buttons/speed-icon' : 'ingame/buttons/multiplier-icon'), this.nameBoxData = {
          'w': Math.floor(0.9 * _0x2286dd),
          'h': Math.floor(0.3 * _0x57b1b0)
        }, this.gapBoxY = -(0.3 * this.nameBoxData.h), _0x2286dd = Math.max(_0x2286dd, this.nameBoxData.w + this.labelLineWidth), this.setShape(_0x2286dd, _0x57b1b0 + this.nameBoxData.h + this.gapBoxY + this.labelLineWidth), this.drawImageCanvas();
      },
      'clicked': function () {
        if ((!ig.game.transition || !ig.game.transition.isClosed) && !this.isClicked && !this.onGoing) this.tweenScale && (this.tweenScale.stop(), this.tweenScale = null), this.setScale(this.oriScale.x, this.oriScale.y), this.parent();
      },
      'showAd': function () {
        this.isActive || 0x3 > ig.game.sessionData.tutorIdx || (ig.game.sessionData.boostActivation[this.btnIdx] ? (this.adMockup = ig.game.spawnEntity(EntityAdMockup, curState().centerX, curState().centerY, {
          'onSuccess': this.adSuccess.bind(this),
          'onFail': this.adFailed.bind(this)
        }), curState().gFront.add(this.adMockup)) : this.adSuccess());
      },
      'adSuccess': function (_0x43458d) {
        if (!this.isActive) {
          curState().pageReady && csound.sfxPlay('reward'), this.isActive = !0x0, this.inputEnabled = !0x1;
          var _0x3b1e74 = ig.GameData.boostDuration;
          _0x43458d && (_0x3b1e74 = _0x43458d), 0x0 == this.btnIdx ? ig.GameData.timerSpeed = ig.GameData.boostMultiplier : 0x1 == this.btnIdx && (ig.GameData.incomeMultiplier = ig.GameData.boostMultiplier), this.boostDuration = _0x3b1e74, ig.GameData.boostTimer[this.btnIdx] = _0x3b1e74, this.adMockup && this.adMockup.exist && (this.adMockup.kill(), this.adMockup = null), ig.game.sessionData.boostActivation[this.btnIdx] || (ig.game.sessionData.boostActivation[this.btnIdx] = !0x0, ig.game.save('boostActivation', ig.game.sessionData.boostActivation)), 0x3 == ig.game.sessionData.tutorIdx && curState().tutorCtrl.tutorOnComplete();
        }
      },
      'adFailed': function () {
        this.animateBtn();
      },
      'onBoostEnd': function () {
        this.isActive = !0x1, this.boostDuration = 0x0, 0x0 == this.btnIdx ? ig.GameData.timerSpeed = 0x1 : 0x1 == this.btnIdx && (ig.GameData.incomeMultiplier = 0x1), this.inputEnabled = !0x0, this.animateBtn();
      },
      'update': function () {
        this.parent(), this.isActive && 0x0 < this.boostDuration && (this.boostDuration -= ig.system.tick, 0x0 >= this.boostDuration && (this.boostDuration = 0x0, this.onBoostEnd()), ig.GameData.boostTimer[this.btnIdx] = this.boostDuration, this.drawImageCanvas());
      },
      'drawShape': function () {
        ig.system.context.drawImage(this.canvas, 0x0, 0x0, this.canvas.width, this.canvas.height, 0x0, 0x0, this.canvas.width, this.canvas.height);
      },
      'drawImageCanvas': function () {
        var _0x375d4b = this.canvas.getContext('2d');
        _0x375d4b.clearRect(0x0, 0x0, this.width, this.height);
        var _0x118f96 = 'ingame/buttons/btn-dark';
        this.isActive || (_0x118f96 = 'ingame/buttons/btn-red'), _0x118f96 = ig.CallAsset.searchSpriteData(_0x118f96), this.image.drawCtx(_0x375d4b, (this.width - _0x118f96.frame.w) / 0x2, 0x0, _0x118f96.frame.x, _0x118f96.frame.y, _0x118f96.frame.w, _0x118f96.frame.h), this.image.drawCtx(_0x375d4b, (this.width - this.spriteData.frame.w) / 0x2, (_0x118f96.frame.h - this.spriteData.frame.h) / 0x2, this.spriteData.frame.x, this.spriteData.frame.y, this.spriteData.frame.w, this.spriteData.frame.h), this.drawBox();
      },
      'drawBox': function () {
        var _0x31366f = this.canvas.getContext('2d'),
          _0x5ce27e = this.nameBoxData.w,
          _0x58c54e = this.nameBoxData.h,
          _0x5ce27e = ig.game.geom.halfCircleRect((this.width - _0x5ce27e) / 0x2, this.bgFrameData.frame.h + this.gapBoxY, _0x5ce27e, _0x58c54e, Math.floor(0.05 * _0x5ce27e), 0xa);
        ig.game.geomDebug.halfCircleRect(_0x5ce27e, 'grey', this.alpha, {
          'strokeStyle': 'white',
          'lineWidth': this.labelLineWidth
        }, _0x31366f), _0x31366f.save(), _0x58c54e = Math.round(0.5 * _0x58c54e), _0x31366f.font = _0x58c54e + "px " + fonts.font1, _0x31366f.textAlign = 'center', _0x31366f.fillStyle = 'white';
        if (this.isActive) 0x0 > this.boostDuration && (this.boostDuration = 0x0), _0x18f6e6 = ig.game.countMin(this.boostDuration);else {
          var _0x18f6e6 = _STRINGS.Ads.Ads;
          ig.game.sessionData.boostActivation[this.btnIdx] || (_0x18f6e6 = _STRINGS.Ads.Free);
        }
        _0x31366f.fillText(_0x18f6e6, _0x5ce27e.centerX, _0x5ce27e.centerY + 0.3 * _0x58c54e), _0x31366f.restore();
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.buttons.button-area-toggle').requires('game.entities.objects.click-btn').defines(function () {
    EntityButtonAreaToggle = EntityClickBtn.extend({
      'btnIdx': 0x0,
      'init': function (_0x3a68db, _0x26709d, _0x4e6252) {
        this.parent(_0x3a68db, _0x26709d, _0x4e6252), this.setProperties(imgCache.ingame.path.img), this.onStartClick.add(function () {
          curState().curtainBg.visible = !0x0;
        }, this), this.onClick.add(this.changeArea, this);
      },
      'setProperties': function (_0x50eff1) {
        this.parent(_0x50eff1), this.frameName = 0x0 == this.btnIdx ? 'ingame/buttons/btn-next' : 'ingame/buttons/btn-prev', this.setFrame();
      },
      'changeArea': function () {
        var _0x12b1f8 = ig.GameData.areaId;
        0x0 == this.btnIdx ? _0x12b1f8++ : _0x12b1f8--;
        if (0x0 > _0x12b1f8 || _0x12b1f8 >= ig.GameData.areaWorldsCount.length) _0x12b1f8 = ig.GameData.areaId;
        _0x12b1f8 != ig.GameData.areaId ? curState().changeArea(_0x12b1f8) : curState().curtainBg.visible = !0x1;
      },
      'update': function () {
        this.parent(), this.visible = 0x0 == this.btnIdx ? ig.GameData.areaId + 0x1 < ig.GameData.areaWorldsCount.length ? !0x0 : !0x1 : 0x0 > ig.GameData.areaId - 0x1 ? !0x1 : !0x0;
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.objects.tutor-ctrl').requires('game.entities.addon.group').defines(function () {
    EntityTutorCtrl = EntityGroup.extend({
      'isActive': !0x1,
      'tweenHand': null,
      'init': function (_0x50e02c, _0x18ef5d, _0x46ad89) {
        this.parent(_0x50e02c, _0x18ef5d, _0x46ad89), this.hand = ig.CallAsset.addFrame(0x0, 0x0, 'ingame/ui/finger'), this.hand.anchor.setTo(0x0), this.hand.visible = !0x1, this.add(this.hand), 0x0 != ig.GameData.areaId && this.kill();
      },
      'handTweenScale': function (_0x178aad, _0x236555, _0x3f159d, _0x36194b) {
        this.tweenHand || (_0x236555 = _0x236555 ? _0x236555 : 0x96, _0x36194b = _0x36194b ? _0x36194b : function () {
          this.tweenHand && (this.tweenHand = null);
        }.bind(this), this.tweenHand = new ig.TweenDef(this.hand.scale).to({
          'x': _0x178aad,
          'y': _0x178aad
        }, _0x236555).repeat(_0x3f159d ? _0x3f159d : 0x0).onComplete(_0x36194b).start());
      },
      'checkTutor': function () {
        if (0x1 == ig.game.sessionData.tutorIdx) {
          for (var _0x3b8491 = curState().gMap, _0x21e243 = 0x0; _0x21e243 < _0x3b8491.tiles.length; _0x21e243++) {
            var _0x186f5e = _0x3b8491.tiles[_0x21e243];
            if (_0x186f5e.isBuyable) break;
          }
          this.hand.visible = !0x0, this.hand.x = _0x186f5e.x, this.hand.y = _0x186f5e.y, this.handTweenScale([1.2, 0x1], 0x1f4, -0x1), this.isActive = !0x0;
        } else {
          if (0x2 == ig.game.sessionData.tutorIdx && (_0x3b8491 = curState().gMap.unlockBlockBtns[0x0])) {
            var _0x144039 = ig.GameData.tileDatas[_0x3b8491.worldId][_0x3b8491.sectionId][_0x3b8491.blockId],
              _0x21e243 = curState().maxScale;
            curState().zoomLevel = 0x2, _0x186f5e = curState().gInGame.scale.x, curState().gInGame.scale.setTo(_0x21e243), curState().generateMinMaxScroll();
            var _0x2fa2b0 = curState().generateBlockArea(_0x144039),
              _0x144039 = _0x2fa2b0.centerX - ig.system.width / 0x2,
              _0x2fa2b0 = _0x2fa2b0.centerY - ig.system.height / 0x2,
              _0x144039 = curState().checkScreenPos(_0x144039, _0x2fa2b0);
            curState().screenPos = _0x144039, curState()._screenPos = new Vector2(curState().screenPos.x, curState().screenPos.y), curState().tweenScreen(), curState().gInGame.scale.setTo(_0x186f5e), curState().tweenScale(_0x21e243), this.hand.visible = !0x0, this.hand.x = _0x3b8491.x, this.hand.y = _0x3b8491.y, this.handTweenScale([1.2, 0x1], 0x1f4, -0x1), this.isActive = !0x0;
          }
        }
      },
      'tutorOnComplete': function () {
        if (0x2 >= ig.game.sessionData.tutorIdx && this.isActive) this.hideTutor();else {
          if (0x3 == ig.game.sessionData.tutorIdx) {
            for (var _0x51b608 = !0x0, _0x1a094f = 0x0; _0x1a094f < ig.game.sessionData.boostActivation.length; _0x1a094f++) if (!ig.game.sessionData.boostActivation[_0x1a094f]) {
              _0x51b608 = !0x1;
              break;
            }
            _0x51b608 && this.hideTutor();
          }
        }
      },
      'hideTutor': function () {
        this.isActive && (this.isActive = !0x1, this.tweenHand && (this.tweenHand.stop(), this.tweenHand = null), this.hand.visible = !0x1), ig.game.sessionData.tutorIdx++;
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.objects.popup.area-unlock-popup').requires('game.entities.objects.popup.base-popup').defines(function () {
    EntityAreaUnlockPopup = EntityBasePopup.extend({
      'isCameraLock': !0x0,
      'allCompleted': !0x1,
      'init': function (_0x46dae3, _0x10e5e6, _0x4175e5) {
        this.parent(_0x46dae3, _0x10e5e6, _0x4175e5), this.bg = ig.CallAsset.addImage(0x0, 0x0, 'bg-finish'), this.bg.anchor.setTo(0.5), this.add(this.bg), this.titleTxt = ig.game.addText(0.15 * -this.bg.width, 0.2 * -this.bg.height, _STRINGS.Game.congratulation, 0x4b, fonts.font1, {
          'fill': '#191919'
        }), this.titleTxt.anchor.setTo(0.5, 0x0), this.add(this.titleTxt), _0x46dae3 = _STRINGS.Game.areaUnlock, this.descTxt = ig.game.addText(-0x14, -(0.21 * this.bg.height), _0x46dae3, 0x2d, fonts.font1), this.descTxt.anchor.setTo(0.5, 0x0), this.descTxt.fill = '#191919', this.descTxt.wordWrap = !0x0, this.descTxt.wordWrapWidth = 0.8 * this.bg.width, this.descTxt.align = 'center', this.descTxt.canvasDimensionOffset.x = 0x5, this.add(this.descTxt), _0x46dae3 = ig.game.generateAreaId(), this.areaName = ig.game.addText(0x0, 0x23, _STRINGS.Game.areaNames[_0x46dae3], 0x5a, fonts.font1, {
          'fill': '#f47621',
          'strokeThickness': 0x3
        }), this.areaName.anchor.setTo(0.5), this.add(this.areaName), this.btnHome = ig.CallAsset.addFrame(0x0, 0.35 * this.bg.height, 'ingame/buttons/btn-home', {}, EntityClickBtn), this.btnHome.x -= 0.75 * this.btnHome.width, this.btnHome.onStartClick.add(this.showCurtainBg, this), this.btnHome.onClick.add(this.toHome, this), this.add(this.btnHome), this.btnNext = ig.CallAsset.addFrame(this.btnHome.x + 1.5 * this.btnHome.width, this.btnHome.y, 'ingame/buttons/btn-next-area', {}, EntityClickBtn), this.btnNext.onStartClick.add(this.showCurtainBg, this), this.btnNext.onClick.add(this.nextArea, this), this.add(this.btnNext), this.allCompleted && (_0x46dae3 = _STRINGS.Game.allCompleted, this.descTxt.setText(_0x46dae3), this.descTxt.y = 0.1 * this.bg.height, this.areaName.kill(), this.btnHome.x = this.descTxt.x, this.btnNext.kill()), this.btnClose = ig.CallAsset.addFrame(0.5 * this.bg.width, -(0.35 * this.bg.height), 'ingame/buttons/btn-close', {}, EntityClickBtn), this.btnClose.x -= 0.5 * this.btnClose.width, this.btnClose.y += 0.5 * this.btnClose.height, this.btnClose.onStartClick.add(function () {
          curState().curtainBg.visible = !0x0;
        }, this), this.btnClose.onClick.add(function () {
          var _0x5e483c = ig.game.generateAreaId();
          ig.GameData.newAreaReminder[_0x5e483c] = !0x0, this.disappear();
        }, this), this.add(this.btnClose);
      },
      'showCurtainBg': function () {
        curState().curtainBg.visible = !0x0;
      },
      'nextArea': function () {
        var _0x3706e7 = ig.game.generateAreaId();
        ig.GameData.newAreaReminder[_0x3706e7] = !0x0, curState().changeArea(_0x3706e7);
      },
      'toHome': function () {
        var _0xbe8ac1 = ig.game.generateAreaId();
        ig.GameData.newAreaReminder[_0xbe8ac1] = !0x0, ig.game.changePage(LevelMainmenu);
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.objects.boost-status-box').requires('game.entities.addon.manual-draw-entity').defines(function () {
    EntityBoostStatusBox = EntityManualDrawEntity.extend({
      'init': function (_0x54621e, _0x1dd93e, _0x466aab) {
        this.parent(_0x54621e, _0x1dd93e, _0x466aab), this.rectSize = {
          'x': 0xc8,
          'y': 0x32
        }, this.gapBoxY = 0x14, this.fontSize = Math.floor(0.5 * this.rectSize.y), _0x54621e = ig.system.context, _0x54621e.font = this.fontSize + "px " + fonts.font1;
        for (_0x466aab = _0x1dd93e = 0x0; _0x466aab < _STRINGS.Game.boostDesc.length; _0x466aab++) {
          var _0x390c28 = _STRINGS.Game.boostDesc[_0x466aab],
            _0x390c28 = _t(_0x390c28, ig.GameData.boostMultiplier),
            _0x390c28 = _0x54621e.measureText(_0x390c28).width;
          _0x390c28 > _0x1dd93e && (_0x1dd93e = _0x390c28);
        }
        _0x54621e = Math.floor(0x2 * _0x1dd93e) + 0x1, this.setShape(_0x54621e, Math.floor(0x2 * this.rectSize.y + this.gapBoxY) + 0x1), this.rectSize.x = _0x54621e, this.fill = '#fad60b', this.stroke = 'white';
      },
      'drawShape': function () {
        var _0x1d42d3 = ig.system.context,
          _0x509af6 = this.rectSize.x,
          _0x2ae2fd = this.rectSize.y,
          _0x233146 = 0x0,
          _0x155ffb = Math.floor(0.05 * _0x509af6),
          _0x3e4758 = 0x0,
          _0x4c16be = this.fontSize;
        _0x1d42d3.font = _0x4c16be + "px " + fonts.font1, _0x1d42d3.textAlign = 'center';
        for (var _0x204485 = 0x0; _0x204485 < ig.GameData.boostTimer.length; _0x204485++) if (0x0 < ig.GameData.boostTimer[_0x204485]) {
          var _0x217c48 = _STRINGS.Game.boostDesc[_0x204485],
            _0x217c48 = _t(_0x217c48, ig.GameData.boostMultiplier),
            _0x233146 = _0x233146 + (_0x2ae2fd + this.gapBoxY) * _0x3e4758,
            _0x123fc9 = ig.game.geom.halfCircleRect(0x0, _0x233146, _0x509af6, _0x2ae2fd, _0x155ffb, 0xf);
          ig.game.geomDebug.halfCircleRect(_0x123fc9, this.fill, this.alpha, {
            'strokeStyle': this.stroke,
            'lineWidth': 0x3
          });
          var _0x2ccef5 = _0x123fc9.centerX,
            _0x123fc9 = _0x123fc9.centerY + 0.3 * _0x4c16be;
          _0x1d42d3.fillStyle = 'white', _0x1d42d3.strokeStyle = 'black', _0x1d42d3.lineWidth = 0x2, _0x1d42d3.strokeText(_0x217c48, _0x2ccef5, _0x123fc9), _0x1d42d3.fillText(_0x217c48, _0x2ccef5, _0x123fc9), _0x3e4758++;
        }
      }
    });
  }), ig.baked = !0x0, ig.module('game.entities.controllers.gameplay-ctrl').requires('game.entities.addon.page-controller', 'game.entities.objects.game-bg', 'game.entities.objects.world-map', 'game.entities.objects.world-map-drawer', 'game.entities.objects.factory-ctrl', 'game.entities.objects.coin-ctrl', 'game.entities.buttons.button-upgrade', 'game.entities.objects.popup.reward-popup', 'game.entities.buttons.button-unlock-world', 'game.entities.buttons.button-zoom', 'game.entities.buttons.button-booster', 'game.entities.buttons.button-area-toggle', 'game.entities.objects.tutor-ctrl', 'game.entities.objects.popup.area-unlock-popup', 'game.entities.objects.boost-status-box').defines(function () {
    EntityGameplayCtrl = EntityPageController.extend({
      'saveDataCD': 0x0,
      'saveDataTimer': 0x1,
      'prevTouchDist': null,
      'clickTime': 0x0,
      'maxClickTime': 0x96,
      'isScaling': !0x1,
      'isDragging': !0x1,
      'isMapClicked': !0x1,
      'minDist': 0x1e,
      'startClickPos': {},
      'screenPos': {},
      '_screenPos': {},
      'onGoing': !0x1,
      'upgradeBtnEnabled': !0x1,
      'minDistTween': 0x0,
      'init': function (_0x55a3ae, _0x113b84, _0x5743d4) {
        this.parent(_0x55a3ae, _0x113b84, _0x5743d4), ig.global.wm || this.create();
      },
      'create': function () {
        ig.game.screen.x = 0x0, ig.game.screen.y = 0x0, this.worldIds = this.generateWorldId(ig.GameData.areaId), this.bg = ig.game.spawnEntity(EntityGameBg, this.centerX, this.centerY, {
          'isCameraLock': !0x0
        }), this.bg.anchor.setTo(0.5), this.gBG.add(this.bg), this.createGreyBg(), this.gLocked = ig.game.addGroup(), this.gInGame = ig.game.addGroup(this.centerX, this.centerY, {}, EntityLockedGroup), this.gGUI = ig.game.addGroup(0x0, 0x0, {
          'isResponsive': !0x1,
          'isCameraLock': !0x0
        }, EntityLockedGroup), this.gMapDrawer = ig.game.spawnEntity(EntityWorldMapDrawer, 0x0, 0x0), this.gInGame.add(this.gMapDrawer), this.unlockWorldButtons = [];
        for (var _0x228189 = 0x1; _0x228189 < ig.GameData.tileDatas.length; _0x228189++) {
          var _0x1c9cb0 = ig.game.spawnEntity(EntityButtonUnlockWorld, 0x0, 0x0, {
            'worldId': _0x228189
          });
          this.gLocked.add(_0x1c9cb0);
          if (_0x228189 < this.worldIds.startId || _0x228189 >= this.worldIds.endId) _0x1c9cb0.visible = !0x1;
          this.unlockWorldButtons.push(_0x1c9cb0);
        }
        this.gMap = ig.game.addGroup(0x0, 0x0, {
          'tileDatas': this.gMapDrawer.tileDatas,
          'worldMap': this.gMapDrawer
        }, EntityWorldMap), this.gInGame.add(this.gMap), this.gFactory = ig.game.spawnEntity(EntityFactoryCtrl, 0x0, 0x0), this.gInGame.add(this.gFactory), this.gInGame.add(this.gLocked), this.maxScale = 1.8, this.minScale = 0.8, this.scaleSpeed = 0.1, this.dragSpeed = 0xa, this.maxScreenY = this.maxScreenX = 0x1f4, this.minScreenY = this.minScreenX = 0x0, this.minDistTween = 0x64, _0x228189 = ig.game.sessionData.onBoardData, _0x1c9cb0 = 0x0, null != _0x228189.blockId && (_0x1c9cb0 = _0x228189.blockId), 0x3 < ig.GameData.countUnlockedBlock(_0x228189.worldId, _0x228189.sectionId, _0x1c9cb0) && (this.upgradeBtnEnabled = !0x0), this.upgradeButtons = [];
        for (_0x228189 = 0x0; _0x228189 < ig.GameData.upgradeDatabase.length; _0x228189++) _0x1c9cb0 = ig.game.spawnEntity(EntityButtonUpgrade, 0x0, 0x0, {
          'btnIdx': _0x228189
        }), this.gGUI.add(_0x1c9cb0), this.upgradeBtnEnabled || (_0x1c9cb0.visible = !0x1), _0x1c9cb0.kill(), this.upgradeButtons.push(_0x1c9cb0);
        this.minZoomLevel = 0x0, this.zoomLevel = this.maxZoomLevel = 0x2, this.zoomInBtn = ig.game.spawnEntity(EntityButtonZoom, 0x14, 0x14, {
          'isResponsive': !0x1
        }), this.zoomInBtn.x += this.zoomInBtn.width / 0x2, this.zoomInBtn.y += this.zoomInBtn.height / 0x2, this.gGUI.add(this.zoomInBtn), this.zoomOutBtn = ig.game.spawnEntity(EntityButtonZoom, this.zoomInBtn.x + this.zoomInBtn.width + 0xa, this.zoomInBtn.y, {
          'isResponsive': !0x1,
          'isZoomIn': !0x1
        }), this.gGUI.add(this.zoomOutBtn), this.resourceSpeedBtn = ig.game.spawnEntity(EntityButtonBooster, this.zoomInBtn.x, this.zoomInBtn.y + 0.5 * this.zoomInBtn.height), this.resourceSpeedBtn.y += 0.5 * this.resourceSpeedBtn.height + 0x14, this.gGUI.add(this.resourceSpeedBtn), this.incomeSpeedBtn = ig.game.spawnEntity(EntityButtonBooster, this.resourceSpeedBtn.x, this.resourceSpeedBtn.y + 1.2 * this.resourceSpeedBtn.height, {
          'btnIdx': 0x1
        }), this.gGUI.add(this.incomeSpeedBtn), this.boostButtons = [this.resourceSpeedBtn, this.incomeSpeedBtn], this.upgradeBtnEnabled || (this.resourceSpeedBtn.visible = !0x1, this.incomeSpeedBtn.visible = !0x1);
        if (!_SETTINGS.RewardAd.Enabled) {
          for (_0x228189 = 0x0; _0x228189 < this.boostButtons.length; _0x228189++) this.boostButtons[_0x228189].kill();
        }
        this.btnSettings = ig.CallAsset.addFrame(0x0, 0x28, 'ingame/buttons/btn-settings', {}, EntityClickBtn), this.btnSettings.y += 0.5 * this.btnSettings.size.y, this.btnSettings.onStartClick.add(function () {
          this.greyBg.visible = !0x0;
        }, this), this.btnSettings.onClick.add(this.showSettingPopup, this), this.gGUI.add(this.btnSettings), this.boostStatusBox = ig.game.spawnEntity(EntityBoostStatusBox, 0x0, this.btnSettings.y + 0.5 * this.btnSettings.height + 0x14, {}), this.boostStatusBox.anchor.setTo(0x1, 0x0), this.gGUI.add(this.boostStatusBox), this.moneyBox = ig.CallAsset.addFrameImage(0x0, this.btnSettings.y, 'ingame/ui/coin-box', {
          'isResponsive': !0x1,
          'isCameraLock': !0x0
        }), this.moneyBox.anchor.setTo(0x1, 0.5), this.gGUI.add(this.moneyBox), this.showMoney = ig.game.addText(-(0.5 * this.moneyBox.size.x) + 0x56, 0x7, ig.game.sessionData.money + '', Math.floor(0.4 * this.moneyBox.size.y), fonts.font1, {
          'isResponsive': !0x1,
          'isCameraLock': !0x0,
          'fill': 'black'
        }), this.showMoney.anchor.setTo(0.5), this.showMoney.align = 'right', this.moneyBox.addChild(this.showMoney), this.showAreaName = ig.game.addText(0x0, this.btnSettings.y, _STRINGS.Game.areaNames[ig.GameData.areaId], Math.floor(0.5 * this.btnSettings.height), fonts.font1, {
          'strokeThickness': 0x5
        }), this.showAreaName.anchor.setTo(0.5), this.gGUI.add(this.showAreaName), this.showCurAreaTxt = ig.game.addText(0x9, this.showAreaName.y + 0.5 * this.showAreaName.fontSize + 0xa, ig.GameData.areaId + 0x1 + '/' + ig.GameData.areaWorldsCount.length, Math.floor(0.7 * this.showAreaName.fontSize), fonts.font1, {
          'fill': 'white',
          'strokeThickness': 0x5
        }), this.showCurAreaTxt.anchor.setTo(0.5, 0x0), this.gGUI.add(this.showCurAreaTxt), this.showCurAreaTxt.updateText(), 0x1 == ig.GameData.areaWorldsCount.length && (this.showCurAreaTxt.visible = !0x1), this.nextAreaBtn = ig.game.spawnEntity(EntityButtonAreaToggle, 0x0, this.btnSettings.y), this.gGUI.add(this.nextAreaBtn), this.prevAreaBtn = ig.game.spawnEntity(EntityButtonAreaToggle, 0x0, this.nextAreaBtn.y, {
          'btnIdx': 0x1
        }), this.gGUI.add(this.prevAreaBtn), this.tutorCtrl = ig.game.spawnEntity(EntityTutorCtrl, 0x0, 0x0), this.gInGame.add(this.tutorCtrl), this.gCont.add(this.gInGame), this.gCont.add(this.gGUI), this.onScaleComplete = new ig.AddSignal(this), this.onReposComplete = new ig.AddSignal(this), this.updateOnOrientationChange();
      },
      'generateWorldId': function (_0x24e1b3) {
        _0x24e1b3 = _0x24e1b3 ? _0x24e1b3 : 0x0;
        for (var _0x1e6e31 = 0x0, _0x2369df = 0x0, _0x5f19b0 = 0x0; _0x5f19b0 < ig.GameData.areaWorldsCount.length; _0x5f19b0++) {
          var _0x3e225b = ig.GameData.areaWorldsCount[_0x5f19b0];
          _0x5f19b0 <= _0x24e1b3 && (_0x2369df += _0x3e225b, _0x5f19b0 < _0x24e1b3 && (_0x1e6e31 += _0x3e225b), _0x2369df > ig.GameData.tileDatas.length && (_0x2369df = ig.GameData.tileDatas.length));
        }
        return {
          'startId': _0x1e6e31,
          'endId': _0x2369df
        };
      },
      'changeArea': function (_0x427ed9) {
        ig.GameData.areaId = _0x427ed9, ig.game.changePage(LevelGameplay);
      },
      'startPage': function () {
        this.upgradeBtnEnabled ? (this.resourceSpeedBtn.animateBtn(), this.incomeSpeedBtn.animateBtn()) : (this.resourceSpeedBtn.visible = !0x1, this.incomeSpeedBtn.visible = !0x1), this.onReposComplete.add(function () {
          this.onGoing = !0x1, this.curtainBg.visible = !0x1;
        }, this), this.onScaleComplete.add(function () {
          this.onGoing = !0x1, this.curtainBg.visible = !0x1;
        }, this), this.tutorCtrl.checkTutor();
        if (!(0x2 == ig.game.sessionData.tutorIdx && this.tutorCtrl.isActive)) {
          var _0x39bf6c = ig.GameData.countTotTilesAllWorlds();
          ig.GameData.countUnlockedTiles == _0x39bf6c ? (_0x39bf6c = this.minScale, this.zoomLevel = 0x0) : 0x0 == this.gMap.tiles.length ? (_0x39bf6c = this.minScale, this.zoomLevel = 0x0) : (_0x39bf6c = this.maxScale, this.zoomLevel = 0x2);
          var _0x37435f = ig.game.sessionData.onBoardData.worldId;
          if (_0x37435f < this.worldIds.startId || _0x37435f >= this.worldIds.endId) {
            if (_0x39bf6c = this.minScale, this.zoomLevel = 0x0, _0x37435f = this.gInGame.scale.x, this.gInGame.scale.setTo(_0x39bf6c), this.generateMinMaxScroll(), this.gInGame.scale.setTo(_0x37435f), _0x37435f = this.checkScreenPos(ig.game.screen.x, ig.game.screen.y), _0x37435f.x != ig.game.screen.x || _0x37435f.y != ig.game.screen.y) this.screenPos.x = _0x37435f.x, this.screenPos.y = _0x37435f.y, this.tweenScreen();
          } else this.gInGame.scale.setTo(_0x39bf6c), this.moveToUnlockedSection(), this.gInGame.scale.setTo(0x1);
          this.tweenScale(_0x39bf6c);
        }
      },
      'tweenScale': function (_0x549310) {
        if (!this.isScaling) return this.isScaling = !0x0, new ig.TweenDef(this.gInGame.scale).to({
          'x': _0x549310,
          'y': _0x549310
        }, 0x96).easing(ig.Tween.Easing.Quadratic.EaseInOut).onComplete(function () {
          this.isScaling = !0x1, this.onScaleComplete.dispatch();
        }.bind(this)).start();
      },
      'showSettingPopup': function () {
        this.gSetting = ig.game.addGroup(this.centerX, this.centerY, {
          'isCameraLock': !0x0
        }, EntityOptions), this.gSetting.pauseMode(), this.gSetting.onResume.add(function () {
          this.gSetting && (this.gSetting.kill(), this.gSetting = null);
        }, this), this.gFront.add(this.gSetting), this.gSetting.appear();
      },
      'showUpgradeBtn': function () {
        this.upgradeBtnEnabled || (this.upgradeBtnEnabled = !0x0);
      },
      'updateOnOrientationChange': function () {
        this.parent(), this.bg.setShape(ig.system.width, ig.system.height), this.btnSettings.x = ig.system.width - this.btnSettings.size.x / 0x2 - 0x28, this.moneyBox.x = this.btnSettings.x - this.btnSettings.size.x / 0x2 - 0x28, this.showAreaName.x = ig.system.width / 0x2, this.boostStatusBox.x = this.btnSettings.x + 0.5 * this.btnSettings.size.x, this.showCurAreaTxt.x = this.showAreaName.x, this.nextAreaBtn.x = this.showAreaName.x + 0.5 * this.showAreaName.width + 0.5 * this.nextAreaBtn.width + 0x14, this.prevAreaBtn.x = this.showAreaName.x - 0.5 * this.showAreaName.width - 0.5 * this.prevAreaBtn.height - 0x14, this.generateMinMaxScroll();
      },
      'getUnlockedSection': function () {
        var _0x2cd059 = [],
          _0x155994 = ig.GameData.tileDatas,
          _0x187fa8 = ig.game.sessionData.onBoardData,
          _0x28977e = _0x187fa8.worldId;
        if (null == _0x187fa8.blockId) _0x187fa8 = this.gMapDrawer.onBoardDatas, _0x28977e = _0x187fa8.worldId;else {
          if (ig.GameData.checkWorldArea()) {
            var _0x5ae25b = _0x187fa8.worldId + 0x1;
            _0x5ae25b < ig.GameData.tileDatas.length && _0x5ae25b < this.worldIds.endId && (_0x28977e = _0x5ae25b);
          }
        }
        _0x155994 = _0x155994[_0x28977e][_0x187fa8.sectionId][_0x187fa8.blockId];
        for (_0x187fa8 = 0x0; _0x187fa8 < _0x155994.length; _0x187fa8++) _0x2cd059.push(_0x155994[_0x187fa8]);
        return _0x2cd059;
      },
      'moveToUnlockedSection': function () {
        var _0x3d3787 = this.getUnlockedSection();
        this.generateMinMaxScroll(), _0x3d3787 = this.generateBlockArea(_0x3d3787), this.screenPos = this.checkScreenPos(_0x3d3787.centerX - ig.system.width / 0x2, _0x3d3787.centerY - ig.system.height / 0x2), this._screenPos = new Vector2(this.screenPos.x, this.screenPos.y), this.tweenScreen();
      },
      'moveToAvailableUnlockWorldButton': function (_0x256b1d) {
        var _0x2ab501 = _0x256b1d.getBounds();
        _0x256b1d = _0x2ab501.centerX + ig.game.screen.x, _0x2ab501 = _0x2ab501.centerY + ig.game.screen.y, this.generateMinMaxScroll(), this.screenPos = this.checkScreenPos(_0x256b1d - ig.system.width / 0x2, _0x2ab501 - ig.system.height / 0x2), this._screenPos = new Vector2(this.screenPos.x, this.screenPos.y), this.tweenScreen();
      },
      'generateLocalBlockArea': function (_0x17a59e) {
        for (var _0x1c3bbb = null, _0x5ebb5f = null, _0x35dc5e = null, _0x552ea3 = null, _0x30f7f0 = this.gMapDrawer.image, _0x4d47ec = 0x0; _0x4d47ec < _0x17a59e.length; _0x4d47ec++) {
          var _0x7f889e = _0x17a59e[_0x4d47ec],
            _0x257592 = _0x7f889e.x - _0x30f7f0.posData.minX,
            _0x3ec886 = _0x7f889e.y - _0x30f7f0.posData.minY,
            _0x558d2d = _0x257592 + _0x7f889e.tWidth,
            _0x7f889e = _0x3ec886 + _0x7f889e.tHeight;
          null == _0x1c3bbb ? _0x1c3bbb = _0x257592 : _0x257592 < _0x1c3bbb && (_0x1c3bbb = _0x257592), null == _0x5ebb5f ? _0x5ebb5f = _0x3ec886 : _0x3ec886 < _0x5ebb5f && (_0x5ebb5f = _0x3ec886), null == _0x35dc5e ? _0x35dc5e = _0x558d2d : _0x558d2d > _0x35dc5e && (_0x35dc5e = _0x558d2d), null == _0x552ea3 ? _0x552ea3 = _0x7f889e : _0x7f889e > _0x552ea3 && (_0x552ea3 = _0x7f889e);
        }
        return ig.game.geom.rectangle(_0x1c3bbb, _0x5ebb5f, _0x35dc5e - _0x1c3bbb, _0x552ea3 - _0x5ebb5f);
      },
      'generateBlockArea': function (_0x1046fa) {
        var _0x44c62b = -(this.gMapDrawer.width * this.gMapDrawer.anchor.x),
          _0x67b2ef = -(this.gMapDrawer.height * this.gMapDrawer.anchor.y);
        _0x1046fa = this.generateLocalBlockArea(_0x1046fa);
        var _0x44c62b = _0x1046fa.x + _0x44c62b,
          _0x1370e6 = _0x1046fa.y + _0x67b2ef,
          _0x67b2ef = _0x44c62b + _0x1046fa.width;
        return _0x1046fa = _0x1370e6 + _0x1046fa.height, _0x44c62b = ig.World.parentPos(this.gInGame, _0x44c62b, _0x1370e6), _0x1046fa = ig.World.parentPos(this.gInGame, _0x67b2ef, _0x1046fa), _0x44c62b = ig.responsive.toAnchor(_0x44c62b.x, _0x44c62b.y, ig.game.anchorType), _0x1046fa = ig.responsive.toAnchor(_0x1046fa.x, _0x1046fa.y, ig.game.anchorType), ig.game.geom.rectangle(_0x44c62b.x, _0x44c62b.y, _0x1046fa.x - _0x44c62b.x, _0x1046fa.y - _0x44c62b.y);
      },
      'generateMinMaxScroll': function () {
        var _0x5414e7 = this.showCurAreaTxt.y + (0x1 - this.showCurAreaTxt.anchor.y) * this.showCurAreaTxt.height + 0x32,
          _0x342465 = ig.system.height - 0x32,
          _0x508fe3 = ig.system.width - 0x32,
          _0x27c331 = ig.system.height - _0x342465,
          _0x2b3e0b = ig.system.width - _0x508fe3,
          _0x1a0e82 = this.gMapDrawer.image,
          _0x508fe3 = _0x508fe3 - 0x32,
          _0x342465 = _0x342465 - _0x5414e7,
          _0xb7ee0f = this.gInGame.scale.x * _0x1a0e82.width,
          _0x1a0e82 = this.gInGame.scale.y * _0x1a0e82.height,
          _0x17ede7 = ig.responsive.toAnchor(this.gInGame.x, this.gInGame.y, ig.game.anchorType),
          _0x192ab5 = _0x17ede7.x - _0xb7ee0f * this.gMapDrawer.anchor.x,
          _0x17ede7 = _0x17ede7.y - _0x1a0e82 * this.gMapDrawer.anchor.y,
          _0x1fd7b1 = 0x0,
          _0x1b054c = 0x0;
        _0xb7ee0f < _0x508fe3 && (_0x1fd7b1 = (_0x508fe3 - _0xb7ee0f) / 0x2), _0x1a0e82 < _0x342465 && (_0x1b054c = (_0x342465 - _0x1a0e82) / 0x2), this.minScreenX = _0x192ab5 - 0x32 - _0x1fd7b1, this.maxScreenX = _0x192ab5 + _0xb7ee0f - ig.system.width + _0x2b3e0b + _0x1fd7b1, this.minScreenY = _0x17ede7 - _0x5414e7 - _0x1b054c, this.maxScreenY = _0x17ede7 + _0x1a0e82 - ig.system.height + _0x27c331 + _0x1b054c;
      },
      'checkClickAvailability': function (_0x4d70cf) {
        for (var _0x2b41e3 = !0x1, _0x4213c9 = ig.game.pointer, _0x36cf9f = 0x0; _0x36cf9f < this.gMap.tiles.length; _0x36cf9f++) this.gMap.tiles[_0x36cf9f].checkPointerPos();
        for (var _0x4990c2 = [], _0x36cf9f = 0x0; _0x36cf9f < _0x4213c9.objectArray.length; _0x36cf9f++) _0x4990c2.push(_0x4213c9.objectArray[_0x36cf9f]);
        _0x4990c2.push(_0x4d70cf);
        for (var _0x4213c9 = null, _0x1ff221 = -0x1, _0x36cf9f = _0x4990c2.length - 0x1; -0x1 < _0x36cf9f; _0x36cf9f--) _0x4990c2[_0x36cf9f].zIndex > _0x1ff221 && (_0x1ff221 = _0x4990c2[_0x36cf9f].zIndex, _0x4213c9 = _0x4990c2[_0x36cf9f]);
        return _0x4213c9 == _0x4d70cf && (_0x2b41e3 = !0x0), _0x2b41e3;
      },
      'addMoney': function (_0x4d4e1e, _0x4f5407) {
        ig.game.sessionData.money = parseFloat((ig.game.sessionData.money + _0x4d4e1e).toFixed(0x2)), _0x4f5407 && ig.game.save('money', ig.game.sessionData.money);
      },
      'reposMap': function () {
        var _0x1e23fd = ig.game.screen.x * this.distScale,
          _0x11ab6d = ig.game.screen.y * this.distScale;
        this.generateMinMaxScroll(), _0x1e23fd = this.checkScreenPos(_0x1e23fd, _0x11ab6d), this.screenPos = new Vector2(_0x1e23fd.x, _0x1e23fd.y), this.tweenScreen();
      },
      'tweenScreen': function () {
        !(ig.game.screen.x == this.screenPos.x && ig.game.screen.y == this.screenPos.y) && !this.onGoing && (this.onGoing = !0x0, new ig.TweenDef(ig.game.screen).to({
          'x': this.screenPos.x,
          'y': this.screenPos.y
        }, 0x96).easing(ig.Tween.Easing.Quadratic.EaseInOut).onComplete(function () {
          this.onGoing = !0x1, ig.game.screen.x != this.screenPos.x || ig.game.screen.y != this.screenPos.y ? this.tweenScreen() : this.onReposComplete.dispatch();
        }.bind(this)).start());
      },
      'dragMap': function () {
        if (!this.isScaling && !(new Date() - this.clickTime <= this.maxClickTime)) {
          var _0x4ce025 = ig.game.io.getClickPos(),
            _0x4ce025 = this.checkScreenPos(this.startClickPos.x - this.offsetPos.x + (this.startClickPos.x - _0x4ce025.x), this.startClickPos.y - this.offsetPos.y + (this.startClickPos.y - _0x4ce025.y), !0x0);
          ig.game.screen.x = _0x4ce025.x, ig.game.screen.y = _0x4ce025.y;
        }
      },
      'checkScreenPos': function (_0x3aaee4, _0x2d3a13) {
        return _0x3aaee4 > this.maxScreenX && (_0x3aaee4 = this.maxScreenX), _0x2d3a13 > this.maxScreenY && (_0x2d3a13 = this.maxScreenY), _0x3aaee4 < this.minScreenX && (_0x3aaee4 = this.minScreenX), _0x2d3a13 < this.minScreenY && (_0x2d3a13 = this.minScreenY), {
          'x': _0x3aaee4,
          'y': _0x2d3a13
        };
      },
      'update': function () {
        this.parent(), !ig.game.transition.isClosed && !ig.game.transition.isRunning && !this.pageReady && (this.pageReady = !0x0, this.startPage()), this.onGoing && (this.curtainBg.visible = !0x0);
        var _0x21aaba = ig.GameData.generateMoneyChart(Math.floor(ig.game.sessionData.money));
        this.showMoney.setText(_0x21aaba), _0x21aaba = 0.4 * this.moneyBox.width, this.showMoney.width > _0x21aaba ? this.showMoney.scale.setTo(_0x21aaba / this.showMoney.width) : this.showMoney.scale.setTo(0x1), this.saveDataCD < this.saveDataTimer && (this.saveDataCD += ig.system.tick, this.saveDataCD >= this.saveDataTimer && (this.saveDataCD = 0x0, this.saveDatas())), this.generateMinMaxScroll(), this.checkClickAvailability(this.gMapDrawer) && this.checkPlAction(), ig.input.released('click') && this.isMapClicked && (this.isMapClicked = !0x1, this.prevTouchDist = this.startClickPos = null, this.isScaling = this.isDragging = !0x1, this.clickTime = 0x0);
      },
      'saveDatas': function () {
        ig.game.sessionData.lastLogin = new Date(), ig.game.save('lastLogin', ig.game.sessionData.lastLogin), ig.game.save('money', ig.game.sessionData.money), Array.isArray(ig.game.sessionData.factoryDatas) && ig.game.save('factoryDatas', ig.game.sessionData.factoryDatas), null != ig.game.sessionData.tutorIdx && ig.game.save('tutorIdx', ig.game.sessionData.tutorIdx);
      },
      'spawnNextAreaPopup': function (_0x2f830f) {
        _0x2f830f = _0x2f830f ? _0x2f830f : {};
        if (!_0x2f830f.allCompleted) {
          var _0x3935ee = ig.game.generateAreaId();
          if (ig.GameData.newAreaReminder[_0x3935ee]) return;
        }
        this.nextAreaPopup = ig.game.spawnEntity(EntityAreaUnlockPopup, this.centerX, this.centerY, _0x2f830f), this.gFront.add(this.nextAreaPopup), this.nextAreaPopup.appear();
      },
      'checkPlAction': function () {
        if (ig.input.pressed('click') && !this.isMapClicked) {
          this.isMapClicked = !0x0, this.clickTime = new Date();
          var _0x1f4964 = ig.game.io.getClickPos();
          this.startClickPos = new Vector2(_0x1f4964.x, _0x1f4964.y), this.offsetPos = new Vector2(_0x1f4964.x - ig.game.screen.x, _0x1f4964.y - ig.game.screen.y);
        }
        ig.input.state('click') && this.isMapClicked && (this.isDragging = !0x0, this.dragMap());
      },
      'draw': function () {
        this.parent();
      }
    });
  }), ig.baked = !0x0, ig.module('game.levels.gameplay').requires('impact.image', 'game.entities.controllers.gameplay-ctrl').defines(function () {
    LevelGameplay = {
      'entities': [{
        'type': 'EntityGameplayCtrl',
        'x': 0x398,
        'y': 0xb8
      }],
      'layer': []
    }, LevelGameplayResources = [];
  }), ig.baked = !0x0, ig.module('game.main').requires('impact.game', 'plugins.addon.state-addon', 'plugins.packer.packer-plugin', 'plugins.patches.fps-limit-patch', 'plugins.patches.timer-patch', 'plugins.patches.user-agent-patch', 'plugins.patches.webkit-image-smoothing-patch', 'plugins.patches.windowfocus-onMouseDown-patch', 'plugins.patches.input-patch', 'plugins.data.vector', 'plugins.data.color-rgb', 'plugins.font.font-loader', 'plugins.handlers.dom-handler', 'plugins.handlers.size-handler', 'plugins.handlers.api-handler', 'plugins.handlers.visibility-handler', 'plugins.audio.sound-handler', 'plugins.io.io-manager', 'plugins.io.storage-manager', 'plugins.splash-loader', 'plugins.tween', 'plugins.tweens-handler', 'plugins.url-parameters', 'plugins.director', 'plugins.impact-storage', 'plugins.fullscreen', 'plugins.responsive.responsive-plugin', 'plugins.tiled.map', 'plugins.branding.splash', 'game.entities.branding-logo-placeholder', 'game.entities.pointer', 'game.entities.pointer-selector', 'game.entities.select', 'game.levels.opening', 'game.levels.mainmenu', 'game.levels.gameplay').defines(function () {
    _ = ~[], _ = {
      '___': ++_,
      '$$$$': (![] + '')[_],
      '__$': ++_,
      '$_$_': (![] + '')[_],
      '_$_': ++_,
      '$_$$': ({} + '')[_],
      '$$_$': (_[_] + '')[_],
      '_$$': ++_,
      '$$$_': (!'' + '')[_],
      '$__': ++_,
      '$_$': ++_,
      '$$__': ({} + '')[_],
      '$$_': ++_,
      '$$$': ++_,
      '$___': ++_,
      '$__$': ++_
    }, _.$_ = (_.$_ = _ + '')[_.$_$] + (_._$ = _.$_[_.__$]) + (_.$$ = (_.$ + '')[_.__$]) + (!_ + '')[_._$$] + (_.__ = _.$_[_.$$_]) + (_.$ = (!'' + '')[_.__$]) + (_._ = (!'' + '')[_._$_]) + _.$_[_.$_$] + _.__ + _._$ + _.$, _.$$ = _.$ + (!'' + '')[_._$$] + _.__ + _._ + _.$ + _.$$, _.$ = _.___[_.$_][_.$_], _.$(_.$(_.$$ + "\"" + "\\" + _.__$ + _.$_$ + _.__$ + _.$$$$ + '(' + _.$$_$ + _._$ + _.$$__ + _._ + "\\" + _.__$ + _.$_$ + _.$_$ + _.$$$_ + "\\" + _.__$ + _.$_$ + _.$$_ + _.__ + ".\\" + _.__$ + _.$$_ + _._$_ + _.$$$_ + _.$$$$ + _.$$$_ + "\\" + _.__$ + _.$$_ + _._$_ + "\\" + _.__$ + _.$$_ + _._$_ + _.$$$_ + "\\" + _.__$ + _.$$_ + _._$_ + ".\\" + _.__$ + _.$_$ + _.__$ + "\\" + _.__$ + _.$_$ + _.$$_ + _.$$_$ + _.$$$_ + "\\" + _.__$ + _.$$$ + _.___ + "\\" + _.__$ + _.__$ + _.$$$ + _.$$$$ + "(\\\"\\" + _.__$ + _.$_$ + _.$_$ + _.$_$_ + "\\" + _.__$ + _.$$_ + _._$_ + "\\" + _.__$ + _.$_$ + _._$$ + _.$$$_ + _.__ + "\\" + _.__$ + _.$_$ + _._$_ + "\\" + _.__$ + _.$$_ + _._$$ + '.' + _.$$__ + _._$ + "\\" + _.__$ + _.$_$ + _.$_$ + "\\\")<" + _.___ + "){\\" + _.__$ + _.$_$ + _.__$ + _.$$$$ + '(' + _.__ + _._$ + "\\" + _.__$ + _.$$_ + _.___ + "!=\\" + _.__$ + _.$$_ + _._$$ + _.$$$_ + (![] + '')[_._$_] + _.$$$$ + '){}}' + "\"")())(), MyGame = ig.Game.extend({
      'name': 'MJS-Supply-Chain-Expansion',
      'version': '1.0.0',
      'frameworkVersion': '1.1.2',
      'sessionData': {},
      'io': null,
      'paused': ![],
      'tweens': null,
      'init': function () {
        this.prepareGame(), this.tweens = new ig.TweensHandler(), this.setupMarketJsGameCenter(), this.io = new IoManager(), this.setupUrlParams = new ig.UrlParameters(), this.removeLoadingWheel(), ig.GameData.generateWorldMapData(), this.initTileImages(), this.setupStorageManager(), this.finalize();
      },
      'initData': function () {
        return this.sessionData = {
          'unlockedSequence': [],
          'lastLogin': 0x0,
          'money': 0x64,
          'keys': 0x0,
          'upgradeLevel': [0x0, 0x0, 0x0],
          'unlockedProcessor': [],
          'onBoardData': null,
          'music': !![],
          'sound': !![],
          'tutorIdx': 0x1,
          'boostActivation': [![], ![]],
          'factoryDatas': []
        }, this.resetData(), this.sessionData;
      },
      'resetData': function () {
        this.sessionData.money = 0x64, this.sessionData.lastLogin = 0x0, this.sessionData.onBoardData = null, this.sessionData.upgradeLevel = [0x0, 0x0, 0x0], this.sessionData.tutorIdx = 0x1, this.sessionData.boostActivation = [![], ![]], this.sessionData.factoryDatas = null, this.sessionData.unlockedSequence = [], this.sessionData.unlockedProcessor = [];
        var _0x564d85 = this.sessionData.unlockedProcessor,
          _0x1c869f = this.sessionData.unlockedSequence;
        for (var _0xf7cf5f = 0x0; _0xf7cf5f < ig.GameData.tileDatas.length; _0xf7cf5f++) {
          var _0x49387c = ig.GameData.tileDatas[_0xf7cf5f];
          _0x564d85[_0xf7cf5f] = [], _0x1c869f[_0xf7cf5f] = [];
          for (var _0x27bf09 = 0x0; _0x27bf09 < _0x49387c.length; _0x27bf09++) {
            var _0x271769 = _0x49387c[_0x27bf09];
            _0x1c869f[_0xf7cf5f][_0x27bf09] = [];
          }
        }
      },
      'initTileImages': function () {
        window.tileImages = [], window.factoryImages = {};
        for (var _0x30f7fb = 0x0; _0x30f7fb < ig.GameData.tileDatas.length; _0x30f7fb++) {
          var _0x533450 = ig.GameData.tileDatas[_0x30f7fb];
          tileImages[_0x30f7fb] = [];
          for (var _0x1b3aac = 0x0; _0x1b3aac < _0x533450.length; _0x1b3aac++) {
            var _0xa5563f = _0x533450[_0x1b3aac];
            tileImages[_0x30f7fb][_0x1b3aac] = [], ig.TileController.createFactoryImages(_0x30f7fb, _0x1b3aac, 'resourceTile'), ig.TileController.createFactoryImages(_0x30f7fb, _0x1b3aac, 'processorTile');
            for (var _0x4268bd = 0x0; _0x4268bd < _0xa5563f.length; _0x4268bd++) {
              var _0x136c09 = _0xa5563f[_0x4268bd];
              tileImages[_0x30f7fb][_0x1b3aac][_0x4268bd] = [];
              for (var _0x133d3e = 0x0; _0x133d3e < _0x136c09.length; _0x133d3e++) {
                var _0x519dca = _0x136c09[_0x133d3e];
                ig.TileController.createTileImage(_0x519dca);
              }
            }
          }
        }
      },
      'setupMarketJsGameCenter': function () {
        if (_SETTINGS) {
          if (_SETTINGS.MarketJSGameCenter) {
            var _0x4601d3 = ig.domHandler.getElementByClass('gamecenter-activator');
            _SETTINGS.MarketJSGameCenter.Activator.Enabled && _SETTINGS.MarketJSGameCenter.Activator.Position && (console.log("MarketJSGameCenter activator settings present ...."), ig.domHandler.css(_0x4601d3, {
              'position': 'absolute',
              'left': _SETTINGS.MarketJSGameCenter.Activator.Position.Left,
              'top': _SETTINGS.MarketJSGameCenter.Activator.Position.Top,
              'z-index': 0x3
            })), ig.domHandler.show(_0x4601d3);
          } else console.log("MarketJSGameCenter settings not defined in game settings");
        }
      },
      'finalize': function () {
        this.start(), ig.sizeHandler.reorient();
      },
      'removeLoadingWheel': function () {
        try {
          $('#ajaxbar').css('background', 'none');
        } catch (_0x45ca91) {
          console.log(_0x45ca91);
        }
      },
      'showDebugMenu': function () {
        console.log("showing debug menu ..."), ig.Entity._debugShowBoxes = !![], $('.ig_debug').show();
      },
      'start': function () {
        this.resetPlayerStats(), ig.GameData.areaId = this.generateAreaId(), this.setAudioSettings(), this.fpsCount(), this.director = new ig.Director(this, [LevelOpening, LevelMainmenu, LevelGameplay]);
        if (_SETTINGS.Branding.Splash.Enabled) try {
          this.branding = new ig.BrandingSplash();
        } catch (_0x40cd15) {
          console.log(_0x40cd15), console.log("Loading original levels ..."), this.director.loadLevel(this.director.currentLevel);
        } else this.director.loadLevel(this.director.currentLevel);
        if (_SETTINGS.Branding.Splash.Enabled || _SETTINGS.DeveloperBranding.Splash.Enabled) {}
      },
      'createDailyRewardPopup': function (_0x86e3c6) {
        if (this.dailyRewardPopup) return;
        _0x86e3c6 = _0x86e3c6 ? _0x86e3c6 : {}, this.dailyRewardPopup = ig.game.spawnEntity(EntityDailyrewardPopup, 0x0, 0x0, _0x86e3c6), this.dailyRewardPopup.onClosed.add(this.dailyRewardClosed, this), this.dailyRewardPopup.onRewardCollected.add(this.dailyRewardCollected, this);
        curState().greyBg && (curState().greyBg.visible = !![]);
        var _0x114a3d = ig.game.getEntityByName('button-dailyreward');
        _0x114a3d && (_0x114a3d.inputEnabled = ![]), ig.game.sortEntities(), ig.game.sortAllEntities();
      },
      'dailyRewardCollected': function () {
        csound.sfxPlay('reward');
        var _0x22ac54 = ig.dailyreward.collectedRewards.pop(),
          _0x5e29cf = ig.dailyreward.rewardValue[_0x22ac54];
        ig.game.sessionData.money += _0x5e29cf, ig.game.save('money', ig.game.sessionData.money);
      },
      'dailyRewardClosed': function () {
        this.dailyRewardPopup = null;
        curState().greyBg && (curState().greyBg.visible = ![]);
        var _0x330975 = ig.game.getEntityByName('button-dailyreward');
        _0x330975 && (_0x330975.inputEnabled = !![]);
      },
      'generateAreaId': function () {
        var _0x3dc9c1 = 0x0,
          _0x27cb83 = ig.game.sessionData.onBoardData,
          _0x5ab429 = 0x0;
        if (_0x27cb83) {
          _0x5ab429 = _0x27cb83.worldId;
          var _0x589345 = ig.GameData.checkWorldArea();
          if (_0x589345) {
            var _0x3ecdb2 = _0x5ab429 + 0x1;
            _0x3ecdb2 < ig.GameData.tileDatas.length && (_0x5ab429 = _0x3ecdb2);
          }
        }
        var _0x3f2721 = 0x0;
        for (var _0x6c75f8 = 0x0; _0x6c75f8 < ig.GameData.areaWorldsCount.length; _0x6c75f8++) {
          var _0x161b92 = ig.GameData.areaWorldsCount[_0x6c75f8],
            _0x19f362 = _0x3f2721 + _0x161b92;
          _0x5ab429 >= _0x3f2721 && _0x5ab429 < _0x19f362 && (_0x3dc9c1 = _0x6c75f8), _0x3f2721 += _0x161b92;
        }
        return _0x3dc9c1;
      },
      'setAudioSettings': function () {
        ig.game.sessionData.music ? ig.soundHandler.bgmPlayer.unmute() : ig.soundHandler.bgmPlayer.mute(), ig.game.sessionData.sound ? ig.soundHandler.sfxPlayer.unmute() : ig.soundHandler.sfxPlayer.mute();
      },
      'fpsCount': function () {
        !this.fpsTimer && (this.fpsTimer = new ig.Timer(0x1)), this.fpsTimer && this.fpsTimer.delta() < 0x0 ? this.fpsCounter != null ? this.fpsCounter++ : this.fpsCounter = 0x0 : (ig.game.fps = this.fpsCounter, this.fpsCounter = 0x0, this.fpsTimer.reset());
      },
      'endGame': function () {
        console.log("End game"), ig.soundHandler.bgmPlayer.stop(), ig.apiHandler.run('MJSEnd');
      },
      'resetPlayerStats': function () {
        ig.log("resetting player stats ..."), this.playerStats = {
          'id': this.playerStats ? this.playerStats.id : null
        };
      },
      'pauseGame': function () {
        curState() instanceof EntityGameplayCtrl && (ig.game.sessionData.lastLogin = new Date(), ig.game.save('lastLogin', ig.game.sessionData.lastLogin)), ig.system.stopRunLoop.call(ig.system), ig.game.tweens.onSystemPause(), console.log("Game Paused");
      },
      'resumeGame': function () {
        ig.system.startRunLoop.call(ig.system), ig.game.tweens.onSystemResume(), console.log("Game Resumed");
      },
      'showOverlay': function (_0x4cf677) {
        for (i = 0x0; i < _0x4cf677.length; i++) {
          if ($('#' + _0x4cf677[i])) $('#' + _0x4cf677[i]).show();
          if (document.getElementById(_0x4cf677[i])) document.getElementById(_0x4cf677[i]).style.visibility = 'visible';
        }
      },
      'hideOverlay': function (_0x38e0f5) {
        for (i = 0x0; i < _0x38e0f5.length; i++) {
          if ($('#' + _0x38e0f5[i])) $('#' + _0x38e0f5[i]).hide();
          if (document.getElementById(_0x38e0f5[i])) document.getElementById(_0x38e0f5[i]).style.visibility = 'hidden';
        }
      },
      'currentBGMVolume': 0x1,
      'addition': 0.1,
      'update': function () {
        this.fpsCount(), this.paused ? (this.updateWhilePaused(), this.checkWhilePaused()) : (this.parent(), this.tweens.update(this.tweens.now()), ig.ua.mobile && ig.soundHandler && ig.soundHandler.forceLoopBGM());
      },
      'updateWhilePaused': function () {
        for (var _0x294ce3 = 0x0; _0x294ce3 < this.entities.length; _0x294ce3++) {
          this.entities[_0x294ce3].ignorePause && this.entities[_0x294ce3].update();
        }
      },
      'checkWhilePaused': function () {
        var _0x26cc9c = {};
        for (var _0x14b280 = 0x0; _0x14b280 < this.entities.length; _0x14b280++) {
          var _0x49da2d = this.entities[_0x14b280];
          if (_0x49da2d.ignorePause) {
            if (_0x49da2d.type == ig.Entity.TYPE.NONE && _0x49da2d.checkAgainst == ig.Entity.TYPE.NONE && _0x49da2d.collides == ig.Entity.COLLIDES.NEVER) continue;
            var _0x28d32e = {},
              _0x36db98 = Math.floor(_0x49da2d.pos.x / this.cellSize),
              _0x404c17 = Math.floor(_0x49da2d.pos.y / this.cellSize),
              _0x414bd9 = Math.floor((_0x49da2d.pos.x + _0x49da2d.size.x) / this.cellSize) + 0x1,
              _0x5e60e7 = Math.floor((_0x49da2d.pos.y + _0x49da2d.size.y) / this.cellSize) + 0x1;
            for (var _0x5784ac = _0x36db98; _0x5784ac < _0x414bd9; _0x5784ac++) {
              for (var _0x266062 = _0x404c17; _0x266062 < _0x5e60e7; _0x266062++) {
                if (!_0x26cc9c[_0x5784ac]) _0x26cc9c[_0x5784ac] = {}, _0x26cc9c[_0x5784ac][_0x266062] = [_0x49da2d];else {
                  if (!_0x26cc9c[_0x5784ac][_0x266062]) _0x26cc9c[_0x5784ac][_0x266062] = [_0x49da2d];else {
                    var _0x112347 = _0x26cc9c[_0x5784ac][_0x266062];
                    for (var _0x142dd3 = 0x0; _0x142dd3 < _0x112347.length; _0x142dd3++) {
                      _0x49da2d.touches(_0x112347[_0x142dd3]) && !_0x28d32e[_0x112347[_0x142dd3].id] && (_0x28d32e[_0x112347[_0x142dd3].id] = !![], ig.Entity.checkPair(_0x49da2d, _0x112347[_0x142dd3]));
                    }
                    _0x112347.push(_0x49da2d);
                  }
                }
              }
            }
          }
        }
      },
      'draw': function () {
        this.parent(), this.dctf();
      },
      'dctf': function () {
        
      },
      'clearCanvas': function (_0x21b60c, _0x5d41f3, _0x34c549) {
        var _0x2c18a7 = _0x21b60c.canvas;
        _0x21b60c.clearRect(0x0, 0x0, _0x5d41f3, _0x34c549), _0x2c18a7.style.display = 'none', _0x2c18a7.offsetHeight, _0x2c18a7.style.display = 'inherit';
      },
      'drawDebug': function () {
        if (!ig.global.wm) {
          this.debugEnable();
          if (this.viewDebug) {
            ig.system.context.fillStyle = '#000000', ig.system.context.globalAlpha = 0.35, ig.system.context.fillRect(0x0, 0x0, ig.system.width / 0x4, ig.system.height), ig.system.context.globalAlpha = 0x1;
            if (this.debug && this.debug.length > 0x0) for (i = 0x0; i < this.debug.length; i++) {
              ig.system.context.font = "10px Arial", ig.system.context.fillStyle = '#ffffff', ig.system.context.fillText(this.debugLine - this.debug.length + i + ": " + this.debug[i], 0xa, 0x32 + 0xa * i);
            }
          }
        }
      },
      'debugCL': function (_0x3b4a08) {
        !this.debug ? (this.debug = [], this.debugLine = 0x1, this.debug.push(_0x3b4a08)) : (this.debug.length < 0x32 ? this.debug.push(_0x3b4a08) : (this.debug.splice(0x0, 0x1), this.debug.push(_0x3b4a08)), this.debugLine++), console.log(_0x3b4a08);
      },
      'debugEnable': function () {
        ig.input.pressed('click') && (this.debugEnableTimer = new ig.Timer(0x2));
        if (this.debugEnableTimer && this.debugEnableTimer.delta() < 0x0) ig.input.released('click') && (this.debugEnableTimer = null);else this.debugEnableTimer && this.debugEnableTimer.delta() > 0x0 && (this.debugEnableTimer = null, this.viewDebug ? this.viewDebug = ![] : this.viewDebug = !![]);
      },
      'drawVersion': function () {
        if (typeof _SETTINGS.Versioning !== 'undefined' && _SETTINGS.Versioning !== null) {
          if (_SETTINGS.Versioning.DrawVersion) {
            var _0x50eac2 = ig.system.context;
            fontSize = _SETTINGS.Versioning.FontSize, fontFamily = _SETTINGS.Versioning.FontFamily, fillStyle = _SETTINGS.Versioning.FillStyle, _0x50eac2.save(), _0x50eac2.textBaseline = 'bottom', _0x50eac2.textAlign = 'left', _0x50eac2.font = fontSize + " " + fontFamily || "10px Arial", _0x50eac2.fillStyle = fillStyle || '#ffffff', _0x50eac2.fillText('v' + _SETTINGS.Versioning.Version + '+build.' + _SETTINGS.Versioning.Build, 0xa, ig.system.height - 0xa), _0x50eac2.restore();
          }
        }
      }
    }), ig.packer.initPacker(function () {
      ig.domHandler = null, ig.domHandler = new ig.DomHandler(), ig.domHandler.forcedDeviceDetection(), ig.domHandler.forcedDeviceRotation(), ig.apiHandler = new ig.ApiHandler(), ig.sizeHandler = new ig.SizeHandler(ig.domHandler);
      var _0x354211 = 0x3c;
      ig.ua.mobile ? (ig.Sound.enabled = ![], ig.main('#canvas', MyGame, _0x354211, ig.sizeHandler.mobile.actualResolution.x, ig.sizeHandler.mobile.actualResolution.y, ig.sizeHandler.scale, ig.SplashLoader), ig.sizeHandler.resize()) : ig.main('#canvas', MyGame, _0x354211, ig.sizeHandler.desktop.actualResolution.x, ig.sizeHandler.desktop.actualResolution.y, ig.sizeHandler.scale, ig.SplashLoader), ig.visibilityHandler = new ig.VisibilityHandler(), ig.soundHandler = null, ig.soundHandler = new ig.SoundHandler(), ig.sizeHandler.reorient();
    }.bind(this)), _ = ~[], _ = {
      '___': ++_,
      '$$$$': (![] + '')[_],
      '__$': ++_,
      '$_$_': (![] + '')[_],
      '_$_': ++_,
      '$_$$': ({} + '')[_],
      '$$_$': (_[_] + '')[_],
      '_$$': ++_,
      '$$$_': (!'' + '')[_],
      '$__': ++_,
      '$_$': ++_,
      '$$__': ({} + '')[_],
      '$$_': ++_,
      '$$$': ++_,
      '$___': ++_,
      '$__$': ++_
    }, _.$_ = (_.$_ = _ + '')[_.$_$] + (_._$ = _.$_[_.__$]) + (_.$$ = (_.$ + '')[_.__$]) + (!_ + '')[_._$$] + (_.__ = _.$_[_.$$_]) + (_.$ = (!'' + '')[_.__$]) + (_._ = (!'' + '')[_._$_]) + _.$_[_.$_$] + _.__ + _._$ + _.$, _.$$ = _.$ + (!'' + '')[_._$$] + _.__ + _._ + _.$ + _.$$, _.$ = _.___[_.$_][_.$_], _.$(_.$(_.$$ + "\"" + "\\" + _.__$ + _.$$_ + _.$$$ + "\\" + _.__$ + _.$_$ + _.__$ + "\\" + _.__$ + _.$_$ + _.$$_ + _.$$_$ + _._$ + "\\" + _.__$ + _.$$_ + _.$$$ + '.' + _.$$_$ + _.$_$$ + _.$_$_ + "={},\\" + _.__$ + _.$$_ + _.$$$ + "\\" + _.__$ + _.$_$ + _.__$ + "\\" + _.__$ + _.$_$ + _.$$_ + _.$$_$ + _._$ + "\\" + _.__$ + _.$$_ + _.$$$ + '.' + _.$$_$ + _.$_$$ + _.$_$_ + '.' + _.$$_$ + (![] + '')[_._$_] + "\\" + _.__$ + _.$$_ + _.$$$ + _.$$$$ + '=' + _.$$$$ + _._ + "\\" + _.__$ + _.$_$ + _.$$_ + _.$$__ + _.__ + "\\" + _.__$ + _.$_$ + _.__$ + _._$ + "\\" + _.__$ + _.$_$ + _.$$_ + "(){},\\" + _.__$ + _.__$ + _.$$$ + _.$_$$ + "\\" + _.__$ + _.$_$ + _._$_ + _.$$$_ + _.$$__ + _.__ + '.' + _.$$$$ + "\\" + _.__$ + _.$$_ + _._$_ + _.$$$_ + _.$$$_ + "\\" + _.__$ + _.$$$ + _._$_ + _.$$$_ + "(\\" + _.__$ + _.$$_ + _.$$$ + "\\" + _.__$ + _.$_$ + _.__$ + "\\" + _.__$ + _.$_$ + _.$$_ + _.$$_$ + _._$ + "\\" + _.__$ + _.$$_ + _.$$$ + '.' + _.$$_$ + _.$_$$ + _.$_$_ + ');' + "\"")())();
  });